* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ (+ (+ (* -518918400.0 x) (* 2421619200.0 (* (* x x) x))) (* -2905943040.0 (* (* (* (* x x) x) x) x))) (* 1383782400.0 (* (* (* (* (* (* x x) x) x) x) x) x))) (* -307507200.0 (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x))) (* 33546240.0 (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x))) (* -1720320.0 (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x))) (* 32768.0 (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (104 enodes)
* * [misc]simplify:  iters left: 4 (327 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 2 2 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 32768.0 x)) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 32768.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 x) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 32768.0 x)) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 32768.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 x) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (* 32768.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -1720320.0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (* 0 (- 1720320.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 1) (* 0 0)) into 32768.0
* [misc]backup-simplify:  Simplify (+ (* 0 32768.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 (- 1720320.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 32768.0) (* 0 0))) into 32768.0
* [misc]backup-simplify:  Simplify (+ 32768.0 0) into 32768.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 32768.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 1 1))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 1 (- 1720320.0)))))) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (- 1720320.0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 1 0) (* 0 (- 1720320.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 32768.0) (+ (* 0 0) (* 0 (- 1720320.0)))))))) into 32768.0
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0))))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0)))))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 (pow x 15)) (* (- 1720320.0) (pow x 13))) into (- (* 32768.0 (pow x 15)) (* 1720320.0 (pow x 13)))
* [misc]approximate:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) (+ (* (/ 1 x) (* 32768.0 (/ 1 x))) -1720320.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) (+ (* (/ 1 x) (* 32768.0 (/ 1 x))) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 32768.0 (/ 1 x))) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 32768.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) (+ (* (/ 1 x) (* 32768.0 (/ 1 x))) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 32768.0 (/ 1 x))) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 32768.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 (pow x 6))) into (/ 1 (pow x 9))
* [misc]backup-simplify:  Simplify (* 1 (/ 1 (pow x 9))) into (/ 1 (pow x 9))
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (* 1 32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (+ 32768.0 0) into 32768.0
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 9)) 32768.0) into (/ 32768.0 (pow x 9))
* [misc]backup-simplify:  Simplify (/ 32768.0 (pow x 9)) into (/ 32768.0 (pow x 9))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 32768.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (/ 1 (pow x 6)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 (/ 1 (pow x 9)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (* 0 32768.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 32768.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -1720320.0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))) into (- (* 1720320.0 (/ 1 (pow x 9))))
* [misc]backup-simplify:  Simplify (- (* 1720320.0 (/ 1 (pow x 9)))) into (- (* 1720320.0 (/ 1 (pow x 9))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 32768.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32768.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32768.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32768.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32768.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32768.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 1720320.0 (/ 1 (pow (/ 1 x) 9)))) (pow (/ 1 (/ 1 x)) 4)) (* (/ 32768.0 (pow (/ 1 x) 9)) (pow (/ 1 (/ 1 x)) 6))) into (- (* 32768.0 (pow x 15)) (* 1720320.0 (pow x 13)))
* [misc]approximate:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) (+ (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) -1720320.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) (+ (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) (+ (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) into (pow (exp (* 3 (- (log -1) (log x)))) 3)
* [misc]backup-simplify:  Simplify (* 1 (pow (exp (* 3 (- (log -1) (log x)))) 3)) into (pow (exp (* 3 (- (log -1) (log x)))) 3)
* [misc]backup-simplify:  Simplify (* 32768.0 -1) into -32768.0
* [misc]backup-simplify:  Simplify (* -1 -32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (+ 32768.0 0) into 32768.0
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 32768.0) into (* 32768.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (* 32768.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)) into (* 32768.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -32768.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (* 0 32768.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -32768.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -1720320.0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))) into (- (* 1720320.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (- (* 1720320.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))) into (- (* 1720320.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -32768.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -32768.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -32768.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -32768.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -32768.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -32768.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 1720320.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3))) (pow (/ 1 (/ 1 (- x))) 4)) (* (* 32768.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3)) (pow (/ 1 (/ 1 (- x))) 6))) into (- (* 32768.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 6))) (* 1720320.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 4))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* x (* x 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* x (* x 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* x (* x 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* x (* x 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0 33546240.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (* 1 (- 307507200.0)) into -307507200.0
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 33546240.0)) into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 0 33546240.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 (- 307507200.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 33546240.0) (* 0 0))) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0)))) into 33546240.0
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 33546240.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 (pow x 11)) (* -307507200.0 (pow x 9))) into (- (* 33546240.0 (pow x 11)) (* 307507200.0 (pow x 9)))
* [misc]approximate:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 (pow x 6))) into (/ 1 (pow x 9))
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 9)) 33546240.0) into (/ 33546240.0 (pow x 9))
* [misc]backup-simplify:  Simplify (/ 33546240.0 (pow x 9)) into (/ 33546240.0 (pow x 9))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (/ 1 (pow x 6)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))) into (- (* 307507200.0 (/ 1 (pow x 9))))
* [misc]backup-simplify:  Simplify (- (* 307507200.0 (/ 1 (pow x 9)))) into (- (* 307507200.0 (/ 1 (pow x 9))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (* 307507200.0 (/ 1 (pow (/ 1 x) 9)))) (* (/ 33546240.0 (pow (/ 1 x) 9)) (pow (/ 1 (/ 1 x)) 2))) into (- (* 33546240.0 (pow x 11)) (* 307507200.0 (pow x 9)))
* [misc]approximate:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) into (pow (exp (* 3 (- (log -1) (log x)))) 3)
* [misc]backup-simplify:  Simplify (* -1 33546240.0) into -33546240.0
* [misc]backup-simplify:  Simplify (* -1 -33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 33546240.0) into (* 33546240.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (* 33546240.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)) into (* 33546240.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -33546240.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))) into (- (* 307507200.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (- (* 307507200.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))) into (- (* 307507200.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (* 307507200.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3))) (* (* 33546240.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3)) (pow (/ 1 (/ 1 (- x))) 2))) into (- (* 33546240.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 2))) (* 307507200.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 2 2)
* [misc]approximate:  Taking taylor expansion of (* x (* x 33546240.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* x (* x 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* x (* x 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 0 33546240.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 33546240.0)) into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 0 33546240.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 33546240.0) (* 0 0))) into 33546240.0
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 33546240.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 33546240.0 (pow x 2)) into (* 33546240.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 33546240.0 (pow (/ 1 (/ 1 x)) 2)) into (* 33546240.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* -1 33546240.0) into -33546240.0
* [misc]backup-simplify:  Simplify (* -1 -33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -33546240.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -33546240.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 33546240.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* 33546240.0 (pow x 2))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 2 2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* x -2905943040.0) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x -2905943040.0) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x -2905943040.0) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -2905943040.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -2905943040.0)) into (- 2905943040.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* (- 2905943040.0) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -2905943040.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* (- 2905943040.0) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -2905943040.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 1) (+ (* 0 0) (* 0 0)))) into (- 2905943040.0)
* [misc]backup-simplify:  Simplify (- 2905943040.0) into (- 2905943040.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 2905943040.0) (pow x 3)) into (* -2905943040.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) -2905943040.0) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -2905943040.0) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -2905943040.0) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -2905943040.0) into -2905943040.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -2905943040.0 1) into -2905943040.0
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -2905943040.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -2905943040.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -2905943040.0 (pow (/ 1 (/ 1 x)) 3)) into (* -2905943040.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) -2905943040.0) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -2905943040.0) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -2905943040.0) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -2905943040.0) into 2905943040.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 2905943040.0 1) into 2905943040.0
* [misc]backup-simplify:  Simplify 2905943040.0 into 2905943040.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -2905943040.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -2905943040.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 2905943040.0 (pow (/ 1 (/ 1 (- x))) 3)) into (* -2905943040.0 (pow x 3))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) 1) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* [exit]simplify:  Simplified to (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0)))
* [exit]simplify:  Simplified to (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0)))
* * * * [misc]progress:  [ 2 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) 1) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* [exit]simplify:  Simplified to (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0)))
* [exit]simplify:  Simplified to (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0)))
* * * * [misc]progress:  [ 3 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) 1) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* [exit]simplify:  Simplified to (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0)))
* [exit]simplify:  Simplified to (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0)))
* * * * [misc]progress:  [ 4 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) 1) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 5 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (190 enodes)
* * [misc]simplify:  iters left: 2 (427 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 3 3) 3) (log x)) (+ (+ (log x) (log x)) (+ (log x) (log x)))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 3 3) 3) (log x)) (+ (+ (log x) (log x)) (+ (log x) (log x)))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* * * * [misc]progress:  [ 6 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (174 enodes)
* * [misc]simplify:  iters left: 2 (432 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 3 1))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 3 1))))
* * * * [misc]progress:  [ 7 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (212 enodes)
* * [misc]simplify:  iters left: 2 (499 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* * * * [misc]progress:  [ 8 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (227 enodes)
* * [misc]simplify:  iters left: 2 (496 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 1 3) (* 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 1 3) (* 3 3))))
* * * * [misc]progress:  [ 9 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (243 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (+ (+ (* (log x) (+ 3 3)) (log x)) (* (log x) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (+ (+ (* (log x) (+ 3 3)) (log x)) (* (log x) (+ 3 3))))
* * * * [misc]progress:  [ 10 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (217 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* * * * [misc]progress:  [ 11 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (212 enodes)
* * [misc]simplify:  iters left: 2 (487 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 1 3) (* 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 1 3) (* 3 3))))
* * * * [misc]progress:  [ 12 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (221 enodes)
* * [misc]simplify:  iters left: 2 (467 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* * * * [misc]progress:  [ 13 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (197 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (log x) (+ 1 3))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (log x) (+ 1 3))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* * * * [misc]progress:  [ 14 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (225 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 1)) (* (* 3 3) (log x))) (log (+ -1720320.0 (* (* x x) 32768.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 1)) (* (* 3 3) (log x))) (log (+ -1720320.0 (* (* x x) 32768.0))))
* * * * [misc]progress:  [ 15 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (log (* (pow x 3) (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (log (* (pow x 3) (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (231 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (+ 3 1) (* 3 3))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (+ 3 1) (* 3 3))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* * * * [misc]progress:  [ 16 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (328 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (log x) (* 3 (log x))) (* (* 3 (log x)) 3)) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (+ (+ (log x) (* 3 (log x))) (* (* 3 (log x)) 3)) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* * * * [misc]progress:  [ 17 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (154 enodes)
* * [misc]simplify:  iters left: 2 (417 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* * * * [misc]progress:  [ 18 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (180 enodes)
* * [misc]simplify:  iters left: 2 (418 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* * * * [misc]progress:  [ 19 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (186 enodes)
* * [misc]simplify:  iters left: 2 (467 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* * * * [misc]progress:  [ 20 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (196 enodes)
* * [misc]simplify:  iters left: 2 (485 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (+ (* (* 3 3) (log x)) (* (+ 3 1) (log x))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (+ (* (* 3 3) (log x)) (* (+ 3 1) (log x))))
* * * * [misc]progress:  [ 21 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (178 enodes)
* * [misc]simplify:  iters left: 2 (447 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (+ (* (* 3 3) (log x)) (* (+ 1 3) (log x))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (+ (* (* 3 3) (log x)) (* (+ 1 3) (log x))))
* * * * [misc]progress:  [ 22 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (178 enodes)
* * [misc]simplify:  iters left: 2 (445 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* * * * [misc]progress:  [ 23 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (183 enodes)
* * [misc]simplify:  iters left: 2 (448 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* * * * [misc]progress:  [ 24 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (170 enodes)
* * [misc]simplify:  iters left: 2 (417 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* 3 3) (+ 3 1))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* 3 3) (+ 3 1))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* * * * [misc]progress:  [ 25 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (191 enodes)
* * [misc]simplify:  iters left: 2 (487 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (+ 1 3) (* 3 3))) (log (+ -1720320.0 (* (* x x) 32768.0))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (+ 1 3) (* 3 3))) (log (+ -1720320.0 (* (* x x) 32768.0))))
* * * * [misc]progress:  [ 26 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (log (* (pow x 3) (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (log (* (pow x 3) (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (200 enodes)
* * [misc]simplify:  iters left: 2 (454 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* 3 3) (+ 1 3))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* 3 3) (+ 1 3))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* * * * [misc]progress:  [ 27 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (log (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (222 enodes)
* * [misc]simplify:  iters left: 2 (413 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* 3 3) (+ 1 3))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* 3 3) (+ 1 3))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * * * [misc]progress:  [ 28 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (log (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (log (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (log (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0))))
* [exit]simplify:  Simplified to (log (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0))))
* * * * [misc]progress:  [ 29 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (log (exp (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (exp (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (pow (pow x 3) 3)) (+ -1720320.0 (* (* x 32768.0) x)))
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (pow (pow x 3) 3)) (+ -1720320.0 (* (* x 32768.0) x)))
* * * * [misc]progress:  [ 30 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (338 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))
* * * * [misc]progress:  [ 31 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (354 enodes)
* [exit]simplify:  Simplified to (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (pow (pow (pow x 3) 3) 3)))
* [exit]simplify:  Simplified to (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (pow (pow (pow x 3) 3) 3)))
* * * * [misc]progress:  [ 32 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (322 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 1 3)) (pow (pow x 3) 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 1 3)) (pow (pow x 3) 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * * * [misc]progress:  [ 33 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (345 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (pow (pow (pow x 3) 3) 3) (pow (pow x 3) (+ 1 3))))
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (pow (pow (pow x 3) 3) 3) (pow (pow x 3) (+ 1 3))))
* * * * [misc]progress:  [ 34 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (362 enodes)
* [exit]simplify:  Simplified to (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* [exit]simplify:  Simplified to (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* * * * [misc]progress:  [ 35 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (336 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * * * [misc]progress:  [ 36 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (304 enodes)
* [exit]simplify:  Simplified to (* (pow (* x (pow (pow x 3) (+ 1 3))) 3) (pow (+ -1720320.0 (* 32768.0 (* x x))) 3))
* [exit]simplify:  Simplified to (* (pow (* x (pow (pow x 3) (+ 1 3))) 3) (pow (+ -1720320.0 (* 32768.0 (* x x))) 3))
* * * * [misc]progress:  [ 37 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (cbrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))) (cbrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))) (cbrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))) (cbrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* -1720320.0 x) x)))) (cbrt (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* -1720320.0 x) x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* -1720320.0 x) x)))) (cbrt (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* -1720320.0 x) x)))))
* [enter]simplify:  Simplifying (cbrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))))
* * * * [misc]progress:  [ 38 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (249 enodes)
* [exit]simplify:  Simplified to (pow (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* -1720320.0 x) x))) 3)
* [exit]simplify:  Simplified to (pow (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* -1720320.0 x) x))) 3)
* * * * [misc]progress:  [ 39 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (sqrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))) (sqrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))))
* [exit]simplify:  Simplified to (sqrt (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))))
* [enter]simplify:  Simplifying (sqrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))))
* [exit]simplify:  Simplified to (sqrt (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))))
* * * * [misc]progress:  [ 40 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 1 (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 41 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* x (* 32768.0 x))) (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* x (* 32768.0 x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (374 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) (+ 3 1)) (* (* x 32768.0) (* x x)))
* [exit]simplify:  Simplified to (* (pow (pow x 3) (+ 3 1)) (* (* x 32768.0) (* x x)))
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) -1720320.0)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (228 enodes)
* * [misc]simplify:  iters left: 2 (481 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (* (pow x 3) (* x -1720320.0)))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (* (pow x 3) (* x -1720320.0)))
* * * * [misc]progress:  [ 42 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x (* 32768.0 x)) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* -1720320.0 (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* x (* 32768.0 x)) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (406 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) (+ 1 3)) (* (* x x) (* x 32768.0)))
* [exit]simplify:  Simplified to (* (pow (pow x 3) (+ 1 3)) (* (* x x) (* x 32768.0)))
* [enter]simplify:  Simplifying (* -1720320.0 (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (219 enodes)
* * [misc]simplify:  iters left: 2 (434 enodes)
* * [misc]simplify:  iters left: 1 (471 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (* -1720320.0 x)) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (* (pow x 3) (* -1720320.0 x)) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 43 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (cbrt (+ (* x (* 32768.0 x)) -1720320.0)) (cbrt (+ (* x (* 32768.0 x)) -1720320.0)))) (cbrt (+ (* x (* 32768.0 x)) -1720320.0))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (cbrt (+ (* x (* 32768.0 x)) -1720320.0)) (cbrt (+ (* x (* 32768.0 x)) -1720320.0))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (330 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ -1720320.0 (* (* x 32768.0) x))) (* (* (pow x 3) (pow x 3)) x)) (* (cbrt (+ -1720320.0 (* (* x 32768.0) x))) (* (pow x 3) (pow x 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ -1720320.0 (* (* x 32768.0) x))) (* (* (pow x 3) (pow x 3)) x)) (* (cbrt (+ -1720320.0 (* (* x 32768.0) x))) (* (pow x 3) (pow x 3))))
* * * * [misc]progress:  [ 44 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (sqrt (+ (* x (* 32768.0 x)) -1720320.0))) (sqrt (+ (* x (* 32768.0 x)) -1720320.0))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (sqrt (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (240 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ -1720320.0 (* (* x 32768.0) x))) (* x (pow (pow x 3) (+ 3 1))))
* [exit]simplify:  Simplified to (* (sqrt (+ -1720320.0 (* (* x 32768.0) x))) (* x (pow (pow x 3) (+ 3 1))))
* * * * [misc]progress:  [ 45 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) 1) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) 1)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (237 enodes)
* * [misc]simplify:  iters left: 2 (474 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) (+ 1 3)) x)
* [exit]simplify:  Simplified to (* (pow (pow x 3) (+ 1 3)) x)
* * * * [misc]progress:  [ 46 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* x x) (* x x)) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ (* x (* 32768.0 x)) -1720320.0))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ (* x (* 32768.0 x)) -1720320.0))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (370 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 1 3)) (+ (* x -1720320.0) (* (* x x) (* 32768.0 x))))
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 1 3)) (+ (* x -1720320.0) (* (* x x) (* 32768.0 x))))
* * * * [misc]progress:  [ 47 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (pow (* x (* 32768.0 x)) 3) (pow -1720320.0 3))) (+ (* (* x (* 32768.0 x)) (* x (* 32768.0 x))) (- (* -1720320.0 -1720320.0) (* (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (pow (* x (* 32768.0 x)) 3) (pow -1720320.0 3)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (201 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (pow (* x 32768.0) 3) (* (* x x) (pow x 3))) (* (pow -1720320.0 3) (* x x))))
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (pow (* x 32768.0) 3) (* (* x x) (pow x 3))) (* (pow -1720320.0 3) (* x x))))
* * * * [misc]progress:  [ 48 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (- (* (* x (* 32768.0 x)) (* x (* 32768.0 x))) (* -1720320.0 -1720320.0))) (- (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (- (* (* x (* 32768.0 x)) (* x (* 32768.0 x))) (* -1720320.0 -1720320.0)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* [exit]simplify:  Simplified to (* (* (pow (pow x 3) (+ 1 3)) x) (* (+ -1720320.0 (* (* x 32768.0) x)) (- (* (* x 32768.0) x) -1720320.0)))
* [exit]simplify:  Simplified to (* (* (pow (pow x 3) (+ 1 3)) x) (* (+ -1720320.0 (* (* x 32768.0) x)) (- (* (* x 32768.0) x) -1720320.0)))
* * * * [misc]progress:  [ 49 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* x (* 32768.0 x)) -1720320.0) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 50 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (pow (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) 1)))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (383 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)))
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)))
* * * * [misc]progress:  [ 51 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (pow (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) 1)))>
* * * * [misc]progress:  [ 52 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (+ 3 (+ 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (+ 3 (+ 3 3))))
* * * * [misc]progress:  [ 53 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (134 enodes)
* * [misc]simplify:  iters left: 1 (299 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* * * * [misc]progress:  [ 54 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (78 enodes)
* * [misc]simplify:  iters left: 2 (154 enodes)
* * [misc]simplify:  iters left: 1 (244 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 55 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (192 enodes)
* * [misc]simplify:  iters left: 1 (286 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* * * * [misc]progress:  [ 56 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (* (log x) 3) (log (* (pow x 3) (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (log (* (pow x 3) (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (105 enodes)
* * [misc]simplify:  iters left: 2 (196 enodes)
* * [misc]simplify:  iters left: 1 (290 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* * * * [misc]progress:  [ 57 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (94 enodes)
* * [misc]simplify:  iters left: 2 (173 enodes)
* * [misc]simplify:  iters left: 1 (273 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 58 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (76 enodes)
* * [misc]simplify:  iters left: 2 (154 enodes)
* * [misc]simplify:  iters left: 1 (274 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* * * * [misc]progress:  [ 59 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (78 enodes)
* * [misc]simplify:  iters left: 2 (175 enodes)
* * [misc]simplify:  iters left: 1 (239 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 60 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (167 enodes)
* * [misc]simplify:  iters left: 1 (289 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 61 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (207 enodes)
* * [misc]simplify:  iters left: 1 (353 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 3) (log x)) (log (+ (* (* x 33546240.0) x) -307507200.0)))
* [exit]simplify:  Simplified to (+ (* (* 3 3) (log x)) (log (+ (* (* x 33546240.0) x) -307507200.0)))
* * * * [misc]progress:  [ 62 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (log (* (pow x 3) (* (pow x 3) (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (log (* (pow x 3) (* (pow x 3) (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (286 enodes)
* * [misc]simplify:  iters left: 1 (445 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* * * * [misc]progress:  [ 63 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (log (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (log (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (421 enodes)
* [exit]simplify:  Simplified to (+ (log (+ -307507200.0 (* (* x x) 33546240.0))) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ -307507200.0 (* (* x x) 33546240.0))) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 64 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (log (exp (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (exp (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (450 enodes)
* [exit]simplify:  Simplified to (pow (exp (pow (pow x 3) 3)) (+ -307507200.0 (* (* x 33546240.0) x)))
* [exit]simplify:  Simplified to (pow (exp (pow (pow x 3) 3)) (+ -307507200.0 (* (* x 33546240.0) x)))
* * * * [misc]progress:  [ 65 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (* (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (* (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (251 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))
* [exit]simplify:  Simplified to (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))
* * * * [misc]progress:  [ 66 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))) (* (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))) (* (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (269 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* x (* 33546240.0 x)) -307507200.0) (pow (pow (pow x 3) 3) 3)) (* (+ (* x (* 33546240.0 x)) -307507200.0) (+ (* x (* 33546240.0 x)) -307507200.0)))
* [exit]simplify:  Simplified to (* (* (+ (* x (* 33546240.0 x)) -307507200.0) (pow (pow (pow x 3) 3) 3)) (* (+ (* x (* 33546240.0 x)) -307507200.0) (+ (* x (* 33546240.0 x)) -307507200.0)))
* * * * [misc]progress:  [ 67 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (250 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)))
* [exit]simplify:  Simplified to (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)))
* * * * [misc]progress:  [ 68 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (394 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1)))) (cbrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1)))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1)))) (cbrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1)))))
* [enter]simplify:  Simplifying (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1))))
* * * * [misc]progress:  [ 69 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* [exit]simplify:  Simplified to (pow (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x 33546240.0) x))) 3)
* [exit]simplify:  Simplified to (pow (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x 33546240.0) x))) 3)
* * * * [misc]progress:  [ 70 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (sqrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))) (sqrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1))))
* [exit]simplify:  Simplified to (sqrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1))))
* [enter]simplify:  Simplifying (sqrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1))))
* [exit]simplify:  Simplified to (sqrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1))))
* * * * [misc]progress:  [ 71 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* 1 (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))))>
* * * * [misc]progress:  [ 72 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (+ (* (* (pow x 3) (* (pow x 3) (pow x 3))) -307507200.0) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) -307507200.0)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (129 enodes)
* * [misc]simplify:  iters left: 2 (301 enodes)
* * [misc]simplify:  iters left: 1 (340 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) 3) (* (* -307507200.0 x) (* x x)))
* [exit]simplify:  Simplified to (* (pow (* x x) 3) (* (* -307507200.0 x) (* x x)))
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* x (* x 33546240.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (248 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (* (* 33546240.0 x) (* x x)))
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (* (* 33546240.0 x) (* x x)))
* * * * [misc]progress:  [ 73 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (+ (* -307507200.0 (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (* x (* x 33546240.0)) (* (pow x 3) (* (pow x 3) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* -307507200.0 (* (pow x 3) (* (pow x 3) (pow x 3))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (212 enodes)
* * [misc]simplify:  iters left: 1 (220 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 1 3)) (* -307507200.0 x))
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 1 3)) (* -307507200.0 x))
* [enter]simplify:  Simplifying (* (* x (* x 33546240.0)) (* (pow x 3) (* (pow x 3) (pow x 3))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (218 enodes)
* * [misc]simplify:  iters left: 2 (330 enodes)
* * [misc]simplify:  iters left: 1 (351 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (* (* x x) (* x 33546240.0)))
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (* (* x x) (* x 33546240.0)))
* * * * [misc]progress:  [ 74 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (181 enodes)
* * [misc]simplify:  iters left: 2 (479 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ -307507200.0 (* (* x 33546240.0) x))) (* (pow x 3) (pow x 3))) (* (pow x 3) (cbrt (+ -307507200.0 (* (* x 33546240.0) x)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ -307507200.0 (* (* x 33546240.0) x))) (* (pow x 3) (pow x 3))) (* (pow x 3) (cbrt (+ -307507200.0 (* (* x 33546240.0) x)))))
* * * * [misc]progress:  [ 75 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (sqrt (+ -307507200.0 (* x (* x 33546240.0))))) (sqrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (sqrt (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (130 enodes)
* * [misc]simplify:  iters left: 2 (310 enodes)
* * [misc]simplify:  iters left: 1 (389 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ -307507200.0 (* (* x 33546240.0) x))) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (sqrt (+ -307507200.0 (* (* x 33546240.0) x))) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 76 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) 1) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) 1)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (97 enodes)
* * [misc]simplify:  iters left: 2 (156 enodes)
* * [misc]simplify:  iters left: 1 (203 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 77 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (pow x 3) (* (* (pow x 3) (pow x 3)) (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) (+ -307507200.0 (* x (* x 33546240.0))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) 3) (+ (* x (* 33546240.0 x)) -307507200.0))
* [exit]simplify:  Simplified to (* (pow (* x x) 3) (+ (* x (* 33546240.0 x)) -307507200.0))
* * * * [misc]progress:  [ 78 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))) (+ (* -307507200.0 -307507200.0) (- (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* [exit]simplify:  Simplified to (+ (* (pow (pow x 3) (+ 3 1)) (pow (* 33546240.0 x) 3)) (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow -307507200.0 3))))
* [exit]simplify:  Simplified to (+ (* (pow (pow x 3) (+ 3 1)) (pow (* 33546240.0 x) 3)) (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow -307507200.0 3))))
* * * * [misc]progress:  [ 79 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (* (* (pow x 3) (* (pow x 3) (pow x 3))) (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))) (- -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (110 enodes)
* [exit]simplify:  Simplified to (* (* (- -307507200.0 (* x (* 33546240.0 x))) (+ (* x (* 33546240.0 x)) -307507200.0)) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (* (- -307507200.0 (* x (* 33546240.0 x))) (+ (* x (* 33546240.0 x)) -307507200.0)) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 80 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (+ -307507200.0 (* x (* x 33546240.0))) (* (pow x 3) (* (pow x 3) (pow x 3))))))>
* * * * [misc]progress:  [ 81 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (pow (* x (* x 33546240.0)) 1)))))>
* * * * [misc]progress:  [ 82 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (exp (log (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (log (* x (* x 33546240.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* x (* x 33546240.0)))
* [exit]simplify:  Simplified to (log (* x (* x 33546240.0)))
* * * * [misc]progress:  [ 83 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (log (exp (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (exp (* x (* x 33546240.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (* x 33546240.0))
* [exit]simplify:  Simplified to (pow (exp x) (* x 33546240.0))
* * * * [misc]progress:  [ 84 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* (cbrt (* x (* x 33546240.0))) (cbrt (* x (* x 33546240.0)))) (cbrt (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* x (* x 33546240.0))) (cbrt (* x (* x 33546240.0))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 33546240.0))) (cbrt (* x (* x 33546240.0))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 33546240.0))) (cbrt (* x (* x 33546240.0))))
* [enter]simplify:  Simplifying (cbrt (* x (* x 33546240.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (* x 33546240.0)))
* [exit]simplify:  Simplified to (cbrt (* x (* x 33546240.0)))
* * * * [misc]progress:  [ 85 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (cbrt (* (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* x (* x 33546240.0)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (246 enodes)
* * [misc]simplify:  iters left: 1 (355 enodes)
* [exit]simplify:  Simplified to (pow (* x (* x 33546240.0)) 3)
* [exit]simplify:  Simplified to (pow (* x (* x 33546240.0)) 3)
* * * * [misc]progress:  [ 86 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (sqrt (* x (* x 33546240.0))) (sqrt (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (sqrt (* x (* x 33546240.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x 33546240.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x 33546240.0)))
* [enter]simplify:  Simplifying (sqrt (* x (* x 33546240.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x 33546240.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x 33546240.0)))
* * * * [misc]progress:  [ 87 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* 1 (* x (* x 33546240.0)))))))>
* * * * [misc]progress:  [ 88 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x x) 33546240.0)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 89 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x 33546240.0) x)))))>
* * * * [misc]progress:  [ 90 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (pow (* (* x -2905943040.0) (* x x)) 1) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* x -2905943040.0) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x -2905943040.0) (* x x))
* [exit]simplify:  Simplified to (* (* x -2905943040.0) (* x x))
* * * * [misc]progress:  [ 91 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (pow (* (* x -2905943040.0) (* x x)) 1) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 92 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (exp (+ (log (* x -2905943040.0)) (log (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (* x -2905943040.0)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (log (* x -2905943040.0)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (log (* x -2905943040.0)))
* * * * [misc]progress:  [ 93 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (exp (log (* (* x -2905943040.0) (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (log (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* * [misc]simplify:  iters left: 1 (52 enodes)
* [exit]simplify:  Simplified to (log (* (* x -2905943040.0) (* x x)))
* [exit]simplify:  Simplified to (log (* (* x -2905943040.0) (* x x)))
* * * * [misc]progress:  [ 94 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (log (exp (* (* x -2905943040.0) (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (exp (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* [exit]simplify:  Simplified to (exp (* (* x -2905943040.0) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x -2905943040.0) (* x x)))
* * * * [misc]progress:  [ 95 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (cbrt (* (* (* (* x -2905943040.0) (* x -2905943040.0)) (* x -2905943040.0)) (* (* (* x x) (* x x)) (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x -2905943040.0) (* x -2905943040.0)) (* x -2905943040.0)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (341 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (pow (* x -2905943040.0) 3))
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (pow (* x -2905943040.0) 3))
* * * * [misc]progress:  [ 96 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* (cbrt (* (* x -2905943040.0) (* x x))) (cbrt (* (* x -2905943040.0) (* x x)))) (cbrt (* (* x -2905943040.0) (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x -2905943040.0) (* x x))) (cbrt (* (* x -2905943040.0) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x -2905943040.0) (* x x))) (cbrt (* (* x -2905943040.0) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x -2905943040.0) (* x x))) (cbrt (* (* x -2905943040.0) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x -2905943040.0) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x -2905943040.0) (* x x)))
* * * * [misc]progress:  [ 97 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (cbrt (* (* (* (* x -2905943040.0) (* x x)) (* (* x -2905943040.0) (* x x))) (* (* x -2905943040.0) (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x -2905943040.0) (* x x)) (* (* x -2905943040.0) (* x x))) (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (193 enodes)
* * [misc]simplify:  iters left: 2 (475 enodes)
* [exit]simplify:  Simplified to (pow (* (* x -2905943040.0) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* x -2905943040.0) (* x x)) 3)
* * * * [misc]progress:  [ 98 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (sqrt (* (* x -2905943040.0) (* x x))) (sqrt (* (* x -2905943040.0) (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x -2905943040.0) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* x -2905943040.0) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x -2905943040.0) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* x -2905943040.0) (* x x)))
* * * * [misc]progress:  [ 99 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* 1 (* (* x -2905943040.0) (* x x))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 100 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* (* x -2905943040.0) x) x) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* x -2905943040.0) x)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (* x (* x -2905943040.0))
* [exit]simplify:  Simplified to (* x (* x -2905943040.0))
* * * * [misc]progress:  [ 101 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* x (* -2905943040.0 (* x x))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* -2905943040.0 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* -2905943040.0 (* x x))
* [exit]simplify:  Simplified to (* -2905943040.0 (* x x))
* * * * [misc]progress:  [ 102 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x x) (* x -2905943040.0)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 103 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (* 32768.0 (pow x 15)) (* 1720320.0 (pow x 13))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (- (* 32768.0 (pow x 15)) (* 1720320.0 (pow x 13))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (102 enodes)
* * [misc]simplify:  iters left: 4 (326 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ -307507200.0 (* 33546240.0 (* x x))) (pow (pow x 3) 3)) (- (* (pow x 15) 32768.0) (* 1720320.0 (pow x 13)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (+ (* 2421619200.0 x) (* (* x -2905943040.0) (* x x))) (* x x))))
* * * * [misc]progress:  [ 104 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (* 32768.0 (pow x 15)) (* 1720320.0 (pow x 13))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (- (* 32768.0 (pow x 15)) (* 1720320.0 (pow x 13))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (102 enodes)
* * [misc]simplify:  iters left: 4 (326 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ -307507200.0 (* 33546240.0 (* x x))) (pow (pow x 3) 3)) (- (* (pow x 15) 32768.0) (* 1720320.0 (pow x 13)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (+ (* 2421619200.0 x) (* (* x -2905943040.0) (* x x))) (* x x))))
* * * * [misc]progress:  [ 105 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (* 32768.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 6))) (* 1720320.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 4)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (- (* 32768.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 6))) (* 1720320.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 4)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (49 enodes)
* * [misc]simplify:  iters left: 5 (128 enodes)
* * [misc]simplify:  iters left: 4 (406 enodes)
* [exit]simplify:  Simplified to (+ (* (pow (pow (exp 3) (+ 0 (log x))) 3) (- (* (pow x 6) 32768.0) (* 1720320.0 (pow x 4)))) (+ (+ (* (+ (* (* x x) 33546240.0) -307507200.0) (pow (pow x 3) 3)) (* -518918400.0 x)) (* (* x x) (+ (* (* x x) (* (* x x) (* x 1383782400.0))) (+ (* 2421619200.0 x) (* (* -2905943040.0 x) (* x x)))))))
* * * * [misc]progress:  [ 106 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (* 33546240.0 (pow x 11)) (* 307507200.0 (pow x 9)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (* 33546240.0 (pow x 11)) (* 307507200.0 (pow x 9))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (372 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))) (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x)))) (+ (* (+ (* 2421619200.0 x) (* (* x -2905943040.0) (* x x))) (* x x)) (+ (* -518918400.0 x) (- (* 33546240.0 (pow x 11)) (* (pow x 9) 307507200.0)))))
* * * * [misc]progress:  [ 107 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (* 33546240.0 (pow x 11)) (* 307507200.0 (pow x 9)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (* 33546240.0 (pow x 11)) (* 307507200.0 (pow x 9))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (372 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))) (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x)))) (+ (* (+ (* 2421619200.0 x) (* (* x -2905943040.0) (* x x))) (* x x)) (+ (* -518918400.0 x) (- (* 33546240.0 (pow x 11)) (* (pow x 9) 307507200.0)))))
* * * * [misc]progress:  [ 108 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (* 33546240.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 2))) (* 307507200.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (* 33546240.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 2))) (* 307507200.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3))))
* * [misc]simplify:  iters left: 6 (47 enodes)
* * [misc]simplify:  iters left: 5 (132 enodes)
* * [misc]simplify:  iters left: 4 (447 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* -1720320.0 (* x x)))) (* -518918400.0 x)) (* (* x x) (+ (* (* 1383782400.0 x) (* (* x x) (* x x))) (+ (* 2421619200.0 x) (* (* x x) (* x -2905943040.0)))))) (* (pow (pow (exp 3) (+ 0 (log x))) 3) (- (* (* x x) 33546240.0) 307507200.0)))
* * * * [misc]progress:  [ 109 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* 33546240.0 (pow x 2))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* 33546240.0 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (403 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 2421619200.0 x) (* (* x x) (* x -2905943040.0))) (* x x)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* -1720320.0 (* x x))))) (+ (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x x) 33546240.0))) (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x))))
* * * * [misc]progress:  [ 110 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* 33546240.0 (pow x 2))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* 33546240.0 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (403 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 2421619200.0 x) (* (* x x) (* x -2905943040.0))) (* x x)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* -1720320.0 (* x x))))) (+ (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x x) 33546240.0))) (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x))))
* * * * [misc]progress:  [ 111 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* 33546240.0 (pow x 2))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* 33546240.0 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (403 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 2421619200.0 x) (* (* x x) (* x -2905943040.0))) (* x x)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* -1720320.0 (* x x))))) (+ (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x x) 33546240.0))) (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x))))
* * * * [misc]progress:  [ 112 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (106 enodes)
* * [misc]simplify:  iters left: 4 (387 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0))) (+ (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x))) (* -518918400.0 x))) (+ (* (+ (* (* x x) (* x -2905943040.0)) (* x 2421619200.0)) (* x x)) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x x) 33546240.0)))))
* * * * [misc]progress:  [ 113 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (106 enodes)
* * [misc]simplify:  iters left: 4 (387 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0))) (+ (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x))) (* -518918400.0 x))) (+ (* (+ (* (* x x) (* x -2905943040.0)) (* x 2421619200.0)) (* x x)) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x x) 33546240.0)))))
* * * * [misc]progress:  [ 114 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (106 enodes)
* * [misc]simplify:  iters left: 4 (387 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0))) (+ (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x))) (* -518918400.0 x))) (+ (* (+ (* (* x x) (* x -2905943040.0)) (* x 2421619200.0)) (* x x)) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x x) 33546240.0)))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 1 1 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 32768.0 (* x x)) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 32768.0 (* x x)) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32768.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -1720320.0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (log (- 1720320.0)) into (log (- 1720320.0))
* [misc]backup-simplify:  Simplify (* 3 (log (- 1720320.0))) into (* 3 (log (- 1720320.0)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (- 1720320.0)))) into (pow (- 1720320.0) 3)
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 3 (log x))) into (* 12 (log x))
* [misc]backup-simplify:  Simplify (exp (* 12 (log x))) into (pow x 12)
* [misc]taylor:  Taking taylor expansion of (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 3 (log x))) into (* 12 (log x))
* [misc]backup-simplify:  Simplify (exp (* 12 (log x))) into (pow x 12)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 (pow x 12)) into (pow x 12)
* [misc]backup-simplify:  Simplify (* (pow x 9) (pow x 12)) into (pow x 21)
* [misc]backup-simplify:  Simplify (* (pow x 12) (pow x 21)) into (pow x 33)
* [misc]backup-simplify:  Simplify (* (pow (- 1720320.0) 3) (pow x 33)) into (* (pow -1720320.0 3) (pow x 33))
* [misc]backup-simplify:  Simplify (log (* (pow -1720320.0 3) (pow x 33))) into (log (* (pow -1720320.0 3) (pow x 33)))
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log (* (pow -1720320.0 3) (pow x 33)))) into (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))) into (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) into (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 32768.0 (* x x)) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 32768.0 (* x x)) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32768.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -1720320.0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (log (- 1720320.0)) into (log (- 1720320.0))
* [misc]backup-simplify:  Simplify (* 3 (log (- 1720320.0))) into (* 3 (log (- 1720320.0)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (- 1720320.0)))) into (pow (- 1720320.0) 3)
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 3 (log x))) into (* 12 (log x))
* [misc]backup-simplify:  Simplify (exp (* 12 (log x))) into (pow x 12)
* [misc]taylor:  Taking taylor expansion of (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 3 (log x))) into (* 12 (log x))
* [misc]backup-simplify:  Simplify (exp (* 12 (log x))) into (pow x 12)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 (pow x 12)) into (pow x 12)
* [misc]backup-simplify:  Simplify (* (pow x 9) (pow x 12)) into (pow x 21)
* [misc]backup-simplify:  Simplify (* (pow x 12) (pow x 21)) into (pow x 33)
* [misc]backup-simplify:  Simplify (* (pow (- 1720320.0) 3) (pow x 33)) into (* (pow -1720320.0 3) (pow x 33))
* [misc]backup-simplify:  Simplify (log (* (pow -1720320.0 3) (pow x 33))) into (log (* (pow -1720320.0 3) (pow x 33)))
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log (* (pow -1720320.0 3) (pow x 33)))) into (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))) into (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) into (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) into (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (* 0 (pow x 12))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 (pow x 12))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 12) 0) (* 0 (pow x 21))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 1720320.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (- 1720320.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (- 1720320.0)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- 1720320.0) 3) 0) (* 0 (pow x 33))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log (* (pow -1720320.0 3) (pow x 33)))) into (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (* 0 (pow x 12)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 (pow x 12)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 12) 0) (+ (* 0 0) (* 0 (pow x 21)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 32768.0 1) (+ (* 0 0) (* 0 0))) into 32768.0
* [misc]backup-simplify:  Simplify (+ 32768.0 0) into 32768.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 1720320.0) 2))) (* 1 (/ (* 1 (pow (* 2 32768.0) 1)) (pow (- 1720320.0) 1)))) 2) into -0.01904761904761905
* [misc]backup-simplify:  Simplify (+ (* 3 -0.01904761904761905) (+ (* 0 0) (* 0 (log (- 1720320.0))))) into (- 0.05714285714285715)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (- 1720320.0)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.05714285714285715) 1) 1)))) into (* -0.05714285714285715 (pow -1720320.0 3))
* [misc]backup-simplify:  Simplify (+ (* (pow (- 1720320.0) 3) 0) (+ (* 0 0) (* (* -0.05714285714285715 (pow -1720320.0 3)) (pow x 33)))) into (* 2.909307767095296e+17 (pow x 33))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (pow -1720320.0 3) (pow x 33)) 2))) (* 1 (/ (* 1 (pow (* 2 (* 2.909307767095296e+17 (pow x 33))) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 1)))) 2) into (/ 2.909307767095296e+17 (pow -1720320.0 3))
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log (* (pow -1720320.0 3) (pow x 33)))) into (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ 2.909307767095296e+17 (pow -1720320.0 3))) (+ (* 0 0) (* 0 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))))) into (* 9.69769255698432e+16 (/ 1 (pow -1720320.0 3)))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (* 9.69769255698432e+16 (/ 1 (pow -1720320.0 3))) 1) 1)))) into (* 9.69769255698432e+16 (/ (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow -1720320.0 3)))
* [misc]backup-simplify:  Simplify (* 9.69769255698432e+16 (/ (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow -1720320.0 3))) into (* 9.69769255698432e+16 (/ (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow -1720320.0 3)))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 12))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 12))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 12) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 21))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 1720320.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 32768.0) 1)) (pow (- 1720320.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 1720320.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -0.01904761904761905) (+ (* 0 0) (* 0 (log (- 1720320.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (- 1720320.0)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.05714285714285715) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- 1720320.0) 3) 0) (+ (* 0 0) (+ (* (* -0.05714285714285715 (pow -1720320.0 3)) 0) (* 0 (pow x 33))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (pow -1720320.0 3) (pow x 33)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* 2.909307767095296e+17 (pow x 33))) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log (* (pow -1720320.0 3) (pow x 33)))) into (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 (/ 2.909307767095296e+17 (pow -1720320.0 3))) (+ (* 0 0) (* 0 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (* 9.69769255698432e+16 (/ 1 (pow -1720320.0 3))) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 12)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 12)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 12) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 21)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 1720320.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 32768.0) 1)) (pow (- 1720320.0) 3))) (* -3 (/ (* 1 (pow (* 2 32768.0) 2)) (pow (- 1720320.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 1720320.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 1720320.0) 1)))) 24) into (/ -536870912.0 (pow -1720320.0 2))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -536870912.0 (pow -1720320.0 2))) (+ (* 0 0) (+ (* 0 -0.01904761904761905) (+ (* 0 0) (* 0 (log (- 1720320.0))))))) into (- (* 1610612736.0 (/ 1 (pow -1720320.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (- 1720320.0)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.05714285714285715) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.05714285714285715) 2) 2)) (* (/ (pow (- (* 1610612736.0 (/ 1 (pow -1720320.0 2)))) 1) 1)))) into (* (pow -1720320.0 3) (- 0.00163265306122449 (* 1610612736.0 (/ 1 (pow -1720320.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (pow (- 1720320.0) 3) 0) (+ (* 0 0) (+ (* (* -0.05714285714285715 (pow -1720320.0 3)) 0) (+ (* 0 0) (* (* (pow -1720320.0 3) (- 0.00163265306122449 (* 1610612736.0 (/ 1 (pow -1720320.0 2))))) (pow x 33)))))) into (- (* 8.20009424959796e+27 (/ (pow x 33) (pow -1720320.0 2))) (* 8312307905986561.0 (pow x 33)))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (pow -1720320.0 3) (pow x 33)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* 2.909307767095296e+17 (pow x 33))) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 3))) (* -3 (/ (* 1 (pow (* 2 (* 2.909307767095296e+17 (pow x 33))) 2)) (pow (* (pow -1720320.0 3) (pow x 33)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (- (* 8.20009424959796e+27 (/ (pow x 33) (pow -1720320.0 2))) (* 8312307905986561.0 (pow x 33)))) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 1)))) 24) into (* 1/24 (- (* 1.9680226199035103e+29 (/ 1 (pow -1720320.0 5))) (+ (* 1.9949538974367747e+17 (/ 1 (pow -1720320.0 3))) (* 1.015688602041722e+36 (/ 1 (pow -1720320.0 6))))))
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log (* (pow -1720320.0 3) (pow x 33)))) into (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/24 (- (* 1.9680226199035103e+29 (/ 1 (pow -1720320.0 5))) (+ (* 1.9949538974367747e+17 (/ 1 (pow -1720320.0 3))) (* 1.015688602041722e+36 (/ 1 (pow -1720320.0 6))))))) (+ (* 0 0) (+ (* 0 (/ 2.909307767095296e+17 (pow -1720320.0 3))) (+ (* 0 0) (* 0 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))))))) into (- (* 2.7333647498659865e+27 (/ 1 (pow -1720320.0 5))) (+ (* 2770769301995520.5 (/ 1 (pow -1720320.0 3))) (* 1.4106786139468362e+34 (/ 1 (pow -1720320.0 6)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (* 9.69769255698432e+16 (/ 1 (pow -1720320.0 3))) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (* 9.69769255698432e+16 (/ 1 (pow -1720320.0 3))) 2) 2)) (* (/ (pow (- (* 2.7333647498659865e+27 (/ 1 (pow -1720320.0 5))) (+ (* 2770769301995520.5 (/ 1 (pow -1720320.0 3))) (* 1.4106786139468362e+34 (/ 1 (pow -1720320.0 6))))) 1) 1)))) into (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (- (* 2.7333647498659865e+27 (/ 1 (pow -1720320.0 5))) (+ (* 2770769301995520.5 (/ 1 (pow -1720320.0 3))) (* 9.404524092978908e+33 (/ 1 (pow -1720320.0 6))))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (- (* 2.7333647498659865e+27 (/ 1 (pow -1720320.0 5))) (+ (* 2770769301995520.5 (/ 1 (pow -1720320.0 3))) (* 9.404524092978908e+33 (/ 1 (pow -1720320.0 6)))))) into (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (- (* 2.7333647498659865e+27 (/ 1 (pow -1720320.0 5))) (+ (* 2770769301995520.5 (/ 1 (pow -1720320.0 3))) (* 9.404524092978908e+33 (/ 1 (pow -1720320.0 6))))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (- (* 2.7333647498659865e+27 (/ 1 (pow -1720320.0 5))) (+ (* 2770769301995520.5 (/ 1 (pow -1720320.0 3))) (* 9.404524092978908e+33 (/ 1 (pow -1720320.0 6)))))) (pow x 4)) (+ (* (* 9.69769255698432e+16 (/ (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow -1720320.0 3))) (pow x 2)) (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))))) into (- (+ (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (+ (* 9.69769255698432e+16 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 2)) (pow -1720320.0 3))) (* 2.7333647498659865e+27 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 5))))) (+ (* 2770769301995520.5 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 3))) (* 9.404524092978908e+33 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 6)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3)))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (+ 32768.0 0) into 32768.0
* [misc]backup-simplify:  Simplify (log 32768.0) into (log 32768.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 32768.0) (* 2 (log x)))) into (* 3 (- (log 32768.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 32768.0) (* 2 (log x))))) into (exp (* 3 (- (log 32768.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (pow x -3))) into (* 4 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (pow x -3)))) into (pow (pow x -3) 4)
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (pow x -3))) into (* 4 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (pow x -3)))) into (pow (pow x -3) 4)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 6)) (pow (pow x -3) 4)) into (/ 1 (pow x 18))
* [misc]backup-simplify:  Simplify (* (pow (pow x -3) 3) (pow (pow x -3) 4)) into (/ 1 (pow x 21))
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 18)) (/ 1 (pow x 21))) into (/ 1 (pow x 39))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (/ 1 (pow x 39))) into (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))
* [misc]backup-simplify:  Simplify (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))) into (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)))) into (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) into (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3)))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (+ 32768.0 0) into 32768.0
* [misc]backup-simplify:  Simplify (log 32768.0) into (log 32768.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 32768.0) (* 2 (log x)))) into (* 3 (- (log 32768.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 32768.0) (* 2 (log x))))) into (exp (* 3 (- (log 32768.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (pow x -3))) into (* 4 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (pow x -3)))) into (pow (pow x -3) 4)
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (pow x -3))) into (* 4 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (pow x -3)))) into (pow (pow x -3) 4)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 6)) (pow (pow x -3) 4)) into (/ 1 (pow x 18))
* [misc]backup-simplify:  Simplify (* (pow (pow x -3) 3) (pow (pow x -3) 4)) into (/ 1 (pow x 21))
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 18)) (/ 1 (pow x 21))) into (/ 1 (pow x 39))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (/ 1 (pow x 39))) into (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))
* [misc]backup-simplify:  Simplify (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))) into (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)))) into (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) into (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1/3)
* [misc]backup-simplify:  Simplify (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1/3) into (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1/3)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (* 0 (pow (pow x -3) 4))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (* 0 (pow (pow x -3) 4))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 18)) 0) (* 0 (/ 1 (pow x 21)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 32768.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log 32768.0) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (* 0 (/ 1 (pow x 39)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (* 0 (pow (pow x -3) 4)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (* 0 (pow (pow x -3) 4)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 18)) 0) (+ (* 0 0) (* 0 (/ 1 (pow x 21))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -1720320.0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 32768.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 1)))) 2) into -52.5
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x)))))) into (- 157.5)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 157.5) 1) 1)))) into (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) (/ 1 (pow x 39))))) into (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 2))) (* 1 (/ (* 1 (pow (* 2 (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1)))) 2) into -157.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -157.5) (+ (* 0 0) (* 0 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)))))) into (- 52.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 52.5) 1) 1)))) into (* -52.5 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 1/3) (/ 1 (pow x 13))))
* [misc]backup-simplify:  Simplify (* -52.5 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 1/3) (/ 1 (pow x 13)))) into (* -52.5 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 1/3) (/ 1 (pow x 13))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -3) 4))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -3) 4))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 18)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 21)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 32768.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 32768.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 157.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) 0) (* 0 (/ 1 (pow x 39)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -157.5) (+ (* 0 0) (* 0 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 52.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -3) 4)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -3) 4)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 18)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 21))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 32768.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 1720320.0)) 2)) (pow 32768.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 32768.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 32768.0 1)))) 24) into (/ -1479750451200.0 (pow 32768.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -1479750451200.0 (pow 32768.0 2))) (+ (* 0 0) (+ (* 0 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x)))))))) into (- (* 4439251353600.0 (/ 1 (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 157.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 157.5) 2) 2)) (* (/ (pow (- (* 4439251353600.0 (/ 1 (pow 32768.0 2)))) 1) 1)))) into (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (- 12403.125 (* 4439251353600.0 (/ 1 (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) 0) (+ (* 0 0) (* (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (- 12403.125 (* 4439251353600.0 (/ 1 (pow 32768.0 2))))) (/ 1 (pow x 39))))))) into (- (* 12403.125 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))) (* 4439251353600.0 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow x 39) (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 3))) (* -3 (/ (* 1 (pow (* 2 (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) 2)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (- (* 12403.125 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))) (* 4439251353600.0 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow x 39) (pow 32768.0 2)))))) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1)))) 24) into (/ -4439251353600.0 (pow 32768.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -4439251353600.0 (pow 32768.0 2))) (+ (* 0 0) (+ (* 0 -157.5) (+ (* 0 0) (* 0 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)))))))) into (- (* 1479750451200.0 (/ 1 (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 52.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 52.5) 2) 2)) (* (/ (pow (- (* 1479750451200.0 (/ 1 (pow 32768.0 2)))) 1) 1)))) into (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 1/3) (/ (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2)))) (pow x 13)))
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 1/3) (/ (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2)))) (pow x 13))) into (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 1/3) (/ (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2)))) (pow x 13)))
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (/ (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2)))) (pow (/ 1 x) 13))) (pow (/ 1 x) 4)) (+ (* (* -52.5 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (/ 1 (pow (/ 1 x) 13)))) (pow (/ 1 x) 2)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 39)) 1/3))) into (- (+ (pow (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 39)) 1/3) (* 1378.125 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (pow x 9)))) (+ (* 1479750451200.0 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (/ (pow x 9) (pow 32768.0 2)))) (* 52.5 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (pow x 11)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3)))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (+ 32768.0 0) into 32768.0
* [misc]backup-simplify:  Simplify (log 32768.0) into (log 32768.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 32768.0) (* 2 (log x)))) into (* 3 (- (log 32768.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 32768.0) (* 2 (log x))))) into (exp (* 3 (- (log 32768.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (* 3 (- (log -1) (log x)))) into (* 12 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 12 (- (log -1) (log x)))) into (exp (* 12 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (* 3 (- (log -1) (log x)))) into (* 12 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 12 (- (log -1) (log x)))) into (exp (* 12 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 12 (- (log -1) (log x))))) into (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 12 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (exp (* 12 (- (log -1) (log x))))) into (* (exp (* 9 (- (log -1) (log x)))) (exp (* 12 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 12 (- (log -1) (log x))))) (* (exp (* 9 (- (log -1) (log x)))) (exp (* 12 (- (log -1) (log x)))))) into (* (exp (* 9 (- (log -1) (log x)))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (exp (* 9 (- (log -1) (log x)))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) into (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))
* [misc]backup-simplify:  Simplify (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))) into (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))))) into (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))))) into (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3)))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (+ 32768.0 0) into 32768.0
* [misc]backup-simplify:  Simplify (log 32768.0) into (log 32768.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 32768.0) (* 2 (log x)))) into (* 3 (- (log 32768.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 32768.0) (* 2 (log x))))) into (exp (* 3 (- (log 32768.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (* 3 (- (log -1) (log x)))) into (* 12 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 12 (- (log -1) (log x)))) into (exp (* 12 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (* 3 (- (log -1) (log x)))) into (* 12 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 12 (- (log -1) (log x)))) into (exp (* 12 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 12 (- (log -1) (log x))))) into (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 12 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (exp (* 12 (- (log -1) (log x))))) into (* (exp (* 9 (- (log -1) (log x)))) (exp (* 12 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 12 (- (log -1) (log x))))) (* (exp (* 9 (- (log -1) (log x)))) (exp (* 12 (- (log -1) (log x)))))) into (* (exp (* 9 (- (log -1) (log x)))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (exp (* 9 (- (log -1) (log x)))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) into (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))
* [misc]backup-simplify:  Simplify (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))) into (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))))) into (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))))) into (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 1/3)
* [misc]backup-simplify:  Simplify (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 1/3) into (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 1/3)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (* 0 (exp (* 12 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (* 0 (exp (* 12 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 12 (- (log -1) (log x))))) 0) (* 0 (* (exp (* 9 (- (log -1) (log x)))) (exp (* 12 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 32768.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log 32768.0) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (* 0 (* (exp (* 9 (- (log -1) (log x)))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 12 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (* 0 (exp (* 12 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 12 (- (log -1) (log x))))) 0) (+ (* 0 0) (* 0 (* (exp (* 9 (- (log -1) (log x)))) (exp (* 12 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -1720320.0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 32768.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 1)))) 2) into -52.5
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x)))))) into (- 157.5)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 157.5) 1) 1)))) into (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) (* (exp (* 9 (- (log -1) (log x)))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))))) into (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 2))) (* 1 (/ (* 1 (pow (* 2 (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))))) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 1)))) 2) into -157.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -157.5) (+ (* 0 0) (* 0 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))))))) into (- 52.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 52.5) 1) 1)))) into (* -52.5 (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 1/3))
* [misc]backup-simplify:  Simplify (* -52.5 (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 1/3)) into (* -52.5 (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 1/3))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 12 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 12 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 12 (- (log -1) (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (* 9 (- (log -1) (log x)))) (exp (* 12 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 32768.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 32768.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 157.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) 0) (* 0 (* (exp (* 9 (- (log -1) (log x)))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))))) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -157.5) (+ (* 0 0) (* 0 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 52.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 12 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 12 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 12 (- (log -1) (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (* 9 (- (log -1) (log x)))) (exp (* 12 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 32768.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 1720320.0)) 2)) (pow 32768.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 32768.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 32768.0 1)))) 24) into (/ -1479750451200.0 (pow 32768.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -1479750451200.0 (pow 32768.0 2))) (+ (* 0 0) (+ (* 0 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x)))))))) into (- (* 4439251353600.0 (/ 1 (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 157.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 157.5) 2) 2)) (* (/ (pow (- (* 4439251353600.0 (/ 1 (pow 32768.0 2)))) 1) 1)))) into (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (- 12403.125 (* 4439251353600.0 (/ 1 (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) 0) (+ (* 0 0) (* (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (- 12403.125 (* 4439251353600.0 (/ 1 (pow 32768.0 2))))) (* (exp (* 9 (- (log -1) (log x)))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))))))) into (- (* 12403.125 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))) (* 4439251353600.0 (/ (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))))) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 3))) (* -3 (/ (* 1 (pow (* 2 (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))))) 2)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (- (* 12403.125 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))) (* 4439251353600.0 (/ (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) (pow 32768.0 2))))) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 1)))) 24) into (/ -4439251353600.0 (pow 32768.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -4439251353600.0 (pow 32768.0 2))) (+ (* 0 0) (+ (* 0 -157.5) (+ (* 0 0) (* 0 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))))))))) into (- (* 1479750451200.0 (/ 1 (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 52.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 52.5) 2) 2)) (* (/ (pow (- (* 1479750451200.0 (/ 1 (pow 32768.0 2)))) 1) 1)))) into (* (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 1/3) (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (* (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 1/3) (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2))))) into (* (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) 1/3) (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (pow (* (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 (- x))))))) (* (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow (exp (* 12 (- (log -1) (log (/ 1 (- x)))))) 2)))) 1/3) (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2))))) (pow (/ 1 (- x)) 4)) (+ (* (* -52.5 (pow (* (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 (- x))))))) (* (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow (exp (* 12 (- (log -1) (log (/ 1 (- x)))))) 2)))) 1/3)) (pow (/ 1 (- x)) 2)) (pow (* (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 (- x))))))) (* (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow (exp (* 12 (- (log -1) (log (/ 1 (- x)))))) 2)))) 1/3))) into (- (+ (* 1378.125 (* (pow (* (pow (exp (* 12 (- (log -1) (log (/ -1 x))))) 2) (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)))) 1/3) (/ 1 (pow x 4)))) (pow (* (pow (exp (* 12 (- (log -1) (log (/ -1 x))))) 2) (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)))) 1/3)) (+ (* 52.5 (* (pow (* (pow (exp (* 12 (- (log -1) (log (/ -1 x))))) 2) (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)))) 1/3) (/ 1 (pow x 2)))) (* 1479750451200.0 (* (pow (* (pow (exp (* 12 (- (log -1) (log (/ -1 x))))) 2) (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)))) 1/3) (/ 1 (* (pow x 4) (pow 32768.0 2)))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 32768.0 (* x x)) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 32768.0 (* x x)) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32768.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -1720320.0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (log (- 1720320.0)) into (log (- 1720320.0))
* [misc]backup-simplify:  Simplify (* 3 (log (- 1720320.0))) into (* 3 (log (- 1720320.0)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (- 1720320.0)))) into (pow (- 1720320.0) 3)
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 3 (log x))) into (* 12 (log x))
* [misc]backup-simplify:  Simplify (exp (* 12 (log x))) into (pow x 12)
* [misc]taylor:  Taking taylor expansion of (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 3 (log x))) into (* 12 (log x))
* [misc]backup-simplify:  Simplify (exp (* 12 (log x))) into (pow x 12)
* [misc]taylor:  Taking taylor expansion of (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 32768.0 (* x x)) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 32768.0 (* x x)) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32768.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -1720320.0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (log (- 1720320.0)) into (log (- 1720320.0))
* [misc]backup-simplify:  Simplify (* 3 (log (- 1720320.0))) into (* 3 (log (- 1720320.0)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (- 1720320.0)))) into (pow (- 1720320.0) 3)
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 3 (log x))) into (* 12 (log x))
* [misc]backup-simplify:  Simplify (exp (* 12 (log x))) into (pow x 12)
* [misc]taylor:  Taking taylor expansion of (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 3 (log x))) into (* 12 (log x))
* [misc]backup-simplify:  Simplify (exp (* 12 (log x))) into (pow x 12)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 (pow x 12)) into (pow x 12)
* [misc]backup-simplify:  Simplify (* (pow x 9) (pow x 12)) into (pow x 21)
* [misc]backup-simplify:  Simplify (* (pow x 12) (pow x 21)) into (pow x 33)
* [misc]backup-simplify:  Simplify (* (pow (- 1720320.0) 3) (pow x 33)) into (* (pow -1720320.0 3) (pow x 33))
* [misc]backup-simplify:  Simplify (* (pow -1720320.0 3) (pow x 33)) into (* (pow -1720320.0 3) (pow x 33))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (* 0 (pow x 12))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 (pow x 12))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 12) 0) (* 0 (pow x 21))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 1720320.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (- 1720320.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (- 1720320.0)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- 1720320.0) 3) 0) (* 0 (pow x 33))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (* 0 (pow x 12)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 (pow x 12)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 12) 0) (+ (* 0 0) (* 0 (pow x 21)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 32768.0 1) (+ (* 0 0) (* 0 0))) into 32768.0
* [misc]backup-simplify:  Simplify (+ 32768.0 0) into 32768.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 1720320.0) 2))) (* 1 (/ (* 1 (pow (* 2 32768.0) 1)) (pow (- 1720320.0) 1)))) 2) into -0.01904761904761905
* [misc]backup-simplify:  Simplify (+ (* 3 -0.01904761904761905) (+ (* 0 0) (* 0 (log (- 1720320.0))))) into (- 0.05714285714285715)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (- 1720320.0)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.05714285714285715) 1) 1)))) into (* -0.05714285714285715 (pow -1720320.0 3))
* [misc]backup-simplify:  Simplify (+ (* (pow (- 1720320.0) 3) 0) (+ (* 0 0) (* (* -0.05714285714285715 (pow -1720320.0 3)) (pow x 33)))) into (* 2.909307767095296e+17 (pow x 33))
* [misc]backup-simplify:  Simplify (* 2.909307767095296e+17 (pow x 33)) into (* 2.909307767095296e+17 (pow x 33))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 12))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 12))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 12) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 21))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 1720320.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 32768.0) 1)) (pow (- 1720320.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 1720320.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -0.01904761904761905) (+ (* 0 0) (* 0 (log (- 1720320.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (- 1720320.0)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.05714285714285715) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- 1720320.0) 3) 0) (+ (* 0 0) (+ (* (* -0.05714285714285715 (pow -1720320.0 3)) 0) (* 0 (pow x 33))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 12)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 12)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 12) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 21)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 1720320.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 32768.0) 1)) (pow (- 1720320.0) 3))) (* -3 (/ (* 1 (pow (* 2 32768.0) 2)) (pow (- 1720320.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 1720320.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 1720320.0) 1)))) 24) into (/ -536870912.0 (pow -1720320.0 2))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -536870912.0 (pow -1720320.0 2))) (+ (* 0 0) (+ (* 0 -0.01904761904761905) (+ (* 0 0) (* 0 (log (- 1720320.0))))))) into (- (* 1610612736.0 (/ 1 (pow -1720320.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (- 1720320.0)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.05714285714285715) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.05714285714285715) 2) 2)) (* (/ (pow (- (* 1610612736.0 (/ 1 (pow -1720320.0 2)))) 1) 1)))) into (* (pow -1720320.0 3) (- 0.00163265306122449 (* 1610612736.0 (/ 1 (pow -1720320.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (pow (- 1720320.0) 3) 0) (+ (* 0 0) (+ (* (* -0.05714285714285715 (pow -1720320.0 3)) 0) (+ (* 0 0) (* (* (pow -1720320.0 3) (- 0.00163265306122449 (* 1610612736.0 (/ 1 (pow -1720320.0 2))))) (pow x 33)))))) into (- (* 8.20009424959796e+27 (/ (pow x 33) (pow -1720320.0 2))) (* 8312307905986561.0 (pow x 33)))
* [misc]backup-simplify:  Simplify (- (* 8.20009424959796e+27 (/ (pow x 33) (pow -1720320.0 2))) (* 8312307905986561.0 (pow x 33))) into (- (* 8.20009424959796e+27 (/ (pow x 33) (pow -1720320.0 2))) (* 8312307905986561.0 (pow x 33)))
* [misc]backup-simplify:  Simplify (+ (* (- (* 8.20009424959796e+27 (/ (pow x 33) (pow -1720320.0 2))) (* 8312307905986561.0 (pow x 33))) (pow x 10)) (+ (* (* 2.909307767095296e+17 (pow x 33)) (pow x 8)) (* (* (pow -1720320.0 3) (pow x 33)) (pow x 6)))) into (- (+ (* 8.20009424959796e+27 (/ (pow x 43) (pow -1720320.0 2))) (* 2.909307767095296e+17 (pow x 41))) (+ (* 8312307905986561.0 (pow x 43)) (* 5.091288592416768e+18 (pow x 39))))
* [misc]approximate:  Taking taylor expansion of (* (pow (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (+ 32768.0 0) into 32768.0
* [misc]backup-simplify:  Simplify (log 32768.0) into (log 32768.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 32768.0) (* 2 (log x)))) into (* 3 (- (log 32768.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 32768.0) (* 2 (log x))))) into (exp (* 3 (- (log 32768.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (pow x -3))) into (* 4 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (pow x -3)))) into (pow (pow x -3) 4)
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (pow x -3))) into (* 4 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (pow x -3)))) into (pow (pow x -3) 4)
* [misc]taylor:  Taking taylor expansion of (* (pow (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 32768.0 (* (/ 1 x) (/ 1 x))) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (+ 32768.0 0) into 32768.0
* [misc]backup-simplify:  Simplify (log 32768.0) into (log 32768.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 32768.0) (* 2 (log x)))) into (* 3 (- (log 32768.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 32768.0) (* 2 (log x))))) into (exp (* 3 (- (log 32768.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (pow x -3))) into (* 4 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (pow x -3)))) into (pow (pow x -3) 4)
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (pow x -3))) into (* 4 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (pow x -3)))) into (pow (pow x -3) 4)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 6)) (pow (pow x -3) 4)) into (/ 1 (pow x 18))
* [misc]backup-simplify:  Simplify (* (pow (pow x -3) 3) (pow (pow x -3) 4)) into (/ 1 (pow x 21))
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 18)) (/ 1 (pow x 21))) into (/ 1 (pow x 39))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (/ 1 (pow x 39))) into (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))
* [misc]backup-simplify:  Simplify (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) into (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (* 0 (pow (pow x -3) 4))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (* 0 (pow (pow x -3) 4))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 18)) 0) (* 0 (/ 1 (pow x 21)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 32768.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log 32768.0) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (* 0 (/ 1 (pow x 39)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (* 0 (pow (pow x -3) 4)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (* 0 (pow (pow x -3) 4)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 18)) 0) (+ (* 0 0) (* 0 (/ 1 (pow x 21))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -1720320.0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 32768.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 1)))) 2) into -52.5
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x)))))) into (- 157.5)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 157.5) 1) 1)))) into (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) (/ 1 (pow x 39))))) into (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))
* [misc]backup-simplify:  Simplify (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)))) into (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -3) 4))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -3) 4))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 18)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 21)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 32768.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 32768.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 157.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) 0) (* 0 (/ 1 (pow x 39)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -3) 4)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -3) 4)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 18)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 21))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 32768.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 1720320.0)) 2)) (pow 32768.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 32768.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 32768.0 1)))) 24) into (/ -1479750451200.0 (pow 32768.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -1479750451200.0 (pow 32768.0 2))) (+ (* 0 0) (+ (* 0 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x)))))))) into (- (* 4439251353600.0 (/ 1 (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 157.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 157.5) 2) 2)) (* (/ (pow (- (* 4439251353600.0 (/ 1 (pow 32768.0 2)))) 1) 1)))) into (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (- 12403.125 (* 4439251353600.0 (/ 1 (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) 0) (+ (* 0 0) (* (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (- 12403.125 (* 4439251353600.0 (/ 1 (pow 32768.0 2))))) (/ 1 (pow x 39))))))) into (- (* 12403.125 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))) (* 4439251353600.0 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow x 39) (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (- (* 12403.125 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))) (* 4439251353600.0 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow x 39) (pow 32768.0 2))))) into (- (* 12403.125 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))) (* 4439251353600.0 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow x 39) (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 12403.125 (/ (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 39))) (* 4439251353600.0 (/ (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (* (pow (/ 1 x) 39) (pow 32768.0 2))))) (pow (/ 1 x) 4)) (+ (* (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 39)))) (pow (/ 1 x) 2)) (/ (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 39)))) into (- (+ (* 12403.125 (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 35))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 39))) (+ (* 4439251353600.0 (/ (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 35)) (pow 32768.0 2))) (* 157.5 (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 37)))))
* [misc]approximate:  Taking taylor expansion of (* (pow (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (+ 32768.0 0) into 32768.0
* [misc]backup-simplify:  Simplify (log 32768.0) into (log 32768.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 32768.0) (* 2 (log x)))) into (* 3 (- (log 32768.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 32768.0) (* 2 (log x))))) into (exp (* 3 (- (log 32768.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (* 3 (- (log -1) (log x)))) into (* 12 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 12 (- (log -1) (log x)))) into (exp (* 12 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (* 3 (- (log -1) (log x)))) into (* 12 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 12 (- (log -1) (log x)))) into (exp (* 12 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (+ 32768.0 0) into 32768.0
* [misc]backup-simplify:  Simplify (log 32768.0) into (log 32768.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 32768.0) (* 2 (log x)))) into (* 3 (- (log 32768.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 32768.0) (* 2 (log x))))) into (exp (* 3 (- (log 32768.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (* 3 (- (log -1) (log x)))) into (* 12 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 12 (- (log -1) (log x)))) into (exp (* 12 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (* 3 (- (log -1) (log x)))) into (* 12 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 12 (- (log -1) (log x)))) into (exp (* 12 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 12 (- (log -1) (log x))))) into (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 12 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (exp (* 12 (- (log -1) (log x))))) into (* (exp (* 9 (- (log -1) (log x)))) (exp (* 12 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 12 (- (log -1) (log x))))) (* (exp (* 9 (- (log -1) (log x)))) (exp (* 12 (- (log -1) (log x)))))) into (* (exp (* 9 (- (log -1) (log x)))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (exp (* 9 (- (log -1) (log x)))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) into (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) into (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (* 0 (exp (* 12 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (* 0 (exp (* 12 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 12 (- (log -1) (log x))))) 0) (* 0 (* (exp (* 9 (- (log -1) (log x)))) (exp (* 12 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 32768.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log 32768.0) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (* 0 (* (exp (* 9 (- (log -1) (log x)))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 12 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (* 0 (exp (* 12 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 12 (- (log -1) (log x))))) 0) (+ (* 0 0) (* 0 (* (exp (* 9 (- (log -1) (log x)))) (exp (* 12 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -1720320.0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 32768.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 1)))) 2) into -52.5
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x)))))) into (- 157.5)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 157.5) 1) 1)))) into (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) (* (exp (* 9 (- (log -1) (log x)))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))))) into (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))))
* [misc]backup-simplify:  Simplify (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))))) into (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 12 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 12 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 12 (- (log -1) (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (* 9 (- (log -1) (log x)))) (exp (* 12 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 32768.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 32768.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 157.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) 0) (* 0 (* (exp (* 9 (- (log -1) (log x)))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 12 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 12 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 12 (- (log -1) (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (* 9 (- (log -1) (log x)))) (exp (* 12 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 32768.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 1720320.0)) 2)) (pow 32768.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 32768.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 32768.0 1)))) 24) into (/ -1479750451200.0 (pow 32768.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -1479750451200.0 (pow 32768.0 2))) (+ (* 0 0) (+ (* 0 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x)))))))) into (- (* 4439251353600.0 (/ 1 (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 157.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 157.5) 2) 2)) (* (/ (pow (- (* 4439251353600.0 (/ 1 (pow 32768.0 2)))) 1) 1)))) into (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (- 12403.125 (* 4439251353600.0 (/ 1 (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) 0) (+ (* 0 0) (* (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (- 12403.125 (* 4439251353600.0 (/ 1 (pow 32768.0 2))))) (* (exp (* 9 (- (log -1) (log x)))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))))))) into (- (* 12403.125 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))) (* 4439251353600.0 (/ (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (- (* 12403.125 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))) (* 4439251353600.0 (/ (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) (pow 32768.0 2)))) into (- (* 12403.125 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2))))) (* 4439251353600.0 (/ (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 12 (- (log -1) (log x)))) 2)))) (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 12403.125 (* (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 (- x))))))) (* (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow (exp (* 12 (- (log -1) (log (/ 1 (- x)))))) 2))))) (* 4439251353600.0 (/ (* (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 (- x))))))) (* (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow (exp (* 12 (- (log -1) (log (/ 1 (- x)))))) 2)))) (pow 32768.0 2)))) (pow (/ 1 (- x)) 4)) (+ (* (- (* 157.5 (* (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 (- x))))))) (* (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow (exp (* 12 (- (log -1) (log (/ 1 (- x)))))) 2)))))) (pow (/ 1 (- x)) 2)) (* (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 (- x))))))) (* (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow (exp (* 12 (- (log -1) (log (/ 1 (- x)))))) 2)))))) into (- (+ (* (pow (exp (* 12 (- (log -1) (log (/ -1 x))))) 2) (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)))) (* 12403.125 (/ (* (pow (exp (* 12 (- (log -1) (log (/ -1 x))))) 2) (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)))) (pow x 4)))) (+ (* 4439251353600.0 (/ (* (pow (exp (* 12 (- (log -1) (log (/ -1 x))))) 2) (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)))) (* (pow x 4) (pow 32768.0 2)))) (* 157.5 (/ (* (pow (exp (* 12 (- (log -1) (log (/ -1 x))))) 2) (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)))) (pow x 2)))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 1 1 1 1)
* [misc]approximate:  Taking taylor expansion of (* 32768.0 (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32768.0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 32768.0 1) (+ (* 0 0) (* 0 0))) into 32768.0
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 32768.0 (pow x 2)) into (* 32768.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 32768.0 (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 32768.0 (pow (/ 1 (/ 1 x)) 2)) into (* 32768.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 32768.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* 32768.0 (pow x 2))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* x (* x 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* x (* x 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* x (* x 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* x (* x 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0 33546240.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (* 1 (- 307507200.0)) into -307507200.0
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 33546240.0)) into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 0 33546240.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 (- 307507200.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 33546240.0) (* 0 0))) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0)))) into 33546240.0
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 33546240.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 (pow x 11)) (* -307507200.0 (pow x 9))) into (- (* 33546240.0 (pow x 11)) (* 307507200.0 (pow x 9)))
* [misc]approximate:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 (pow x 6))) into (/ 1 (pow x 9))
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 9)) 33546240.0) into (/ 33546240.0 (pow x 9))
* [misc]backup-simplify:  Simplify (/ 33546240.0 (pow x 9)) into (/ 33546240.0 (pow x 9))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (/ 1 (pow x 6)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))) into (- (* 307507200.0 (/ 1 (pow x 9))))
* [misc]backup-simplify:  Simplify (- (* 307507200.0 (/ 1 (pow x 9)))) into (- (* 307507200.0 (/ 1 (pow x 9))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (* 307507200.0 (/ 1 (pow (/ 1 x) 9)))) (* (/ 33546240.0 (pow (/ 1 x) 9)) (pow (/ 1 (/ 1 x)) 2))) into (- (* 33546240.0 (pow x 11)) (* 307507200.0 (pow x 9)))
* [misc]approximate:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) into (pow (exp (* 3 (- (log -1) (log x)))) 3)
* [misc]backup-simplify:  Simplify (* -1 33546240.0) into -33546240.0
* [misc]backup-simplify:  Simplify (* -1 -33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 33546240.0) into (* 33546240.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (* 33546240.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)) into (* 33546240.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -33546240.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))) into (- (* 307507200.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (- (* 307507200.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))) into (- (* 307507200.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (* 307507200.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3))) (* (* 33546240.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3)) (pow (/ 1 (/ 1 (- x))) 2))) into (- (* 33546240.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 2))) (* 307507200.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))) 1/3) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 2 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))) 1) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 3 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (log (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (log (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 3 1)) (pow (pow x 3) 3)) (* (pow (pow x 3) (+ 3 1)) (pow (* x x) 3))))))
* [exit]simplify:  Simplified to (log (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 3 1)) (pow (pow x 3) 3)) (* (pow (pow x 3) (+ 3 1)) (pow (* x x) 3))))))
* * * * [misc]progress:  [ 4 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (log (exp (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 3 1)) (pow (pow x 3) 3)) (* (pow (pow x 3) (+ 3 1)) (pow (* x x) 3))))))
* [exit]simplify:  Simplified to (exp (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 3 1)) (pow (pow x 3) 3)) (* (pow (pow x 3) (+ 3 1)) (pow (* x x) 3))))))
* * * * [misc]progress:  [ 5 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (cbrt (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (cbrt (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (cbrt (pow (+ (* 32768.0 (* x x)) -1720320.0) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (152 enodes)
* [exit]simplify:  Simplified to (+ (* 32768.0 (* x x)) -1720320.0)
* [exit]simplify:  Simplified to (+ (* 32768.0 (* x x)) -1720320.0)
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (379 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (pow (pow x 3) (+ 3 1)) (pow (pow x 3) (+ 3 1))) (* (pow x 3) (pow (pow x 3) (+ 3 1)))))
* [exit]simplify:  Simplified to (cbrt (* (* (pow (pow x 3) (+ 3 1)) (pow (pow x 3) (+ 3 1))) (* (pow x 3) (pow (pow x 3) (+ 3 1)))))
* * * * [misc]progress:  [ 6 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (cbrt (* (pow (+ (pow (* 32768.0 (* x x)) 3) (pow -1720320.0 3)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))) (cbrt (pow (+ (* (* 32768.0 (* x x)) (* 32768.0 (* x x))) (- (* -1720320.0 -1720320.0) (* (* 32768.0 (* x x)) -1720320.0))) 3))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (pow (+ (pow (* 32768.0 (* x x)) 3) (pow -1720320.0 3)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* 32768.0 (* x x)) 3) (pow -1720320.0 3)) (* (* (pow (pow x 3) (+ 1 3)) (* (pow x 3) (pow x 3))) (* (pow (pow x 3) (+ 1 3)) (pow (pow x 3) 3)))) (* (+ (pow (* 32768.0 (* x x)) 3) (pow -1720320.0 3)) (+ (pow (* 32768.0 (* x x)) 3) (pow -1720320.0 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* 32768.0 (* x x)) 3) (pow -1720320.0 3)) (* (* (pow (pow x 3) (+ 1 3)) (* (pow x 3) (pow x 3))) (* (pow (pow x 3) (+ 1 3)) (pow (pow x 3) 3)))) (* (+ (pow (* 32768.0 (* x x)) 3) (pow -1720320.0 3)) (+ (pow (* 32768.0 (* x x)) 3) (pow -1720320.0 3)))))
* [enter]simplify:  Simplifying (cbrt (pow (+ (* (* 32768.0 (* x x)) (* 32768.0 (* x x))) (- (* -1720320.0 -1720320.0) (* (* 32768.0 (* x x)) -1720320.0))) 3))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (397 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* 32768.0 x) x) (* (* 32768.0 x) x)) (- (* -1720320.0 -1720320.0) (* (* -1720320.0 x) (* 32768.0 x))))
* [exit]simplify:  Simplified to (+ (* (* (* 32768.0 x) x) (* (* 32768.0 x) x)) (- (* -1720320.0 -1720320.0) (* (* -1720320.0 x) (* 32768.0 x))))
* * * * [misc]progress:  [ 7 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (cbrt (* (pow (- (* (* 32768.0 (* x x)) (* 32768.0 (* x x))) (* -1720320.0 -1720320.0)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))) (cbrt (pow (- (* 32768.0 (* x x)) -1720320.0) 3))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (pow (- (* (* 32768.0 (* x x)) (* 32768.0 (* x x))) (* -1720320.0 -1720320.0)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 3 1))) (* (pow x 3) (pow (pow x 3) (+ 3 1))))) (pow (- (* (* (* 32768.0 x) x) (* (* 32768.0 x) x)) (* -1720320.0 -1720320.0)) 3)))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 3 1))) (* (pow x 3) (pow (pow x 3) (+ 3 1))))) (pow (- (* (* (* 32768.0 x) x) (* (* 32768.0 x) x)) (* -1720320.0 -1720320.0)) 3)))
* [enter]simplify:  Simplifying (cbrt (pow (- (* 32768.0 (* x x)) -1720320.0) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (130 enodes)
* [exit]simplify:  Simplified to (- (* 32768.0 (* x x)) -1720320.0)
* [exit]simplify:  Simplified to (- (* 32768.0 (* x x)) -1720320.0)
* * * * [misc]progress:  [ 8 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (cbrt (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))) (cbrt (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (cbrt (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))) (cbrt (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (158 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 3 1)) (pow (* x x) 3)) (* (pow (pow x 3) (+ 3 1)) (pow (pow x 3) 3)))))) (cbrt (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 3 1)) (pow (* x x) 3)) (* (pow (pow x 3) (+ 3 1)) (pow (pow x 3) 3)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 3 1)) (pow (* x x) 3)) (* (pow (pow x 3) (+ 3 1)) (pow (pow x 3) 3)))))) (cbrt (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 3 1)) (pow (* x x) 3)) (* (pow (pow x 3) (+ 3 1)) (pow (pow x 3) 3)))))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 3 1)) (pow (pow x 3) 3)) (* (pow (pow x 3) (+ 3 1)) (pow (* x x) 3))))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 3 1)) (pow (pow x 3) 3)) (* (pow (pow x 3) (+ 3 1)) (pow (* x x) 3))))))
* * * * [misc]progress:  [ 9 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))) (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))) (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))) (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))) (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (160 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 3 1)) (pow (pow x 3) 3)) (* (pow (pow x 3) (+ 3 1)) (pow (* x x) 3))))
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 3 1)) (pow (pow x 3) 3)) (* (pow (pow x 3) (+ 3 1)) (pow (* x x) 3))))
* * * * [misc]progress:  [ 10 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (sqrt (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))) (sqrt (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 3 1)) (pow (pow x 3) 3)) (* (pow (pow x 3) (+ 3 1)) (pow (* x x) 3))))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 3 1)) (pow (pow x 3) 3)) (* (pow (pow x 3) (+ 3 1)) (pow (* x x) 3))))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 3 1)) (pow (pow x 3) 3)) (* (pow (pow x 3) (+ 3 1)) (pow (* x x) 3))))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 3 1)) (pow (pow x 3) 3)) (* (pow (pow x 3) (+ 3 1)) (pow (* x x) 3))))))
* * * * [misc]progress:  [ 11 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 1 (cbrt (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 12 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (pow (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))) 1)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 13 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (499 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 14 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ 1 3) (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ 1 3) (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 15 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ 1 3) (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ 1 3) (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 16 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 17 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (379 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 18 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) 3) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) 3) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 19 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) 3) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) 3) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 20 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (407 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 21 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (379 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 22 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) 3) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) 3) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 23 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) 3) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) 3) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 24 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (407 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 25 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (214 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* 3 (* (+ 3 3) (log x))))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* 3 (* (+ 3 3) (log x))))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 26 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (226 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* 3 3) (+ (log x) (log x))) (* (* (log x) 3) (+ (+ 3 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* 3 3) (+ (log x) (log x))) (* (* (log x) 3) (+ (+ 3 3) 1))))
* * * * [misc]progress:  [ 27 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (226 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* 3 3) (+ (log x) (log x))) (* (* (log x) 3) (+ (+ 3 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* 3 3) (+ (log x) (log x))) (* (* (log x) 3) (+ (+ 3 3) 1))))
* * * * [misc]progress:  [ 28 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (216 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ (+ 1 3) 3) (* (log x) 3)) (+ (* (* 3 3) (log x)) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ (+ 1 3) 3) (* (log x) 3)) (+ (* (* 3 3) (log x)) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 29 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ (* 3 3) 3)) (+ (* (+ 3 3) (log x)) (* (log x) (* 3 3)))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ (* 3 3) 3)) (+ (* (+ 3 3) (log x)) (* (log x) (* 3 3)))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 30 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (+ (* (log x) (+ (* 3 3) 3)) (* (log x) (+ (+ 3 3) (* 3 3))))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (+ (* (log x) (+ (* 3 3) 3)) (* (log x) (+ (+ 3 3) (* 3 3))))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 31 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (371 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 32 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (371 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 33 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 34 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (373 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 35 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 36 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 37 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* * [misc]simplify:  iters left: 3 (295 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 1) 3) (+ (+ 3 1) (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 1) 3) (+ (+ 3 1) (+ 3 1)))))
* * * * [misc]progress:  [ 38 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (373 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 39 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 40 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 41 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* * [misc]simplify:  iters left: 3 (295 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 1) 3) (+ (+ 3 1) (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 1) 3) (+ (+ 3 1) (+ 3 1)))))
* * * * [misc]progress:  [ 42 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (217 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ (+ 3 1) 3) (* (log x) 3)) (* (* (log x) 3) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ (+ 3 1) 3) (* (log x) 3)) (* (* (log x) 3) (+ 3 3))))
* * * * [misc]progress:  [ 43 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (162 enodes)
* * [misc]simplify:  iters left: 3 (453 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 44 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (162 enodes)
* * [misc]simplify:  iters left: 3 (453 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 45 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (430 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 46 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* * [misc]simplify:  iters left: 3 (443 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (log x) 3) (+ (+ 3 1) 3)) (* (log x) (+ (* 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (log x) 3) (+ (+ 3 1) 3)) (* (log x) (+ (* 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 47 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (+ (* (log x) (+ (* 3 3) 3)) (* (log x) (+ (+ 3 3) (* 3 3))))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (+ (* (log x) (+ (* 3 3) 3)) (* (log x) (+ (+ 3 3) (* 3 3))))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 48 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (371 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 49 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (371 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 50 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 51 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (373 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 52 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 53 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 54 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* * [misc]simplify:  iters left: 3 (295 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 1) 3) (+ (+ 3 1) (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 1) 3) (+ (+ 3 1) (+ 3 1)))))
* * * * [misc]progress:  [ 55 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (373 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 56 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 57 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 58 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* * [misc]simplify:  iters left: 3 (295 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 1) 3) (+ (+ 3 1) (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 1) 3) (+ (+ 3 1) (+ 3 1)))))
* * * * [misc]progress:  [ 59 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (217 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ (+ 3 1) 3) (* (log x) 3)) (* (* (log x) 3) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ (+ 3 1) 3) (* (log x) 3)) (* (* (log x) 3) (+ 3 3))))
* * * * [misc]progress:  [ 60 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (162 enodes)
* * [misc]simplify:  iters left: 3 (453 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 61 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (162 enodes)
* * [misc]simplify:  iters left: 3 (453 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 62 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (430 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 63 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* * [misc]simplify:  iters left: 3 (443 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (log x) 3) (+ (+ 3 1) 3)) (* (log x) (+ (* 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (log x) 3) (+ (+ 3 1) 3)) (* (log x) (+ (* 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 64 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* * [misc]simplify:  iters left: 3 (417 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) 1) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) 1) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 65 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 66 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 67 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (267 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (log x) (* 3 3)) (* (+ (+ 1 3) 1) (* (log x) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (log x) (* 3 3)) (* (+ (+ 1 3) 1) (* (log x) (+ 3 3)))))
* * * * [misc]progress:  [ 68 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* * [misc]simplify:  iters left: 3 (396 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) 1) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) 1) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 69 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 70 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 71 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (305 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 1 3) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 1 3) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 72 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* * [misc]simplify:  iters left: 3 (396 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) 1) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) 1) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 73 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 74 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 75 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (305 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 1 3) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 1 3) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 76 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* * [misc]simplify:  iters left: 3 (494 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)))
* * * * [misc]progress:  [ 77 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (173 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3))) (* (* 3 (log x)) (+ 1 (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3))) (* (* 3 (log x)) (+ 1 (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 78 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (173 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3))) (* (* 3 (log x)) (+ 1 (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3))) (* (* 3 (log x)) (+ 1 (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 79 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (405 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 80 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (130 enodes)
* * [misc]simplify:  iters left: 3 (398 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 3 (+ 1 3))) (* 3 (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 3 (+ 1 3))) (* 3 (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 81 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (+ (* (log x) (+ 3 (* 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (+ (* (log x) (+ 3 (* 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 82 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (200 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 3 1) (log x)) (+ 3 3))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 3 1) (log x)) (+ 3 3))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 83 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (200 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 3 1) (log x)) (+ 3 3))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 3 1) (log x)) (+ 3 3))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 84 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (log x))) (+ (* (+ (* 3 3) 3) (log x)) (* (+ (* 3 3) 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (log x))) (+ (* (+ (* 3 3) 3) (log x)) (* (+ (* 3 3) 3) (log x)))))
* * * * [misc]progress:  [ 85 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (378 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 86 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* * [misc]simplify:  iters left: 3 (494 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 87 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* * [misc]simplify:  iters left: 3 (494 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 88 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (408 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 89 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (378 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 90 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* * [misc]simplify:  iters left: 3 (494 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 91 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* * [misc]simplify:  iters left: 3 (494 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 92 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (408 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 93 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (211 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (+ 3 3))) (* (+ (+ 3 1) 3) (* (log x) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (+ 3 3))) (* (+ (+ 3 1) 3) (* (log x) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 94 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 95 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 96 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (205 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 97 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (196 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* 3 (log x)) (+ (+ 3 1) 3)) (+ (* (log x) (* 3 3)) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* 3 (log x)) (+ (+ 3 1) 3)) (+ (* (log x) (* 3 3)) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 98 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (+ (* (log x) (+ (* 3 3) 3)) (* (log x) (+ (* 3 3) 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (+ (* (log x) (+ (* 3 3) 3)) (* (log x) (+ (* 3 3) 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 99 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 100 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 101 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (350 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) 3) (+ (+ 1 1) (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) 3) (+ (+ 1 1) (+ 3 1)))))
* * * * [misc]progress:  [ 102 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ 1 (+ 3 1)) (+ (+ 3 1) (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ 1 (+ 3 1)) (+ (+ 3 1) (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 103 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* * * * [misc]progress:  [ 104 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* * * * [misc]progress:  [ 105 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (346 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 106 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ 1 (+ 3 1)) (+ (+ 3 1) (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ 1 (+ 3 1)) (+ (+ 3 1) (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 107 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* * * * [misc]progress:  [ 108 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* * * * [misc]progress:  [ 109 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (346 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 110 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (214 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 111 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 112 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 113 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (465 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 114 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (158 enodes)
* * [misc]simplify:  iters left: 3 (456 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) 3) (+ 3 3)) (* (+ (+ 3 1) 3) (* (log x) 3))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) 3) (+ 3 3)) (* (+ (+ 3 1) 3) (* (log x) 3))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 115 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (+ (* (log x) (+ (* 3 3) 3)) (* (log x) (+ (* 3 3) 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (+ (* (log x) (+ (* 3 3) 3)) (* (log x) (+ (* 3 3) 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 116 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 117 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 118 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (350 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) 3) (+ (+ 1 1) (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) 3) (+ (+ 1 1) (+ 3 1)))))
* * * * [misc]progress:  [ 119 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ 1 (+ 3 1)) (+ (+ 3 1) (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ 1 (+ 3 1)) (+ (+ 3 1) (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 120 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* * * * [misc]progress:  [ 121 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* * * * [misc]progress:  [ 122 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (346 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 123 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ 1 (+ 3 1)) (+ (+ 3 1) (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ 1 (+ 3 1)) (+ (+ 3 1) (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 124 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* * * * [misc]progress:  [ 125 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* * * * [misc]progress:  [ 126 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (346 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 127 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (214 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 128 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 129 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 130 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (465 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 131 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (158 enodes)
* * [misc]simplify:  iters left: 3 (456 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) 3) (+ 3 3)) (* (+ (+ 3 1) 3) (* (log x) 3))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) 3) (+ 3 3)) (* (+ (+ 3 1) 3) (* (log x) 3))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 132 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (493 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 133 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (380 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 134 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (380 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 135 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (309 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ 3 3)) (* (log x) (+ 3 3))) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ 3 3)) (* (log x) (+ 3 3))) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 136 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 1) (+ 3 1)) (+ (+ 3 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 1) (+ 3 1)) (+ (+ 3 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 137 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* * * * [misc]progress:  [ 138 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* * * * [misc]progress:  [ 139 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (313 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 140 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 1) (+ 3 1)) (+ (+ 3 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 1) (+ 3 1)) (+ (+ 3 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 141 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* * * * [misc]progress:  [ 142 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* * * * [misc]progress:  [ 143 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (313 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 144 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (199 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (+ (log x) (log x))) (* (* (log x) 3) (+ (+ 3 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (+ (log x) (log x))) (* (* (log x) 3) (+ (+ 3 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 145 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* * [misc]simplify:  iters left: 3 (491 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 146 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* * [misc]simplify:  iters left: 3 (491 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 147 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (393 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ 1 (+ 3 1)) (+ (+ 3 1) (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ 1 (+ 3 1)) (+ (+ 3 1) (+ 3 1)))))
* * * * [misc]progress:  [ 148 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (399 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (* 3 3) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (* 3 3) (+ 3 3)))))
* * * * [misc]progress:  [ 149 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (201 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ 3 (* 3 3)) (log x)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ 3 (* 3 3)) (log x)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 150 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) (+ 3 3))) (* (+ 3 1) (* (log x) (+ 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) (+ 3 3))) (* (+ 3 1) (* (log x) (+ 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 151 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) (+ 3 3))) (* (+ 3 1) (* (log x) (+ 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) (+ 3 3))) (* (+ 3 1) (* (log x) (+ 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 152 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (410 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 153 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (387 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 154 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 155 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 156 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (424 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (+ 3 1) 3) (* (log x) 3)) (* (* (log x) 3) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (+ 3 1) 3) (* (log x) 3)) (* (* (log x) 3) (+ 3 3))))
* * * * [misc]progress:  [ 157 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (387 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 158 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 159 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 160 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (424 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (+ 3 1) 3) (* (log x) 3)) (* (* (log x) 3) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (+ 3 1) 3) (* (log x) 3)) (* (* (log x) 3) (+ 3 3))))
* * * * [misc]progress:  [ 161 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (210 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (* 3 3) (+ 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (* 3 3) (+ 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 162 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (218 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (log x) (+ 3 3))) (* (* (log x) 3) (+ (+ 3 1) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (log x) (+ 3 3))) (* (* (log x) 3) (+ (+ 3 1) 3))))
* * * * [misc]progress:  [ 163 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (218 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (log x) (+ 3 3))) (* (* (log x) 3) (+ (+ 3 1) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (log x) (+ 3 3))) (* (* (log x) 3) (+ (+ 3 1) 3))))
* * * * [misc]progress:  [ 164 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (204 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* 3 3) (log x)) (* (* 3 3) (log x))) (* (* 3 3) (log x))) (+ (* (log x) (+ 3 3)) (* (log x) (+ 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* 3 3) (log x)) (* (* 3 3) (log x))) (* (* 3 3) (log x))) (+ (* (log x) (+ 3 3)) (* (log x) (+ 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 165 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* 3 (log x)) (+ 3 (+ 3 1))) (+ (* (* 3 3) (log x)) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* 3 (log x)) (+ 3 (+ 3 1))) (+ (* (* 3 3) (log x)) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 166 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* 3 3) 3) (log x)) (* (log x) (+ (* 3 3) (+ 3 3)))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* 3 3) 3) (log x)) (* (log x) (+ (* 3 3) (+ 3 3)))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 167 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (370 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x)))))
* * * * [misc]progress:  [ 168 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (370 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x)))))
* * * * [misc]progress:  [ 169 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (328 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 170 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 171 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 172 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 173 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))))
* * * * [misc]progress:  [ 174 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 175 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 176 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 177 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))))
* * * * [misc]progress:  [ 178 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (212 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 179 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (485 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 180 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (485 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 181 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (449 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 182 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* * [misc]simplify:  iters left: 3 (479 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (+ 1 1)) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (+ 1 1)) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* * * * [misc]progress:  [ 183 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* 3 3) 3) (log x)) (* (log x) (+ (* 3 3) (+ 3 3)))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* 3 3) 3) (log x)) (* (log x) (+ (* 3 3) (+ 3 3)))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 184 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (370 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x)))))
* * * * [misc]progress:  [ 185 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (370 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x)))))
* * * * [misc]progress:  [ 186 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (328 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 187 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 188 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 189 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 190 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))))
* * * * [misc]progress:  [ 191 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 192 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 193 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 194 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))))
* * * * [misc]progress:  [ 195 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (212 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 196 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (485 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 197 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (485 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 198 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (449 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 199 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* * [misc]simplify:  iters left: 3 (479 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (+ 1 1)) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (+ 1 1)) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* * * * [misc]progress:  [ 200 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 201 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (416 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 202 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (416 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 203 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* * [misc]simplify:  iters left: 3 (302 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 204 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (419 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 205 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 206 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 207 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (309 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 3 1) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 3 1) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 208 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (419 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 209 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 210 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 211 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (309 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 3 1) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 3 1) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 212 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (185 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 3 1) 3)) (* 3 (* (log x) (+ 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 3 1) 3)) (* 3 (* (log x) (+ 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 213 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (172 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (* 3 (log x)) (+ (+ 3 1) 1))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (* 3 (log x)) (+ (+ 3 1) 1))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 214 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (172 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (* 3 (log x)) (+ (+ 3 1) 1))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (* 3 (log x)) (+ (+ 3 1) 1))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 215 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (384 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 (+ 3 1)) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 (+ 3 1)) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* * * * [misc]progress:  [ 216 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (401 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ 1 (+ 3 1)) (* (log x) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ 1 (+ 3 1)) (* (log x) (+ 3 3)))))
* * * * [misc]progress:  [ 217 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (204 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (+ (* (+ (* 3 3) 3) (log x)) (* (+ (* 3 3) 3) (log x))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (+ (* (+ (* 3 3) 3) (log x)) (* (+ (* 3 3) 3) (log x))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 218 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (199 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 219 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (199 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 220 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (180 enodes)
* * [misc]simplify:  iters left: 3 (488 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 221 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (365 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 222 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (452 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 223 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (452 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 224 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (403 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 225 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (365 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 226 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (452 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 227 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (452 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 228 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (403 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 229 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (212 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 230 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (219 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (* 3 3) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (* 3 3) (+ 3 3)))))
* * * * [misc]progress:  [ 231 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (219 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (* 3 3) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (* 3 3) (+ 3 3)))))
* * * * [misc]progress:  [ 232 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (207 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* 3 3) (log x)) (+ (* (* 3 3) (log x)) (* (* 3 3) (log x)))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (* 3 3) (log x)) (+ (* (* 3 3) (log x)) (* (* 3 3) (log x)))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 233 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (197 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* 3 (log x)) (+ (+ 3 1) 3)) (+ (* (log x) (* 3 3)) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* 3 (log x)) (+ (+ 3 1) 3)) (+ (* (log x) (* 3 3)) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 234 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (190 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ (+ 1 3) 3) (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ (+ 1 3) 3) (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 235 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (349 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 236 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (349 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 237 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (328 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 238 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (420 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 239 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 240 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 241 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 242 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (420 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 243 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 244 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 245 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 246 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (213 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 1 3) 3) (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 1 3) 3) (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 247 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* * [misc]simplify:  iters left: 3 (454 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 248 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* * [misc]simplify:  iters left: 3 (454 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 249 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* * [misc]simplify:  iters left: 3 (448 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 250 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (452 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (* (* 3 (log x)) (+ (+ 3 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (* (* 3 (log x)) (+ (+ 3 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 251 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (190 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ (+ 1 3) 3) (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ (+ 1 3) 3) (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 252 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (349 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 253 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (349 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 254 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (328 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 255 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (420 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 256 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 257 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 258 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 259 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (420 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 260 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 261 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 262 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 263 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (213 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 1 3) 3) (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 1 3) 3) (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 264 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* * [misc]simplify:  iters left: 3 (454 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 265 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* * [misc]simplify:  iters left: 3 (454 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 266 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* * [misc]simplify:  iters left: 3 (448 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 267 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (452 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (* (* 3 (log x)) (+ (+ 3 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (* (* 3 (log x)) (+ (+ 3 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 268 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (492 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 269 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (391 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 270 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (391 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 271 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (318 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 272 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (393 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 273 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 274 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 275 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 276 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (393 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 277 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 278 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 279 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 280 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 281 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* * [misc]simplify:  iters left: 3 (478 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 282 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* * [misc]simplify:  iters left: 3 (478 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 283 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (421 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 284 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* 3 (* (+ 3 3) (log x))) (* (* 3 (log x)) (+ (+ 1 3) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* 3 (* (+ 3 3) (log x))) (* (* 3 (log x)) (+ (+ 1 3) 3))))
* * * * [misc]progress:  [ 285 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* * [misc]simplify:  iters left: 3 (415 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 286 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))))
* * * * [misc]progress:  [ 287 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))))
* * * * [misc]progress:  [ 288 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (324 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 289 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (343 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 290 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (158 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 291 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (158 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 292 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (376 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x))) (* (* 3 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x))) (* (* 3 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 293 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (343 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 294 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (158 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 295 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (158 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 296 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (376 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x))) (* (* 3 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x))) (* (* 3 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 297 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 3 1) (+ 3 1))) (* (+ (+ 3 1) 1) (* 3 (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 3 1) (+ 3 1))) (* (+ (+ 3 1) 1) (* 3 (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 298 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (+ (log x) (log x))) (* (+ (+ 3 1) 3) (* 3 (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (+ (log x) (log x))) (* (+ (+ 3 1) 3) (* 3 (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 299 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (+ (log x) (log x))) (* (+ (+ 3 1) 3) (* 3 (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (+ (log x) (log x))) (* (+ (+ 3 1) 3) (* 3 (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 300 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (192 enodes)
* * [misc]simplify:  iters left: 3 (494 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 301 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (184 enodes)
* * [misc]simplify:  iters left: 3 (485 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ (+ 3 3) (+ 3 3))) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ (+ 3 3) (+ 3 3))) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 302 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (164 enodes)
* * [misc]simplify:  iters left: 3 (476 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))))
* * * * [misc]progress:  [ 303 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (342 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 304 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (342 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 305 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (304 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (+ 3 3))) (* (* 3 (log x)) (+ 3 (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (+ 3 3))) (* (* 3 (log x)) (+ 3 (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 306 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (325 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 307 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 308 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 309 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 310 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (325 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 311 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 312 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 313 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 314 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 3 3)) (* (* 3 (log x)) (+ (+ 3 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 3 3)) (* (* 3 (log x)) (+ (+ 3 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 315 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (433 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 316 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (433 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 317 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (397 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 318 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (420 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (+ 3 (+ 1 1)) (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (+ 3 (+ 1 1)) (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 319 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (164 enodes)
* * [misc]simplify:  iters left: 3 (476 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))))
* * * * [misc]progress:  [ 320 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (342 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 321 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (342 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 322 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (304 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (+ 3 3))) (* (* 3 (log x)) (+ 3 (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (+ 3 3))) (* (* 3 (log x)) (+ 3 (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 323 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (325 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 324 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 325 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 326 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 327 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (325 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 328 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 329 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 330 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 331 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 3 3)) (* (* 3 (log x)) (+ (+ 3 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 3 3)) (* (* 3 (log x)) (+ (+ 3 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 332 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (433 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 333 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (433 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 334 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (397 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 335 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (420 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (+ 3 (+ 1 1)) (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (+ 3 (+ 1 1)) (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 336 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* * [misc]simplify:  iters left: 3 (422 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))))
* * * * [misc]progress:  [ 337 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (383 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 338 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (383 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 339 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (267 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (+ 3 3))) (* (* (log x) 3) (+ (+ 3 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (+ 3 3))) (* (* (log x) 3) (+ (+ 3 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 340 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (358 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 341 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 342 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 343 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (291 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (+ (* (+ 3 3) (log x)) (* (+ 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (+ (* (+ 3 3) (log x)) (* (+ 3 3) (log x)))))
* * * * [misc]progress:  [ 344 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (358 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 345 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 346 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 347 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (291 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (+ (* (+ 3 3) (log x)) (* (+ 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (+ (* (+ 3 3) (log x)) (* (+ 3 3) (log x)))))
* * * * [misc]progress:  [ 348 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* * [misc]simplify:  iters left: 3 (460 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 349 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* * [misc]simplify:  iters left: 3 (429 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 350 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* * [misc]simplify:  iters left: 3 (429 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 351 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (359 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (+ 1 1)) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (+ 1 1)) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* * * * [misc]progress:  [ 352 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (362 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (+ 1 3) 1) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (+ 1 3) 1) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* * * * [misc]progress:  [ 353 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (425 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (+ 3 3) 1) (* (log x) 3)) (* (log x) (* 3 (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (+ 3 3) 1) (* (log x) 3)) (* (log x) (* 3 (+ 3 3)))))
* * * * [misc]progress:  [ 354 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (319 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))))
* * * * [misc]progress:  [ 355 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (319 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))))
* * * * [misc]progress:  [ 356 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (240 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 (+ 3 3)) (* 3 (log x))) (* 3 (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 (+ 3 3)) (* 3 (log x))) (* 3 (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 357 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (* 3 3)) (+ (* 3 (* (log x) (* 3 3))) (* (log x) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (* 3 3)) (+ (* 3 (* (log x) (* 3 3))) (* (log x) 3))))
* * * * [misc]progress:  [ 358 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (128 enodes)
* * [misc]simplify:  iters left: 3 (342 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 359 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (128 enodes)
* * [misc]simplify:  iters left: 3 (342 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 360 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (257 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 361 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (* 3 3)) (+ (* 3 (* (log x) (* 3 3))) (* (log x) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (* 3 3)) (+ (* 3 (* (log x) (* 3 3))) (* (log x) 3))))
* * * * [misc]progress:  [ 362 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (128 enodes)
* * [misc]simplify:  iters left: 3 (342 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 363 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (128 enodes)
* * [misc]simplify:  iters left: 3 (342 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 364 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (257 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 365 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (* 3 (log x))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (* 3 (log x))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 366 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (373 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (+ 3 3))) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (+ 3 3))) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 367 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (373 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (+ 3 3))) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (+ 3 3))) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 368 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (327 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (* (log x) (+ 1 3)) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (* (log x) (+ 1 3)) 3)))
* * * * [misc]progress:  [ 369 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (290 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (+ (* (log x) (+ 3 3)) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (+ (* (log x) (+ 3 3)) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 370 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (log (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (log (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (489 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (+ (* (+ 1 3) (* (log x) 3)) (* (+ 1 3) (* (log x) 3))) (* (+ 3 (+ 1 1)) (* (log x) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (+ (* (+ 1 3) (* (log x) 3)) (* (+ 1 3) (* (log x) 3))) (* (+ 3 (+ 1 1)) (* (log x) 3))))
* * * * [misc]progress:  [ 371 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (499 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 372 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ 1 3) (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ 1 3) (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 373 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ 1 3) (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ 1 3) (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 374 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 375 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (379 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 376 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) 3) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) 3) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 377 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) 3) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) 3) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 378 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (407 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 379 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (379 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 380 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) 3) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) 3) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 381 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) 3) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) 3) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 382 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (407 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 383 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (214 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* 3 (* (+ 3 3) (log x))))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* 3 (* (+ 3 3) (log x))))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 384 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (226 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* 3 3) (+ (log x) (log x))) (* (* (log x) 3) (+ (+ 3 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* 3 3) (+ (log x) (log x))) (* (* (log x) 3) (+ (+ 3 3) 1))))
* * * * [misc]progress:  [ 385 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (226 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* 3 3) (+ (log x) (log x))) (* (* (log x) 3) (+ (+ 3 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* 3 3) (+ (log x) (log x))) (* (* (log x) 3) (+ (+ 3 3) 1))))
* * * * [misc]progress:  [ 386 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (216 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ (+ 1 3) 3) (* (log x) 3)) (+ (* (* 3 3) (log x)) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ (+ 1 3) 3) (* (log x) 3)) (+ (* (* 3 3) (log x)) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 387 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ (* 3 3) 3)) (+ (* (+ 3 3) (log x)) (* (log x) (* 3 3)))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ (* 3 3) 3)) (+ (* (+ 3 3) (log x)) (* (log x) (* 3 3)))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 388 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (+ (* (log x) (+ (* 3 3) 3)) (* (log x) (+ (+ 3 3) (* 3 3))))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (+ (* (log x) (+ (* 3 3) 3)) (* (log x) (+ (+ 3 3) (* 3 3))))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 389 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (371 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 390 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (371 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 391 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 392 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (373 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 393 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 394 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 395 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* * [misc]simplify:  iters left: 3 (295 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 1) 3) (+ (+ 3 1) (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 1) 3) (+ (+ 3 1) (+ 3 1)))))
* * * * [misc]progress:  [ 396 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (373 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 397 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 398 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 399 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* * [misc]simplify:  iters left: 3 (295 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 1) 3) (+ (+ 3 1) (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 1) 3) (+ (+ 3 1) (+ 3 1)))))
* * * * [misc]progress:  [ 400 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (217 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ (+ 3 1) 3) (* (log x) 3)) (* (* (log x) 3) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ (+ 3 1) 3) (* (log x) 3)) (* (* (log x) 3) (+ 3 3))))
* * * * [misc]progress:  [ 401 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (162 enodes)
* * [misc]simplify:  iters left: 3 (453 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 402 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (162 enodes)
* * [misc]simplify:  iters left: 3 (453 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 403 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (430 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 404 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* * [misc]simplify:  iters left: 3 (443 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (log x) 3) (+ (+ 3 1) 3)) (* (log x) (+ (* 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (log x) 3) (+ (+ 3 1) 3)) (* (log x) (+ (* 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 405 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (+ (* (log x) (+ (* 3 3) 3)) (* (log x) (+ (+ 3 3) (* 3 3))))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (+ (* (log x) (+ (* 3 3) 3)) (* (log x) (+ (+ 3 3) (* 3 3))))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 406 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (371 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 407 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (371 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 408 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 409 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (373 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 410 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 411 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 412 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* * [misc]simplify:  iters left: 3 (295 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 1) 3) (+ (+ 3 1) (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 1) 3) (+ (+ 3 1) (+ 3 1)))))
* * * * [misc]progress:  [ 413 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (373 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 414 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 415 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 416 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* * [misc]simplify:  iters left: 3 (295 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 1) 3) (+ (+ 3 1) (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 1) 3) (+ (+ 3 1) (+ 3 1)))))
* * * * [misc]progress:  [ 417 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (217 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ (+ 3 1) 3) (* (log x) 3)) (* (* (log x) 3) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ (+ 3 1) 3) (* (log x) 3)) (* (* (log x) 3) (+ 3 3))))
* * * * [misc]progress:  [ 418 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (162 enodes)
* * [misc]simplify:  iters left: 3 (453 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 419 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (162 enodes)
* * [misc]simplify:  iters left: 3 (453 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 420 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (430 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 421 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* * [misc]simplify:  iters left: 3 (443 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (log x) 3) (+ (+ 3 1) 3)) (* (log x) (+ (* 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (log x) 3) (+ (+ 3 1) 3)) (* (log x) (+ (* 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 422 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* * [misc]simplify:  iters left: 3 (417 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) 1) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) 1) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 423 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 424 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 425 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (267 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (log x) (* 3 3)) (* (+ (+ 1 3) 1) (* (log x) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (log x) (* 3 3)) (* (+ (+ 1 3) 1) (* (log x) (+ 3 3)))))
* * * * [misc]progress:  [ 426 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* * [misc]simplify:  iters left: 3 (396 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) 1) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) 1) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 427 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 428 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 429 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (305 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 1 3) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 1 3) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 430 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* * [misc]simplify:  iters left: 3 (396 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) 1) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) 1) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 431 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 432 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 433 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (305 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 1 3) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 1 3) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 434 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* * [misc]simplify:  iters left: 3 (494 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)))
* * * * [misc]progress:  [ 435 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (173 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3))) (* (* 3 (log x)) (+ 1 (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3))) (* (* 3 (log x)) (+ 1 (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 436 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (173 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3))) (* (* 3 (log x)) (+ 1 (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3))) (* (* 3 (log x)) (+ 1 (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 437 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (405 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 438 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (130 enodes)
* * [misc]simplify:  iters left: 3 (398 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 3 (+ 1 3))) (* 3 (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 3 (+ 1 3))) (* 3 (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 439 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (+ (* (log x) (+ 3 (* 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (+ (* (log x) (+ 3 (* 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 440 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (200 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 3 1) (log x)) (+ 3 3))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 3 1) (log x)) (+ 3 3))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 441 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (200 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 3 1) (log x)) (+ 3 3))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 3 1) (log x)) (+ 3 3))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 442 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (log x))) (+ (* (+ (* 3 3) 3) (log x)) (* (+ (* 3 3) 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (log x))) (+ (* (+ (* 3 3) 3) (log x)) (* (+ (* 3 3) 3) (log x)))))
* * * * [misc]progress:  [ 443 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (378 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 444 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* * [misc]simplify:  iters left: 3 (494 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 445 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* * [misc]simplify:  iters left: 3 (494 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 446 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (408 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 447 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (378 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 448 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* * [misc]simplify:  iters left: 3 (494 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 449 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* * [misc]simplify:  iters left: 3 (494 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 450 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (408 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 451 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (211 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (+ 3 3))) (* (+ (+ 3 1) 3) (* (log x) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (+ 3 3))) (* (+ (+ 3 1) 3) (* (log x) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 452 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 453 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 454 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (205 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 455 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (196 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* 3 (log x)) (+ (+ 3 1) 3)) (+ (* (log x) (* 3 3)) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* 3 (log x)) (+ (+ 3 1) 3)) (+ (* (log x) (* 3 3)) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 456 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (+ (* (log x) (+ (* 3 3) 3)) (* (log x) (+ (* 3 3) 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (+ (* (log x) (+ (* 3 3) 3)) (* (log x) (+ (* 3 3) 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 457 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 458 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 459 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (350 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) 3) (+ (+ 1 1) (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) 3) (+ (+ 1 1) (+ 3 1)))))
* * * * [misc]progress:  [ 460 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ 1 (+ 3 1)) (+ (+ 3 1) (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ 1 (+ 3 1)) (+ (+ 3 1) (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 461 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* * * * [misc]progress:  [ 462 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* * * * [misc]progress:  [ 463 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (346 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 464 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ 1 (+ 3 1)) (+ (+ 3 1) (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ 1 (+ 3 1)) (+ (+ 3 1) (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 465 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* * * * [misc]progress:  [ 466 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* * * * [misc]progress:  [ 467 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (346 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 468 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (214 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 469 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 470 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 471 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (465 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 472 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (158 enodes)
* * [misc]simplify:  iters left: 3 (456 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) 3) (+ 3 3)) (* (+ (+ 3 1) 3) (* (log x) 3))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) 3) (+ 3 3)) (* (+ (+ 3 1) 3) (* (log x) 3))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 473 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (+ (* (log x) (+ (* 3 3) 3)) (* (log x) (+ (* 3 3) 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (+ (* (log x) (+ (* 3 3) 3)) (* (log x) (+ (* 3 3) 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 474 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 475 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 476 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (350 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) 3) (+ (+ 1 1) (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) 3) (+ (+ 1 1) (+ 3 1)))))
* * * * [misc]progress:  [ 477 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ 1 (+ 3 1)) (+ (+ 3 1) (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ 1 (+ 3 1)) (+ (+ 3 1) (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 478 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* * * * [misc]progress:  [ 479 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* * * * [misc]progress:  [ 480 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (346 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 481 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ 1 (+ 3 1)) (+ (+ 3 1) (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ 1 (+ 3 1)) (+ (+ 3 1) (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 482 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* * * * [misc]progress:  [ 483 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ (+ 1 1) 3))))
* * * * [misc]progress:  [ 484 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (346 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 485 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (214 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 486 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 487 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 488 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (465 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 489 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (158 enodes)
* * [misc]simplify:  iters left: 3 (456 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) 3) (+ 3 3)) (* (+ (+ 3 1) 3) (* (log x) 3))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) 3) (+ 3 3)) (* (+ (+ 3 1) 3) (* (log x) 3))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 490 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (493 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 491 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (380 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 492 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (380 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 493 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (309 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ 3 3)) (* (log x) (+ 3 3))) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ 3 3)) (* (log x) (+ 3 3))) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 494 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 1) (+ 3 1)) (+ (+ 3 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 1) (+ 3 1)) (+ (+ 3 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 495 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* * * * [misc]progress:  [ 496 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* * * * [misc]progress:  [ 497 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (313 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 498 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 1) (+ 3 1)) (+ (+ 3 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 1) (+ 3 1)) (+ (+ 3 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 499 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* * * * [misc]progress:  [ 500 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* * * * [misc]progress:  [ 501 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (313 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 502 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (199 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (+ (log x) (log x))) (* (* (log x) 3) (+ (+ 3 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (+ (log x) (log x))) (* (* (log x) 3) (+ (+ 3 1) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 503 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* * [misc]simplify:  iters left: 3 (491 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 504 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* * [misc]simplify:  iters left: 3 (491 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 505 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (393 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ 1 (+ 3 1)) (+ (+ 3 1) (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ 1 (+ 3 1)) (+ (+ 3 1) (+ 3 1)))))
* * * * [misc]progress:  [ 506 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (399 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (* 3 3) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (* 3 3) (+ 3 3)))))
* * * * [misc]progress:  [ 507 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (201 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ 3 (* 3 3)) (log x)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ 3 (* 3 3)) (log x)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 508 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) (+ 3 3))) (* (+ 3 1) (* (log x) (+ 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) (+ 3 3))) (* (+ 3 1) (* (log x) (+ 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 509 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) (+ 3 3))) (* (+ 3 1) (* (log x) (+ 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) (+ 3 3))) (* (+ 3 1) (* (log x) (+ 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 510 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (410 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 511 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (387 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 512 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 513 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 514 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (424 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (+ 3 1) 3) (* (log x) 3)) (* (* (log x) 3) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (+ 3 1) 3) (* (log x) 3)) (* (* (log x) 3) (+ 3 3))))
* * * * [misc]progress:  [ 515 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (387 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 516 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 517 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 518 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (424 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (+ 3 1) 3) (* (log x) 3)) (* (* (log x) 3) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (+ 3 1) 3) (* (log x) 3)) (* (* (log x) 3) (+ 3 3))))
* * * * [misc]progress:  [ 519 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (210 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (* 3 3) (+ 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (* 3 3) (+ 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 520 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (218 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (log x) (+ 3 3))) (* (* (log x) 3) (+ (+ 3 1) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (log x) (+ 3 3))) (* (* (log x) 3) (+ (+ 3 1) 3))))
* * * * [misc]progress:  [ 521 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (218 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (log x) (+ 3 3))) (* (* (log x) 3) (+ (+ 3 1) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (log x) (+ 3 3))) (* (* (log x) 3) (+ (+ 3 1) 3))))
* * * * [misc]progress:  [ 522 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (204 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* 3 3) (log x)) (* (* 3 3) (log x))) (* (* 3 3) (log x))) (+ (* (log x) (+ 3 3)) (* (log x) (+ 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* 3 3) (log x)) (* (* 3 3) (log x))) (* (* 3 3) (log x))) (+ (* (log x) (+ 3 3)) (* (log x) (+ 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 523 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* 3 (log x)) (+ 3 (+ 3 1))) (+ (* (* 3 3) (log x)) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* 3 (log x)) (+ 3 (+ 3 1))) (+ (* (* 3 3) (log x)) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 524 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* 3 3) 3) (log x)) (* (log x) (+ (* 3 3) (+ 3 3)))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* 3 3) 3) (log x)) (* (log x) (+ (* 3 3) (+ 3 3)))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 525 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (370 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x)))))
* * * * [misc]progress:  [ 526 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (370 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x)))))
* * * * [misc]progress:  [ 527 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (328 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 528 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 529 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 530 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 531 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))))
* * * * [misc]progress:  [ 532 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 533 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 534 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 535 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))))
* * * * [misc]progress:  [ 536 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (212 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 537 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (485 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 538 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (485 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 539 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (449 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 540 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* * [misc]simplify:  iters left: 3 (479 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (+ 1 1)) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (+ 1 1)) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* * * * [misc]progress:  [ 541 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* 3 3) 3) (log x)) (* (log x) (+ (* 3 3) (+ 3 3)))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* 3 3) 3) (log x)) (* (log x) (+ (* 3 3) (+ 3 3)))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 542 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (370 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x)))))
* * * * [misc]progress:  [ 543 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (370 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x)))))
* * * * [misc]progress:  [ 544 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (328 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 545 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 546 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 547 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 548 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))))
* * * * [misc]progress:  [ 549 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 550 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 551 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 552 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))))
* * * * [misc]progress:  [ 553 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (212 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 554 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (485 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 555 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (485 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 556 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (449 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 557 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* * [misc]simplify:  iters left: 3 (479 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (+ 1 1)) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (+ 1 1)) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* * * * [misc]progress:  [ 558 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 559 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (416 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 560 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (416 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 561 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* * [misc]simplify:  iters left: 3 (302 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 562 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (419 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 563 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 564 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 565 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (309 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 3 1) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 3 1) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 566 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (419 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 3 1) (+ 3 1)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 567 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 568 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 569 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (309 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 3 1) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 3 1) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 570 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (185 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 3 1) 3)) (* 3 (* (log x) (+ 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 3 1) 3)) (* 3 (* (log x) (+ 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 571 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (172 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (* 3 (log x)) (+ (+ 3 1) 1))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (* 3 (log x)) (+ (+ 3 1) 1))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 572 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (172 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (* 3 (log x)) (+ (+ 3 1) 1))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (* 3 (log x)) (+ (+ 3 1) 1))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 573 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (384 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 (+ 3 1)) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 (+ 3 1)) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* * * * [misc]progress:  [ 574 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (401 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ 1 (+ 3 1)) (* (log x) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ 1 (+ 3 1)) (* (log x) (+ 3 3)))))
* * * * [misc]progress:  [ 575 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (204 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (+ (* (+ (* 3 3) 3) (log x)) (* (+ (* 3 3) 3) (log x))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (+ (* (+ (* 3 3) 3) (log x)) (* (+ (* 3 3) 3) (log x))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 576 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (199 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 577 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (199 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 578 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (180 enodes)
* * [misc]simplify:  iters left: 3 (488 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 579 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (365 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 580 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (452 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 581 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (452 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 582 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (403 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 583 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (365 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 584 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (452 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 585 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (452 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 586 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (403 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 587 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (212 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 588 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (219 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (* 3 3) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (* 3 3) (+ 3 3)))))
* * * * [misc]progress:  [ 589 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (219 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (* 3 3) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (* 3 3) (+ 3 3)))))
* * * * [misc]progress:  [ 590 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (207 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* 3 3) (log x)) (+ (* (* 3 3) (log x)) (* (* 3 3) (log x)))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (* 3 3) (log x)) (+ (* (* 3 3) (log x)) (* (* 3 3) (log x)))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 591 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (197 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* 3 (log x)) (+ (+ 3 1) 3)) (+ (* (log x) (* 3 3)) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* 3 (log x)) (+ (+ 3 1) 3)) (+ (* (log x) (* 3 3)) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 592 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (190 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ (+ 1 3) 3) (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ (+ 1 3) 3) (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 593 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (349 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 594 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (349 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 595 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (328 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 596 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (420 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 597 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 598 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 599 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 600 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (420 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 601 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 602 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 603 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 604 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (213 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 1 3) 3) (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 1 3) 3) (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 605 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* * [misc]simplify:  iters left: 3 (454 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 606 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* * [misc]simplify:  iters left: 3 (454 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 607 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* * [misc]simplify:  iters left: 3 (448 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 608 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (452 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (* (* 3 (log x)) (+ (+ 3 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (* (* 3 (log x)) (+ (+ 3 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 609 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (190 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ (+ 1 3) 3) (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ (+ 1 3) 3) (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 610 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (349 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 611 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (349 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 612 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (328 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 613 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (420 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 614 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 615 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 616 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 617 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (420 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 618 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 619 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 620 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 3) 1))))
* * * * [misc]progress:  [ 621 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (213 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 1 3) 3) (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 1 3) 3) (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 622 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* * [misc]simplify:  iters left: 3 (454 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 623 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* * [misc]simplify:  iters left: 3 (454 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 624 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* * [misc]simplify:  iters left: 3 (448 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 625 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (452 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (* (* 3 (log x)) (+ (+ 3 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (* (* 3 (log x)) (+ (+ 3 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 626 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (492 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 627 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (391 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 628 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (391 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 629 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (318 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 630 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (393 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 631 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 632 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 633 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 634 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (393 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 635 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 636 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 637 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 638 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 639 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* * [misc]simplify:  iters left: 3 (478 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 640 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* * [misc]simplify:  iters left: 3 (478 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 641 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (421 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 642 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* 3 (* (+ 3 3) (log x))) (* (* 3 (log x)) (+ (+ 1 3) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* 3 (* (+ 3 3) (log x))) (* (* 3 (log x)) (+ (+ 1 3) 3))))
* * * * [misc]progress:  [ 643 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* * [misc]simplify:  iters left: 3 (415 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 644 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))))
* * * * [misc]progress:  [ 645 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))))
* * * * [misc]progress:  [ 646 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (324 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 647 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (343 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 648 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (158 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 649 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (158 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 650 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (376 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x))) (* (* 3 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x))) (* (* 3 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 651 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (343 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 652 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (158 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 653 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (158 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 654 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (376 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x))) (* (* 3 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 3 3) (* 3 3)) (+ (log x) (log x))) (* (* 3 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 655 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 3 1) (+ 3 1))) (* (+ (+ 3 1) 1) (* 3 (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 3 1) (+ 3 1))) (* (+ (+ 3 1) 1) (* 3 (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 656 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (+ (log x) (log x))) (* (+ (+ 3 1) 3) (* 3 (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (+ (log x) (log x))) (* (+ (+ 3 1) 3) (* 3 (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 657 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (+ (log x) (log x))) (* (+ (+ 3 1) 3) (* 3 (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (+ (log x) (log x))) (* (+ (+ 3 1) 3) (* 3 (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 658 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (192 enodes)
* * [misc]simplify:  iters left: 3 (494 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 659 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (184 enodes)
* * [misc]simplify:  iters left: 3 (485 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ (+ 3 3) (+ 3 3))) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ (+ 3 3) (+ 3 3))) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 660 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (164 enodes)
* * [misc]simplify:  iters left: 3 (476 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))))
* * * * [misc]progress:  [ 661 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (342 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 662 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (342 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 663 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (304 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (+ 3 3))) (* (* 3 (log x)) (+ 3 (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (+ 3 3))) (* (* 3 (log x)) (+ 3 (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 664 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (325 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 665 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 666 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 667 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 668 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (325 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 669 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 670 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 671 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 672 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 3 3)) (* (* 3 (log x)) (+ (+ 3 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 3 3)) (* (* 3 (log x)) (+ (+ 3 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 673 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (433 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 674 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (433 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 675 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (397 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 676 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (420 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (+ 3 (+ 1 1)) (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (+ 3 (+ 1 1)) (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 677 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (164 enodes)
* * [misc]simplify:  iters left: 3 (476 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))))
* * * * [misc]progress:  [ 678 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (342 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 679 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (342 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 680 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (304 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (+ 3 3))) (* (* 3 (log x)) (+ 3 (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (+ 3 3))) (* (* 3 (log x)) (+ 3 (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 681 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (325 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 682 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 683 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 684 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 685 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (325 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 686 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 687 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 688 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 689 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 3 3)) (* (* 3 (log x)) (+ (+ 3 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 3 3)) (* (* 3 (log x)) (+ (+ 3 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 690 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (433 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 691 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (433 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 3 (+ 1 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 3 (+ 1 1)))))
* * * * [misc]progress:  [ 692 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (397 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 693 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (420 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (+ 3 (+ 1 1)) (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (+ 3 (+ 1 1)) (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 694 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* * [misc]simplify:  iters left: 3 (422 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))))
* * * * [misc]progress:  [ 695 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (383 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 696 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (383 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 697 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (267 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (+ 3 3))) (* (* (log x) 3) (+ (+ 3 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (+ 3 3))) (* (* (log x) 3) (+ (+ 3 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 698 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (358 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 699 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 700 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 701 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (291 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (+ (* (+ 3 3) (log x)) (* (+ 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (+ (* (+ 3 3) (log x)) (* (+ 3 3) (log x)))))
* * * * [misc]progress:  [ 702 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (358 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 703 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 704 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 705 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (291 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (+ (* (+ 3 3) (log x)) (* (+ 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (+ (* (+ 3 3) (log x)) (* (+ 3 3) (log x)))))
* * * * [misc]progress:  [ 706 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* * [misc]simplify:  iters left: 3 (460 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 707 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* * [misc]simplify:  iters left: 3 (429 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 708 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* * [misc]simplify:  iters left: 3 (429 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 709 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (359 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (+ 1 1)) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 3 (+ 1 1)) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* * * * [misc]progress:  [ 710 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (362 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (+ 1 3) 1) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (+ 1 3) 1) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* * * * [misc]progress:  [ 711 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (425 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (+ 3 3) 1) (* (log x) 3)) (* (log x) (* 3 (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ (+ 3 3) 1) (* (log x) 3)) (* (log x) (* 3 (+ 3 3)))))
* * * * [misc]progress:  [ 712 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (319 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))))
* * * * [misc]progress:  [ 713 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (319 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))))
* * * * [misc]progress:  [ 714 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (240 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 (+ 3 3)) (* 3 (log x))) (* 3 (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 (+ 3 3)) (* 3 (log x))) (* 3 (* (+ 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 715 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (* 3 3)) (+ (* 3 (* (log x) (* 3 3))) (* (log x) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (* 3 3)) (+ (* 3 (* (log x) (* 3 3))) (* (log x) 3))))
* * * * [misc]progress:  [ 716 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (128 enodes)
* * [misc]simplify:  iters left: 3 (342 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 717 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (128 enodes)
* * [misc]simplify:  iters left: 3 (342 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 718 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (257 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 719 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (* 3 3)) (+ (* 3 (* (log x) (* 3 3))) (* (log x) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (* 3 3)) (+ (* 3 (* (log x) (* 3 3))) (* (log x) 3))))
* * * * [misc]progress:  [ 720 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (128 enodes)
* * [misc]simplify:  iters left: 3 (342 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 721 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (128 enodes)
* * [misc]simplify:  iters left: 3 (342 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ 3 (* 3 3))) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 722 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (257 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) 3) (log x)) (* 3 (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 723 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (* 3 (log x))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (* 3 (log x))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 724 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (373 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (+ 3 3))) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (+ 3 3))) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 725 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (373 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (+ 3 3))) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (+ 3 3))) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 726 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (327 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (* (log x) (+ 1 3)) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (* (log x) (+ 1 3)) 3)))
* * * * [misc]progress:  [ 727 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (290 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (+ (* (log x) (+ 3 3)) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (+ (* (log x) (+ 3 3)) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 728 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (log (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (log (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (489 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (+ (* (+ 1 3) (* (log x) 3)) (* (+ 1 3) (* (log x) 3))) (* (+ 3 (+ 1 1)) (* (log x) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (+ (* (+ 1 3) (* (log x) 3)) (* (+ 1 3) (* (log x) 3))) (* (+ 3 (+ 1 1)) (* (log x) 3))))
* * * * [misc]progress:  [ 729 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (log x) 3) (+ (+ 3 1) (+ 3 1))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (log x) 3) (+ (+ 3 1) (+ 3 1))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 730 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (71 enodes)
* * [misc]simplify:  iters left: 4 (230 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 3 1) (+ 3 1))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 3 1) (+ 3 1))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 731 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (71 enodes)
* * [misc]simplify:  iters left: 4 (230 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 3 1) (+ 3 1))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 3 1) (+ 3 1))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 732 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 733 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 3 1) (log x)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 3 1) (log x)) (+ 3 3))))
* * * * [misc]progress:  [ 734 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (195 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 735 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (195 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 736 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 737 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 3 1) (log x)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 3 1) (log x)) (+ 3 3))))
* * * * [misc]progress:  [ 738 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (195 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 739 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (195 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 740 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 741 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (238 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (+ (log x) (log x))) (* (* (log x) 3) (+ (+ 3 1) 3))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (+ (log x) (log x))) (* (* (log x) 3) (+ (+ 3 1) 3))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 742 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (73 enodes)
* * [misc]simplify:  iters left: 4 (247 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (* (* 3 (log x)) (+ (+ 3 1) (+ (+ 3 3) 1)))) (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (* (* 3 (log x)) (+ (+ 3 1) (+ (+ 3 3) 1)))) (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 743 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (73 enodes)
* * [misc]simplify:  iters left: 4 (247 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (* (* 3 (log x)) (+ (+ 3 1) (+ (+ 3 3) 1)))) (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (* (* 3 (log x)) (+ (+ 3 1) (+ (+ 3 3) 1)))) (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 744 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (242 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (* (+ (+ 3 3) 1) (* 3 (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (* (+ (+ 3 3) 1) (* 3 (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 745 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (193 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ 3 (* 3 3)) (log x)) (+ (* (+ 3 3) (log x)) (* (log x) (* 3 3)))) (* (+ 3 (* 3 3)) (log x))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ 3 (* 3 3)) (log x)) (+ (* (+ 3 3) (log x)) (* (log x) (* 3 3)))) (* (+ 3 (* 3 3)) (log x))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 746 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (73 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (+ 3 3) (log x))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (+ 3 3) (log x))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 747 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (160 enodes)
* * [misc]simplify:  iters left: 3 (496 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 748 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (160 enodes)
* * [misc]simplify:  iters left: 3 (496 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 749 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* * [misc]simplify:  iters left: 3 (442 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (* (* (log x) 3) (+ (+ 1 (+ 1 3)) (+ (+ 1 3) (+ 1 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (* (* (log x) 3) (+ (+ 1 (+ 1 3)) (+ (+ 1 3) (+ 1 3)))))
* * * * [misc]progress:  [ 750 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (68 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* * [misc]simplify:  iters left: 3 (496 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* * * * [misc]progress:  [ 751 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (+ (+ 1 3) 1) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (+ (+ 1 3) 1) (* 3 (log x)))))
* * * * [misc]progress:  [ 752 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (+ (+ 1 3) 1) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (+ (+ 1 3) 1) (* 3 (log x)))))
* * * * [misc]progress:  [ 753 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (log x) 3) (+ (+ 3 (+ 1 1)) (+ (+ 1 3) (+ 1 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (log x) 3) (+ (+ 3 (+ 1 1)) (+ (+ 1 3) (+ 1 3)))))
* * * * [misc]progress:  [ 754 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (68 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* * [misc]simplify:  iters left: 3 (496 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* * * * [misc]progress:  [ 755 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (+ (+ 1 3) 1) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (+ (+ 1 3) 1) (* 3 (log x)))))
* * * * [misc]progress:  [ 756 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (+ (+ 1 3) 1) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (+ (+ 1 3) 1) (* 3 (log x)))))
* * * * [misc]progress:  [ 757 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (log x) 3) (+ (+ 3 (+ 1 1)) (+ (+ 1 3) (+ 1 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (log x) 3) (+ (+ 3 (+ 1 1)) (+ (+ 1 3) (+ 1 3)))))
* * * * [misc]progress:  [ 758 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (73 enodes)
* * [misc]simplify:  iters left: 4 (238 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3) (+ (* (+ (+ 1 3) 3) (* (log x) 3)) (* (* 3 3) (+ (log x) (log x)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3) (+ (* (+ (+ 1 3) 3) (* (log x) 3)) (* (* 3 3) (+ (log x) (log x)))))
* * * * [misc]progress:  [ 759 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (186 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 1 3)) (+ 3 3)) (* (* (log x) 3) (+ (+ 1 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 1 3)) (+ 3 3)) (* (* (log x) 3) (+ (+ 1 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 760 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (186 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 1 3)) (+ 3 3)) (* (* (log x) 3) (+ (+ 1 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 1 3)) (+ 3 3)) (* (* (log x) 3) (+ (+ 1 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 761 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (185 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 1 (+ 1 3))) (* (+ 1 3) (* (+ 3 3) (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 1 (+ 1 3))) (* (+ 1 3) (* (+ 3 3) (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 762 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (* (log x) 3) (+ 3 (+ 1 3))) (+ (* (log x) (* 3 3)) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (* (log x) 3) (+ 3 (+ 1 3))) (+ (* (log x) (* 3 3)) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 763 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (73 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (+ 3 3) (log x))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (+ 3 3) (log x))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 764 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (160 enodes)
* * [misc]simplify:  iters left: 3 (496 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 765 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (160 enodes)
* * [misc]simplify:  iters left: 3 (496 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 766 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* * [misc]simplify:  iters left: 3 (442 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (* (* (log x) 3) (+ (+ 1 (+ 1 3)) (+ (+ 1 3) (+ 1 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (* (* (log x) 3) (+ (+ 1 (+ 1 3)) (+ (+ 1 3) (+ 1 3)))))
* * * * [misc]progress:  [ 767 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (68 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* * [misc]simplify:  iters left: 3 (496 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* * * * [misc]progress:  [ 768 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (+ (+ 1 3) 1) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (+ (+ 1 3) 1) (* 3 (log x)))))
* * * * [misc]progress:  [ 769 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (+ (+ 1 3) 1) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (+ (+ 1 3) 1) (* 3 (log x)))))
* * * * [misc]progress:  [ 770 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (log x) 3) (+ (+ 3 (+ 1 1)) (+ (+ 1 3) (+ 1 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (log x) 3) (+ (+ 3 (+ 1 1)) (+ (+ 1 3) (+ 1 3)))))
* * * * [misc]progress:  [ 771 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (68 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* * [misc]simplify:  iters left: 3 (496 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* * * * [misc]progress:  [ 772 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (+ (+ 1 3) 1) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (+ (+ 1 3) 1) (* 3 (log x)))))
* * * * [misc]progress:  [ 773 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (+ (+ 1 3) 1) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (+ (+ 1 3) 1) (* 3 (log x)))))
* * * * [misc]progress:  [ 774 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (log x) 3) (+ (+ 3 (+ 1 1)) (+ (+ 1 3) (+ 1 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (log x) 3) (+ (+ 3 (+ 1 1)) (+ (+ 1 3) (+ 1 3)))))
* * * * [misc]progress:  [ 775 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (73 enodes)
* * [misc]simplify:  iters left: 4 (238 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3) (+ (* (+ (+ 1 3) 3) (* (log x) 3)) (* (* 3 3) (+ (log x) (log x)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3) (+ (* (+ (+ 1 3) 3) (* (log x) 3)) (* (* 3 3) (+ (log x) (log x)))))
* * * * [misc]progress:  [ 776 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (186 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 1 3)) (+ 3 3)) (* (* (log x) 3) (+ (+ 1 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 1 3)) (+ 3 3)) (* (* (log x) 3) (+ (+ 1 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 777 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (186 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 1 3)) (+ 3 3)) (* (* (log x) 3) (+ (+ 1 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 1 3)) (+ 3 3)) (* (* (log x) 3) (+ (+ 1 3) 1))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 778 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (185 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 1 (+ 1 3))) (* (+ 1 3) (* (+ 3 3) (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 1 (+ 1 3))) (* (+ 1 3) (* (+ 3 3) (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 779 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (* (log x) 3) (+ 3 (+ 1 3))) (+ (* (log x) (* 3 3)) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (* (log x) 3) (+ 3 (+ 1 3))) (+ (* (log x) (* 3 3)) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 780 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (68 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (* 3 (log x)) (+ (+ 3 1) 1))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (* 3 (log x)) (+ (+ 3 1) 1))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 781 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 782 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (* (log x) (+ 3 1)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 783 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (415 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (+ (+ 3 3) (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (+ (+ 3 3) (* 3 3)) (log x))))
* * * * [misc]progress:  [ 784 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (173 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ (+ 3 1) 1) (* 3 (log x))) (* (+ 3 1) (* (+ 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ (+ 3 1) 1) (* 3 (log x))) (* (+ 3 1) (* (+ 3 3) (log x)))))
* * * * [misc]progress:  [ 785 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 786 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 787 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (448 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 3 1) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 3 1) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 788 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (173 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ (+ 3 1) 1) (* 3 (log x))) (* (+ 3 1) (* (+ 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ (+ 3 1) 1) (* 3 (log x))) (* (+ 3 1) (* (+ 3 3) (log x)))))
* * * * [misc]progress:  [ 789 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 790 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (* (* (log x) 3) (+ (+ (+ 3 1) 3) (+ 3 1)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 791 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (448 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 3 1) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 3 1) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 792 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (216 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* 3 (log x)) (+ 3 (+ 3 1))) (* (* 3 3) (+ (log x) (log x)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* 3 (log x)) (+ 3 (+ 3 1))) (* (* 3 3) (+ (log x) (log x)))))
* * * * [misc]progress:  [ 793 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (197 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 3 1) 1)) (* (+ 3 1) (* (+ 3 3) (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 3 1) 1)) (* (+ 3 1) (* (+ 3 3) (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 794 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (197 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 3 1) 1)) (* (+ 3 1) (* (+ 3 3) (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 3 1) 1)) (* (+ 3 1) (* (+ 3 3) (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 795 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 3 1) (+ 3 1))) (+ (* (log x) (+ 3 3)) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 3 1) (+ 3 1))) (+ (* (log x) (+ 3 3)) (* (* 3 3) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 796 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* 3 (log x)) (+ 3 (+ 3 1))) (* (+ (+ 3 1) 1) (* 3 (log x)))) (* 3 (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (* 3 (log x)) (+ 3 (+ 3 1))) (* (+ (+ 3 1) 1) (* 3 (log x)))) (* 3 (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 797 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (227 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 798 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (68 enodes)
* * [misc]simplify:  iters left: 4 (228 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (* 3 3) (+ 3 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (* 3 3) (+ 3 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 799 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (68 enodes)
* * [misc]simplify:  iters left: 4 (228 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (* 3 3) (+ 3 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (* 3 3) (+ 3 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 800 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ 3 (* 3 3))) (* (log x) (+ (* 3 3) (+ 3 3)))) (* (log x) (+ 3 (* 3 3)))) (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ 3 (* 3 3))) (* (log x) (+ (* 3 3) (+ 3 3)))) (* (log x) (+ 3 (* 3 3)))) (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 801 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ 1 3) (* (log x) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ 1 3) (* (log x) (+ 3 3)))))
* * * * [misc]progress:  [ 802 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (190 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 803 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (190 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 804 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 805 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ 1 3) (* (log x) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ 1 3) (* (log x) (+ 3 3)))))
* * * * [misc]progress:  [ 806 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (190 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 807 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (190 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 808 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 809 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (235 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) 3) (+ 3 3)) (* (+ (+ 1 3) 3) (* (log x) 3))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) 3) (+ 3 3)) (* (+ (+ 1 3) 3) (* (log x) 3))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 810 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (244 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 811 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (244 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 812 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (229 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* 3 3) (log x)) (* (* 3 3) (log x))) (* (* 3 3) (log x))) (+ (* (log x) (+ 3 3)) (* (log x) (+ 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* 3 3) (log x)) (* (* 3 3) (log x))) (* (* 3 3) (log x))) (+ (* (log x) (+ 3 3)) (* (log x) (+ 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 813 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (* (log x) 3) (+ (+ 1 3) 3)) (+ (* (* 3 3) (log x)) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* (* (log x) 3) (+ (+ 1 3) 3)) (+ (* (* 3 3) (log x)) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 814 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (215 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (+ (* (+ 3 (* 3 3)) (log x)) (* (+ 3 (* 3 3)) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (+ (* (+ 3 (* 3 3)) (log x)) (* (+ 3 (* 3 3)) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 815 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 816 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 817 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 1) 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 1) 3))))
* * * * [misc]progress:  [ 818 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (493 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ 1 (+ 1 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ 1 (+ 1 3)))))
* * * * [misc]progress:  [ 819 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))))
* * * * [misc]progress:  [ 820 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))))
* * * * [misc]progress:  [ 821 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (467 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* * * * [misc]progress:  [ 822 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (493 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ 1 (+ 1 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ 1 (+ 1 3)))))
* * * * [misc]progress:  [ 823 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))))
* * * * [misc]progress:  [ 824 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))))
* * * * [misc]progress:  [ 825 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (467 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* * * * [misc]progress:  [ 826 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (235 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (+ (log x) (log x))) (* (+ (+ 1 3) 3) (* 3 (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (+ (log x) (log x))) (* (+ (+ 1 3) 3) (* 3 (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 827 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (187 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 828 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (187 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 829 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (186 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 1 3)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 1 3)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 830 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (182 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (+ (* (+ 1 (+ 1 3)) (* 3 (log x))) (* (* 3 (log x)) (+ (+ 1 3) 3))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (+ (* (+ 1 (+ 1 3)) (* 3 (log x))) (* (* 3 (log x)) (+ (+ 1 3) 3))) (* 3 (log x))))
* * * * [misc]progress:  [ 831 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (215 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (+ (* (+ 3 (* 3 3)) (log x)) (* (+ 3 (* 3 3)) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (+ (* (+ 3 (* 3 3)) (log x)) (* (+ 3 (* 3 3)) (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 832 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 833 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 834 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 1) 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ (+ 1 1) 3))))
* * * * [misc]progress:  [ 835 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (493 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ 1 (+ 1 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ 1 (+ 1 3)))))
* * * * [misc]progress:  [ 836 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))))
* * * * [misc]progress:  [ 837 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))))
* * * * [misc]progress:  [ 838 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (467 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* * * * [misc]progress:  [ 839 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (493 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ 1 (+ 1 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) (+ 1 (+ 1 3)))))
* * * * [misc]progress:  [ 840 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))))
* * * * [misc]progress:  [ 841 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))))
* * * * [misc]progress:  [ 842 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (467 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ (* 3 3) 3))))
* * * * [misc]progress:  [ 843 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (235 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (+ (log x) (log x))) (* (+ (+ 1 3) 3) (* 3 (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (+ (log x) (log x))) (* (+ (+ 1 3) 3) (* 3 (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 844 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (187 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 845 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (187 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 846 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (186 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 1 3)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 1 3)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 847 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (182 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (+ (* (+ 1 (+ 1 3)) (* 3 (log x))) (* (* 3 (log x)) (+ (+ 1 3) 3))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (+ (* (+ 1 (+ 1 3)) (* 3 (log x))) (* (* 3 (log x)) (+ (+ 1 3) 3))) (* 3 (log x))))
* * * * [misc]progress:  [ 848 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (187 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 849 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (172 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 850 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (172 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 851 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 1 (+ 1 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 1 (+ 1 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 852 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))))
* * * * [misc]progress:  [ 853 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (178 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 854 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (178 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 855 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (464 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 1 3) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 1 3) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 856 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))))
* * * * [misc]progress:  [ 857 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (178 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 858 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (178 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 859 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (464 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 1 3) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 1 3) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 860 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (224 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 1 3) 3)) (* (* 3 3) (+ (log x) (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 1 3) 3)) (* (* 3 3) (+ (log x) (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 861 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* * * * [misc]progress:  [ 862 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* * * * [misc]progress:  [ 863 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 1 3) (* (log x) (+ 3 3))) (+ (* (log x) (+ 3 3)) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))) (+ (* (+ 1 3) (* (log x) (+ 3 3))) (+ (* (log x) (+ 3 3)) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 864 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 (log x)) (+ (+ 1 3) 3)) (+ (* 3 (log x)) (* (+ 1 (+ 1 3)) (* 3 (log x))))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* 3 (log x)) (+ (+ 1 3) 3)) (+ (* 3 (log x)) (* (+ 1 (+ 1 3)) (* 3 (log x))))))
* * * * [misc]progress:  [ 865 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (225 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (* 3 3) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (* 3 3) (+ 3 3)))))
* * * * [misc]progress:  [ 866 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (68 enodes)
* * [misc]simplify:  iters left: 4 (226 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) (+ (+ 1 3) 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) (+ (+ 1 3) 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 867 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (68 enodes)
* * [misc]simplify:  iters left: 4 (226 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) (+ (+ 1 3) 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) (+ (+ 1 3) 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 868 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* 3 3) 3) (log x)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* 3 3) 3) (log x)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 869 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (+ (* (* 3 3) (log x)) (* (+ 1 3) (* (log x) (+ 3 3))))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (+ (* (* 3 3) (log x)) (* (+ 1 3) (* (log x) (+ 3 3))))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 870 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 871 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 872 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (+ (* (log x) (+ 3 (* 3 3))) (* (log x) 3)) (+ (* (log x) (+ 3 (* 3 3))) (* (log x) (+ 3 (* 3 3))))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (+ (* (log x) (+ 3 (* 3 3))) (* (log x) 3)) (+ (* (log x) (+ 3 (* 3 3))) (* (log x) (+ 3 (* 3 3))))))
* * * * [misc]progress:  [ 873 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (+ (* (* 3 3) (log x)) (* (+ 1 3) (* (log x) (+ 3 3))))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (+ (* (* 3 3) (log x)) (* (+ 1 3) (* (log x) (+ 3 3))))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 874 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 875 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 876 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (+ (* (log x) (+ 3 (* 3 3))) (* (log x) 3)) (+ (* (log x) (+ 3 (* 3 3))) (* (log x) (+ 3 (* 3 3))))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (+ (* (log x) (+ 3 (* 3 3))) (* (log x) 3)) (+ (* (log x) (+ 3 (* 3 3))) (* (log x) (+ 3 (* 3 3))))))
* * * * [misc]progress:  [ 877 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (234 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) 3) (+ (+ 1 3) 3)) (* (* 3 3) (+ (log x) (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) 3) (+ (+ 1 3) 3)) (* (* 3 3) (+ (log x) (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 878 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (242 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) 3) (+ 3 3)) (* (+ (+ 1 3) 3) (* (log x) 3))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) 3) (+ 3 3)) (* (+ (+ 1 3) 3) (* (log x) 3))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 879 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (242 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) 3) (+ 3 3)) (* (+ (+ 1 3) 3) (* (log x) 3))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) 3) (+ 3 3)) (* (+ (+ 1 3) 3) (* (log x) 3))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 880 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (228 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (* 3 3)) (+ (* (log x) (* 3 3)) (* (log x) (* 3 3)))) (* (log x) (+ (* 3 3) 3))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (* 3 3)) (+ (* (log x) (* 3 3)) (* (log x) (* 3 3)))) (* (log x) (+ (* 3 3) 3))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 881 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (218 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3) (+ (* (* (log x) 3) (+ (+ 1 3) 3)) (+ (* (log x) (* 3 3)) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3) (+ (* (* (log x) 3) (+ (+ 1 3) 3)) (+ (* (log x) (* 3 3)) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 882 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (213 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (+ (* (log x) (+ 3 (* 3 3))) (* (log x) (+ 3 (* 3 3))))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (+ (* (log x) (+ 3 (* 3 3))) (* (log x) (+ 3 (* 3 3))))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 883 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) (+ 1 3)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) (+ 1 3)) (+ 3 3))))
* * * * [misc]progress:  [ 884 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) (+ 1 3)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) (+ 1 3)) (+ 3 3))))
* * * * [misc]progress:  [ 885 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (493 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ 3 (+ 1 1)) (+ (+ 1 3) (+ 1 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ 3 (+ 1 1)) (+ (+ 1 3) (+ 1 3)))))
* * * * [misc]progress:  [ 886 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (487 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 1 (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 1 (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 887 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) (+ (+ 1 3) 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) (+ (+ 1 3) 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* * * * [misc]progress:  [ 888 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) (+ (+ 1 3) 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) (+ (+ 1 3) 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* * * * [misc]progress:  [ 889 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (493 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 890 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (487 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 1 (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 1 (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 891 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) (+ (+ 1 3) 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) (+ (+ 1 3) 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* * * * [misc]progress:  [ 892 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) (+ (+ 1 3) 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) (+ (+ 1 3) 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* * * * [misc]progress:  [ 893 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (493 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 894 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (233 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (+ (+ 1 3) 3) (* (log x) 3)) (* (* (log x) 3) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (+ (+ 1 3) 3) (* (log x) 3)) (* (* (log x) 3) (+ 3 3))))
* * * * [misc]progress:  [ 895 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (185 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 896 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (185 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 897 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (184 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 1 3)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 1 3)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* * * * [misc]progress:  [ 898 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (180 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3) (+ (* (log x) 3) (+ (* (* (log x) 3) (+ 1 (+ 1 3))) (* (* (log x) 3) (+ (+ 1 3) 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3) (+ (* (log x) 3) (+ (* (* (log x) 3) (+ 1 (+ 1 3))) (* (* (log x) 3) (+ (+ 1 3) 3)))))
* * * * [misc]progress:  [ 899 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (213 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (+ (* (log x) (+ 3 (* 3 3))) (* (log x) (+ 3 (* 3 3))))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (+ (* (log x) (+ 3 (* 3 3))) (* (log x) (+ 3 (* 3 3))))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 900 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) (+ 1 3)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) (+ 1 3)) (+ 3 3))))
* * * * [misc]progress:  [ 901 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) (+ 1 3)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (log x) (+ 1 3)) (+ 3 3))))
* * * * [misc]progress:  [ 902 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (493 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ 3 (+ 1 1)) (+ (+ 1 3) (+ 1 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (* (* (log x) 3) (+ (+ 3 (+ 1 1)) (+ (+ 1 3) (+ 1 3)))))
* * * * [misc]progress:  [ 903 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (487 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 1 (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 1 (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 904 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) (+ (+ 1 3) 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) (+ (+ 1 3) 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* * * * [misc]progress:  [ 905 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) (+ (+ 1 3) 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) (+ (+ 1 3) 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* * * * [misc]progress:  [ 906 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (493 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 907 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (487 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 1 (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (* (* 3 (log x)) (+ (+ (+ 1 3) (+ 1 3)) (+ 1 (+ 1 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 908 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) (+ (+ 1 3) 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) (+ (+ 1 3) 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* * * * [misc]progress:  [ 909 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) (+ (+ 1 3) 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* 3 (log x)) (+ (+ 1 3) (+ (+ 1 3) 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* * * * [misc]progress:  [ 910 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (493 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 911 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (233 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (+ (+ 1 3) 3) (* (log x) 3)) (* (* (log x) 3) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (+ (+ 1 3) 3) (* (log x) 3)) (* (* (log x) 3) (+ 3 3))))
* * * * [misc]progress:  [ 912 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (185 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 913 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (185 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 914 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (184 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 1 3)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 1 3)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* * * * [misc]progress:  [ 915 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (180 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3) (+ (* (log x) 3) (+ (* (* (log x) 3) (+ 1 (+ 1 3))) (* (* (log x) 3) (+ (+ 1 3) 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3) (+ (* (log x) 3) (+ (* (* (log x) 3) (+ 1 (+ 1 3))) (* (* (log x) 3) (+ (+ 1 3) 3)))))
* * * * [misc]progress:  [ 916 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (185 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 917 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (log x) 3) (+ (+ 1 3) (+ 1 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (log x) 3) (+ (+ 1 3) (+ 1 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 918 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (log x) 3) (+ (+ 1 3) (+ 1 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (log x) 3) (+ (+ 1 3) (+ 1 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 919 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* * [misc]simplify:  iters left: 3 (450 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ 3 3)) (* (log x) (+ 3 3))) (* 3 (* (* 3 3) (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ 3 3)) (* (log x) (+ 3 3))) (* 3 (* (* 3 3) (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 920 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (172 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* 3 (log x)) (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3)))) (* (log x) (+ 3 (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (+ (* 3 (log x)) (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3)))) (* (log x) (+ 3 (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 921 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 922 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 923 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (458 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 1 3) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 1 3) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 924 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (172 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* 3 (log x)) (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3)))) (* (log x) (+ 3 (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (+ (* 3 (log x)) (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3)))) (* (log x) (+ 3 (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 925 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 926 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 927 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (458 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 1 3) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* (+ 1 3) (+ 3 3)) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 928 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (208 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) 3) (+ 3 3)) (* (+ (+ 1 3) 3) (* (log x) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) 3) (+ 3 3)) (* (+ (+ 1 3) 3) (* (log x) 3))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 929 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (196 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 930 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (196 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* (* 32768.0 x) x) -1720320.0))))
* * * * [misc]progress:  [ 931 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (+ 1 3) (* (+ 3 3) (log x))) (+ (* (+ 3 3) (log x)) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (+ 1 3) (* (+ 3 3) (log x))) (+ (* (+ 3 3) (log x)) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 932 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) (+ 1 3)))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (log x) 3) (+ 3 (+ 1 3))) (+ (* (log x) 3) (* (+ (+ 1 3) 1) (* (log x) 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (log x) 3) (+ 3 (+ 1 3))) (+ (* (log x) 3) (* (+ (+ 1 3) 1) (* (log x) 3)))))
* * * * [misc]progress:  [ 933 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (228 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) 3))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (* (* (log x) 3) (+ (+ (+ 1 3) (+ 1 3)) 3))) (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3))
* * * * [misc]progress:  [ 934 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (226 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 935 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (226 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* (+ 1 3) (log x)) (+ 3 3))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 936 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (204 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ (* 3 3) (+ 3 3))) (* (log x) (+ (* 3 3) 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ (* 3 3) (+ 3 3))) (* (log x) (+ (* 3 3) 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 937 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (log x) (+ 1 3)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (log x) (+ 1 3)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 938 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 939 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 940 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 941 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (log x) (+ 1 3)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* (log x) (+ 1 3)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 942 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 943 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (* 3 (log x)) (+ (+ 1 3) (+ 1 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 944 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (+ 1 3) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))))
* * * * [misc]progress:  [ 945 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (236 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 1 3) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 946 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (243 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* 3 (log x)) (+ (+ 1 3) 3)) (* (* 3 3) (+ (log x) (log x)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* 3 (log x)) (+ (+ 1 3) 3)) (* (* 3 3) (+ (log x) (log x)))))
* * * * [misc]progress:  [ 947 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (243 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* 3 (log x)) (+ (+ 1 3) 3)) (* (* 3 3) (+ (log x) (log x)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (* 3 (log x)) (+ (+ 1 3) 3)) (* (* 3 3) (+ (log x) (log x)))))
* * * * [misc]progress:  [ 948 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (230 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* 3 3) (log x)) (* (* 3 3) (log x))) (* (* 3 3) (log x))) (+ (* (log x) (+ 3 3)) (* (log x) (+ 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* 3 3) (log x)) (* (* 3 3) (log x))) (* (* 3 3) (log x))) (+ (* (log x) (+ 3 3)) (* (log x) (+ 3 3)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 949 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3) (+ (* (* (log x) 3) (+ (+ 1 3) 3)) (+ (* (* 3 3) (log x)) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* 32768.0 x)) -1720320.0)) 3) (+ (* (* (log x) 3) (+ (+ 1 3) 3)) (+ (* (* 3 3) (log x)) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 950 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (214 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (+ (* (log x) (+ (* 3 3) 3)) (* (log x) (+ (* 3 3) 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (+ (* (log x) (+ (* 3 3) 3)) (* (log x) (+ (* 3 3) 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 951 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ 3 1) (* (log x) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ 3 1) (* (log x) (+ 3 3)))))
* * * * [misc]progress:  [ 952 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ 3 1) (* (log x) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ 3 1) (* (log x) (+ 3 3)))))
* * * * [misc]progress:  [ 953 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (458 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (log x) 3) (+ 3 3)) (* (+ 1 (+ 3 3)) (* (log x) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (log x) 3) (+ 3 3)) (* (+ 1 (+ 3 3)) (* (log x) 3))))
* * * * [misc]progress:  [ 954 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 955 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (* (log x) 3) (+ (+ 3 1) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (* (log x) 3) (+ (+ 3 1) 1))))
* * * * [misc]progress:  [ 956 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (* (log x) 3) (+ (+ 3 1) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (* (log x) 3) (+ (+ 3 1) 1))))
* * * * [misc]progress:  [ 957 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* * [misc]simplify:  iters left: 3 (449 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (* 3 (log x)) (+ 3 3)) (* (+ (+ 3 3) 1) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (* 3 (log x)) (+ 3 3)) (* (+ (+ 3 3) 1) (* 3 (log x)))))
* * * * [misc]progress:  [ 958 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 959 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (* (log x) 3) (+ (+ 3 1) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (* (log x) 3) (+ (+ 3 1) 1))))
* * * * [misc]progress:  [ 960 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (* (log x) 3) (+ (+ 3 1) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (* (log x) 3) (+ (+ 3 1) 1))))
* * * * [misc]progress:  [ 961 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* * [misc]simplify:  iters left: 3 (449 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (* 3 (log x)) (+ 3 3)) (* (+ (+ 3 3) 1) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (* 3 (log x)) (+ 3 3)) (* (+ (+ 3 3) 1) (* 3 (log x)))))
* * * * [misc]progress:  [ 962 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (237 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (+ 1 (+ 3 3)) (* 3 (log x))) (* (* 3 (log x)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (+ 1 (+ 3 3)) (* 3 (log x))) (* (* 3 (log x)) (+ 3 3))))
* * * * [misc]progress:  [ 963 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (+ (+ 3 1) 1) (* 3 (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (+ (+ 3 1) 1) (* 3 (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 964 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (+ (+ 3 1) 1) (* 3 (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (+ (+ 3 1) 1) (* 3 (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 965 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 3 1) (+ 3 1))) (* (+ (+ 3 1) 1) (* 3 (log x)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ (+ 3 1) (+ 3 1))) (* (+ (+ 3 1) 1) (* 3 (log x)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 966 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (log (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (+ (* (* 3 (log x)) (+ (+ 3 1) 1)) (* (* 3 (log x)) (+ (+ 3 1) 3))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (+ (* (* 3 (log x)) (+ (+ 3 1) 1)) (* (* 3 (log x)) (+ (+ 3 1) 3))) (* 3 (log x))))
* * * * [misc]progress:  [ 967 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (214 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (+ (* (log x) (+ (* 3 3) 3)) (* (log x) (+ (* 3 3) 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (+ (* (log x) (+ (* 3 3) 3)) (* (log x) (+ (* 3 3) 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 968 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ 3 1) (* (log x) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ 3 1) (* (log x) (+ 3 3)))))
* * * * [misc]progress:  [ 969 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ 3 1) (* (log x) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3) (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ 3 1) (* (log x) (+ 3 3)))))
* * * * [misc]progress:  [ 970 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (458 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (log x) 3) (+ 3 3)) (* (+ 1 (+ 3 3)) (* (log x) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (log x) 3) (+ 3 3)) (* (+ 1 (+ 3 3)) (* (log x) 3))))
* * * * [misc]progress:  [ 971 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (+ 3 3))) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* x (* 32768.0 x)) -1720320.0))))
* * * * [misc]progress:  [ 972 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (* (log x) 3) (+ (+ 3 1) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (* (log x) 3) (+ (+ 3 1) 1))))
* * * * [misc]progress:  [ 973 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (* (log x) 3) (+ (+ 3 1) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (* (log x) 3) (+ (+ 3 1) 1))))
* * * * [misc]progress:  [ 974 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3)))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* * [misc]simplify:  iters left: 3 (449 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (* 3 (log x)) (+ 3 3)) (* (+ (+ 3 3) 1) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* 32768.0 x) x) -1720320.0)) 3) (+ (* (* 3 (log x)) (+ 3 3)) (* (+ (+ 3 3) 1) (* 3 (log x)))))
* * * * [misc]progress:  [ 975 / 1166 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ (* 32768.0 (* x x)) -1720320.0) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) (+ 1 3))) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
