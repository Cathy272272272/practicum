* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (182 enodes)
* * [misc]simplify:  iters left: 1 (265 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 2 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 2 ] rewriting at (2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 2 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 1) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- 0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) (pow x 3)) (* 1.5 (pow x 2))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow (/ 1 (/ 1 x)) 2)) (* -0.166667 (pow (/ 1 (/ 1 x)) 3))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify 0.166667 into 0.166667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow (/ 1 (/ 1 (- x))) 2)) (* 0.166667 (pow (/ 1 (/ 1 (- x))) 3))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* * * * [misc]progress:  [ 2 / 2 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -3.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow x 2)) (+ (* (- 3.0) x) 1.0)) into (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- 0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (* 1 -3.0) into -3.0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) (/ 1 (/ 1 x))) (+ (* 1.5 (pow (/ 1 (/ 1 x)) 2)) (* (- 0.166667) (pow (/ 1 (/ 1 x)) 3)))) into (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify 0.166667 into 0.166667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (* -1 -3.0) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (+ (* 3.0 (/ 1 (/ 1 (- x)))) (+ (* 1.5 (pow (/ 1 (/ 1 (- x))) 2)) (* 0.166667 (pow (/ 1 (/ 1 (- x))) 3)))) into (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1)))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 2 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1)))>
* * * * [misc]progress:  [ 3 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (exp (+ (log (+ 1.5 (* -0.166667 x))) (log (* x x))))))>
* [enter]simplify:  Simplifying (+ (log (+ 1.5 (* -0.166667 x))) (log (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x -0.166667) 1.5)) (log (* x x)))
* [exit]simplify:  Simplified to (+ (log (+ (* x -0.166667) 1.5)) (log (* x x)))
* * * * [misc]progress:  [ 4 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (exp (log (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (log (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 5 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (98 enodes)
* * [misc]simplify:  iters left: 1 (123 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 6 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (cbrt (* (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (+ 1.5 (* -0.166667 x))) (* (* (* x x) (* x x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (+ 1.5 (* -0.166667 x))) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* [exit]simplify:  Simplified to (* (* (pow (* x x) 3) (+ (* x -0.166667) 1.5)) (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* (pow (* x x) 3) (+ (* x -0.166667) 1.5)) (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 7 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 8 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (cbrt (* (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* * * * [misc]progress:  [ 9 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [enter]simplify:  Simplifying (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 10 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* 1 (* (+ 1.5 (* -0.166667 x)) (* x x)))))>
* * * * [misc]progress:  [ 11 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) x)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) x)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) x)
* * * * [misc]progress:  [ 12 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 13 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 14 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* 1 (* (+ 1.5 (* -0.166667 x)) (* x x)))))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 15 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (141 enodes)
* * [misc]simplify:  iters left: 2 (266 enodes)
* * [misc]simplify:  iters left: 1 (338 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))) (* (* x x) (pow 1.5 3)))
* [exit]simplify:  Simplified to (+ (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))) (* (* x x) (pow 1.5 3)))
* * * * [misc]progress:  [ 16 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)) (- 1.5 (* -0.166667 x)))))>
* [enter]simplify:  Simplifying (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (169 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* -0.166667 x) 1.5) x) (* (- 1.5 (* -0.166667 x)) x))
* [exit]simplify:  Simplified to (* (* (+ (* -0.166667 x) 1.5) x) (* (- 1.5 (* -0.166667 x)) x))
* * * * [misc]progress:  [ 17 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* x x) (+ 1.5 (* -0.166667 x)))))>
* * * * [misc]progress:  [ 18 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ (* x -3.0) 1.0)) (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (exp (+ (* x -3.0) 1.0)) (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (284 enodes)
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ (* -0.166667 x) 1.5)) (exp (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ (* -0.166667 x) 1.5)) (exp (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 19 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) 1))>
* * * * [misc]progress:  [ 20 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (log (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* * * * [misc]progress:  [ 21 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (exp (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (152 enodes)
* * [misc]simplify:  iters left: 2 (319 enodes)
* [exit]simplify:  Simplified to (* (exp (+ 1.0 (* x -3.0))) (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))
* [exit]simplify:  Simplified to (* (exp (+ 1.0 (* x -3.0))) (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 22 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (105 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (325 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))) (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))) (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))))
* [enter]simplify:  Simplifying (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* * * * [misc]progress:  [ 23 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))) 3)
* * * * [misc]progress:  [ 24 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (sqrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [enter]simplify:  Simplifying (sqrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* * * * [misc]progress:  [ 25 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (275 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5)))) (* (+ (* (* x x) (pow 1.5 3)) (* (* (* x -0.166667) (* x -0.166667)) (* (* x -0.166667) (* x x)))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))))
* [exit]simplify:  Simplified to (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5)))) (* (+ (* (* x x) (pow 1.5 3)) (* (* (* x -0.166667) (* x -0.166667)) (* (* x -0.166667) (* x x)))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* [exit]simplify:  Simplified to (* (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (* (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))))
* * * * [misc]progress:  [ 26 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (201 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ 1.5 (* -0.166667 x)) (* (- 1.5 (* -0.166667 x)) (* x x))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))
* [exit]simplify:  Simplified to (+ (* (* (+ 1.5 (* -0.166667 x)) (* (- 1.5 (* -0.166667 x)) (* x x))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (236 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (- 1.5 (* x -0.166667)))
* [exit]simplify:  Simplified to (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (- 1.5 (* x -0.166667)))
* * * * [misc]progress:  [ 27 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))) (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (73 enodes)
* * [misc]simplify:  iters left: 4 (236 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (* (* (* x x) (- (* x -3.0) 1.0)) (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))
* [exit]simplify:  Simplified to (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (* (* (* x x) (- (* x -3.0) 1.0)) (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (* (- (* x -3.0) 1.0) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))))
* [exit]simplify:  Simplified to (* (- (* x -3.0) 1.0) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))))
* * * * [misc]progress:  [ 28 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))) (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (* (* (+ (* x -0.166667) 1.5) (- (* x -3.0) 1.0)) (* (- 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (* (* (+ (* x -0.166667) 1.5) (- (* x -3.0) 1.0)) (* (- 1.5 (* x -0.166667)) (* x x))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (97 enodes)
* * [misc]simplify:  iters left: 2 (279 enodes)
* [exit]simplify:  Simplified to (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))
* * * * [misc]progress:  [ 29 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3)) (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (430 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))
* [exit]simplify:  Simplified to (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))
* [enter]simplify:  Simplifying (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (* (* x x) (+ (* -0.166667 x) 1.5)) (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (* (* x x) (+ (* -0.166667 x) 1.5)) (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0)))))
* * * * [misc]progress:  [ 30 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))>
* * * * [misc]progress:  [ 31 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))>
* [enter]simplify:  Simplifying (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* [exit]simplify:  Simplified to (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))
* [exit]simplify:  Simplified to (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))
* [enter]simplify:  Simplifying (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (134 enodes)
* * [misc]simplify:  iters left: 2 (304 enodes)
* * [misc]simplify:  iters left: 1 (444 enodes)
* [exit]simplify:  Simplified to (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))
* [exit]simplify:  Simplified to (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))
* * * * [misc]progress:  [ 32 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* x -3.0) (+ 1.0 (* (+ 1.5 (* -0.166667 x)) (* x x)))))>
* [enter]simplify:  Simplifying (+ 1.0 (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (75 enodes)
* * [misc]simplify:  iters left: 1 (79 enodes)
* [exit]simplify:  Simplified to (+ 1.0 (* (* x x) (+ 1.5 (* -0.166667 x))))
* [exit]simplify:  Simplified to (+ 1.0 (* (* x x) (+ 1.5 (* -0.166667 x))))
* * * * [misc]progress:  [ 33 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (+ 1.5 (* -0.166667 x)) (* x x)) (+ (* x -3.0) 1.0)))>
* * * * [misc]progress:  [ 34 / 39 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (235 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (- 1.5 (* 0.166667 x))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 35 / 39 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (235 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (- 1.5 (* 0.166667 x))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 36 / 39 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (235 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (- 1.5 (* 0.166667 x))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 37 / 39 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 1.5 x)) (- 1.0 (* 3.0 x)))
* * * * [misc]progress:  [ 38 / 39 ] simplifiying candidate #<alt-event (Î» (x) (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x))))>
* [enter]simplify:  Simplifying (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (111 enodes)
* * [misc]simplify:  iters left: 2 (200 enodes)
* * [misc]simplify:  iters left: 1 (289 enodes)
* [exit]simplify:  Simplified to (* x (- (- (* 1.5 x) 3.0) (* (* x x) 0.166667)))
* * * * [misc]progress:  [ 39 / 39 ] simplifiying candidate #<alt-event (Î» (x) (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x))))>
* [enter]simplify:  Simplifying (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (111 enodes)
* * [misc]simplify:  iters left: 2 (200 enodes)
* * [misc]simplify:  iters left: 1 (289 enodes)
* [exit]simplify:  Simplified to (* x (- (- (* 1.5 x) 3.0) (* (* x x) 0.166667)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 x)) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 1.5)) into (+ (* 2 (log x)) (log 1.5))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log 1.5))) into (* 1/3 (+ (* 2 (log x)) (log 1.5)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) into (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 x)) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 1.5)) into (+ (* 2 (log x)) (log 1.5))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log 1.5))) into (* 1/3 (+ (* 2 (log x)) (log 1.5)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) into (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) into (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 1) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.166667)) 1)) (pow 1.5 1)))) 1) into -0.11111133333333334
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 1.5)) into (+ (* 2 (log x)) (log 1.5))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.11111133333333334) (* 0 (+ (* 2 (log x)) (log 1.5)))) into (- 0.03703711111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) (+ (* (/ (pow (- 0.03703711111111111) 1) 1)))) into (* -0.03703711111111111 (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))
* [misc]backup-simplify:  Simplify (* -0.03703711111111111 (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) into (* -0.03703711111111111 (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.166667)) 2)) (pow 1.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1.5 1)))) 2) into (/ -0.013888944444500001 (pow 1.5 2))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 1.5)) into (+ (* 2 (log x)) (log 1.5))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (+ (* 2 (log x)) (log 1.5))))) into (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) (+ (* (/ (pow (- 0.03703711111111111) 2) 2)) (* (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)))) into (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))
* [misc]backup-simplify:  Simplify (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) into (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (pow x 2)) (+ (* (* -0.03703711111111111 (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) x) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) into (- (+ (* 0.0006858737997283951 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (+ (* 0.03703711111111111 (* x (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (* 0.0046296481481666665 (/ (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (pow 1.5 2)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow -0.166667 1)))) 1) into -8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -8.999982000035999) (* 0 (- (log -0.166667) (* 3 (log x))))) into (- 2.9999940000119993)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow (- 2.9999940000119993) 1) 1)))) into (* -2.9999940000119993 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -2.9999940000119993 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))) into (* -2.9999940000119993 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow -0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -0.166667 1)))) 2) into (/ -1.125 (pow -0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow -0.166667 2))) (+ (* 0 -8.999982000035999) (* 0 (- (log -0.166667) (* 3 (log x)))))) into (- (* 0.375 (/ 1 (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow (- 2.9999940000119993) 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow -0.166667 2)))) 1) 1)))) into (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))) into (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x))))))) (pow (/ 1 x) 2)) (+ (* (* -2.9999940000119993 (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x))))))) (/ 1 x)) (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))))) into (- (+ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (* 4.499982000053998 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (pow x 2)))) (+ (* 2.9999940000119993 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (* (pow -0.166667 2) (pow x 2))))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow 0.166667 1)))) 1) into 8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 8.999982000035999) (* 0 (- (log 0.166667) (* 3 (log x))))) into 2.9999940000119993
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 2.9999940000119993 1) 1)))) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into (/ -1.125 (pow 0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow 0.166667 2))) (+ (* 0 8.999982000035999) (* 0 (- (log 0.166667) (* 3 (log x)))))) into (- (* 0.375 (/ 1 (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 2.9999940000119993 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow 0.166667 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2))))) into (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x))))))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2))))) (pow (/ 1 (- x)) 2)) (+ (* (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x)))))))) (/ 1 (- x))) (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x))))))))) into (- (+ (* 4.499982000053998 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) (pow x 2))) (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x))))))) (+ (* 2.9999940000119993 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) (* (pow x 2) (pow 0.166667 2))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 x)) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 1.5)) into (+ (* 2 (log x)) (log 1.5))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log 1.5))) into (* 1/3 (+ (* 2 (log x)) (log 1.5)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) into (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 x)) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 1.5)) into (+ (* 2 (log x)) (log 1.5))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log 1.5))) into (* 1/3 (+ (* 2 (log x)) (log 1.5)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) into (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) into (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 1) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.166667)) 1)) (pow 1.5 1)))) 1) into -0.11111133333333334
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 1.5)) into (+ (* 2 (log x)) (log 1.5))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.11111133333333334) (* 0 (+ (* 2 (log x)) (log 1.5)))) into (- 0.03703711111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) (+ (* (/ (pow (- 0.03703711111111111) 1) 1)))) into (* -0.03703711111111111 (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))
* [misc]backup-simplify:  Simplify (* -0.03703711111111111 (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) into (* -0.03703711111111111 (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.166667)) 2)) (pow 1.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1.5 1)))) 2) into (/ -0.013888944444500001 (pow 1.5 2))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 1.5)) into (+ (* 2 (log x)) (log 1.5))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (+ (* 2 (log x)) (log 1.5))))) into (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) (+ (* (/ (pow (- 0.03703711111111111) 2) 2)) (* (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)))) into (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))
* [misc]backup-simplify:  Simplify (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) into (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (pow x 2)) (+ (* (* -0.03703711111111111 (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) x) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) into (- (+ (* 0.0006858737997283951 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (+ (* 0.03703711111111111 (* x (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (* 0.0046296481481666665 (/ (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (pow 1.5 2)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow -0.166667 1)))) 1) into -8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -8.999982000035999) (* 0 (- (log -0.166667) (* 3 (log x))))) into (- 2.9999940000119993)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow (- 2.9999940000119993) 1) 1)))) into (* -2.9999940000119993 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -2.9999940000119993 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))) into (* -2.9999940000119993 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow -0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -0.166667 1)))) 2) into (/ -1.125 (pow -0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow -0.166667 2))) (+ (* 0 -8.999982000035999) (* 0 (- (log -0.166667) (* 3 (log x)))))) into (- (* 0.375 (/ 1 (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow (- 2.9999940000119993) 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow -0.166667 2)))) 1) 1)))) into (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))) into (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x))))))) (pow (/ 1 x) 2)) (+ (* (* -2.9999940000119993 (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x))))))) (/ 1 x)) (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))))) into (- (+ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (* 4.499982000053998 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (pow x 2)))) (+ (* 2.9999940000119993 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (* (pow -0.166667 2) (pow x 2))))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow 0.166667 1)))) 1) into 8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 8.999982000035999) (* 0 (- (log 0.166667) (* 3 (log x))))) into 2.9999940000119993
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 2.9999940000119993 1) 1)))) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into (/ -1.125 (pow 0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow 0.166667 2))) (+ (* 0 8.999982000035999) (* 0 (- (log 0.166667) (* 3 (log x)))))) into (- (* 0.375 (/ 1 (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 2.9999940000119993 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow 0.166667 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2))))) into (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x))))))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2))))) (pow (/ 1 (- x)) 2)) (+ (* (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x)))))))) (/ 1 (- x))) (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x))))))))) into (- (+ (* 4.499982000053998 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) (pow x 2))) (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x))))))) (+ (* 2.9999940000119993 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) (* (pow x 2) (pow 0.166667 2))))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 x)) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 1.5)) into (+ (* 2 (log x)) (log 1.5))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log 1.5))) into (* 1/3 (+ (* 2 (log x)) (log 1.5)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) into (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 x)) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 1.5)) into (+ (* 2 (log x)) (log 1.5))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log 1.5))) into (* 1/3 (+ (* 2 (log x)) (log 1.5)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) into (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) into (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 1) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.166667)) 1)) (pow 1.5 1)))) 1) into -0.11111133333333334
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 1.5)) into (+ (* 2 (log x)) (log 1.5))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.11111133333333334) (* 0 (+ (* 2 (log x)) (log 1.5)))) into (- 0.03703711111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) (+ (* (/ (pow (- 0.03703711111111111) 1) 1)))) into (* -0.03703711111111111 (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))
* [misc]backup-simplify:  Simplify (* -0.03703711111111111 (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) into (* -0.03703711111111111 (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.166667)) 2)) (pow 1.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1.5 1)))) 2) into (/ -0.013888944444500001 (pow 1.5 2))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 1.5)) into (+ (* 2 (log x)) (log 1.5))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (+ (* 2 (log x)) (log 1.5))))) into (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) (+ (* (/ (pow (- 0.03703711111111111) 2) 2)) (* (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)))) into (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))
* [misc]backup-simplify:  Simplify (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) into (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (pow x 2)) (+ (* (* -0.03703711111111111 (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) x) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) into (- (+ (* 0.0006858737997283951 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (+ (* 0.03703711111111111 (* x (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (* 0.0046296481481666665 (/ (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (pow 1.5 2)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow -0.166667 1)))) 1) into -8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -8.999982000035999) (* 0 (- (log -0.166667) (* 3 (log x))))) into (- 2.9999940000119993)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow (- 2.9999940000119993) 1) 1)))) into (* -2.9999940000119993 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -2.9999940000119993 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))) into (* -2.9999940000119993 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow -0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -0.166667 1)))) 2) into (/ -1.125 (pow -0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow -0.166667 2))) (+ (* 0 -8.999982000035999) (* 0 (- (log -0.166667) (* 3 (log x)))))) into (- (* 0.375 (/ 1 (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow (- 2.9999940000119993) 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow -0.166667 2)))) 1) 1)))) into (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))) into (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x))))))) (pow (/ 1 x) 2)) (+ (* (* -2.9999940000119993 (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x))))))) (/ 1 x)) (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))))) into (- (+ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (* 4.499982000053998 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (pow x 2)))) (+ (* 2.9999940000119993 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (* (pow -0.166667 2) (pow x 2))))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow 0.166667 1)))) 1) into 8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 8.999982000035999) (* 0 (- (log 0.166667) (* 3 (log x))))) into 2.9999940000119993
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 2.9999940000119993 1) 1)))) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into (/ -1.125 (pow 0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow 0.166667 2))) (+ (* 0 8.999982000035999) (* 0 (- (log 0.166667) (* 3 (log x)))))) into (- (* 0.375 (/ 1 (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 2.9999940000119993 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow 0.166667 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2))))) into (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x))))))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2))))) (pow (/ 1 (- x)) 2)) (+ (* (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x)))))))) (/ 1 (- x))) (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x))))))))) into (- (+ (* 4.499982000053998 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) (pow x 2))) (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x))))))) (+ (* 2.9999940000119993 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) (* (pow x 2) (pow 0.166667 2))))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 x)) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 1.5)) into (+ (* 2 (log x)) (log 1.5))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log 1.5))) into (* 1/3 (+ (* 2 (log x)) (log 1.5)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) into (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 x)) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 1.5)) into (+ (* 2 (log x)) (log 1.5))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log 1.5))) into (* 1/3 (+ (* 2 (log x)) (log 1.5)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) into (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 x)) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 1.5)) into (+ (* 2 (log x)) (log 1.5))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log 1.5))) into (* 1/3 (+ (* 2 (log x)) (log 1.5)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) into (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 x)) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 1.5)) into (+ (* 2 (log x)) (log 1.5))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log 1.5))) into (* 1/3 (+ (* 2 (log x)) (log 1.5)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) into (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) into (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2) into (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 1) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.166667)) 1)) (pow 1.5 1)))) 1) into -0.11111133333333334
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 1.5)) into (+ (* 2 (log x)) (log 1.5))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.11111133333333334) (* 0 (+ (* 2 (log x)) (log 1.5)))) into (- 0.03703711111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) (+ (* (/ (pow (- 0.03703711111111111) 1) 1)))) into (* -0.03703711111111111 (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 1) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.166667)) 1)) (pow 1.5 1)))) 1) into -0.11111133333333334
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 1.5)) into (+ (* 2 (log x)) (log 1.5))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.11111133333333334) (* 0 (+ (* 2 (log x)) (log 1.5)))) into (- 0.03703711111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) (+ (* (/ (pow (- 0.03703711111111111) 1) 1)))) into (* -0.03703711111111111 (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) (* -0.03703711111111111 (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (* (* -0.03703711111111111 (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) into (- (* 0.07407422222222222 (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2)))
* [misc]backup-simplify:  Simplify (- (* 0.07407422222222222 (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2))) into (- (* 0.07407422222222222 (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2)))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.166667)) 2)) (pow 1.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1.5 1)))) 2) into (/ -0.013888944444500001 (pow 1.5 2))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 1.5)) into (+ (* 2 (log x)) (log 1.5))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (+ (* 2 (log x)) (log 1.5))))) into (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) (+ (* (/ (pow (- 0.03703711111111111) 2) 2)) (* (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)))) into (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.166667)) 2)) (pow 1.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1.5 1)))) 2) into (/ -0.013888944444500001 (pow 1.5 2))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 1.5)) into (+ (* 2 (log x)) (log 1.5))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (+ (* 2 (log x)) (log 1.5))))) into (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) (+ (* (/ (pow (- 0.03703711111111111) 2) 2)) (* (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)))) into (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (+ (* (* -0.03703711111111111 (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (* -0.03703711111111111 (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (* (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))))) into (- (* 0.0027434951989135804 (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2)) (* 0.009259296296333333 (/ (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2) (pow 1.5 2))))
* [misc]backup-simplify:  Simplify (- (* 0.0027434951989135804 (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2)) (* 0.009259296296333333 (/ (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2) (pow 1.5 2)))) into (- (* 0.0027434951989135804 (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2)) (* 0.009259296296333333 (/ (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2) (pow 1.5 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.0027434951989135804 (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2)) (* 0.009259296296333333 (/ (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2) (pow 1.5 2)))) (pow x 2)) (+ (* (- (* 0.07407422222222222 (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2))) x) (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2))) into (- (+ (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2) (* 0.0027434951989135804 (* (pow x 2) (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2)))) (+ (* 0.07407422222222222 (* x (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2))) (* 0.009259296296333333 (/ (* (pow x 2) (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2)) (pow 1.5 2)))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) (cbrt (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) (cbrt (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) (cbrt (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow -0.166667 1)))) 1) into -8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -8.999982000035999) (* 0 (- (log -0.166667) (* 3 (log x))))) into (- 2.9999940000119993)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow (- 2.9999940000119993) 1) 1)))) into (* -2.9999940000119993 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow -0.166667 1)))) 1) into -8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -8.999982000035999) (* 0 (- (log -0.166667) (* 3 (log x))))) into (- 2.9999940000119993)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow (- 2.9999940000119993) 1) 1)))) into (* -2.9999940000119993 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (* -2.9999940000119993 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))) (* (* -2.9999940000119993 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))) into (- (* 5.999988000023999 (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (* 5.999988000023999 (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))) into (- (* 5.999988000023999 (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow -0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -0.166667 1)))) 2) into (/ -1.125 (pow -0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow -0.166667 2))) (+ (* 0 -8.999982000035999) (* 0 (- (log -0.166667) (* 3 (log x)))))) into (- (* 0.375 (/ 1 (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow (- 2.9999940000119993) 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow -0.166667 2)))) 1) 1)))) into (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow -0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -0.166667 1)))) 2) into (/ -1.125 (pow -0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow -0.166667 2))) (+ (* 0 -8.999982000035999) (* 0 (- (log -0.166667) (* 3 (log x)))))) into (- (* 0.375 (/ 1 (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow (- 2.9999940000119993) 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow -0.166667 2)))) 1) 1)))) into (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))) (+ (* (* -2.9999940000119993 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))) (* -2.9999940000119993 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))) (* (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))) into (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) (pow -0.166667 2)))) into (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2) (pow -0.166667 2)))) (pow (/ 1 x) 2)) (+ (* (- (* 5.999988000023999 (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2))) (/ 1 x)) (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2))) into (- (+ (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2) (* 17.99992800021599 (/ (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2) (pow x 2)))) (+ (* 5.999988000023999 (/ (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2) x)) (* 0.75 (/ (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2) (* (pow -0.166667 2) (pow x 2))))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) (cbrt (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) (cbrt (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) (cbrt (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow 0.166667 1)))) 1) into 8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 8.999982000035999) (* 0 (- (log 0.166667) (* 3 (log x))))) into 2.9999940000119993
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 2.9999940000119993 1) 1)))) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow 0.166667 1)))) 1) into 8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 8.999982000035999) (* 0 (- (log 0.166667) (* 3 (log x))))) into 2.9999940000119993
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 2.9999940000119993 1) 1)))) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))) (* (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))) (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))) into (* 5.999988000023999 (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (* 5.999988000023999 (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)) into (* 5.999988000023999 (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into (/ -1.125 (pow 0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow 0.166667 2))) (+ (* 0 8.999982000035999) (* 0 (- (log 0.166667) (* 3 (log x)))))) into (- (* 0.375 (/ 1 (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 2.9999940000119993 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow 0.166667 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into (/ -1.125 (pow 0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow 0.166667 2))) (+ (* 0 8.999982000035999) (* 0 (- (log 0.166667) (* 3 (log x)))))) into (- (* 0.375 (/ 1 (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 2.9999940000119993 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow 0.166667 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))) (+ (* (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))) (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))) (* (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2))))) (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))) into (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) (pow 0.166667 2)))) into (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x))))))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x))))))) 2) (pow 0.166667 2)))) (pow (/ 1 (- x)) 2)) (+ (* (* 5.999988000023999 (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x))))))) 2)) (/ 1 (- x))) (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x))))))) 2))) into (- (+ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (* 17.99992800021599 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (pow x 2)))) (+ (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (* (pow x 2) (pow 0.166667 2)))) (* 5.999988000023999 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) x))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1/3))))>
* * * * [misc]progress:  [ 2 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (pow (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) 1))))>
* * * * [misc]progress:  [ 3 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (exp (log (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (log (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (log (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 4 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (log (exp (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (exp (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 5 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (* x x))))))>
* [enter]simplify:  Simplifying (cbrt (+ 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (cbrt (+ (* x -0.166667) 1.5))
* [enter]simplify:  Simplifying (cbrt (* x x))
* * [misc]simplify:  iters left: 3 (3 enodes)
* [exit]simplify:  Simplified to (cbrt (* x x))
* [exit]simplify:  Simplified to (cbrt (* x x))
* * * * [misc]progress:  [ 6 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (/ (cbrt (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (cbrt (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (279 enodes)
* * [misc]simplify:  iters left: 1 (346 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x x) (pow 1.5 3)) (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x x) (pow 1.5 3)) (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x)))))
* [enter]simplify:  Simplifying (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5)))
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5)))
* * * * [misc]progress:  [ 7 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (/ (cbrt (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (cbrt (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (170 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))))
* [enter]simplify:  Simplifying (cbrt (- 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (- 1.5 (* x -0.166667)))
* [exit]simplify:  Simplified to (cbrt (- 1.5 (* x -0.166667)))
* * * * [misc]progress:  [ 8 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (* (* (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* * [misc]simplify:  iters left: 2 (49 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))) (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))) (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 9 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 10 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (* (sqrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (sqrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 11 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (* 1 (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))))>
* * * * [misc]progress:  [ 12 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1/3)) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * * [misc]progress:  [ 13 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (pow (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) 1)) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * * [misc]progress:  [ 14 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (exp (log (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (log (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (log (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 15 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (log (exp (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (exp (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 16 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (cbrt (+ 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (cbrt (+ (* x -0.166667) 1.5))
* [enter]simplify:  Simplifying (cbrt (* x x))
* * [misc]simplify:  iters left: 3 (3 enodes)
* [exit]simplify:  Simplified to (cbrt (* x x))
* [exit]simplify:  Simplified to (cbrt (* x x))
* * * * [misc]progress:  [ 17 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (/ (cbrt (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (cbrt (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (279 enodes)
* * [misc]simplify:  iters left: 1 (346 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x x) (pow 1.5 3)) (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x x) (pow 1.5 3)) (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x)))))
* [enter]simplify:  Simplifying (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5)))
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5)))
* * * * [misc]progress:  [ 18 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (/ (cbrt (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))) (cbrt (- 1.5 (* -0.166667 x))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (cbrt (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (170 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))))
* [enter]simplify:  Simplifying (cbrt (- 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (- 1.5 (* x -0.166667)))
* [exit]simplify:  Simplified to (cbrt (- 1.5 (* x -0.166667)))
* * * * [misc]progress:  [ 19 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (* (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* * [misc]simplify:  iters left: 2 (49 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))) (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))) (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 20 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 21 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (sqrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (sqrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 22 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (* 1 (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * * [misc]progress:  [ 23 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1/3) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * * [misc]progress:  [ 24 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (pow (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) 1) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * * [misc]progress:  [ 25 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (exp (log (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (log (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (log (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 26 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (log (exp (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (exp (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 27 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (cbrt (+ 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (cbrt (+ (* x -0.166667) 1.5))
* [enter]simplify:  Simplifying (cbrt (* x x))
* * [misc]simplify:  iters left: 3 (3 enodes)
* [exit]simplify:  Simplified to (cbrt (* x x))
* [exit]simplify:  Simplified to (cbrt (* x x))
* * * * [misc]progress:  [ 28 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (/ (cbrt (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (cbrt (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (279 enodes)
* * [misc]simplify:  iters left: 1 (346 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x x) (pow 1.5 3)) (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x x) (pow 1.5 3)) (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x)))))
* [enter]simplify:  Simplifying (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5)))
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5)))
* * * * [misc]progress:  [ 29 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (/ (cbrt (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (cbrt (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (170 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))))
* [enter]simplify:  Simplifying (cbrt (- 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (- 1.5 (* x -0.166667)))
* [exit]simplify:  Simplified to (cbrt (- 1.5 (* x -0.166667)))
* * * * [misc]progress:  [ 30 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (* (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* * [misc]simplify:  iters left: 2 (49 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))) (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))) (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 31 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 32 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (sqrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (sqrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 33 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* 1 (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * * [misc]progress:  [ 34 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) (+ 1/3 1/3)) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 35 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (pow (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (+ 1 1)) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 36 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (pow (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) 1/3) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (229 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (+ (* x -0.166667) 1.5)) (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* (* x x) (+ (* x -0.166667) 1.5)) (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 37 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (pow (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) 1) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 38 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (pow (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) 2) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * * [misc]progress:  [ 39 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (pow (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (+ 1 1)) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 40 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (pow (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) 1) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * * [misc]progress:  [ 41 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (exp (+ (log (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (log (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (log (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* * [misc]simplify:  iters left: 2 (49 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))) (log (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (+ (log (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))) (log (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 42 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (exp (log (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (47 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* [exit]simplify:  Simplified to (log (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (log (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 43 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (log (exp (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (47 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (exp (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 44 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (cbrt (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (229 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (+ (* x -0.166667) 1.5)) (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* (* x x) (+ (* x -0.166667) 1.5)) (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 45 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (cbrt (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))) (cbrt (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))) (cbrt (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* * [misc]simplify:  iters left: 2 (49 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 46 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (cbrt (* (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (450 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (+ (* x -0.166667) 1.5)) (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* (* x x) (+ (* x -0.166667) 1.5)) (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 47 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (sqrt (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (sqrt (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (fabs (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (fabs (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 48 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (/ (* (cbrt (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))) (cbrt (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))) (cbrt (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (137 enodes)
* * [misc]simplify:  iters left: 2 (267 enodes)
* * [misc]simplify:  iters left: 1 (324 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x x) (pow 1.5 3)) (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))))) (cbrt (+ (* (* x x) (pow 1.5 3)) (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x x) (pow 1.5 3)) (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))))) (cbrt (+ (* (* x x) (pow 1.5 3)) (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (113 enodes)
* * [misc]simplify:  iters left: 2 (132 enodes)
* * [misc]simplify:  iters left: 1 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x)))))
* * * * [misc]progress:  [ 49 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (/ (* (cbrt (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))) (cbrt (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))) (cbrt (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (281 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x x) (* -0.166667 x)) (* (* -0.166667 x) (* -0.166667 x))) (* (* x x) (pow 1.5 3)))) (cbrt (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x x) (* -0.166667 x)) (* (* -0.166667 x) (* -0.166667 x))) (* (* x x) (pow 1.5 3)))) (cbrt (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (122 enodes)
* * [misc]simplify:  iters left: 2 (134 enodes)
* * [misc]simplify:  iters left: 1 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x))))))
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x))))))
* * * * [misc]progress:  [ 50 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (/ (* (cbrt (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))) (cbrt (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))) (cbrt (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (277 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))) (* (pow 1.5 3) (* x x)))) (cbrt (- (* (* x x) (* 1.5 1.5)) (* (* (* x x) -0.166667) (* (* x x) -0.166667)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))) (* (pow 1.5 3) (* x x)))) (cbrt (- (* (* x x) (* 1.5 1.5)) (* (* (* x x) -0.166667) (* (* x x) -0.166667)))))
* [enter]simplify:  Simplifying (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (122 enodes)
* * [misc]simplify:  iters left: 2 (134 enodes)
* * [misc]simplify:  iters left: 1 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667)))) (cbrt (- 1.5 (* x -0.166667))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667)))) (cbrt (- 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 51 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (/ (* (cbrt (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))) (cbrt (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))) (cbrt (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (171 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x (+ (* -0.166667 x) 1.5)) (* (- 1.5 (* -0.166667 x)) x))) (cbrt (* (* x (+ (* -0.166667 x) 1.5)) (* (- 1.5 (* -0.166667 x)) x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x (+ (* -0.166667 x) 1.5)) (* (- 1.5 (* -0.166667 x)) x))) (cbrt (* (* x (+ (* -0.166667 x) 1.5)) (* (- 1.5 (* -0.166667 x)) x))))
* [enter]simplify:  Simplifying (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667))))
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 52 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* 1 (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * * [misc]progress:  [ 53 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 54 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (55 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))) (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))) (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 55 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (sqrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (sqrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (sqrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (sqrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (sqrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 56 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) 1) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) 1)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 57 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (* (cbrt (* x x)) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* x x)) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x -0.166667) 1.5) (* x x))) (cbrt (* x x)))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x -0.166667) 1.5) (* x x))) (cbrt (* x x)))
* * * * [misc]progress:  [ 58 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (* (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 59 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (sqrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (* (sqrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (sqrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (sqrt (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 60 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* 1 (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 61 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (/ (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (160 enodes)
* * [misc]simplify:  iters left: 2 (270 enodes)
* * [misc]simplify:  iters left: 1 (348 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x -0.166667) (* x x)) (* (* x -0.166667) (* x -0.166667))) (* (pow 1.5 3) (* x x)))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x -0.166667) (* x x)) (* (* x -0.166667) (* x -0.166667))) (* (pow 1.5 3) (* x x)))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 62 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (/ (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (190 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- 1.5 (* x -0.166667)) (* (* x x) (+ (* x -0.166667) 1.5)))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (cbrt (* (- 1.5 (* x -0.166667)) (* (* x x) (+ (* x -0.166667) 1.5)))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 63 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (/ (* (cbrt (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (170 enodes)
* * [misc]simplify:  iters left: 2 (287 enodes)
* * [misc]simplify:  iters left: 1 (356 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ 1.5 (* -0.166667 x)))) (cbrt (+ (* (* (* x x) (* -0.166667 x)) (* (* -0.166667 x) (* -0.166667 x))) (* (* x x) (pow 1.5 3)))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ 1.5 (* -0.166667 x)))) (cbrt (+ (* (* (* x x) (* -0.166667 x)) (* (* -0.166667 x) (* -0.166667 x))) (* (* x x) (pow 1.5 3)))))
* * * * [misc]progress:  [ 64 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (/ (* (cbrt (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (189 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* (+ (* -0.166667 x) 1.5) (- 1.5 (* -0.166667 x))))) (cbrt (* (+ (* -0.166667 x) 1.5) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* (+ (* -0.166667 x) 1.5) (- 1.5 (* -0.166667 x))))) (cbrt (* (+ (* -0.166667 x) 1.5) (* x x))))
* * * * [misc]progress:  [ 65 / 77 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * * [misc]progress:  [ 66 / 77 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (- (+ (* 0.0006858737997283951 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (+ (* 0.03703711111111111 (* x (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (* 0.0046296481481666665 (/ (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (pow 1.5 2))))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (- (+ (* 0.0006858737997283951 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (+ (* 0.03703711111111111 (* x (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (* 0.0046296481481666665 (/ (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (pow 1.5 2)))))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (83 enodes)
* * [misc]simplify:  iters left: 4 (206 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (+ (- (* (* (pow x (* 2 1/3)) (pow 1.5 1/3)) (- (* (* x x) 0.0006858737997283951) (* x 0.03703711111111111))) (* (* 0.0046296481481666665 (* (/ x 1.5) (/ x 1.5))) (* (pow x (* 2 1/3)) (pow 1.5 1/3)))) (* (pow x (* 2 1/3)) (pow 1.5 1/3))) (* (cbrt (* (+ 1.5 (* x -0.166667)) (* x x))) (cbrt (* (+ 1.5 (* x -0.166667)) (* x x))))))
* * * * [misc]progress:  [ 67 / 77 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (- (+ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (* 4.499982000053998 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (pow x 2)))) (+ (* 2.9999940000119993 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (* (pow -0.166667 2) (pow x 2)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (- (+ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (* 4.499982000053998 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (pow x 2)))) (+ (* 2.9999940000119993 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (* (pow -0.166667 2) (pow x 2))))))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (87 enodes)
* * [misc]simplify:  iters left: 4 (208 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (- (* (/ (exp (+ (* 1/3 (log -0.166667)) (* (log x) (* 3 1/3)))) (* x x)) (- 4.499982000053998 (/ (/ 0.375 -0.166667) -0.166667))) (- (* (/ 2.9999940000119993 x) (exp (+ (* 1/3 (log -0.166667)) (* (log x) (* 3 1/3))))) (exp (+ (* 1/3 (log -0.166667)) (* (log x) (* 3 1/3)))))) (* (cbrt (* (* x x) (+ 1.5 (* x -0.166667)))) (cbrt (* (* x x) (+ 1.5 (* x -0.166667)))))))
* * * * [misc]progress:  [ 68 / 77 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (- (+ (* 4.499982000053998 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) (pow x 2))) (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x))))))) (+ (* 2.9999940000119993 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) (* (pow x 2) (pow 0.166667 2)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (- (+ (* 4.499982000053998 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) (pow x 2))) (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x))))))) (+ (* 2.9999940000119993 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) (* (pow x 2) (pow 0.166667 2))))))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (201 enodes)
* [exit]simplify:  Simplified to (+ (* (- (- (exp (+ (* 1/3 (log 0.166667)) (* (* 1/3 (- 3)) (log (/ -1 x))))) (* (/ 2.9999940000119993 x) (exp (+ (* 1/3 (log 0.166667)) (* (* 1/3 (- 3)) (log (/ -1 x))))))) (- (* (/ 0.375 (* (* x x) (* 0.166667 0.166667))) (exp (+ (* 1/3 (log 0.166667)) (* (* 1/3 (- 3)) (log (/ -1 x)))))) (* (/ 4.499982000053998 (* x x)) (exp (+ (* 1/3 (log 0.166667)) (* (* 1/3 (- 3)) (log (/ -1 x)))))))) (* (cbrt (* (* x x) (+ 1.5 (* x -0.166667)))) (cbrt (* (* x x) (+ 1.5 (* x -0.166667)))))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 69 / 77 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (- (+ (* 0.0006858737997283951 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (+ (* 0.03703711111111111 (* x (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (* 0.0046296481481666665 (/ (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (pow 1.5 2)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (- (+ (* 0.0006858737997283951 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (+ (* 0.03703711111111111 (* x (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (* 0.0046296481481666665 (/ (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (pow 1.5 2)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (193 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (+ (* (pow 1.5 1/3) (pow x (* 1/3 2))) (- (* (* (pow 1.5 1/3) (pow x (* 1/3 2))) (- (* (* 0.0006858737997283951 x) x) (* x 0.03703711111111111))) (* (* 0.0046296481481666665 (* (/ x 1.5) (/ x 1.5))) (* (pow 1.5 1/3) (pow x (* 1/3 2)))))) (* (cbrt (* (* x x) (+ 1.5 (* x -0.166667)))) (cbrt (* (* x x) (+ 1.5 (* x -0.166667)))))))
* * * * [misc]progress:  [ 70 / 77 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (- (+ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (* 4.499982000053998 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (pow x 2)))) (+ (* 2.9999940000119993 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (* (pow -0.166667 2) (pow x 2))))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (- (+ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (* 4.499982000053998 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (pow x 2)))) (+ (* 2.9999940000119993 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (* (pow -0.166667 2) (pow x 2))))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (86 enodes)
* * [misc]simplify:  iters left: 4 (195 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (- (* (/ (exp (+ (* (log -0.166667) 1/3) (* (* 1/3 3) (log x)))) (* x x)) (- 4.499982000053998 (/ 0.375 (* -0.166667 -0.166667)))) (- (* (/ 2.9999940000119993 x) (exp (+ (* (log -0.166667) 1/3) (* (* 1/3 3) (log x))))) (exp (+ (* (log -0.166667) 1/3) (* (* 1/3 3) (log x)))))) (* (cbrt (* (+ 1.5 (* x -0.166667)) (* x x))) (cbrt (* (+ 1.5 (* x -0.166667)) (* x x))))))
* * * * [misc]progress:  [ 71 / 77 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (- (+ (* 4.499982000053998 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) (pow x 2))) (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x))))))) (+ (* 2.9999940000119993 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) (* (pow x 2) (pow 0.166667 2))))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (- (+ (* 4.499982000053998 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) (pow x 2))) (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x))))))) (+ (* 2.9999940000119993 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) (* (pow x 2) (pow 0.166667 2))))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (190 enodes)
* [exit]simplify:  Simplified to (+ (* (- (- (exp (+ (* (log 0.166667) 1/3) (* (* 1/3 (- 3)) (log (/ -1 x))))) (* (/ 0.375 (* (* x x) (* 0.166667 0.166667))) (exp (+ (* (log 0.166667) 1/3) (* (* 1/3 (- 3)) (log (/ -1 x))))))) (- (* (/ 2.9999940000119993 x) (exp (+ (* (log 0.166667) 1/3) (* (* 1/3 (- 3)) (log (/ -1 x)))))) (* (/ 4.499982000053998 (* x x)) (exp (+ (* (log 0.166667) 1/3) (* (* 1/3 (- 3)) (log (/ -1 x)))))))) (* (cbrt (* (* x x) (+ 1.5 (* x -0.166667)))) (cbrt (* (* x x) (+ 1.5 (* x -0.166667)))))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 72 / 77 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (- (+ (* 0.0006858737997283951 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (+ (* 0.03703711111111111 (* x (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (* 0.0046296481481666665 (/ (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (pow 1.5 2))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (* (- (+ (* 0.0006858737997283951 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (+ (* 0.03703711111111111 (* x (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))))) (* 0.0046296481481666665 (/ (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log 1.5))))) (pow 1.5 2))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (+ (- (* (* (pow x (* 1/3 2)) (pow 1.5 1/3)) (- (* (* 0.0006858737997283951 x) x) (* x 0.03703711111111111))) (* (* 0.0046296481481666665 (* (/ x 1.5) (/ x 1.5))) (* (pow x (* 1/3 2)) (pow 1.5 1/3)))) (* (pow x (* 1/3 2)) (pow 1.5 1/3))) (* (cbrt (* (* x x) (+ 1.5 (* -0.166667 x)))) (cbrt (* (* x x) (+ 1.5 (* -0.166667 x)))))))
* * * * [misc]progress:  [ 73 / 77 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (- (+ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (* 4.499982000053998 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (pow x 2)))) (+ (* 2.9999940000119993 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (* (pow -0.166667 2) (pow x 2)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (* (- (+ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (* 4.499982000053998 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (pow x 2)))) (+ (* 2.9999940000119993 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) (* (pow -0.166667 2) (pow x 2)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (196 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (- (* (/ (exp (+ (* (* 1/3 3) (log x)) (* 1/3 (log -0.166667)))) (* x x)) (- 4.499982000053998 (/ (/ 0.375 -0.166667) -0.166667))) (- (* (/ 2.9999940000119993 x) (exp (+ (* (* 1/3 3) (log x)) (* 1/3 (log -0.166667))))) (exp (+ (* (* 1/3 3) (log x)) (* 1/3 (log -0.166667)))))) (* (cbrt (* (+ 1.5 (* x -0.166667)) (* x x))) (cbrt (* (+ 1.5 (* x -0.166667)) (* x x))))))
* * * * [misc]progress:  [ 74 / 77 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (- (+ (* 4.499982000053998 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) (pow x 2))) (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x))))))) (+ (* 2.9999940000119993 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) (* (pow x 2) (pow 0.166667 2)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (* (- (+ (* 4.499982000053998 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) (pow x 2))) (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x))))))) (+ (* 2.9999940000119993 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) (* (pow x 2) (pow 0.166667 2)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (85 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))) (- (- (exp (+ (* (log 0.166667) 1/3) (* (* 1/3 (- 3)) (log (/ -1 x))))) (* (/ 2.9999940000119993 x) (exp (+ (* (log 0.166667) 1/3) (* (* 1/3 (- 3)) (log (/ -1 x))))))) (- (* (/ 0.375 (* (* x x) (* 0.166667 0.166667))) (exp (+ (* (log 0.166667) 1/3) (* (* 1/3 (- 3)) (log (/ -1 x)))))) (* (/ 4.499982000053998 (* x x)) (exp (+ (* (log 0.166667) 1/3) (* (* 1/3 (- 3)) (log (/ -1 x))))))))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 75 / 77 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (- (+ (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2) (* 0.0027434951989135804 (* (pow x 2) (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2)))) (+ (* 0.07407422222222222 (* x (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2))) (* 0.009259296296333333 (/ (* (pow x 2) (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2)) (pow 1.5 2))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (- (+ (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2) (* 0.0027434951989135804 (* (pow x 2) (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2)))) (+ (* 0.07407422222222222 (* x (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2))) (* 0.009259296296333333 (/ (* (pow x 2) (pow (exp (* 1/3 (+ (* 2 (log x)) (log 1.5)))) 2)) (pow 1.5 2))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (209 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (- (* (* (* (pow x (* 2 1/3)) (pow 1.5 1/3)) (* (pow x (* 2 1/3)) (pow 1.5 1/3))) (- (+ (* (* 0.0027434951989135804 x) x) 1) (* 0.07407422222222222 x))) (* (* 0.009259296296333333 (* (/ x 1.5) (/ x 1.5))) (* (* (pow x (* 2 1/3)) (pow 1.5 1/3)) (* (pow x (* 2 1/3)) (pow 1.5 1/3))))) (cbrt (* (+ (* -0.166667 x) 1.5) (* x x)))))
* * * * [misc]progress:  [ 76 / 77 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (- (+ (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2) (* 17.99992800021599 (/ (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2) (pow x 2)))) (+ (* 5.999988000023999 (/ (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2) x)) (* 0.75 (/ (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2) (* (pow -0.166667 2) (pow x 2)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (- (+ (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2) (* 17.99992800021599 (/ (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2) (pow x 2)))) (+ (* 5.999988000023999 (/ (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2) x)) (* 0.75 (/ (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2) (* (pow -0.166667 2) (pow x 2)))))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (86 enodes)
* * [misc]simplify:  iters left: 4 (217 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (cbrt (* (* x x) (+ 1.5 (* x -0.166667)))) (- (* (/ (exp (* (+ (* 3 (log x)) (log -0.166667)) (+ 1/3 1/3))) (* x x)) (- 17.99992800021599 (/ (/ 0.75 -0.166667) -0.166667))) (- (* (/ 5.999988000023999 x) (exp (* (+ (* 3 (log x)) (log -0.166667)) (+ 1/3 1/3)))) (exp (* (+ (* 3 (log x)) (log -0.166667)) (+ 1/3 1/3)))))))
* * * * [misc]progress:  [ 77 / 77 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (- (+ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (* 17.99992800021599 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (pow x 2)))) (+ (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (* (pow x 2) (pow 0.166667 2)))) (* 5.999988000023999 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (- (+ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (* 17.99992800021599 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (pow x 2)))) (+ (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (* (pow x 2) (pow 0.166667 2)))) (* 5.999988000023999 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (83 enodes)
* * [misc]simplify:  iters left: 4 (206 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (* (+ (* x -0.166667) 1.5) (* x x))) (- (* (/ (exp (* (- (log 0.166667) (* 3 (log (/ -1 x)))) (+ 1/3 1/3))) (* x x)) (- 17.99992800021599 (/ 0.75 (* 0.166667 0.166667)))) (- (* (/ 5.999988000023999 x) (exp (* (- (log 0.166667) (* 3 (log (/ -1 x)))) (+ 1/3 1/3)))) (exp (* (- (log 0.166667) (* 3 (log (/ -1 x)))) (+ 1/3 1/3)))))) (+ 1.0 (* x -3.0)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 1 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 1) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- 0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) (pow x 3)) (* 1.5 (pow x 2))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow (/ 1 (/ 1 x)) 2)) (* -0.166667 (pow (/ 1 (/ 1 x)) 3))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify 0.166667 into 0.166667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow (/ 1 (/ 1 (- x))) 2)) (* 0.166667 (pow (/ 1 (/ 1 (- x))) 3))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2 1 2)
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 1) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- 0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) (pow x 3)) (* 1.5 (pow x 2))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow (/ 1 (/ 1 x)) 2)) (* -0.166667 (pow (/ 1 (/ 1 x)) 3))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify 0.166667 into 0.166667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow (/ 1 (/ 1 (- x))) 2)) (* 0.166667 (pow (/ 1 (/ 1 (- x))) 3))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 1) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- 0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) (pow x 3)) (* 1.5 (pow x 2))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow (/ 1 (/ 1 x)) 2)) (* -0.166667 (pow (/ 1 (/ 1 x)) 3))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify 0.166667 into 0.166667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow (/ 1 (/ 1 (- x))) 2)) (* 0.166667 (pow (/ 1 (/ 1 (- x))) 3))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -3.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.0)) into (* 1/3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.0))) into (pow 1.0 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -3.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.0)) into (* 1/3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.0))) into (pow 1.0 1/3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -3.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.0)) into (* 1/3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.0))) into (pow 1.0 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -3.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.0)) into (* 1/3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.0))) into (pow 1.0 1/3)
* [misc]backup-simplify:  Simplify (* (pow 1.0 1/3) (pow 1.0 1/3)) into (pow (pow 1.0 2) 1/3)
* [misc]backup-simplify:  Simplify (pow (pow 1.0 2) 1/3) into (pow (pow 1.0 2) 1/3)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 3.0)) 1)) (pow 1.0 1)))) 1) into -3.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -3.0) (* 0 (log 1.0))) into (- 1.0)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.0))) (+ (* (/ (pow (- 1.0) 1) 1)))) into (* -1.0 (pow 1.0 1/3))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 3.0)) 1)) (pow 1.0 1)))) 1) into -3.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -3.0) (* 0 (log 1.0))) into (- 1.0)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.0))) (+ (* (/ (pow (- 1.0) 1) 1)))) into (* -1.0 (pow 1.0 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.0 1/3) (* -1.0 (pow 1.0 1/3))) (* (* -1.0 (pow 1.0 1/3)) (pow 1.0 1/3))) into (- (* 2.0 (pow (pow 1.0 2) 1/3)))
* [misc]backup-simplify:  Simplify (- (* 2.0 (pow (pow 1.0 2) 1/3))) into (- (* 2.0 (pow (pow 1.0 2) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 3.0)) 2)) (pow 1.0 2))) (* 1 (/ (* 1 (pow (* 2 1.5) 1)) (pow 1.0 1)))) 2) into (* 1/2 (- 3.0 (* 9.0 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 3.0 (* 9.0 (/ 1 (pow 1.0 2)))))) (+ (* 0 -3.0) (* 0 (log 1.0)))) into (- 0.5 (* 1.5 (/ 1 (pow 1.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.0))) (+ (* (/ (pow (- 1.0) 2) 2)) (* (/ (pow (- 0.5 (* 1.5 (/ 1 (pow 1.0 2)))) 1) 1)))) into (* (pow 1.0 1/3) (- 1.0 (* 1.5 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 3.0)) 2)) (pow 1.0 2))) (* 1 (/ (* 1 (pow (* 2 1.5) 1)) (pow 1.0 1)))) 2) into (* 1/2 (- 3.0 (* 9.0 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 3.0 (* 9.0 (/ 1 (pow 1.0 2)))))) (+ (* 0 -3.0) (* 0 (log 1.0)))) into (- 0.5 (* 1.5 (/ 1 (pow 1.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.0))) (+ (* (/ (pow (- 1.0) 2) 2)) (* (/ (pow (- 0.5 (* 1.5 (/ 1 (pow 1.0 2)))) 1) 1)))) into (* (pow 1.0 1/3) (- 1.0 (* 1.5 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.0 1/3) (* (pow 1.0 1/3) (- 1.0 (* 1.5 (/ 1 (pow 1.0 2)))))) (+ (* (* -1.0 (pow 1.0 1/3)) (* -1.0 (pow 1.0 1/3))) (* (* (pow 1.0 1/3) (- 1.0 (* 1.5 (/ 1 (pow 1.0 2))))) (pow 1.0 1/3)))) into (- (* 3.0 (pow (pow 1.0 2) 1/3)) (* 3.0 (pow (/ 1 (pow 1.0 4)) 1/3)))
* [misc]backup-simplify:  Simplify (- (* 3.0 (pow (pow 1.0 2) 1/3)) (* 3.0 (pow (/ 1 (pow 1.0 4)) 1/3))) into (- (* 3.0 (pow (pow 1.0 2) 1/3)) (* 3.0 (pow (/ 1 (pow 1.0 4)) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* (- (* 3.0 (pow (pow 1.0 2) 1/3)) (* 3.0 (pow (/ 1 (pow 1.0 4)) 1/3))) (pow x 2)) (+ (* (- (* 2.0 (pow (pow 1.0 2) 1/3))) x) (pow (pow 1.0 2) 1/3))) into (- (+ (* 3.0 (* (pow (pow 1.0 2) 1/3) (pow x 2))) (pow (pow 1.0 2) 1/3)) (+ (* 3.0 (* (pow (/ 1 (pow 1.0 4)) 1/3) (pow x 2))) (* 2.0 (* (pow (pow 1.0 2) 1/3) x))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) (cbrt (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) (cbrt (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) (cbrt (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow (- 0.166667) 1)))) 1) into -8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -8.999982000035999) (* 0 (- (log (- 0.166667)) (* 3 (log x))))) into (- 2.9999940000119993)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow (- 2.9999940000119993) 1) 1)))) into (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow (- 0.166667) 1)))) 1) into -8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -8.999982000035999) (* 0 (- (log (- 0.166667)) (* 3 (log x))))) into (- 2.9999940000119993)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow (- 2.9999940000119993) 1) 1)))) into (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))))) (* (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x)))))) (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))))) into (- (* 5.999988000023999 (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (* 5.999988000023999 (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) 2))) into (- (* 5.999988000023999 (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (* 1 -3.0) into -3.0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 (- 3.0)) 1)) (pow (- 0.166667) 1)))) 2) into (* 1/2 (- 35.999928000143996 (* 2.25 (/ 1 (pow -0.166667 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 35.999928000143996 (* 2.25 (/ 1 (pow -0.166667 2)))))) (+ (* 0 -8.999982000035999) (* 0 (- (log (- 0.166667)) (* 3 (log x)))))) into (- 5.999988000023999 (* 0.375 (/ 1 (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow (- 2.9999940000119993) 2) 2)) (* (/ (pow (- 5.999988000023999 (* 0.375 (/ 1 (pow -0.166667 2)))) 1) 1)))) into (* (- 10.499970000077997 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* 1 -3.0) into -3.0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 (- 3.0)) 1)) (pow (- 0.166667) 1)))) 2) into (* 1/2 (- 35.999928000143996 (* 2.25 (/ 1 (pow -0.166667 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 35.999928000143996 (* 2.25 (/ 1 (pow -0.166667 2)))))) (+ (* 0 -8.999982000035999) (* 0 (- (log (- 0.166667)) (* 3 (log x)))))) into (- 5.999988000023999 (* 0.375 (/ 1 (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow (- 2.9999940000119993) 2) 2)) (* (/ (pow (- 5.999988000023999 (* 0.375 (/ 1 (pow -0.166667 2)))) 1) 1)))) into (* (- 10.499970000077997 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) (* (- 10.499970000077997 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))))) (+ (* (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x)))))) (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))))) (* (* (- 10.499970000077997 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x)))))) (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x)))))))) into (- (* 29.999904000263992 (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) 2) (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (- (* 29.999904000263992 (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) 2) (pow -0.166667 2)))) into (- (* 29.999904000263992 (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log x))))) 2) (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 29.999904000263992 (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log (/ 1 x)))))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log (/ 1 x)))))) 2) (pow -0.166667 2)))) (pow (/ 1 x) 2)) (+ (* (- (* 5.999988000023999 (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log (/ 1 x)))))) 2))) (/ 1 x)) (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log (/ 1 x)))))) 2))) into (- (+ (* 29.999904000263992 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log (/ 1 x)))))) 2) (pow x 2))) (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log (/ 1 x)))))) 2)) (+ (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log (/ 1 x)))))) 2) (* (pow -0.166667 2) (pow x 2)))) (* 5.999988000023999 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log (/ 1 x)))))) 2) x))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) (cbrt (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) (cbrt (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) (cbrt (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow 0.166667 1)))) 1) into 8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 8.999982000035999) (* 0 (- (log 0.166667) (* 3 (log x))))) into 2.9999940000119993
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 2.9999940000119993 1) 1)))) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow 0.166667 1)))) 1) into 8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 8.999982000035999) (* 0 (- (log 0.166667) (* 3 (log x))))) into 2.9999940000119993
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 2.9999940000119993 1) 1)))) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))) (* (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))) (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))) into (* 5.999988000023999 (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (* 5.999988000023999 (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)) into (* 5.999988000023999 (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (* -1 -3.0) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 3.0) 1)) (pow 0.166667 1)))) 2) into (* 1/2 (- 35.999928000143996 (* 2.25 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 35.999928000143996 (* 2.25 (/ 1 (pow 0.166667 2)))))) (+ (* 0 8.999982000035999) (* 0 (- (log 0.166667) (* 3 (log x)))))) into (- 5.999988000023999 (* 0.375 (/ 1 (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 2.9999940000119993 2) 2)) (* (/ (pow (- 5.999988000023999 (* 0.375 (/ 1 (pow 0.166667 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (- 10.499970000077997 (* 0.375 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (* -1 -3.0) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 3.0) 1)) (pow 0.166667 1)))) 2) into (* 1/2 (- 35.999928000143996 (* 2.25 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 35.999928000143996 (* 2.25 (/ 1 (pow 0.166667 2)))))) (+ (* 0 8.999982000035999) (* 0 (- (log 0.166667) (* 3 (log x)))))) into (- 5.999988000023999 (* 0.375 (/ 1 (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 2.9999940000119993 2) 2)) (* (/ (pow (- 5.999988000023999 (* 0.375 (/ 1 (pow 0.166667 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (- 10.499970000077997 (* 0.375 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (- 10.499970000077997 (* 0.375 (/ 1 (pow 0.166667 2)))))) (+ (* (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))) (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))) (* (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (- 10.499970000077997 (* 0.375 (/ 1 (pow 0.166667 2))))) (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))) into (- (* 29.999904000263992 (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (- (* 29.999904000263992 (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) (pow 0.166667 2)))) into (- (* 29.999904000263992 (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 29.999904000263992 (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x))))))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x))))))) 2) (pow 0.166667 2)))) (pow (/ 1 (- x)) 2)) (+ (* (* 5.999988000023999 (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x))))))) 2)) (/ 1 (- x))) (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x))))))) 2))) into (- (+ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (* 29.999904000263992 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (pow x 2)))) (+ (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (* (pow x 2) (pow 0.166667 2)))) (* 5.999988000023999 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) x))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1)))))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 2 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1)))))>
* * * * [misc]progress:  [ 3 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (exp (+ (log (+ 1.5 (* -0.166667 x))) (log (* x x))))))))>
* [enter]simplify:  Simplifying (+ (log (+ 1.5 (* -0.166667 x))) (log (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x -0.166667) 1.5)) (log (* x x)))
* [exit]simplify:  Simplified to (+ (log (+ (* x -0.166667) 1.5)) (log (* x x)))
* * * * [misc]progress:  [ 4 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (exp (log (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (log (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 5 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (98 enodes)
* * [misc]simplify:  iters left: 1 (123 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 6 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (cbrt (* (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (+ 1.5 (* -0.166667 x))) (* (* (* x x) (* x x)) (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (+ 1.5 (* -0.166667 x))) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* [exit]simplify:  Simplified to (* (* (pow (* x x) 3) (+ (* x -0.166667) 1.5)) (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* (pow (* x x) 3) (+ (* x -0.166667) 1.5)) (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 7 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 8 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (cbrt (* (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* * * * [misc]progress:  [ 9 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [enter]simplify:  Simplifying (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 10 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* 1 (* (+ 1.5 (* -0.166667 x)) (* x x)))))))>
* * * * [misc]progress:  [ 11 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)))))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) x)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) x)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) x)
* * * * [misc]progress:  [ 12 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 13 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 14 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* 1 (* (+ 1.5 (* -0.166667 x)) (* x x)))))))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 15 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (/ (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (141 enodes)
* * [misc]simplify:  iters left: 2 (266 enodes)
* * [misc]simplify:  iters left: 1 (338 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))) (* (* x x) (pow 1.5 3)))
* [exit]simplify:  Simplified to (+ (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))) (* (* x x) (pow 1.5 3)))
* * * * [misc]progress:  [ 16 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (/ (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)) (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (169 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* -0.166667 x) 1.5) x) (* (- 1.5 (* -0.166667 x)) x))
* [exit]simplify:  Simplified to (* (* (+ (* -0.166667 x) 1.5) x) (* (- 1.5 (* -0.166667 x)) x))
* * * * [misc]progress:  [ 17 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (* x x) (+ 1.5 (* -0.166667 x)))))))>
* * * * [misc]progress:  [ 18 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 19 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * * [misc]progress:  [ 20 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (exp (+ (log (+ 1.5 (* -0.166667 x))) (log (* x x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ (log (+ 1.5 (* -0.166667 x))) (log (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x -0.166667) 1.5)) (log (* x x)))
* [exit]simplify:  Simplified to (+ (log (+ (* x -0.166667) 1.5)) (log (* x x)))
* * * * [misc]progress:  [ 21 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (exp (log (* (+ 1.5 (* -0.166667 x)) (* x x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (log (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 22 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (98 enodes)
* * [misc]simplify:  iters left: 1 (123 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 23 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (cbrt (* (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (+ 1.5 (* -0.166667 x))) (* (* (* x x) (* x x)) (* x x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (+ 1.5 (* -0.166667 x))) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* [exit]simplify:  Simplified to (* (* (pow (* x x) 3) (+ (* x -0.166667) 1.5)) (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* (pow (* x x) 3) (+ (* x -0.166667) 1.5)) (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 24 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 25 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (cbrt (* (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ 1.5 (* -0.166667 x)) (* x x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* * * * [misc]progress:  [ 26 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [enter]simplify:  Simplifying (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 27 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* 1 (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * * [misc]progress:  [ 28 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) x)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) x)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) x)
* * * * [misc]progress:  [ 29 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 30 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 31 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* 1 (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 32 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (/ (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (141 enodes)
* * [misc]simplify:  iters left: 2 (266 enodes)
* * [misc]simplify:  iters left: 1 (338 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))) (* (* x x) (pow 1.5 3)))
* [exit]simplify:  Simplified to (+ (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))) (* (* x x) (pow 1.5 3)))
* * * * [misc]progress:  [ 33 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (/ (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)) (- 1.5 (* -0.166667 x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (169 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* -0.166667 x) 1.5) x) (* (- 1.5 (* -0.166667 x)) x))
* [exit]simplify:  Simplified to (* (* (+ (* -0.166667 x) 1.5) x) (* (- 1.5 (* -0.166667 x)) x))
* * * * [misc]progress:  [ 34 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (* x x) (+ 1.5 (* -0.166667 x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * * [misc]progress:  [ 35 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 36 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * * [misc]progress:  [ 37 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (exp (+ (log (+ 1.5 (* -0.166667 x))) (log (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ (log (+ 1.5 (* -0.166667 x))) (log (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x -0.166667) 1.5)) (log (* x x)))
* [exit]simplify:  Simplified to (+ (log (+ (* x -0.166667) 1.5)) (log (* x x)))
* * * * [misc]progress:  [ 38 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (exp (log (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (log (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 39 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (98 enodes)
* * [misc]simplify:  iters left: 1 (123 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 40 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (cbrt (* (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (+ 1.5 (* -0.166667 x))) (* (* (* x x) (* x x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (+ 1.5 (* -0.166667 x))) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* [exit]simplify:  Simplified to (* (* (pow (* x x) 3) (+ (* x -0.166667) 1.5)) (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* (pow (* x x) 3) (+ (* x -0.166667) 1.5)) (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 41 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 42 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (cbrt (* (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* * * * [misc]progress:  [ 43 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [enter]simplify:  Simplifying (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 44 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* 1 (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * * [misc]progress:  [ 45 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) x)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) x)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) x)
* * * * [misc]progress:  [ 46 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 47 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 48 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* 1 (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 49 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (/ (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (141 enodes)
* * [misc]simplify:  iters left: 2 (266 enodes)
* * [misc]simplify:  iters left: 1 (338 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))) (* (* x x) (pow 1.5 3)))
* [exit]simplify:  Simplified to (+ (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))) (* (* x x) (pow 1.5 3)))
* * * * [misc]progress:  [ 50 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (/ (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)) (- 1.5 (* -0.166667 x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (169 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* -0.166667 x) 1.5) x) (* (- 1.5 (* -0.166667 x)) x))
* [exit]simplify:  Simplified to (* (* (+ (* -0.166667 x) 1.5) x) (* (- 1.5 (* -0.166667 x)) x))
* * * * [misc]progress:  [ 51 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (* x x) (+ 1.5 (* -0.166667 x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * * [misc]progress:  [ 52 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) (+ 1/3 1/3)) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 53 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (+ 1 1)) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 54 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (* (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) 1/3) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* [exit]simplify:  Simplified to (* (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))) (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (* (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))) (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* * * * [misc]progress:  [ 55 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) 1) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (105 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (325 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))) (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))) (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))))
* * * * [misc]progress:  [ 56 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) 2) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * * [misc]progress:  [ 57 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (+ 1 1)) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 58 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) 1) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * * [misc]progress:  [ 59 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (exp (+ (log (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (log (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (log (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (106 enodes)
* * [misc]simplify:  iters left: 2 (188 enodes)
* * [misc]simplify:  iters left: 1 (322 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))) (log (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))) (log (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))))
* * * * [misc]progress:  [ 60 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (exp (log (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (108 enodes)
* * [misc]simplify:  iters left: 2 (190 enodes)
* * [misc]simplify:  iters left: 1 (313 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))) (log (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))) (log (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))))
* * * * [misc]progress:  [ 61 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (log (exp (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (108 enodes)
* * [misc]simplify:  iters left: 2 (190 enodes)
* * [misc]simplify:  iters left: 1 (313 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))))
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))))
* * * * [misc]progress:  [ 62 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (* (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* [exit]simplify:  Simplified to (* (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))) (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (* (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))) (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* * * * [misc]progress:  [ 63 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))) (cbrt (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (107 enodes)
* * [misc]simplify:  iters left: 2 (184 enodes)
* * [misc]simplify:  iters left: 1 (310 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))) (cbrt (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))) (cbrt (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (106 enodes)
* * [misc]simplify:  iters left: 2 (188 enodes)
* * [misc]simplify:  iters left: 1 (322 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))))
* * * * [misc]progress:  [ 64 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (* (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (130 enodes)
* * [misc]simplify:  iters left: 2 (321 enodes)
* [exit]simplify:  Simplified to (* (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))) (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (* (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))) (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* * * * [misc]progress:  [ 65 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (sqrt (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (107 enodes)
* * [misc]simplify:  iters left: 2 (184 enodes)
* * [misc]simplify:  iters left: 1 (310 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (107 enodes)
* * [misc]simplify:  iters left: 2 (184 enodes)
* * [misc]simplify:  iters left: 1 (310 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* * * * [misc]progress:  [ 66 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))))) (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (277 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (+ (* (* x x) (pow 1.5 3)) (* (* (* x -0.166667) (* x -0.166667)) (* (* x -0.166667) (* x x)))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (+ (* (* x x) (pow 1.5 3)) (* (* (* x -0.166667) (* x -0.166667)) (* (* x -0.166667) (* x x)))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (+ (* (* x x) (pow 1.5 3)) (* (* (* x -0.166667) (* x -0.166667)) (* (* x -0.166667) (* x x)))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (+ (* (* x x) (pow 1.5 3)) (* (* (* x -0.166667) (* x -0.166667)) (* (* x -0.166667) (* x x)))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))))))
* [enter]simplify:  Simplifying (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))))) (cbrt (* (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))))) (cbrt (* (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))))))
* * * * [misc]progress:  [ 67 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))))) (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* * [misc]simplify:  iters left: 4 (372 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (+ (* (* (* x x) (* x -0.166667)) (* (* x -0.166667) (* x -0.166667))) (* (* x x) (pow 1.5 3))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))))) (cbrt (+ (* (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0))) (* (* (* x x) (- 1.5 (* x -0.166667))) (+ (* x -0.166667) 1.5))) (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* x -0.166667))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (+ (* (* (* x x) (* x -0.166667)) (* (* x -0.166667) (* x -0.166667))) (* (* x x) (pow 1.5 3))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))))) (cbrt (+ (* (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0))) (* (* (* x x) (- 1.5 (* x -0.166667))) (+ (* x -0.166667) 1.5))) (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* x -0.166667))))))
* [enter]simplify:  Simplifying (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- 1.5 (* x -0.166667)) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))))) (cbrt (* (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (- 1.5 (* x -0.166667)) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))))) (cbrt (* (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))))))
* * * * [misc]progress:  [ 68 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))))) (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (114 enodes)
* * [misc]simplify:  iters left: 4 (392 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (- (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (+ (pow (* x -0.166667) 3) (pow 1.5 3)) (* (- (* x -3.0) 1.0) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (+ (* (* (* x -0.166667) (* x -0.166667)) (* (* x -0.166667) (* x x))) (* (* x x) (pow 1.5 3))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (- (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (+ (pow (* x -0.166667) 3) (pow 1.5 3)) (* (- (* x -3.0) 1.0) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (+ (* (* (* x -0.166667) (* x -0.166667)) (* (* x -0.166667) (* x x))) (* (* x x) (pow 1.5 3))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))))))
* [enter]simplify:  Simplifying (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (212 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x -0.166667) (- (* x -0.166667) 1.5)) (* 1.5 1.5)) (- (* x -3.0) 1.0))) (cbrt (* (+ (* (* x -0.166667) (- (* x -0.166667) 1.5)) (* 1.5 1.5)) (+ (* 1.0 1.0) (* (* x -3.0) (- (* x -3.0) 1.0))))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x -0.166667) (- (* x -0.166667) 1.5)) (* 1.5 1.5)) (- (* x -3.0) 1.0))) (cbrt (* (+ (* (* x -0.166667) (- (* x -0.166667) 1.5)) (* 1.5 1.5)) (+ (* 1.0 1.0) (* (* x -3.0) (- (* x -3.0) 1.0))))))
* * * * [misc]progress:  [ 69 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))))) (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (120 enodes)
* * [misc]simplify:  iters left: 4 (396 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (+ (* x -3.0) 1.0) (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)) (* (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667))) (* (* x x) (- (* x -3.0) 1.0))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (+ (* (* x x) (pow 1.5 3)) (* (* (* x x) (* x -0.166667)) (* (* x -0.166667) (* x -0.166667)))) (+ (* (* x -3.0) (- (* x -3.0) 1.0)) (* 1.0 1.0))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (+ (* x -3.0) 1.0) (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)) (* (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667))) (* (* x x) (- (* x -3.0) 1.0))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (+ (* (* x x) (pow 1.5 3)) (* (* (* x x) (* x -0.166667)) (* (* x -0.166667) (* x -0.166667)))) (+ (* (* x -3.0) (- (* x -3.0) 1.0)) (* 1.0 1.0))))))
* [enter]simplify:  Simplifying (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (192 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (cbrt (* (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (cbrt (* (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))))
* * * * [misc]progress:  [ 70 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3)))) (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (113 enodes)
* * [misc]simplify:  iters left: 4 (360 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (+ (* (* (* x x) (* x -0.166667)) (* (* x -0.166667) (* x -0.166667))) (* (* x x) (pow 1.5 3))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))))) (cbrt (+ (pow (* (+ (* x -0.166667) 1.5) (* x x)) 3) (pow (+ (* x -3.0) 1.0) 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (+ (* (* (* x x) (* x -0.166667)) (* (* x -0.166667) (* x -0.166667))) (* (* x x) (pow 1.5 3))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))))) (cbrt (+ (pow (* (+ (* x -0.166667) 1.5) (* x x)) 3) (pow (+ (* x -3.0) 1.0) 3))))
* [enter]simplify:  Simplifying (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (93 enodes)
* * [misc]simplify:  iters left: 4 (318 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x -0.166667) (- (* x -0.166667) 1.5)) (* 1.5 1.5)) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))) (cbrt (- (* (* (+ (* x -0.166667) 1.5) (* x x)) (* (+ (* x -0.166667) 1.5) (* x x))) (* (+ 1.0 (* x -3.0)) (- (* (+ (* x -0.166667) 1.5) (* x x)) (+ 1.0 (* x -3.0)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x -0.166667) (- (* x -0.166667) 1.5)) (* 1.5 1.5)) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))) (cbrt (- (* (* (+ (* x -0.166667) 1.5) (* x x)) (* (+ (* x -0.166667) 1.5) (* x x))) (* (+ 1.0 (* x -3.0)) (- (* (+ (* x -0.166667) 1.5) (* x x)) (+ 1.0 (* x -3.0)))))))
* * * * [misc]progress:  [ 71 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (118 enodes)
* * [misc]simplify:  iters left: 4 (384 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (+ (* (* x x) (pow 1.5 3)) (* (* (* x x) (* x -0.166667)) (* (* x -0.166667) (* x -0.166667)))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))))) (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ (* x -0.166667) 1.5) (* x x)) (* (+ (* x -0.166667) 1.5) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (+ (* (* x x) (pow 1.5 3)) (* (* (* x x) (* x -0.166667)) (* (* x -0.166667) (* x -0.166667)))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))))) (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ (* x -0.166667) 1.5) (* x x)) (* (+ (* x -0.166667) 1.5) (* x x))))))
* [enter]simplify:  Simplifying (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (73 enodes)
* * [misc]simplify:  iters left: 4 (207 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (- (* x -0.166667) 1.5) (* x -0.166667)) (* 1.5 1.5)) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))) (cbrt (- (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (- (* x -0.166667) 1.5) (* x -0.166667)) (* 1.5 1.5)) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))) (cbrt (- (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x)))))
* * * * [misc]progress:  [ 72 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))))) (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* * [misc]simplify:  iters left: 4 (372 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x (+ 1.5 (* -0.166667 x))) (* x (- 1.5 (* -0.166667 x)))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (+ (* (* (* -0.166667 x) (* -0.166667 x)) (* (* -0.166667 x) (* x x))) (* (* x x) (pow 1.5 3)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x (+ 1.5 (* -0.166667 x))) (* x (- 1.5 (* -0.166667 x)))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (+ (* (* (* -0.166667 x) (* -0.166667 x)) (* (* -0.166667 x) (* x x))) (* (* x x) (pow 1.5 3)))))))
* [enter]simplify:  Simplifying (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (- 1.5 (* x -0.166667)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (- 1.5 (* x -0.166667)))))
* * * * [misc]progress:  [ 73 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))))) (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (- 1.5 (* -0.166667 x))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))) (cbrt (+ (* (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (- 1.5 (* -0.166667 x))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (- 1.5 (* -0.166667 x))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))) (cbrt (+ (* (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (- 1.5 (* -0.166667 x))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))))
* [enter]simplify:  Simplifying (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (237 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (- 1.5 (* x -0.166667)))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (- 1.5 (* x -0.166667)))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (- 1.5 (* x -0.166667)))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (- 1.5 (* x -0.166667)))))
* * * * [misc]progress:  [ 74 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))))) (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))) (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (120 enodes)
* * [misc]simplify:  iters left: 4 (400 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))) (cbrt (+ (* (* (+ (* x -3.0) 1.0) (- (* x -3.0) 1.0)) (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* (* x x) (- (* x -3.0) 1.0))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))) (cbrt (+ (* (* (+ (* x -3.0) 1.0) (- (* x -3.0) 1.0)) (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* (* x x) (- (* x -3.0) 1.0))))))
* [enter]simplify:  Simplifying (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))) (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* 1.0 1.0) (* (* x -3.0) (- (* x -3.0) 1.0))) (- 1.5 (* x -0.166667)))) (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5))))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* 1.0 1.0) (* (* x -3.0) (- (* x -3.0) 1.0))) (- 1.5 (* x -0.166667)))) (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5))))))
* * * * [misc]progress:  [ 75 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))))) (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))) (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (87 enodes)
* * [misc]simplify:  iters left: 4 (274 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (- 1.5 (* -0.166667 x))) (+ (* (* x -3.0) (- (* x -3.0) 1.0)) (* 1.0 1.0))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))) (cbrt (+ (* (- 1.5 (* -0.166667 x)) (* (+ (* x -3.0) 1.0) (- (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (- 1.5 (* -0.166667 x))) (+ (* (* x -3.0) (- (* x -3.0) 1.0)) (* 1.0 1.0))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))) (cbrt (+ (* (- 1.5 (* -0.166667 x)) (* (+ (* x -3.0) 1.0) (- (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* x x))))))
* [enter]simplify:  Simplifying (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))) (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (310 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (- 1.5 (* x -0.166667)))) (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (- 1.5 (* x -0.166667)))) (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))))
* * * * [misc]progress:  [ 76 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3)))) (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))) (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (91 enodes)
* * [misc]simplify:  iters left: 4 (283 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))) (cbrt (+ (* (* (+ 1.5 (* -0.166667 x)) (* (- 1.5 (* -0.166667 x)) (* x x))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))) (cbrt (+ (* (* (+ 1.5 (* -0.166667 x)) (* (- 1.5 (* -0.166667 x)) (* x x))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))))
* [enter]simplify:  Simplifying (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))) (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (71 enodes)
* * [misc]simplify:  iters left: 4 (240 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (* (* x x) (+ (* x -0.166667) 1.5)) (* (* x x) (+ (* x -0.166667) 1.5))) (* (+ 1.0 (* x -3.0)) (- (* (* x x) (+ (* x -0.166667) 1.5)) (+ 1.0 (* x -3.0)))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (- 1.5 (* x -0.166667)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (* (* x x) (+ (* x -0.166667) 1.5)) (* (* x x) (+ (* x -0.166667) 1.5))) (* (+ 1.0 (* x -3.0)) (- (* (* x x) (+ (* x -0.166667) 1.5)) (+ 1.0 (* x -3.0)))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (- 1.5 (* x -0.166667)))))
* * * * [misc]progress:  [ 77 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))) (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (96 enodes)
* * [misc]simplify:  iters left: 4 (307 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (* (* (* (+ 1.5 (* -0.166667 x)) x) (* x (- 1.5 (* -0.166667 x)))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (* (* (* (+ 1.5 (* -0.166667 x)) x) (* x (- 1.5 (* -0.166667 x)))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))))
* [enter]simplify:  Simplifying (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))) (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (361 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (- 1.5 (* x -0.166667)))) (cbrt (- (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (- 1.5 (* x -0.166667)))) (cbrt (- (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x)))))
* * * * [misc]progress:  [ 78 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))))) (* (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (114 enodes)
* * [misc]simplify:  iters left: 4 (392 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (* (* x x) (- (* x -3.0) 1.0)) (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))) (cbrt (+ (* (+ (pow 1.0 3) (pow (* x -3.0) 3)) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (+ (* (* x -3.0) (- (* x -3.0) 1.0)) (* 1.0 1.0)) (+ (* (* x x) (pow 1.5 3)) (* (* (* x x) (* -0.166667 x)) (* (* -0.166667 x) (* -0.166667 x))))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (* (* x x) (- (* x -3.0) 1.0)) (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))) (cbrt (+ (* (+ (pow 1.0 3) (pow (* x -3.0) 3)) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (+ (* (* x -3.0) (- (* x -3.0) 1.0)) (* 1.0 1.0)) (+ (* (* x x) (pow 1.5 3)) (* (* (* x x) (* -0.166667 x)) (* (* -0.166667 x) (* -0.166667 x))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (212 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (+ (* 1.5 1.5) (* (* -0.166667 x) (- (* -0.166667 x) 1.5))))) (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (* (* -0.166667 x) (- (* -0.166667 x) 1.5))))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (+ (* 1.5 1.5) (* (* -0.166667 x) (- (* -0.166667 x) 1.5))))) (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (* (* -0.166667 x) (- (* -0.166667 x) 1.5))))))
* * * * [misc]progress:  [ 79 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))))) (* (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (120 enodes)
* * [misc]simplify:  iters left: 4 (400 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* (* x x) (- (* x -3.0) 1.0))))) (cbrt (+ (* (+ (pow 1.0 3) (pow (* x -3.0) 3)) (- 1.5 (* -0.166667 x))) (* (* (+ (* -0.166667 x) 1.5) (* (* x x) (- 1.5 (* -0.166667 x)))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* (* x x) (- (* x -3.0) 1.0))))) (cbrt (+ (* (+ (pow 1.0 3) (pow (* x -3.0) 3)) (- 1.5 (* -0.166667 x))) (* (* (+ (* -0.166667 x) 1.5) (* (* x x) (- 1.5 (* -0.166667 x)))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))))))
* [enter]simplify:  Simplifying (* (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (* x -3.0) 1.0) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (- 1.5 (* -0.166667 x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (* x -3.0) 1.0) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (- 1.5 (* -0.166667 x)))))
* * * * [misc]progress:  [ 80 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))))) (* (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (75 enodes)
* * [misc]simplify:  iters left: 4 (238 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* (* x x) (- (* x -3.0) 1.0))))) (cbrt (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* (* x x) (- (* x -3.0) 1.0))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* (* x x) (- (* x -3.0) 1.0))))) (cbrt (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* (* x x) (- (* x -3.0) 1.0))))))
* [enter]simplify:  Simplifying (* (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* * [misc]simplify:  iters left: 3 (390 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (* x -3.0) 1.0) (- (* (* -0.166667 x) (* -0.166667 x)) (* (- (* -0.166667 x) 1.5) 1.5)))) (cbrt (* (- (* x -3.0) 1.0) (- (* (* -0.166667 x) (* -0.166667 x)) (* (- (* -0.166667 x) 1.5) 1.5)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (* x -3.0) 1.0) (- (* (* -0.166667 x) (* -0.166667 x)) (* (- (* -0.166667 x) 1.5) 1.5)))) (cbrt (* (- (* x -3.0) 1.0) (- (* (* -0.166667 x) (* -0.166667 x)) (* (- (* -0.166667 x) 1.5) 1.5)))))
* * * * [misc]progress:  [ 81 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))))) (* (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (97 enodes)
* * [misc]simplify:  iters left: 4 (332 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (- 1.5 (* -0.166667 x)) (- (* x -3.0) 1.0)) (+ 1.0 (* x -3.0))) (* (* (- (* x -3.0) 1.0) (+ (* -0.166667 x) 1.5)) (* (- 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (* (+ (* 1.5 (- 1.5 (* -0.166667 x))) (* (* -0.166667 x) (* -0.166667 x))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (* (* (* x x) (- (* x -3.0) 1.0)) (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (- 1.5 (* -0.166667 x)) (- (* x -3.0) 1.0)) (+ 1.0 (* x -3.0))) (* (* (- (* x -3.0) 1.0) (+ (* -0.166667 x) 1.5)) (* (- 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (* (+ (* 1.5 (- 1.5 (* -0.166667 x))) (* (* -0.166667 x) (* -0.166667 x))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (* (* (* x x) (- (* x -3.0) 1.0)) (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))))
* [enter]simplify:  Simplifying (* (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (453 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (* x -3.0) 1.0) (+ (* (- 1.5 (* -0.166667 x)) 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (cbrt (* (- 1.5 (* -0.166667 x)) (- (* x -3.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (* x -3.0) 1.0) (+ (* (- 1.5 (* -0.166667 x)) 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (cbrt (* (- 1.5 (* -0.166667 x)) (- (* x -3.0) 1.0))))
* * * * [misc]progress:  [ 82 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3)))) (* (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (97 enodes)
* * [misc]simplify:  iters left: 4 (317 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (+ (* -0.166667 x) 1.5) (* x x)) 3))) (cbrt (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (* (* x x) (- (* x -3.0) 1.0)) (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (+ (* -0.166667 x) 1.5) (* x x)) 3))) (cbrt (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (* (* x x) (- (* x -3.0) 1.0)) (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))))
* [enter]simplify:  Simplifying (* (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (77 enodes)
* * [misc]simplify:  iters left: 4 (275 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (- (* (* x x) (+ 1.5 (* -0.166667 x))) (+ 1.0 (* x -3.0))) (* (* x x) (+ 1.5 (* -0.166667 x)))))) (cbrt (* (- (* x -3.0) 1.0) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (- (* (* x x) (+ 1.5 (* -0.166667 x))) (+ 1.0 (* x -3.0))) (* (* x x) (+ 1.5 (* -0.166667 x)))))) (cbrt (* (- (* x -3.0) 1.0) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))))))
* * * * [misc]progress:  [ 83 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (* (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (102 enodes)
* * [misc]simplify:  iters left: 4 (347 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (+ 1.0 (* x -3.0)) (* (+ (* -0.166667 x) 1.5) (* x x))) (- (+ 1.0 (* x -3.0)) (* (+ (* -0.166667 x) 1.5) (* x x))))) (cbrt (+ (* (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5)) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* (* x x) (- (* x -3.0) 1.0))))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (+ 1.0 (* x -3.0)) (* (+ (* -0.166667 x) 1.5) (* x x))) (- (+ 1.0 (* x -3.0)) (* (+ (* -0.166667 x) 1.5) (* x x))))) (cbrt (+ (* (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5)) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* (* x x) (- (* x -3.0) 1.0))))))
* [enter]simplify:  Simplifying (* (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x))))) (cbrt (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x))))) (cbrt (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * * * [misc]progress:  [ 84 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))))) (* (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (120 enodes)
* * [misc]simplify:  iters left: 4 (396 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.0 (* x -3.0)) (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (* (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5)) (* (* x x) (- (* x -3.0) 1.0))))) (cbrt (+ (* (+ (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- 1.5 (* x -0.166667)))) (+ (pow 1.0 3) (pow (* x -3.0) 3))) (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (+ (* (* x x) (pow 1.5 3)) (* (* (* x x) (* x -0.166667)) (* (* x -0.166667) (* x -0.166667))))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.0 (* x -3.0)) (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (* (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5)) (* (* x x) (- (* x -3.0) 1.0))))) (cbrt (+ (* (+ (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- 1.5 (* x -0.166667)))) (+ (pow 1.0 3) (pow (* x -3.0) 3))) (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (+ (* (* x x) (pow 1.5 3)) (* (* (* x x) (* x -0.166667)) (* (* x -0.166667) (* x -0.166667))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (192 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* 1.0 1.0) (* (* x -3.0) (- (* x -3.0) 1.0))) (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))))) (cbrt (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* 1.0 1.0) (* (* x -3.0) (- (* x -3.0) 1.0))) (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))))) (cbrt (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))))
* * * * [misc]progress:  [ 85 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))))) (* (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (87 enodes)
* * [misc]simplify:  iters left: 4 (274 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (- 1.5 (* x -0.166667)) (+ 1.0 (* x -3.0))) (- (* x -3.0) 1.0)) (* (* (* x x) (- (* x -3.0) 1.0)) (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))))) (cbrt (+ (* (+ (* (* x -3.0) (- (* x -3.0) 1.0)) (* 1.0 1.0)) (* (* x (+ (* x -0.166667) 1.5)) (* x (- 1.5 (* x -0.166667))))) (* (- 1.5 (* x -0.166667)) (+ (pow 1.0 3) (pow (* x -3.0) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (- 1.5 (* x -0.166667)) (+ 1.0 (* x -3.0))) (- (* x -3.0) 1.0)) (* (* (* x x) (- (* x -3.0) 1.0)) (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))))) (cbrt (+ (* (+ (* (* x -3.0) (- (* x -3.0) 1.0)) (* 1.0 1.0)) (* (* x (+ (* x -0.166667) 1.5)) (* x (- 1.5 (* x -0.166667))))) (* (- 1.5 (* x -0.166667)) (+ (pow 1.0 3) (pow (* x -3.0) 3))))))
* [enter]simplify:  Simplifying (* (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (309 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- 1.5 (* x -0.166667)) (+ (* (- (* x -3.0) 1.0) (* x -3.0)) (* 1.0 1.0)))) (cbrt (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (- 1.5 (* x -0.166667)) (+ (* (- (* x -3.0) 1.0) (* x -3.0)) (* 1.0 1.0)))) (cbrt (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))))
* * * * [misc]progress:  [ 86 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))))) (* (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))) (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (97 enodes)
* * [misc]simplify:  iters left: 4 (332 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (pow (* x -0.166667) 3) (pow 1.5 3)) (* (* x x) (- (* x -3.0) 1.0))) (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667)))))) (cbrt (+ (* (* (- 1.5 (* x -0.166667)) (+ 1.0 (* x -3.0))) (- (* x -3.0) 1.0)) (* (* (- (* x -3.0) 1.0) (+ (* x -0.166667) 1.5)) (* (- 1.5 (* x -0.166667)) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (pow (* x -0.166667) 3) (pow 1.5 3)) (* (* x x) (- (* x -3.0) 1.0))) (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667)))))) (cbrt (+ (* (* (- 1.5 (* x -0.166667)) (+ 1.0 (* x -3.0))) (- (* x -3.0) 1.0)) (* (* (- (* x -3.0) 1.0) (+ (* x -0.166667) 1.5)) (* (- 1.5 (* x -0.166667)) (* x x))))))
* [enter]simplify:  Simplifying (* (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))) (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (453 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (- 1.5 (* x -0.166667)) 1.5) (* (* x -0.166667) (* x -0.166667))) (- (* x -3.0) 1.0))) (cbrt (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (- 1.5 (* x -0.166667)) 1.5) (* (* x -0.166667) (* x -0.166667))) (- (* x -3.0) 1.0))) (cbrt (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))))
* * * * [misc]progress:  [ 87 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))))) (* (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))) (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.0 (* x -3.0)) (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (* (* (* x x) (- (* x -3.0) 1.0)) (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))))) (cbrt (+ (* (+ 1.0 (* x -3.0)) (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (* (* (* x x) (- (* x -3.0) 1.0)) (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.0 (* x -3.0)) (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (* (* (* x x) (- (* x -3.0) 1.0)) (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))))) (cbrt (+ (* (+ 1.0 (* x -3.0)) (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (* (* (* x x) (- (* x -3.0) 1.0)) (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))))))
* [enter]simplify:  Simplifying (* (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))) (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (281 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))) (cbrt (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))) (cbrt (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))))
* * * * [misc]progress:  [ 88 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3)))) (* (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))) (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (74 enodes)
* * [misc]simplify:  iters left: 4 (234 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (+ 1.0 (* x -3.0)) (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)) (* (* (* x x) (- (* x -3.0) 1.0)) (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))))) (cbrt (+ (pow (* (+ (* x -0.166667) 1.5) (* x x)) 3) (pow (+ 1.0 (* x -3.0)) 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (+ 1.0 (* x -3.0)) (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)) (* (* (* x x) (- (* x -3.0) 1.0)) (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))))) (cbrt (+ (pow (* (+ (* x -0.166667) 1.5) (* x x)) 3) (pow (+ 1.0 (* x -3.0)) 3))))
* [enter]simplify:  Simplifying (* (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))) (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (201 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (- (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0))) (* (+ 1.5 (* x -0.166667)) (* x x))))) (cbrt (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (- (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0))) (* (+ 1.5 (* x -0.166667)) (* x x))))) (cbrt (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))))
* * * * [misc]progress:  [ 89 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (* (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))) (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (78 enodes)
* * [misc]simplify:  iters left: 4 (262 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.0 (* x -3.0)) (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (* (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667))) (* (* x x) (- (* x -3.0) 1.0))))) (cbrt (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* x -0.166667) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* x -0.166667) 1.5))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.0 (* x -3.0)) (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (* (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667))) (* (* x x) (- (* x -3.0) 1.0))))) (cbrt (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* x -0.166667) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* x -0.166667) 1.5))))))
* [enter]simplify:  Simplifying (* (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))) (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (224 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))) (cbrt (- (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667))))))
* [exit]simplify:  Simplified to (* (cbrt (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))) (cbrt (- (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667))))))
* * * * [misc]progress:  [ 90 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))))) (* (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (113 enodes)
* * [misc]simplify:  iters left: 4 (360 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (+ (* (* x x) (pow 1.5 3)) (* (* (* x x) (* x -0.166667)) (* (* x -0.166667) (* x -0.166667)))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0))))) (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (+ (* (* x x) (pow 1.5 3)) (* (* (* x x) (* x -0.166667)) (* (* x -0.166667) (* x -0.166667)))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0))))) (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (93 enodes)
* * [misc]simplify:  iters left: 4 (318 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5)) (+ (* 1.0 (- 1.0 (* x -3.0))) (* (* x -3.0) (* x -3.0))))) (cbrt (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0))) (* (* x x) (+ (* -0.166667 x) 1.5))))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5)) (+ (* 1.0 (- 1.0 (* x -3.0))) (* (* x -3.0) (* x -3.0))))) (cbrt (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0))) (* (* x x) (+ (* -0.166667 x) 1.5))))))
* * * * [misc]progress:  [ 91 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))))) (* (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (91 enodes)
* * [misc]simplify:  iters left: 4 (283 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))) (cbrt (+ (* (- 1.5 (* x -0.166667)) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (* (* x x) (- (* 1.5 1.5) (* (* x -0.166667) (* x -0.166667))))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))) (cbrt (+ (* (- 1.5 (* x -0.166667)) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (* (* x x) (- (* 1.5 1.5) (* (* x -0.166667) (* x -0.166667))))))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (71 enodes)
* * [misc]simplify:  iters left: 4 (240 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* 1.0 (- 1.0 (* x -3.0))) (* (* x -3.0) (* x -3.0))) (- 1.5 (* -0.166667 x)))) (cbrt (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0))) (* (* x x) (+ (* -0.166667 x) 1.5))))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* 1.0 (- 1.0 (* x -3.0))) (* (* x -3.0) (* x -3.0))) (- 1.5 (* -0.166667 x)))) (cbrt (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0))) (* (* x x) (+ (* -0.166667 x) 1.5))))))
* * * * [misc]progress:  [ 92 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))))) (* (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (97 enodes)
* * [misc]simplify:  iters left: 4 (317 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))) (cbrt (+ (* (* (- (* x -3.0) 1.0) (* x x)) (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (* (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667))) (* (- (* x -3.0) 1.0) (+ 1.0 (* x -3.0)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))) (cbrt (+ (* (* (- (* x -3.0) 1.0) (* x x)) (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (* (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667))) (* (- (* x -3.0) 1.0) (+ 1.0 (* x -3.0)))))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (77 enodes)
* * [misc]simplify:  iters left: 4 (275 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5)) (- (* x -3.0) 1.0))) (cbrt (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (* (* x x) (+ (* -0.166667 x) 1.5)) (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5)) (- (* x -3.0) 1.0))) (cbrt (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (* (* x x) (+ (* -0.166667 x) 1.5)) (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0)))))))
* * * * [misc]progress:  [ 93 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))))) (* (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (74 enodes)
* * [misc]simplify:  iters left: 4 (234 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x x) (- (* x -3.0) 1.0)) (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))) (* (- 1.5 (* x -0.166667)) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))))) (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x x) (- (* x -3.0) 1.0)) (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))) (* (- 1.5 (* x -0.166667)) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))))) (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (201 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- 1.5 (* -0.166667 x)) (- (* x -3.0) 1.0))) (cbrt (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (* (* x x) (+ (* -0.166667 x) 1.5)) (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (- 1.5 (* -0.166667 x)) (- (* x -3.0) 1.0))) (cbrt (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (* (* x x) (+ (* -0.166667 x) 1.5)) (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0)))))))
* * * * [misc]progress:  [ 94 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))) (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3)))) (* (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))) (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (427 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))) (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))) (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (* (* x x) (+ (* -0.166667 x) 1.5)) (* (* x x) (+ (* -0.166667 x) 1.5))) (* (+ 1.0 (* x -3.0)) (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0)))))) (cbrt (- (* (* (* x x) (+ (* -0.166667 x) 1.5)) (* (* x x) (+ (* -0.166667 x) 1.5))) (* (+ 1.0 (* x -3.0)) (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0)))))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (* (* x x) (+ (* -0.166667 x) 1.5)) (* (* x x) (+ (* -0.166667 x) 1.5))) (* (+ 1.0 (* x -3.0)) (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0)))))) (cbrt (- (* (* (* x x) (+ (* -0.166667 x) 1.5)) (* (* x x) (+ (* -0.166667 x) 1.5))) (* (+ 1.0 (* x -3.0)) (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0)))))))
* * * * [misc]progress:  [ 95 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))) (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (* (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))) (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (185 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))) (cbrt (* (+ (* (* x x) (+ (* x -0.166667) 1.5)) (+ 1.0 (* x -3.0))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* x -0.166667) 1.5))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))) (cbrt (* (+ (* (* x x) (+ (* x -0.166667) 1.5)) (+ 1.0 (* x -3.0))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* x -0.166667) 1.5))))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.0 (* x -3.0)) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5)))) (* (* (* x x) (+ (* -0.166667 x) 1.5)) (* (* x x) (+ (* -0.166667 x) 1.5))))) (cbrt (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.0 (* x -3.0)) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5)))) (* (* (* x x) (+ (* -0.166667 x) 1.5)) (* (* x x) (+ (* -0.166667 x) 1.5))))) (cbrt (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5)))))
* * * * [misc]progress:  [ 96 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))))) (* (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (118 enodes)
* * [misc]simplify:  iters left: 4 (384 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))) (cbrt (+ (* (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (+ (* (* x x) (pow 1.5 3)) (* (* (* x x) (* -0.166667 x)) (* (* -0.166667 x) (* -0.166667 x)))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0))))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))) (cbrt (+ (* (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (+ (* (* x x) (pow 1.5 3)) (* (* (* x x) (* -0.166667 x)) (* (* -0.166667 x) (* -0.166667 x)))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0))))))
* [enter]simplify:  Simplifying (* (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (73 enodes)
* * [misc]simplify:  iters left: 4 (207 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x -0.166667) (- (* x -0.166667) 1.5)) (* 1.5 1.5)) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))))) (cbrt (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x -0.166667) (- (* x -0.166667) 1.5)) (* 1.5 1.5)) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))))) (cbrt (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* * * * [misc]progress:  [ 97 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))))) (* (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (96 enodes)
* * [misc]simplify:  iters left: 4 (307 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))) (cbrt (+ (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (* (* (+ (* -0.166667 x) 1.5) x) (* x (- 1.5 (* -0.166667 x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))) (cbrt (+ (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (* (* (+ (* -0.166667 x) 1.5) x) (* x (- 1.5 (* -0.166667 x))))))))
* [enter]simplify:  Simplifying (* (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (364 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- 1.5 (* x -0.166667)) (- (* 1.0 1.0) (* (- 1.0 (* x -3.0)) (* x -3.0))))) (cbrt (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- 1.5 (* x -0.166667)) (- (* 1.0 1.0) (* (- 1.0 (* x -3.0)) (* x -3.0))))) (cbrt (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* * * * [misc]progress:  [ 98 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))))) (* (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (102 enodes)
* * [misc]simplify:  iters left: 4 (347 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))) (cbrt (+ (* (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5)) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (+ (pow (* -0.166667 x) 3) (pow 1.5 3)) (* (* x x) (- (* x -3.0) 1.0))))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))) (cbrt (+ (* (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5)) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (+ (pow (* -0.166667 x) 3) (pow 1.5 3)) (* (* x x) (- (* x -3.0) 1.0))))))
* [enter]simplify:  Simplifying (* (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (* x -3.0) 1.0) (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))))) (cbrt (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (* x -3.0) 1.0) (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))))) (cbrt (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* * * * [misc]progress:  [ 99 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))))) (* (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (78 enodes)
* * [misc]simplify:  iters left: 4 (262 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (+ 1.0 (* x -3.0)) (- 1.5 (* -0.166667 x))) (- (* x -3.0) 1.0)) (* (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5)) (* (- (* x -3.0) 1.0) (* x x))))) (cbrt (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (+ 1.0 (* x -3.0)) (- 1.5 (* -0.166667 x))) (- (* x -3.0) 1.0)) (* (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5)) (* (- (* x -3.0) 1.0) (* x x))))) (cbrt (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))))
* [enter]simplify:  Simplifying (* (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (224 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (cbrt (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (cbrt (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* * * * [misc]progress:  [ 100 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3)))) (* (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (185 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))) (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* -0.166667 x) 1.5)) 3))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))) (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* -0.166667 x) 1.5)) 3))))
* [enter]simplify:  Simplifying (* (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (+ 1.5 (* x -0.166667)) (* x x)) (* (+ 1.5 (* x -0.166667)) (* x x))) (* (+ 1.0 (* x -3.0)) (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))) (cbrt (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (+ 1.5 (* x -0.166667)) (* x x)) (* (+ 1.5 (* x -0.166667)) (* x x))) (* (+ 1.0 (* x -3.0)) (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))) (cbrt (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* * * * [misc]progress:  [ 101 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (* (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))) (cbrt (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))) (cbrt (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))))
* [enter]simplify:  Simplifying (* (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (136 enodes)
* * [misc]simplify:  iters left: 2 (315 enodes)
* * [misc]simplify:  iters left: 1 (461 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* * * * [misc]progress:  [ 102 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* 1 (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * * [misc]progress:  [ 103 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))) (cbrt (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (108 enodes)
* * [misc]simplify:  iters left: 2 (190 enodes)
* * [misc]simplify:  iters left: 1 (313 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))))
* * * * [misc]progress:  [ 104 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (sqrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (sqrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (sqrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (108 enodes)
* * [misc]simplify:  iters left: 2 (190 enodes)
* * [misc]simplify:  iters left: 1 (313 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))))
* * * * [misc]progress:  [ 105 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt 1)) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt 1))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (110 enodes)
* * [misc]simplify:  iters left: 2 (193 enodes)
* * [misc]simplify:  iters left: 1 (318 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))) (cbrt 1))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))) (cbrt 1))
* * * * [misc]progress:  [ 106 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (* (cbrt (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))) (cbrt (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (* (cbrt (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (192 enodes)
* * [misc]simplify:  iters left: 1 (303 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (* (cbrt (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))) (cbrt (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (* (cbrt (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))) (cbrt (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))))
* * * * [misc]progress:  [ 107 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (sqrt (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (sqrt (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (sqrt (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (107 enodes)
* * [misc]simplify:  iters left: 2 (186 enodes)
* * [misc]simplify:  iters left: 1 (327 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* * * * [misc]progress:  [ 108 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) 1) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) 1)
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (111 enodes)
* * [misc]simplify:  iters left: 2 (192 enodes)
* * [misc]simplify:  iters left: 1 (292 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* * * * [misc]progress:  [ 109 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (* (cbrt (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (107 enodes)
* * [misc]simplify:  iters left: 2 (186 enodes)
* * [misc]simplify:  iters left: 1 (327 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* * * * [misc]progress:  [ 110 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (sqrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (* (cbrt (sqrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (108 enodes)
* * [misc]simplify:  iters left: 2 (190 enodes)
* * [misc]simplify:  iters left: 1 (313 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* * * * [misc]progress:  [ 111 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt 1) (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (105 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (325 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))) (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))) (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))))
* * * * [misc]progress:  [ 112 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (* (cbrt (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (107 enodes)
* * [misc]simplify:  iters left: 2 (186 enodes)
* * [misc]simplify:  iters left: 1 (327 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* * * * [misc]progress:  [ 113 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (* (sqrt (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (107 enodes)
* * [misc]simplify:  iters left: 2 (186 enodes)
* * [misc]simplify:  iters left: 1 (327 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* * * * [misc]progress:  [ 114 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* 1 (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (105 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (325 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))) (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))) (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))))
* * * * [misc]progress:  [ 115 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (104 enodes)
* * [misc]simplify:  iters left: 4 (307 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0))) (+ (* (* (* x -0.166667) (* x -0.166667)) (* (* x -0.166667) (* x x))) (* (* x x) (pow 1.5 3)))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0))) (+ (* (* (* x -0.166667) (* x -0.166667)) (* (* x -0.166667) (* x x))) (* (* x x) (pow 1.5 3)))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* * * * [misc]progress:  [ 116 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (230 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (* (* (- 1.5 (* x -0.166667)) (* x x)) (+ 1.5 (* x -0.166667)))) (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* x -0.166667))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (* (* (- 1.5 (* x -0.166667)) (* x x)) (+ 1.5 (* x -0.166667)))) (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* x -0.166667))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* * * * [misc]progress:  [ 117 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))))) (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (266 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0)) (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667)))) (* (* (- (* x -3.0) 1.0) (* x x)) (+ (pow (* x -0.166667) 3) (pow 1.5 3))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0)) (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667)))) (* (* (- (* x -3.0) 1.0) (* x x)) (+ (pow (* x -0.166667) 3) (pow 1.5 3))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* * * * [misc]progress:  [ 118 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))))) (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (+ (* (+ 1.0 (* x -3.0)) (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))) (* (* (- (* x -3.0) 1.0) (* x x)) (* (- 1.5 (* x -0.166667)) (+ 1.5 (* x -0.166667)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (+ (* (+ 1.0 (* x -3.0)) (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))) (* (* (- (* x -3.0) 1.0) (* x x)) (* (- 1.5 (* x -0.166667)) (+ 1.5 (* x -0.166667)))))))
* * * * [misc]progress:  [ 119 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3)))) (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (487 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (+ 1.5 (* x -0.166667)) (* x x)) 3))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (+ 1.5 (* x -0.166667)) (* x x)) 3))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* * * * [misc]progress:  [ 120 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))) (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))) (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))))
* * * * [misc]progress:  [ 121 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (104 enodes)
* * [misc]simplify:  iters left: 4 (307 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (+ (* (* (* x -0.166667) (* x -0.166667)) (* (* x x) (* x -0.166667))) (* (* x x) (pow 1.5 3))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (* x x) (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (+ (* (* (* x -0.166667) (* x -0.166667)) (* (* x x) (* x -0.166667))) (* (* x x) (pow 1.5 3))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (* x x) (+ (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 122 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (230 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (- 1.5 (* -0.166667 x)) (* (* x x) (+ 1.5 (* -0.166667 x)))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (* x x) (+ 1.5 (* -0.166667 x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (- 1.5 (* -0.166667 x)) (* (* x x) (+ 1.5 (* -0.166667 x)))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (* x x) (+ 1.5 (* -0.166667 x))))))
* * * * [misc]progress:  [ 123 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (266 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* (* x x) (- (* x -3.0) 1.0))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* (* x x) (- (* x -3.0) 1.0))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5)))))
* * * * [misc]progress:  [ 124 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.0 (* x -3.0)) (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (* (* (* x x) (- (* x -3.0) 1.0)) (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))))) (cbrt (+ (* (+ (* x -0.166667) 1.5) (* x x)) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.0 (* x -3.0)) (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (* (* (* x x) (- (* x -3.0) 1.0)) (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))))) (cbrt (+ (* (+ (* x -0.166667) 1.5) (* x x)) (+ 1.0 (* x -3.0)))))
* * * * [misc]progress:  [ 125 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (495 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))) (cbrt (+ (* (* x x) (+ (* x -0.166667) 1.5)) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))) (cbrt (+ (* (* x x) (+ (* x -0.166667) 1.5)) (+ 1.0 (* x -3.0)))))
* * * * [misc]progress:  [ 126 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5)))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5)))))
* * * * [misc]progress:  [ 127 / 139 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * * [misc]progress:  [ 128 / 139 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (229 enodes)
* * [misc]simplify:  iters left: 2 (377 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (- 1.5 (* x 0.166667)) (* x x)))) (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))))
* * * * [misc]progress:  [ 129 / 139 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (229 enodes)
* * [misc]simplify:  iters left: 2 (377 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (- 1.5 (* x 0.166667)) (* x x)))) (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))))
* * * * [misc]progress:  [ 130 / 139 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (229 enodes)
* * [misc]simplify:  iters left: 2 (377 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (- 1.5 (* x 0.166667)) (* x x)))) (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))))
* * * * [misc]progress:  [ 131 / 139 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (231 enodes)
* * [misc]simplify:  iters left: 2 (380 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667)))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) (- 1.5 (* 0.166667 x))))))
* * * * [misc]progress:  [ 132 / 139 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (231 enodes)
* * [misc]simplify:  iters left: 2 (380 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667)))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) (- 1.5 (* 0.166667 x))))))
* * * * [misc]progress:  [ 133 / 139 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (231 enodes)
* * [misc]simplify:  iters left: 2 (380 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667)))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) (- 1.5 (* 0.166667 x))))))
* * * * [misc]progress:  [ 134 / 139 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (230 enodes)
* * [misc]simplify:  iters left: 2 (380 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x x) (- 1.5 (* 0.166667 x))) (+ 1.0 (* x -3.0)))) (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ (* -0.166667 x) 1.5) (* x x)))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ (* -0.166667 x) 1.5) (* x x))))))
* * * * [misc]progress:  [ 135 / 139 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (230 enodes)
* * [misc]simplify:  iters left: 2 (380 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x x) (- 1.5 (* 0.166667 x))) (+ 1.0 (* x -3.0)))) (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ (* -0.166667 x) 1.5) (* x x)))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ (* -0.166667 x) 1.5) (* x x))))))
* * * * [misc]progress:  [ 136 / 139 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (230 enodes)
* * [misc]simplify:  iters left: 2 (380 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x x) (- 1.5 (* 0.166667 x))) (+ 1.0 (* x -3.0)))) (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ (* -0.166667 x) 1.5) (* x x)))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ (* -0.166667 x) 1.5) (* x x))))))
* * * * [misc]progress:  [ 137 / 139 ] simplifiying candidate #<alt-event (Î» (x) (* (- (+ (* 3.0 (* (pow (pow 1.0 2) 1/3) (pow x 2))) (pow (pow 1.0 2) 1/3)) (+ (* 3.0 (* (pow (/ 1 (pow 1.0 4)) 1/3) (pow x 2))) (* 2.0 (* (pow (pow 1.0 2) 1/3) x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (- (+ (* 3.0 (* (pow (pow 1.0 2) 1/3) (pow x 2))) (pow (pow 1.0 2) 1/3)) (+ (* 3.0 (* (pow (/ 1 (pow 1.0 4)) 1/3) (pow x 2))) (* 2.0 (* (pow (pow 1.0 2) 1/3) x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (71 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (383 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0)))) (+ (- (cbrt (* 1.0 1.0)) (* (* x 2.0) (cbrt (* 1.0 1.0)))) (* (* (* 3.0 x) x) (- (cbrt (* 1.0 1.0)) (cbrt (/ 1 (pow 1.0 4)))))))
* * * * [misc]progress:  [ 138 / 139 ] simplifiying candidate #<alt-event (Î» (x) (* (- (+ (* 29.999904000263992 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log (/ 1 x)))))) 2) (pow x 2))) (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log (/ 1 x)))))) 2)) (+ (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log (/ 1 x)))))) 2) (* (pow -0.166667 2) (pow x 2)))) (* 5.999988000023999 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log (/ 1 x)))))) 2) x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (- (+ (* 29.999904000263992 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log (/ 1 x)))))) 2) (pow x 2))) (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log (/ 1 x)))))) 2)) (+ (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log (/ 1 x)))))) 2) (* (pow -0.166667 2) (pow x 2)))) (* 5.999988000023999 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (* 3 (log (/ 1 x)))))) 2) x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (219 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x x) (+ 1.5 (* -0.166667 x))) (+ (* -3.0 x) 1.0))) (- (- (exp (* (+ (* 3 (log x)) (log (- 0.166667))) (+ 1/3 1/3))) (* (/ 5.999988000023999 x) (exp (* (+ (* 3 (log x)) (log (- 0.166667))) (+ 1/3 1/3))))) (- (* (/ 0.75 (* (* -0.166667 -0.166667) (* x x))) (exp (* (+ (* 3 (log x)) (log (- 0.166667))) (+ 1/3 1/3)))) (* (/ 29.999904000263992 (* x x)) (exp (* (+ (* 3 (log x)) (log (- 0.166667))) (+ 1/3 1/3)))))))
* * * * [misc]progress:  [ 139 / 139 ] simplifiying candidate #<alt-event (Î» (x) (* (- (+ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (* 29.999904000263992 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (pow x 2)))) (+ (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (* (pow x 2) (pow 0.166667 2)))) (* 5.999988000023999 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (- (+ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (* 29.999904000263992 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (pow x 2)))) (+ (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (* (pow x 2) (pow 0.166667 2)))) (* 5.999988000023999 (/ (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (83 enodes)
* * [misc]simplify:  iters left: 4 (206 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x)))) (- (* (/ (exp (* (- (log 0.166667) (* 3 (log (/ -1 x)))) (+ 1/3 1/3))) (* x x)) (- 29.999904000263992 (/ 0.75 (* 0.166667 0.166667)))) (- (* (/ 5.999988000023999 x) (exp (* (- (log 0.166667) (* 3 (log (/ -1 x)))) (+ 1/3 1/3)))) (exp (* (- (log 0.166667) (* 3 (log (/ -1 x)))) (+ 1/3 1/3))))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))> #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))> #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))>)
* [enter]simplify:  Simplifying (+ (* x -3.0) 1.0)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (+ 1.0 (* x -3.0))
* [exit]simplify:  Simplified to (+ 1.0 (* x -3.0))
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
