* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Setting MPFR precision to 832
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Setting MPFR precision to 832
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Setting MPFR precision to 832
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (130 enodes)
* * [misc]simplify:  iters left: 2 (232 enodes)
* * [misc]simplify:  iters left: 1 (377 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* x x) (* x 32.0))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 2 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -160.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 160.0)
* [misc]backup-simplify:  Simplify (- 160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 160.0) (pow x 3)) into (* -160.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -160.0 (pow (/ 1 (/ 1 x)) 3)) into (* -160.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify 160.0 into 160.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 160.0 (pow (/ 1 (/ 1 (- x))) 3)) into (* -160.0 (pow x 3))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (* x x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 3)) into (pow x 3)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 3)) into (pow x 3)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* (* x x) x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (pow (* -160.0 (* (* x x) x)) 1)) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 2 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (exp (log (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (log (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (* -160.0 x)))
* [exit]simplify:  Simplified to (log (* (* x x) (* -160.0 x)))
* * * * [misc]progress:  [ 3 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (log (exp (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (exp (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* * * * [misc]progress:  [ 4 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* (cbrt (* -160.0 (* (* x x) x))) (cbrt (* -160.0 (* (* x x) x)))) (cbrt (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* -160.0 (* (* x x) x))) (cbrt (* -160.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -160.0 x) (* x x))) (cbrt (* (* -160.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -160.0 x) (* x x))) (cbrt (* (* -160.0 x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 5 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (cbrt (* (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (210 enodes)
* [exit]simplify:  Simplified to (pow (* (* -160.0 x) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* -160.0 x) (* x x)) 3)
* * * * [misc]progress:  [ 6 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (sqrt (* -160.0 (* (* x x) x))) (sqrt (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (sqrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 7 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* 1 (* -160.0 (* (* x x) x)))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 8 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* -160.0 (* x x)) x)) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* -160.0 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* -160.0 (* x x))
* [exit]simplify:  Simplified to (* -160.0 (* x x))
* * * * [misc]progress:  [ 9 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* (* x x) x) -160.0)) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 10 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x))))>
* * * * [misc]progress:  [ 11 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x (+ 2 1)) x) x))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 12 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow (* (* x x) x) 1) x) x))))>
* * * * [misc]progress:  [ 13 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (log (* (* x x) x))) x) x))))>
* [enter]simplify:  Simplifying (log (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 14 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (log (exp (* (* x x) x))) x) x))))>
* [enter]simplify:  Simplifying (exp (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 15 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x))) (cbrt (* (* x x) x))) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 16 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))) x) x))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 17 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (sqrt (* (* x x) x)) (sqrt (* (* x x) x))) x) x))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 18 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* 1 (* (* x x) x)) x) x))))>
* * * * [misc]progress:  [ 19 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* x (* x x)) x) x))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 20 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* x (* x x)) x) x))))>
* * * * [misc]progress:  [ 21 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 22 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x (+ 2 1)))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 23 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow (* (* x x) x) 1))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 24 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (exp (log (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (log (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 25 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (log (exp (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (exp (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 26 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x))) (cbrt (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 27 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (cbrt (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 28 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (sqrt (* (* x x) x)) (sqrt (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 29 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* 1 (* (* x x) x)))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 30 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* x (* x x)))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 31 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* x (* x x)))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 32 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (+ 3 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 3)
* [exit]simplify:  Simplified to (+ 1 3)
* * * * [misc]progress:  [ 33 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x (+ (+ 2 1) 1)) x))))>
* [enter]simplify:  Simplifying (+ (+ 2 1) 1)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ 1 (+ 1 2))
* [exit]simplify:  Simplified to (+ 1 (+ 1 2))
* * * * [misc]progress:  [ 34 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (* (* (* x x) x) x) 1) x))))>
* * * * [misc]progress:  [ 35 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (exp (log (* (* (* x x) x) x))) x))))>
* [enter]simplify:  Simplifying (log (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 1 3))
* [exit]simplify:  Simplified to (* (log x) (+ 1 3))
* * * * [misc]progress:  [ 36 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (log (exp (* (* (* x x) x) x))) x))))>
* [enter]simplify:  Simplifying (exp (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 37 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (* (* (* x x) x) x)) (cbrt (* (* (* x x) x) x))) (cbrt (* (* (* x x) x) x))) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (* x x) x) x)) (cbrt (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 38 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (cbrt (* (* (* (* (* x x) x) x) (* (* (* x x) x) x)) (* (* (* x x) x) x))) x))))>
* [enter]simplify:  Simplifying (* (* (* (* (* x x) x) x) (* (* (* x x) x) x)) (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (82 enodes)
* * [misc]simplify:  iters left: 2 (96 enodes)
* * [misc]simplify:  iters left: 1 (102 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 39 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (sqrt (* (* (* x x) x) x)) (sqrt (* (* (* x x) x) x))) x))))>
* [enter]simplify:  Simplifying (sqrt (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 40 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* 1 (* (* (* x x) x) x)) x))))>
* * * * [misc]progress:  [ 41 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* x x) (* x x)) x))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 42 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* x (* (* x x) x)) x))))>
* * * * [misc]progress:  [ 43 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x 32.0)) (* x x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 44 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x 32.0)) (* x x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 45 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x 32.0)) (* x x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 46 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (225 enodes)
* * [misc]simplify:  iters left: 1 (293 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 32.0) (* (* x x) (* x x))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 47 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (225 enodes)
* * [misc]simplify:  iters left: 1 (293 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 32.0) (* (* x x) (* x x))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 48 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (225 enodes)
* * [misc]simplify:  iters left: 1 (293 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 32.0) (* (* x x) (* x x))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 49 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x 32.0)) (* x x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 50 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x 32.0)) (* x x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 51 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x 32.0)) (* x x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 52 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x 4) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x 4) x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (120 enodes)
* * [misc]simplify:  iters left: 1 (121 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 4) (* x 32.0)) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 53 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x 4) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x 4) x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (120 enodes)
* * [misc]simplify:  iters left: 1 (121 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 4) (* x 32.0)) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 54 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x 4) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x 4) x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (120 enodes)
* * [misc]simplify:  iters left: 1 (121 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 4) (* x 32.0)) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -160.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 160.0)
* [misc]backup-simplify:  Simplify (- 160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 160.0) (pow x 3)) into (* -160.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -160.0 (pow (/ 1 (/ 1 x)) 3)) into (* -160.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify 160.0 into 160.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 160.0 (pow (/ 1 (/ 1 (- x))) 3)) into (* -160.0 (pow x 3))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (fabs (* x x)) (fabs (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (fabs (* x x)) (fabs (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of (* (fabs (* x x)) (fabs (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]backup-simplify:  Simplify (* (fabs (pow x 2)) (fabs (pow x 2))) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (pow (fabs (pow x 2)) 2) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (* 0 (fabs (pow x 2)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (fabs (pow x 2)) 2) into (pow (fabs (pow x 2)) 2)
* [misc]approximate:  Taking taylor expansion of (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (pow (fabs (/ 1 (pow x 2))) 2) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (* 0 (fabs (/ 1 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (fabs (/ 1 (pow (/ 1 x) 2))) 2) into (pow (fabs (pow x 2)) 2)
* [misc]approximate:  Taking taylor expansion of (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (pow (fabs (/ 1 (pow x 2))) 2) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (* 0 (fabs (/ 1 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (fabs (/ 1 (pow (/ 1 (- x)) 2))) 2) into (pow (fabs (pow x 2)) 2)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 3)) into (pow x 3)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* (fabs (* x x)) (fabs (* x x))) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* x x)) (fabs (* x x))) x) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* x x)) (fabs (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* x x)) (fabs (* x x))) x) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* x x)) (fabs (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (fabs (pow x 2)) (fabs (pow x 2))) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (pow x 2)) 2) 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (* 0 (fabs (pow x 2)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 1) (* 0 0)) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (pow (fabs (pow x 2)) 2) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (pow (fabs (pow x 2)) 2) x) into (* (pow (fabs (pow x 2)) 2) x)
* [misc]approximate:  Taking taylor expansion of (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) 1) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (pow (fabs (/ 1 (pow x 2))) 2) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (* 0 (fabs (/ 1 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow (/ 1 x) 2))) 2) (/ 1 (/ 1 x))) into (* (pow (fabs (pow x 2)) 2) x)
* [misc]approximate:  Taking taylor expansion of (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) -1) into (* -1 (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) into (* -1 (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (* 0 (fabs (/ 1 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (* -1 (pow (fabs (/ 1 (pow (/ 1 (- x)) 2))) 2)) (/ 1 (/ 1 (- x)))) into (* (pow (fabs (pow x 2)) 2) x)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (pow (* -160.0 (* (* x x) x)) 1)) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* * * * [misc]progress:  [ 2 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (exp (log (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* [enter]simplify:  Simplifying (log (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (* -160.0 x)))
* [exit]simplify:  Simplified to (log (* (* x x) (* -160.0 x)))
* * * * [misc]progress:  [ 3 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (log (exp (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* [enter]simplify:  Simplifying (exp (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* * * * [misc]progress:  [ 4 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* (cbrt (* -160.0 (* (* x x) x))) (cbrt (* -160.0 (* (* x x) x)))) (cbrt (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* -160.0 (* (* x x) x))) (cbrt (* -160.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -160.0 x) (* x x))) (cbrt (* (* -160.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -160.0 x) (* x x))) (cbrt (* (* -160.0 x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 5 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (cbrt (* (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* [enter]simplify:  Simplifying (* (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (210 enodes)
* [exit]simplify:  Simplified to (pow (* (* -160.0 x) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* -160.0 x) (* x x)) 3)
* * * * [misc]progress:  [ 6 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (sqrt (* -160.0 (* (* x x) x))) (sqrt (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* [enter]simplify:  Simplifying (sqrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 7 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* 1 (* -160.0 (* (* x x) x)))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* * * * [misc]progress:  [ 8 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* -160.0 (* x x)) x)) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* [enter]simplify:  Simplifying (* -160.0 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* -160.0 (* x x))
* [exit]simplify:  Simplified to (* -160.0 (* x x))
* * * * [misc]progress:  [ 9 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* (* x x) x) -160.0)) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* * * * [misc]progress:  [ 10 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (* x x)) (+ 1 1)) x))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 11 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (* (fabs (* x x)) (fabs (* x x))) 1) x))))>
* [enter]simplify:  Simplifying (* (fabs (* x x)) (fabs (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* [exit]simplify:  Simplified to (* (fabs (* x x)) (fabs (* x x)))
* [exit]simplify:  Simplified to (* (fabs (* x x)) (fabs (* x x)))
* * * * [misc]progress:  [ 12 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (* x x)) 2) x))))>
* * * * [misc]progress:  [ 13 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (* x x)) (+ 1 1)) x))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 14 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (* (fabs (* x x)) (fabs (* x x))) 1) x))))>
* * * * [misc]progress:  [ 15 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (exp (+ (log (fabs (* x x))) (log (fabs (* x x))))) x))))>
* [enter]simplify:  Simplifying (+ (log (fabs (* x x))) (log (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* [exit]simplify:  Simplified to (+ (log (fabs (* x x))) (log (fabs (* x x))))
* [exit]simplify:  Simplified to (+ (log (fabs (* x x))) (log (fabs (* x x))))
* * * * [misc]progress:  [ 16 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (exp (log (* (fabs (* x x)) (fabs (* x x))))) x))))>
* [enter]simplify:  Simplifying (log (* (fabs (* x x)) (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (7 enodes)
* [exit]simplify:  Simplified to (+ (log (fabs (* x x))) (log (fabs (* x x))))
* [exit]simplify:  Simplified to (+ (log (fabs (* x x))) (log (fabs (* x x))))
* * * * [misc]progress:  [ 17 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (log (exp (* (fabs (* x x)) (fabs (* x x))))) x))))>
* [enter]simplify:  Simplifying (exp (* (fabs (* x x)) (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (7 enodes)
* [exit]simplify:  Simplified to (exp (* (fabs (* x x)) (fabs (* x x))))
* [exit]simplify:  Simplified to (exp (* (fabs (* x x)) (fabs (* x x))))
* * * * [misc]progress:  [ 18 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (cbrt (* (* (* (fabs (* x x)) (fabs (* x x))) (fabs (* x x))) (* (* (fabs (* x x)) (fabs (* x x))) (fabs (* x x))))) x))))>
* [enter]simplify:  Simplifying (* (* (* (fabs (* x x)) (fabs (* x x))) (fabs (* x x))) (* (* (fabs (* x x)) (fabs (* x x))) (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (pow (fabs (* x x)) (+ (+ 3 1) (+ 1 1)))
* [exit]simplify:  Simplified to (pow (fabs (* x x)) (+ (+ 3 1) (+ 1 1)))
* * * * [misc]progress:  [ 19 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (* (fabs (* x x)) (fabs (* x x)))) (cbrt (* (fabs (* x x)) (fabs (* x x))))) (cbrt (* (fabs (* x x)) (fabs (* x x))))) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (fabs (* x x)) (fabs (* x x)))) (cbrt (* (fabs (* x x)) (fabs (* x x)))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (fabs (* x x)) (fabs (* x x)))) (cbrt (* (fabs (* x x)) (fabs (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (fabs (* x x)) (fabs (* x x)))) (cbrt (* (fabs (* x x)) (fabs (* x x)))))
* [enter]simplify:  Simplifying (cbrt (* (fabs (* x x)) (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* [exit]simplify:  Simplified to (cbrt (* (fabs (* x x)) (fabs (* x x))))
* [exit]simplify:  Simplified to (cbrt (* (fabs (* x x)) (fabs (* x x))))
* * * * [misc]progress:  [ 20 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (cbrt (* (* (* (fabs (* x x)) (fabs (* x x))) (* (fabs (* x x)) (fabs (* x x)))) (* (fabs (* x x)) (fabs (* x x))))) x))))>
* [enter]simplify:  Simplifying (* (* (* (fabs (* x x)) (fabs (* x x))) (* (fabs (* x x)) (fabs (* x x)))) (* (fabs (* x x)) (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (pow (fabs (* x x)) (+ (+ 1 3) (+ 1 1)))
* [exit]simplify:  Simplified to (pow (fabs (* x x)) (+ (+ 1 3) (+ 1 1)))
* * * * [misc]progress:  [ 21 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (sqrt (* (fabs (* x x)) (fabs (* x x)))) (sqrt (* (fabs (* x x)) (fabs (* x x))))) x))))>
* [enter]simplify:  Simplifying (sqrt (* (fabs (* x x)) (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* [exit]simplify:  Simplified to (fabs (fabs (* x x)))
* [exit]simplify:  Simplified to (fabs (fabs (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (fabs (* x x)) (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* [exit]simplify:  Simplified to (fabs (fabs (* x x)))
* [exit]simplify:  Simplified to (fabs (fabs (* x x)))
* * * * [misc]progress:  [ 22 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* 1 (* (fabs (* x x)) (fabs (* x x)))) x))))>
* * * * [misc]progress:  [ 23 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (fabs (* x x)) (* (cbrt (fabs (* x x))) (cbrt (fabs (* x x))))) (cbrt (fabs (* x x)))) x))))>
* [enter]simplify:  Simplifying (* (fabs (* x x)) (* (cbrt (fabs (* x x))) (cbrt (fabs (* x x)))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (fabs (* x x))) (cbrt (fabs (* x x)))) (fabs (* x x)))
* [exit]simplify:  Simplified to (* (* (cbrt (fabs (* x x))) (cbrt (fabs (* x x)))) (fabs (* x x)))
* * * * [misc]progress:  [ 24 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (fabs (* x x)) (sqrt (fabs (* x x)))) (sqrt (fabs (* x x)))) x))))>
* [enter]simplify:  Simplifying (* (fabs (* x x)) (sqrt (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* [exit]simplify:  Simplified to (* (fabs (* x x)) (sqrt (fabs (* x x))))
* [exit]simplify:  Simplified to (* (fabs (* x x)) (sqrt (fabs (* x x))))
* * * * [misc]progress:  [ 25 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (fabs (* x x)) 1) (fabs (* x x))) x))))>
* [enter]simplify:  Simplifying (* (fabs (* x x)) 1)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 26 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (fabs (* x x))) (cbrt (fabs (* x x)))) (* (cbrt (fabs (* x x))) (fabs (* x x)))) x))))>
* [enter]simplify:  Simplifying (* (cbrt (fabs (* x x))) (fabs (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* [exit]simplify:  Simplified to (* (fabs (* x x)) (cbrt (fabs (* x x))))
* [exit]simplify:  Simplified to (* (fabs (* x x)) (cbrt (fabs (* x x))))
* * * * [misc]progress:  [ 27 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (sqrt (fabs (* x x))) (* (sqrt (fabs (* x x))) (fabs (* x x)))) x))))>
* [enter]simplify:  Simplifying (* (sqrt (fabs (* x x))) (fabs (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* [exit]simplify:  Simplified to (* (fabs (* x x)) (sqrt (fabs (* x x))))
* [exit]simplify:  Simplified to (* (fabs (* x x)) (sqrt (fabs (* x x))))
* * * * [misc]progress:  [ 28 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* 1 (* (fabs (* x x)) (fabs (* x x)))) x))))>
* [enter]simplify:  Simplifying (* (fabs (* x x)) (fabs (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* [exit]simplify:  Simplified to (* (fabs (* x x)) (fabs (* x x)))
* [exit]simplify:  Simplified to (* (fabs (* x x)) (fabs (* x x)))
* * * * [misc]progress:  [ 29 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* * * * [misc]progress:  [ 30 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* * * * [misc]progress:  [ 31 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x (+ 2 1)))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 32 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow (* (* x x) x) 1))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* * * * [misc]progress:  [ 33 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (exp (log (* (* x x) x))))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* [enter]simplify:  Simplifying (log (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 34 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (log (exp (* (* x x) x))))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* [enter]simplify:  Simplifying (exp (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 35 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x))) (cbrt (* (* x x) x))))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 36 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (cbrt (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 37 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (sqrt (* (* x x) x)) (sqrt (* (* x x) x))))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 38 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* 1 (* (* x x) x)))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* * * * [misc]progress:  [ 39 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* x (* x x)))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 40 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* x (* x x)))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* * * * [misc]progress:  [ 41 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow (* (* (fabs (* x x)) (fabs (* x x))) x) 1))))>
* * * * [misc]progress:  [ 42 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (exp (log (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (log (* (* (fabs (* x x)) (fabs (* x x))) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (log (* (* x (fabs (* x x))) (fabs (* x x))))
* [exit]simplify:  Simplified to (log (* (* x (fabs (* x x))) (fabs (* x x))))
* * * * [misc]progress:  [ 43 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (exp (* (* (fabs (* x x)) (fabs (* x x))) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (exp (* (* x (fabs (* x x))) (fabs (* x x))))
* [exit]simplify:  Simplified to (exp (* (* x (fabs (* x x))) (fabs (* x x))))
* * * * [misc]progress:  [ 44 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))) (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))) (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [enter]simplify:  Simplifying (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (cbrt (* (fabs (* x x)) (* x (fabs (* x x)))))
* [exit]simplify:  Simplified to (cbrt (* (fabs (* x x)) (* x (fabs (* x x)))))
* * * * [misc]progress:  [ 45 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (cbrt (* (* (* (* (fabs (* x x)) (fabs (* x x))) x) (* (* (fabs (* x x)) (fabs (* x x))) x)) (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (* (* (* (fabs (* x x)) (fabs (* x x))) x) (* (* (fabs (* x x)) (fabs (* x x))) x)) (* (* (fabs (* x x)) (fabs (* x x))) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (118 enodes)
* * [misc]simplify:  iters left: 2 (270 enodes)
* * [misc]simplify:  iters left: 1 (355 enodes)
* [exit]simplify:  Simplified to (* (* (fabs (* x x)) (pow x 3)) (pow (fabs (* x x)) (+ (+ 3 1) 1)))
* [exit]simplify:  Simplified to (* (* (fabs (* x x)) (pow x 3)) (pow (fabs (* x x)) (+ (+ 3 1) 1)))
* * * * [misc]progress:  [ 46 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (sqrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (sqrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (fabs (* x x)) (fabs (* x x))) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (sqrt (* (fabs (* x x)) (* x (fabs (* x x)))))
* [exit]simplify:  Simplified to (sqrt (* (fabs (* x x)) (* x (fabs (* x x)))))
* [enter]simplify:  Simplifying (sqrt (* (* (fabs (* x x)) (fabs (* x x))) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (sqrt (* (fabs (* x x)) (* x (fabs (* x x)))))
* [exit]simplify:  Simplified to (sqrt (* (fabs (* x x)) (* x (fabs (* x x)))))
* * * * [misc]progress:  [ 47 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* 1 (* (* (fabs (* x x)) (fabs (* x x))) x)))))>
* * * * [misc]progress:  [ 48 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (fabs (* x x)) (* (fabs (* x x)) x)))))>
* [enter]simplify:  Simplifying (* (fabs (* x x)) x)
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* [exit]simplify:  Simplified to (* x (fabs (* x x)))
* [exit]simplify:  Simplified to (* x (fabs (* x x)))
* * * * [misc]progress:  [ 49 / 61 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* x (* (fabs (* x x)) (fabs (* x x)))))))>
* * * * [misc]progress:  [ 50 / 61 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (148 enodes)
* * [misc]simplify:  iters left: 1 (182 enodes)
* [exit]simplify:  Simplified to (+ (* (* (fabs (* x x)) 32.0) (* (fabs (* x x)) x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 51 / 61 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (148 enodes)
* * [misc]simplify:  iters left: 1 (182 enodes)
* [exit]simplify:  Simplified to (+ (* (* (fabs (* x x)) 32.0) (* (fabs (* x x)) x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 52 / 61 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (148 enodes)
* * [misc]simplify:  iters left: 1 (182 enodes)
* [exit]simplify:  Simplified to (+ (* (* (fabs (* x x)) 32.0) (* (fabs (* x x)) x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 53 / 61 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (pow x 2)) 2) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (pow x 2)) 2) x)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (171 enodes)
* * [misc]simplify:  iters left: 1 (256 enodes)
* [exit]simplify:  Simplified to (+ (* (fabs (* x x)) (* (fabs (* x x)) (* x 32.0))) (* (+ 120.0 (* (* x x) -160.0)) x))
* * * * [misc]progress:  [ 54 / 61 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (pow x 2)) 2) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (pow x 2)) 2) x)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (171 enodes)
* * [misc]simplify:  iters left: 1 (256 enodes)
* [exit]simplify:  Simplified to (+ (* (fabs (* x x)) (* (fabs (* x x)) (* x 32.0))) (* (+ 120.0 (* (* x x) -160.0)) x))
* * * * [misc]progress:  [ 55 / 61 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (pow x 2)) 2) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (pow x 2)) 2) x)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (171 enodes)
* * [misc]simplify:  iters left: 1 (256 enodes)
* [exit]simplify:  Simplified to (+ (* (fabs (* x x)) (* (fabs (* x x)) (* x 32.0))) (* (+ 120.0 (* (* x x) -160.0)) x))
* * * * [misc]progress:  [ 56 / 61 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (148 enodes)
* * [misc]simplify:  iters left: 1 (182 enodes)
* [exit]simplify:  Simplified to (+ (* (* (fabs (* x x)) 32.0) (* (fabs (* x x)) x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 57 / 61 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (148 enodes)
* * [misc]simplify:  iters left: 1 (182 enodes)
* [exit]simplify:  Simplified to (+ (* (* (fabs (* x x)) 32.0) (* (fabs (* x x)) x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 58 / 61 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (148 enodes)
* * [misc]simplify:  iters left: 1 (182 enodes)
* [exit]simplify:  Simplified to (+ (* (* (fabs (* x x)) 32.0) (* (fabs (* x x)) x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 59 / 61 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (pow x 2)) 2) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (pow x 2)) 2) x)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (171 enodes)
* * [misc]simplify:  iters left: 1 (256 enodes)
* [exit]simplify:  Simplified to (+ (* (fabs (* x x)) (* (fabs (* x x)) (* x 32.0))) (* (+ 120.0 (* (* x x) -160.0)) x))
* * * * [misc]progress:  [ 60 / 61 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (pow x 2)) 2) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (pow x 2)) 2) x)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (171 enodes)
* * [misc]simplify:  iters left: 1 (256 enodes)
* [exit]simplify:  Simplified to (+ (* (fabs (* x x)) (* (fabs (* x x)) (* x 32.0))) (* (+ 120.0 (* (* x x) -160.0)) x))
* * * * [misc]progress:  [ 61 / 61 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (pow x 2)) 2) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (pow x 2)) 2) x)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (171 enodes)
* * [misc]simplify:  iters left: 1 (256 enodes)
* [exit]simplify:  Simplified to (+ (* (fabs (* x x)) (* (fabs (* x x)) (* x 32.0))) (* (+ 120.0 (* (* x x) -160.0)) x))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 2 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 2 2)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* x x)) (fabs (* x x))) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* x x)) (fabs (* x x))) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* x x)) (fabs (* x x))) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* x x)) (fabs (* x x))) x) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* x x)) (fabs (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (fabs (pow x 2)) (fabs (pow x 2))) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (pow x 2)) 2) 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (* 0 (fabs (pow x 2)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 1) (* 0 0)) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (log (pow (fabs (pow x 2)) 2)) into (log (pow (fabs (pow x 2)) 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))) into (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* x x)) (fabs (* x x))) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* x x)) (fabs (* x x))) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* x x)) (fabs (* x x))) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* x x)) (fabs (* x x))) x) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* x x)) (fabs (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (fabs (pow x 2)) (fabs (pow x 2))) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (pow x 2)) 2) 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (* 0 (fabs (pow x 2)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 1) (* 0 0)) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (log (pow (fabs (pow x 2)) 2)) into (log (pow (fabs (pow x 2)) 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))) into (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (fabs (pow x 2)) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (fabs (pow x 2)) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow (fabs (pow x 2)) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow (fabs (pow x 2)) 2) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow (fabs (pow x 2)) 2) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow (fabs (pow x 2)) 2) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow (fabs (pow x 2)) 2) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow (fabs (pow x 2)) 2) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (pow x 2)) 2) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow (fabs (pow x 2)) 2) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) 1) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (log (pow (fabs (/ 1 (pow x 2))) 2)) into (log (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))) into (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) into (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) 1) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (log (pow (fabs (/ 1 (pow x 2))) 2)) into (log (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))) into (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) into (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) into (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (* 0 (fabs (/ 1 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow (/ 1 x) 2))) 2)) (log (/ 1 x))))) into (exp (* 1/3 (- (log (pow (fabs (pow x 2)) 2)) (log (/ 1 x)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) -1) into (* -1 (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) into (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))) into (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) into (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) -1) into (* -1 (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) into (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))) into (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) into (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) into (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (* 0 (fabs (/ 1 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow (/ 1 (- x)) 2))) 2))) (log (/ 1 (- x)))))) into (exp (* 1/3 (- (log (* -1 (pow (fabs (pow x 2)) 2))) (log (/ -1 x)))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* x x)) (fabs (* x x))) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* x x)) (fabs (* x x))) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* x x)) (fabs (* x x))) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* x x)) (fabs (* x x))) x) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* x x)) (fabs (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (fabs (pow x 2)) (fabs (pow x 2))) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (pow x 2)) 2) 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (* 0 (fabs (pow x 2)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 1) (* 0 0)) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (log (pow (fabs (pow x 2)) 2)) into (log (pow (fabs (pow x 2)) 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))) into (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* x x)) (fabs (* x x))) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* x x)) (fabs (* x x))) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* x x)) (fabs (* x x))) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* x x)) (fabs (* x x))) x) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* x x)) (fabs (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (fabs (pow x 2)) (fabs (pow x 2))) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (pow x 2)) 2) 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (* 0 (fabs (pow x 2)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 1) (* 0 0)) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (log (pow (fabs (pow x 2)) 2)) into (log (pow (fabs (pow x 2)) 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))) into (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (fabs (pow x 2)) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (fabs (pow x 2)) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow (fabs (pow x 2)) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow (fabs (pow x 2)) 2) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow (fabs (pow x 2)) 2) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow (fabs (pow x 2)) 2) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow (fabs (pow x 2)) 2) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow (fabs (pow x 2)) 2) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (pow x 2)) 2) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow (fabs (pow x 2)) 2) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) 1) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (log (pow (fabs (/ 1 (pow x 2))) 2)) into (log (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))) into (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) into (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) 1) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (log (pow (fabs (/ 1 (pow x 2))) 2)) into (log (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))) into (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) into (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) into (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (* 0 (fabs (/ 1 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow (/ 1 x) 2))) 2)) (log (/ 1 x))))) into (exp (* 1/3 (- (log (pow (fabs (pow x 2)) 2)) (log (/ 1 x)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) -1) into (* -1 (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) into (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))) into (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) into (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) -1) into (* -1 (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) into (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))) into (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) into (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) into (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (* 0 (fabs (/ 1 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow (/ 1 (- x)) 2))) 2))) (log (/ 1 (- x)))))) into (exp (* 1/3 (- (log (* -1 (pow (fabs (pow x 2)) 2))) (log (/ -1 x)))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* x x)) (fabs (* x x))) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* x x)) (fabs (* x x))) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* x x)) (fabs (* x x))) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* x x)) (fabs (* x x))) x) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* x x)) (fabs (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (fabs (pow x 2)) (fabs (pow x 2))) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (pow x 2)) 2) 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (* 0 (fabs (pow x 2)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 1) (* 0 0)) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (log (pow (fabs (pow x 2)) 2)) into (log (pow (fabs (pow x 2)) 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))) into (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* x x)) (fabs (* x x))) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* x x)) (fabs (* x x))) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* x x)) (fabs (* x x))) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* x x)) (fabs (* x x))) x) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* x x)) (fabs (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (fabs (pow x 2)) (fabs (pow x 2))) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (pow x 2)) 2) 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (* 0 (fabs (pow x 2)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 1) (* 0 0)) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (log (pow (fabs (pow x 2)) 2)) into (log (pow (fabs (pow x 2)) 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))) into (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (fabs (pow x 2)) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (fabs (pow x 2)) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow (fabs (pow x 2)) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow (fabs (pow x 2)) 2) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow (fabs (pow x 2)) 2) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow (fabs (pow x 2)) 2) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow (fabs (pow x 2)) 2) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow (fabs (pow x 2)) 2) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (pow x 2)) 2) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow (fabs (pow x 2)) 2) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) 1) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (log (pow (fabs (/ 1 (pow x 2))) 2)) into (log (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))) into (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) into (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) 1) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (log (pow (fabs (/ 1 (pow x 2))) 2)) into (log (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))) into (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) into (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) into (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (* 0 (fabs (/ 1 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow (/ 1 x) 2))) 2)) (log (/ 1 x))))) into (exp (* 1/3 (- (log (pow (fabs (pow x 2)) 2)) (log (/ 1 x)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) -1) into (* -1 (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) into (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))) into (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) into (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) -1) into (* -1 (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) into (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))) into (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) into (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) into (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (* 0 (fabs (/ 1 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow (/ 1 (- x)) 2))) 2))) (log (/ 1 (- x)))))) into (exp (* 1/3 (- (log (* -1 (pow (fabs (pow x 2)) 2))) (log (/ -1 x)))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* x x)) (fabs (* x x))) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* x x)) (fabs (* x x))) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* x x)) (fabs (* x x))) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* x x)) (fabs (* x x))) x) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* x x)) (fabs (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (fabs (pow x 2)) (fabs (pow x 2))) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (pow x 2)) 2) 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (* 0 (fabs (pow x 2)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 1) (* 0 0)) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (log (pow (fabs (pow x 2)) 2)) into (log (pow (fabs (pow x 2)) 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))) into (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* x x)) (fabs (* x x))) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* x x)) (fabs (* x x))) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* x x)) (fabs (* x x))) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* x x)) (fabs (* x x))) x) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* x x)) (fabs (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (fabs (pow x 2)) (fabs (pow x 2))) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (pow x 2)) 2) 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (* 0 (fabs (pow x 2)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 1) (* 0 0)) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (log (pow (fabs (pow x 2)) 2)) into (log (pow (fabs (pow x 2)) 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))) into (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* x x)) (fabs (* x x))) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* x x)) (fabs (* x x))) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* x x)) (fabs (* x x))) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* x x)) (fabs (* x x))) x) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* x x)) (fabs (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (fabs (pow x 2)) (fabs (pow x 2))) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (pow x 2)) 2) 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (* 0 (fabs (pow x 2)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 1) (* 0 0)) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (log (pow (fabs (pow x 2)) 2)) into (log (pow (fabs (pow x 2)) 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))) into (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* x x)) (fabs (* x x))) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* x x)) (fabs (* x x))) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* x x)) (fabs (* x x))) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* x x)) (fabs (* x x))) x) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* x x)) (fabs (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (fabs (pow x 2)) (fabs (pow x 2))) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (pow x 2)) 2) 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (* 0 (fabs (pow x 2)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 1) (* 0 0)) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (log (pow (fabs (pow x 2)) 2)) into (log (pow (fabs (pow x 2)) 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))) into (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))) into (pow (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) 2) into (pow (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) 0) (* 0 (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (fabs (pow x 2)) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (fabs (pow x 2)) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (fabs (pow x 2)) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow (fabs (pow x 2)) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (fabs (pow x 2)) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow (fabs (pow x 2)) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow (fabs (pow x 2)) 2) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow (fabs (pow x 2)) 2) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow (fabs (pow x 2)) 2) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow (fabs (pow x 2)) 2) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow (fabs (pow x 2)) 2) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow (fabs (pow x 2)) 2) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow (fabs (pow x 2)) 2) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (pow x 2)) 2) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow (fabs (pow x 2)) 2) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow (fabs (pow x 2)) 2) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow (fabs (pow x 2)) 2) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow (fabs (pow x 2)) 2) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow (fabs (pow x 2)) 2) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (fabs (pow x 2)) 2) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (pow x 2)) 2) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow (fabs (pow x 2)) 2) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow (fabs (pow x 2)) 2) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow (fabs (pow x 2)) 2) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow (fabs (pow x 2)) 2))) into (+ (log (pow (fabs (pow x 2)) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) 2) into (pow (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) 2)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) (cbrt (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) (cbrt (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) 1) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (log (pow (fabs (/ 1 (pow x 2))) 2)) into (log (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))) into (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) into (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) 1) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (log (pow (fabs (/ 1 (pow x 2))) 2)) into (log (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))) into (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) into (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) (cbrt (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) 1) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (log (pow (fabs (/ 1 (pow x 2))) 2)) into (log (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))) into (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) into (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) 1) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (log (pow (fabs (/ 1 (pow x 2))) 2)) into (log (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))) into (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) into (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))) into (pow (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) 2) into (pow (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (* 0 (fabs (/ 1 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (* 0 (fabs (/ 1 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) 0) (* 0 (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow (fabs (/ 1 (pow x 2))) 2) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (pow (fabs (/ 1 (pow x 2))) 2))) into (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow x 2))) 2)) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (pow (fabs (/ 1 (pow (/ 1 x) 2))) 2)) (log (/ 1 x))))) 2) into (pow (exp (* 1/3 (- (log (pow (fabs (pow x 2)) 2)) (log (/ 1 x))))) 2)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) (cbrt (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) (cbrt (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) -1) into (* -1 (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) into (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))) into (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) into (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) -1) into (* -1 (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) into (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))) into (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) into (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) (cbrt (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) -1) into (* -1 (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) into (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))) into (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) into (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) -1) into (* -1 (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) into (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))) into (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) into (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))) into (pow (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) 2) into (pow (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (* 0 (fabs (/ 1 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (* 0 (fabs (/ 1 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) 0) (* 0 (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (/ 1 (pow x 2))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* -1 (pow (fabs (/ 1 (pow x 2))) 2)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2)))) into (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow x 2))) 2))) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (* -1 (pow (fabs (/ 1 (pow (/ 1 (- x)) 2))) 2))) (log (/ 1 (- x)))))) 2) into (pow (exp (* 1/3 (- (log (* -1 (pow (fabs (pow x 2)) 2))) (log (/ -1 x))))) 2)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (pow (* (* (fabs (* x x)) (fabs (* x x))) x) 1/3)))))>
* * * * [misc]progress:  [ 2 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (pow (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) 1)))))>
* * * * [misc]progress:  [ 3 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (exp (log (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))))>
* [enter]simplify:  Simplifying (log (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (log (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* * * * [misc]progress:  [ 4 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (log (exp (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (exp (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* * * * [misc]progress:  [ 5 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (* (cbrt (* (fabs (* x x)) (fabs (* x x)))) (cbrt x))))))>
* [enter]simplify:  Simplifying (cbrt (* (fabs (* x x)) (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* [exit]simplify:  Simplified to (cbrt (* (fabs (* x x)) (fabs (* x x))))
* [exit]simplify:  Simplified to (cbrt (* (fabs (* x x)) (fabs (* x x))))
* [enter]simplify:  Simplifying (cbrt x)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (cbrt x)
* [exit]simplify:  Simplified to (cbrt x)
* * * * [misc]progress:  [ 6 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (* (* (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))) (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))) (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* * * * [misc]progress:  [ 7 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* (* x (fabs (* x x))) (fabs (* x x)))
* [exit]simplify:  Simplified to (* (* x (fabs (* x x))) (fabs (* x x)))
* * * * [misc]progress:  [ 8 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (* (sqrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (sqrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* * * * [misc]progress:  [ 9 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (* 1 (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))))))>
* * * * [misc]progress:  [ 10 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (pow (* (* (fabs (* x x)) (fabs (* x x))) x) 1/3)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* * * * [misc]progress:  [ 11 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (pow (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) 1)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* * * * [misc]progress:  [ 12 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (exp (log (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (log (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (log (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* * * * [misc]progress:  [ 13 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (log (exp (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (exp (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* * * * [misc]progress:  [ 14 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (* (cbrt (* (fabs (* x x)) (fabs (* x x)))) (cbrt x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (cbrt (* (fabs (* x x)) (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* [exit]simplify:  Simplified to (cbrt (* (fabs (* x x)) (fabs (* x x))))
* [exit]simplify:  Simplified to (cbrt (* (fabs (* x x)) (fabs (* x x))))
* [enter]simplify:  Simplifying (cbrt x)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (cbrt x)
* [exit]simplify:  Simplified to (cbrt x)
* * * * [misc]progress:  [ 15 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (* (* (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))) (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))) (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* * * * [misc]progress:  [ 16 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* (* x (fabs (* x x))) (fabs (* x x)))
* [exit]simplify:  Simplified to (* (* x (fabs (* x x))) (fabs (* x x)))
* * * * [misc]progress:  [ 17 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (* (sqrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (sqrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* * * * [misc]progress:  [ 18 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (* 1 (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* * * * [misc]progress:  [ 19 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow (* (* (fabs (* x x)) (fabs (* x x))) x) 1/3) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* * * * [misc]progress:  [ 20 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) 1) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* * * * [misc]progress:  [ 21 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (log (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (log (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (log (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* * * * [misc]progress:  [ 22 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (log (exp (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (exp (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* * * * [misc]progress:  [ 23 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (* (fabs (* x x)) (fabs (* x x)))) (cbrt x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (cbrt (* (fabs (* x x)) (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* [exit]simplify:  Simplified to (cbrt (* (fabs (* x x)) (fabs (* x x))))
* [exit]simplify:  Simplified to (cbrt (* (fabs (* x x)) (fabs (* x x))))
* [enter]simplify:  Simplifying (cbrt x)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (cbrt x)
* [exit]simplify:  Simplified to (cbrt x)
* * * * [misc]progress:  [ 24 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))) (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))) (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* * * * [misc]progress:  [ 25 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* (* x (fabs (* x x))) (fabs (* x x)))
* [exit]simplify:  Simplified to (* (* x (fabs (* x x))) (fabs (* x x)))
* * * * [misc]progress:  [ 26 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (sqrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (sqrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* * * * [misc]progress:  [ 27 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* 1 (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* * * * [misc]progress:  [ 28 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (* (* (fabs (* x x)) (fabs (* x x))) x) (+ 1/3 1/3)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 29 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (+ 1 1)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 30 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (* (* (* (fabs (* x x)) (fabs (* x x))) x) (* (* (fabs (* x x)) (fabs (* x x))) x)) 1/3) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (* (* (fabs (* x x)) (fabs (* x x))) x) (* (* (fabs (* x x)) (fabs (* x x))) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (83 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (* (pow (fabs (* x x)) 3) (* (fabs (* x x)) (* x x)))
* [exit]simplify:  Simplified to (* (pow (fabs (* x x)) 3) (* (fabs (* x x)) (* x x)))
* * * * [misc]progress:  [ 31 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) 1) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))) (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))) (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* * * * [misc]progress:  [ 32 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) 2) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* * * * [misc]progress:  [ 33 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (+ 1 1)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 34 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) 1) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* * * * [misc]progress:  [ 35 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (exp (+ (log (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (log (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (log (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))) (log (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))) (log (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))))
* * * * [misc]progress:  [ 36 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (exp (log (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (log (* (cbrt (* (fabs (* x x)) (* x (fabs (* x x))))) (cbrt (* (fabs (* x x)) (* x (fabs (* x x)))))))
* [exit]simplify:  Simplified to (log (* (cbrt (* (fabs (* x x)) (* x (fabs (* x x))))) (cbrt (* (fabs (* x x)) (* x (fabs (* x x)))))))
* * * * [misc]progress:  [ 37 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (log (exp (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (* (fabs (* x x)) (* x (fabs (* x x))))) (cbrt (* (fabs (* x x)) (* x (fabs (* x x)))))))
* [exit]simplify:  Simplified to (exp (* (cbrt (* (fabs (* x x)) (* x (fabs (* x x))))) (cbrt (* (fabs (* x x)) (* x (fabs (* x x)))))))
* * * * [misc]progress:  [ 38 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (cbrt (* (* (* (fabs (* x x)) (fabs (* x x))) x) (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (* (* (fabs (* x x)) (fabs (* x x))) x) (* (* (fabs (* x x)) (fabs (* x x))) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (83 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (* (pow (fabs (* x x)) 3) (* (fabs (* x x)) (* x x)))
* [exit]simplify:  Simplified to (* (pow (fabs (* x x)) 3) (* (fabs (* x x)) (* x x)))
* * * * [misc]progress:  [ 39 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (cbrt (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))) (cbrt (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (cbrt (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))) (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))) (cbrt (* (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))) (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))) (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))) (cbrt (* (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))) (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))) (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))) (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))))
* * * * [misc]progress:  [ 40 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (cbrt (* (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (71 enodes)
* * [misc]simplify:  iters left: 1 (165 enodes)
* [exit]simplify:  Simplified to (* (* (fabs (* x x)) (* x x)) (pow (fabs (* x x)) 3))
* [exit]simplify:  Simplified to (* (* (fabs (* x x)) (* x x)) (pow (fabs (* x x)) 3))
* * * * [misc]progress:  [ 41 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (sqrt (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (sqrt (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (fabs (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (fabs (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* * * * [misc]progress:  [ 42 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* 1 (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* * * * [misc]progress:  [ 43 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (fabs (* x x)) (fabs (* x x))))) (cbrt x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (fabs (* x x)) (fabs (* x x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (fabs (* x x)) (fabs (* x x)))) (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (fabs (* x x)) (fabs (* x x)))) (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* * * * [misc]progress:  [ 44 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (* (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))) (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (* (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))) (* (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))) (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))) (* (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))) (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))))
* * * * [misc]progress:  [ 45 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (sqrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (sqrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (sqrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))) (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))) (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* * * * [misc]progress:  [ 46 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) 1) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) 1)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* [exit]simplify:  Simplified to (cbrt (* (fabs (* x x)) (* x (fabs (* x x)))))
* [exit]simplify:  Simplified to (cbrt (* (fabs (* x x)) (* x (fabs (* x x)))))
* * * * [misc]progress:  [ 47 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (fabs (* x x)) (fabs (* x x)))) (* (cbrt x) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (cbrt x) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* (fabs (* x x)) (fabs (* x x))))) (cbrt x))
* [exit]simplify:  Simplified to (* (cbrt (* x (* (fabs (* x x)) (fabs (* x x))))) (cbrt x))
* * * * [misc]progress:  [ 48 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (* (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))) (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))) (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* * * * [misc]progress:  [ 49 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (sqrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (* (sqrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))) (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (* x (fabs (* x x))) (fabs (* x x))))) (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* * * * [misc]progress:  [ 50 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* 1 (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))) (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))) (cbrt (* (* x (fabs (* x x))) (fabs (* x x)))))
* * * * [misc]progress:  [ 51 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* * * * [misc]progress:  [ 52 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (192 enodes)
* * [misc]simplify:  iters left: 2 (344 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (pow (fabs (* x x)) (+ 1/3 1/3)) (cbrt x)) (* (pow (fabs (* x x)) (+ 1/3 1/3)) (cbrt x))) (* (pow (fabs (* x x)) (+ 1/3 1/3)) (* (cbrt x) 32.0))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 53 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (exp (* 1/3 (- (log (pow (fabs (pow x 2)) 2)) (log (/ 1 x)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (exp (* 1/3 (- (log (pow (fabs (pow x 2)) 2)) (log (/ 1 x))))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (197 enodes)
* * [misc]simplify:  iters left: 2 (368 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* 32.0 (* (pow (fabs (* x x)) (+ 1/3 1/3)) (cbrt x))) (* (* (pow (fabs (* x x)) (+ 1/3 1/3)) (cbrt x)) (* (pow (fabs (* x x)) (+ 1/3 1/3)) (cbrt x)))))
* * * * [misc]progress:  [ 54 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (exp (* 1/3 (- (log (* -1 (pow (fabs (pow x 2)) 2))) (log (/ -1 x)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (exp (* 1/3 (- (log (* -1 (pow (fabs (pow x 2)) 2))) (log (/ -1 x))))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (127 enodes)
* * [misc]simplify:  iters left: 3 (233 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* x (* (fabs (* x x)) (fabs (* x x))))) (cbrt (* x (* (fabs (* x x)) (fabs (* x x)))))) (* (pow (* (fabs (* x x)) (- (fabs (* x x)))) 1/3) (* (exp (* (log (/ -1 x)) (- 1/3))) 32.0))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 55 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (182 enodes)
* * [misc]simplify:  iters left: 2 (299 enodes)
* * [misc]simplify:  iters left: 1 (498 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* 32.0 (cbrt x)) (pow (fabs (* x x)) (+ 1/3 1/3))) (* (* (cbrt x) (pow (fabs (* x x)) (+ 1/3 1/3))) (* (cbrt x) (pow (fabs (* x x)) (+ 1/3 1/3))))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 56 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (exp (* 1/3 (- (log (pow (fabs (pow x 2)) 2)) (log (/ 1 x)))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (exp (* 1/3 (- (log (pow (fabs (pow x 2)) 2)) (log (/ 1 x)))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (188 enodes)
* * [misc]simplify:  iters left: 2 (334 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* 32.0 (* (cbrt x) (pow (fabs (* x x)) (+ 1/3 1/3)))) (* (* (cbrt x) (pow (fabs (* x x)) (+ 1/3 1/3))) (* (cbrt x) (pow (fabs (* x x)) (+ 1/3 1/3))))))
* * * * [misc]progress:  [ 57 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (exp (* 1/3 (- (log (* -1 (pow (fabs (pow x 2)) 2))) (log (/ -1 x)))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (exp (* 1/3 (- (log (* -1 (pow (fabs (pow x 2)) 2))) (log (/ -1 x)))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (231 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* (* (fabs (* x x)) x) (fabs (* x x)))) (cbrt (* (* (fabs (* x x)) x) (fabs (* x x))))) (* (pow (* (- (fabs (* x x))) (fabs (* x x))) 1/3) (* (exp (* (log (/ -1 x)) (- 1/3))) 32.0))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 58 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (190 enodes)
* * [misc]simplify:  iters left: 2 (330 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (cbrt x) (pow (fabs (* x x)) (+ 1/3 1/3))) (* (pow (fabs (* x x)) (+ 1/3 1/3)) (* 32.0 (cbrt x)))) (* (cbrt x) (pow (fabs (* x x)) (+ 1/3 1/3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 59 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (* 1/3 (- (log (pow (fabs (pow x 2)) 2)) (log (/ 1 x))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (* 1/3 (- (log (pow (fabs (pow x 2)) 2)) (log (/ 1 x))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* * [misc]simplify:  iters left: 3 (197 enodes)
* * [misc]simplify:  iters left: 2 (361 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* 32.0 (* (cbrt x) (pow (fabs (* x x)) (+ 1/3 1/3)))) (* (* (cbrt x) (pow (fabs (* x x)) (+ 1/3 1/3))) (* (cbrt x) (pow (fabs (* x x)) (+ 1/3 1/3))))))
* * * * [misc]progress:  [ 60 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (* 1/3 (- (log (* -1 (pow (fabs (pow x 2)) 2))) (log (/ -1 x))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (* 1/3 (- (log (* -1 (pow (fabs (pow x 2)) 2))) (log (/ -1 x))))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (127 enodes)
* * [misc]simplify:  iters left: 3 (229 enodes)
* * [misc]simplify:  iters left: 2 (486 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (exp (* (log x) 1/3)) (pow (fabs (* x x)) (* 2 1/3))) 32.0) (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 61 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) 2) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (exp (* 1/3 (+ (log (pow (fabs (pow x 2)) 2)) (log x)))) 2) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (202 enodes)
* * [misc]simplify:  iters left: 2 (363 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow (fabs (* x x)) (+ 1/3 1/3)) (cbrt x)) (* (* (pow (fabs (* x x)) (+ 1/3 1/3)) (cbrt x)) (* (pow (fabs (* x x)) (+ 1/3 1/3)) (* 32.0 (cbrt x))))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 62 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (exp (* 1/3 (- (log (pow (fabs (pow x 2)) 2)) (log (/ 1 x))))) 2) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (exp (* 1/3 (- (log (pow (fabs (pow x 2)) 2)) (log (/ 1 x))))) 2) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (200 enodes)
* * [misc]simplify:  iters left: 2 (414 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* (pow (fabs (* x x)) (+ 1/3 1/3)) (cbrt x)) (* (* (pow (fabs (* x x)) (+ 1/3 1/3)) (* (cbrt x) 32.0)) (* (pow (fabs (* x x)) (+ 1/3 1/3)) (cbrt x)))))
* * * * [misc]progress:  [ 63 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (exp (* 1/3 (- (log (* -1 (pow (fabs (pow x 2)) 2))) (log (/ -1 x))))) 2) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (exp (* 1/3 (- (log (* -1 (pow (fabs (pow x 2)) 2))) (log (/ -1 x))))) 2) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (127 enodes)
* * [misc]simplify:  iters left: 3 (241 enodes)
* [exit]simplify:  Simplified to (+ (* (exp (* (+ (log (fabs (* x x))) (+ (log (fabs (* x x))) (+ 0 (log x)))) (+ 1/3 1/3))) (* (cbrt (* (fabs (* x x)) (* (fabs (* x x)) x))) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 2 1 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* x x)) (fabs (* x x))) x) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* x x)) (fabs (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (fabs (pow x 2)) (fabs (pow x 2))) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (pow x 2)) 2) 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (* 0 (fabs (pow x 2)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 1) (* 0 0)) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (fabs (* x x)) (fabs (* x x))) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* x x)) (fabs (* x x))) x) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* x x)) (fabs (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (fabs (pow x 2)) (fabs (pow x 2))) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (pow x 2)) 2) 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (* 0 (fabs (pow x 2)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 1) (* 0 0)) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (pow (fabs (pow x 2)) 2) 1) 1)))) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 1)) (pow 1 1)))) 1) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (pow (fabs (pow x 2)) 2) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (pow (fabs (pow x 2)) 2) 2) 2)) (* (/ (pow 0 1) 1)))) into (* 1/2 (pow (fabs (pow x 2)) 4))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 (* 1/2 (pow (fabs (pow x 2)) 4))) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (pow (fabs (pow x 2)) 2) 3) 6)) (* (/ (pow (pow (fabs (pow x 2)) 2) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into (* 1/6 (pow (fabs (pow x 2)) 6))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 1) (pow (* 2 (* 1/2 (pow (fabs (pow x 2)) 4))) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 (* 1/6 (pow (fabs (pow x 2)) 6))) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (pow (fabs (pow x 2)) 2) 4) 24)) (* (/ (pow (pow (fabs (pow x 2)) 2) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (pow (fabs (pow x 2)) 2) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into (* 1/24 (pow (fabs (pow x 2)) 8))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 2) (pow (* 2 (* 1/2 (pow (fabs (pow x 2)) 4))) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 (* 1/2 (pow (fabs (pow x 2)) 4))) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 1) 1 (pow (* 6 (* 1/6 (pow (fabs (pow x 2)) 6))) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* 1/24 (pow (fabs (pow x 2)) 8))) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (pow (fabs (pow x 2)) 2) 5) 120)) (* (/ (pow (pow (fabs (pow x 2)) 2) 3) 6) (/ (pow 0 1) 1)) (* (/ (pow (pow (fabs (pow x 2)) 2) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (pow (fabs (pow x 2)) 2) 1) 1) (/ (pow 0 2) 2)) (* (/ (pow (pow (fabs (pow x 2)) 2) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into (* 1/120 (pow (fabs (pow x 2)) 10))
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 3) (pow (* 2 (* 1/2 (pow (fabs (pow x 2)) 4))) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 1) (pow (* 2 (* 1/2 (pow (fabs (pow x 2)) 4))) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 2) 1 (pow (* 6 (* 1/6 (pow (fabs (pow x 2)) 6))) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 (* 1/2 (pow (fabs (pow x 2)) 4))) 1) (pow (* 6 (* 1/6 (pow (fabs (pow x 2)) 6))) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 1) 1 1 (pow (* 24 (* 1/24 (pow (fabs (pow x 2)) 8))) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 (* 1/120 (pow (fabs (pow x 2)) 10))) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (pow (fabs (pow x 2)) 2) 6) 720)) (* (/ (pow (pow (fabs (pow x 2)) 2) 4) 24) (/ (pow 0 1) 1)) (* (/ (pow (pow (fabs (pow x 2)) 2) 3) 6) (/ (pow 0 1) 1)) (* (/ (pow (pow (fabs (pow x 2)) 2) 2) 2) (/ (pow 0 2) 2)) (* (/ (pow (pow (fabs (pow x 2)) 2) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (pow (fabs (pow x 2)) 2) 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (pow (fabs (pow x 2)) 2) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into (* 1/720 (pow (fabs (pow x 2)) 12))
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 4) (pow (* 2 (* 1/2 (pow (fabs (pow x 2)) 4))) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 2) (pow (* 2 (* 1/2 (pow (fabs (pow x 2)) 4))) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 3) 1 (pow (* 6 (* 1/6 (pow (fabs (pow x 2)) 6))) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 (* 1/2 (pow (fabs (pow x 2)) 4))) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 1) (pow (* 2 (* 1/2 (pow (fabs (pow x 2)) 4))) 1) (pow (* 6 (* 1/6 (pow (fabs (pow x 2)) 6))) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 2) 1 1 (pow (* 24 (* 1/24 (pow (fabs (pow x 2)) 8))) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 (* 1/6 (pow (fabs (pow x 2)) 6))) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 (* 1/2 (pow (fabs (pow x 2)) 4))) 1) 1 (pow (* 24 (* 1/24 (pow (fabs (pow x 2)) 8))) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 1) 1 1 1 (pow (* 120 (* 1/120 (pow (fabs (pow x 2)) 10))) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 (* 1/720 (pow (fabs (pow x 2)) 12))) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (fabs (pow x 2)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (pow (fabs (pow x 2)) 2) 7) 5040)) (* (/ (pow (pow (fabs (pow x 2)) 2) 5) 120) (/ (pow 0 1) 1)) (* (/ (pow (pow (fabs (pow x 2)) 2) 4) 24) (/ (pow 0 1) 1)) (* (/ (pow (pow (fabs (pow x 2)) 2) 3) 6) (/ (pow 0 2) 2)) (* (/ (pow (pow (fabs (pow x 2)) 2) 3) 6) (/ (pow 0 1) 1)) (* (/ (pow (pow (fabs (pow x 2)) 2) 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (pow (fabs (pow x 2)) 2) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (pow (fabs (pow x 2)) 2) 1) 1) (/ (pow 0 3) 6)) (* (/ (pow (pow (fabs (pow x 2)) 2) 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (pow (fabs (pow x 2)) 2) 1) 1) (/ (pow 0 2) 2)) (* (/ (pow (pow (fabs (pow x 2)) 2) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into (* 1/5040 (pow (fabs (pow x 2)) 14))
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 5) (pow (* 2 (* 1/2 (pow (fabs (pow x 2)) 4))) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 3) (pow (* 2 (* 1/2 (pow (fabs (pow x 2)) 4))) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 4) 1 (pow (* 6 (* 1/6 (pow (fabs (pow x 2)) 6))) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 1) (pow (* 2 (* 1/2 (pow (fabs (pow x 2)) 4))) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 2) (pow (* 2 (* 1/2 (pow (fabs (pow x 2)) 4))) 1) (pow (* 6 (* 1/6 (pow (fabs (pow x 2)) 6))) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 3) 1 1 (pow (* 24 (* 1/24 (pow (fabs (pow x 2)) 8))) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 (* 1/2 (pow (fabs (pow x 2)) 4))) 2) (pow (* 6 (* 1/6 (pow (fabs (pow x 2)) 6))) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 1) 1 (pow (* 6 (* 1/6 (pow (fabs (pow x 2)) 6))) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 1) (pow (* 2 (* 1/2 (pow (fabs (pow x 2)) 4))) 1) 1 (pow (* 24 (* 1/24 (pow (fabs (pow x 2)) 8))) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 2) 1 1 1 (pow (* 120 (* 1/120 (pow (fabs (pow x 2)) 10))) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 (* 1/6 (pow (fabs (pow x 2)) 6))) 1) (pow (* 24 (* 1/24 (pow (fabs (pow x 2)) 8))) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 (* 1/2 (pow (fabs (pow x 2)) 4))) 1) 1 1 (pow (* 120 (* 1/120 (pow (fabs (pow x 2)) 10))) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 (pow (fabs (pow x 2)) 2)) 1) 1 1 1 1 (pow (* 720 (* 1/720 (pow (fabs (pow x 2)) 12))) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 (* 1/5040 (pow (fabs (pow x 2)) 14))) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (pow (fabs (pow x 2)) 2) x) into (* (pow (fabs (pow x 2)) 2) x)
* [misc]approximate:  Taking taylor expansion of (log (exp (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) 1) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (exp (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) into (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x))
* [misc]backup-simplify:  Simplify (log (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) into (/ (pow (fabs (/ 1 (pow x 2))) 2) x)
* [misc]taylor:  Taking taylor expansion of (log (exp (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) 1) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (exp (* (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) (/ 1 x))) into (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x))
* [misc]backup-simplify:  Simplify (log (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) into (/ (pow (fabs (/ 1 (pow x 2))) 2) x)
* [misc]backup-simplify:  Simplify (/ (pow (fabs (/ 1 (pow x 2))) 2) x) into (/ (pow (fabs (/ 1 (pow x 2))) 2) x)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (pow (fabs (/ 1 (pow (/ 1 x) 2))) 2) (/ 1 x)) into (* (pow (fabs (pow x 2)) 2) x)
* [misc]approximate:  Taking taylor expansion of (log (exp (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) -1) into (* -1 (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (exp (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) into (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x)))) into (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))
* [misc]taylor:  Taking taylor expansion of (log (exp (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (* (pow (fabs (/ 1 (pow x 2))) 2) -1) into (* -1 (pow (fabs (/ 1 (pow x 2))) 2))
* [misc]backup-simplify:  Simplify (exp (* (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) (/ 1 (- x)))) into (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x)))) into (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))
* [misc]backup-simplify:  Simplify (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x)) into (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (* -1 (/ (pow (fabs (/ 1 (pow x 2))) 2) x))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (/ (pow (fabs (/ 1 (pow (/ 1 (- x)) 2))) 2) (/ 1 (- x)))) into (* (pow (fabs (pow x 2)) 2) x)
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -160.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 160.0)
* [misc]backup-simplify:  Simplify (- 160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 160.0) (pow x 3)) into (* -160.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -160.0 (pow (/ 1 (/ 1 x)) 3)) into (* -160.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify 160.0 into 160.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 160.0 (pow (/ 1 (/ 1 (- x))) 3)) into (* -160.0 (pow x 3))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (* (fabs (* x x)) (fabs (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (fabs (* x x)) (fabs (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of (* (fabs (* x x)) (fabs (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]taylor:  Taking taylor expansion of (fabs (* x x)) in x
* [misc]backup-simplify:  Simplify (fabs (* x x)) into (fabs (pow x 2))
* [misc]backup-simplify:  Simplify (* (fabs (pow x 2)) (fabs (pow x 2))) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (pow (fabs (pow x 2)) 2) into (pow (fabs (pow x 2)) 2)
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (* 0 (fabs (pow x 2)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (pow x 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (fabs (pow x 2)) 2) into (pow (fabs (pow x 2)) 2)
* [misc]approximate:  Taking taylor expansion of (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 x) (/ 1 x))) (fabs (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 x) (/ 1 x))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 x) (/ 1 x))) into (fabs (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (pow (fabs (/ 1 (pow x 2))) 2) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (* 0 (fabs (/ 1 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (fabs (/ 1 (pow (/ 1 x) 2))) 2) into (pow (fabs (pow x 2)) 2)
* [misc]approximate:  Taking taylor expansion of (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (* (fabs (* (/ 1 (- x)) (/ 1 (- x)))) (fabs (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (fabs (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]backup-simplify:  Simplify (fabs (* (/ 1 (- x)) (/ 1 (- x)))) into (fabs (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (* (fabs (/ 1 (pow x 2))) (fabs (/ 1 (pow x 2)))) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (pow (fabs (/ 1 (pow x 2))) 2) into (pow (fabs (/ 1 (pow x 2))) 2)
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (* 0 (fabs (/ 1 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (fabs (/ 1 (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (fabs (/ 1 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (fabs (/ 1 (pow (/ 1 (- x)) 2))) 2) into (pow (fabs (pow x 2)) 2)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 3)) into (pow x 3)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (+ (log (* (cbrt (exp (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))) (log (cbrt (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (exp (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (exp (* (* (fabs (* x x)) (fabs (* x x))) x)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* [exit]simplify:  Simplified to (log (* (cbrt (exp (* (* x (fabs (* x x))) (fabs (* x x))))) (cbrt (exp (* (* x (fabs (* x x))) (fabs (* x x)))))))
* [exit]simplify:  Simplified to (log (* (cbrt (exp (* (* x (fabs (* x x))) (fabs (* x x))))) (cbrt (exp (* (* x (fabs (* x x))) (fabs (* x x)))))))
* [enter]simplify:  Simplifying (log (cbrt (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (log (cbrt (exp (* (fabs (* x x)) (* x (fabs (* x x)))))))
* [exit]simplify:  Simplified to (log (cbrt (exp (* (fabs (* x x)) (* x (fabs (* x x)))))))
* * * * [misc]progress:  [ 2 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (+ (log (sqrt (exp (* (* (fabs (* x x)) (fabs (* x x))) x)))) (log (sqrt (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))))>
* [enter]simplify:  Simplifying (log (sqrt (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (log (sqrt (exp (* (fabs (* x x)) (* x (fabs (* x x)))))))
* [exit]simplify:  Simplified to (log (sqrt (exp (* (fabs (* x x)) (* x (fabs (* x x)))))))
* [enter]simplify:  Simplifying (log (sqrt (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (log (sqrt (exp (* (fabs (* x x)) (* x (fabs (* x x)))))))
* [exit]simplify:  Simplified to (log (sqrt (exp (* (fabs (* x x)) (* x (fabs (* x x)))))))
* * * * [misc]progress:  [ 3 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (+ (log 1) (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x)))))))>
* [enter]simplify:  Simplifying (log 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (log 1)
* [exit]simplify:  Simplified to (log 1)
* [enter]simplify:  Simplifying (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (* (* x (fabs (* x x))) (fabs (* x x)))
* [exit]simplify:  Simplified to (* (* x (fabs (* x x))) (fabs (* x x)))
* * * * [misc]progress:  [ 4 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* x (log (exp (* (fabs (* x x)) (fabs (* x x)))))))))>
* [enter]simplify:  Simplifying (log (exp (* (fabs (* x x)) (fabs (* x x)))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (fabs (* x x)) (fabs (* x x)))
* [exit]simplify:  Simplified to (* (fabs (* x x)) (fabs (* x x)))
* * * * [misc]progress:  [ 5 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* 1 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x)))))))>
* [enter]simplify:  Simplifying (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (* (* x (fabs (* x x))) (fabs (* x x)))
* [exit]simplify:  Simplified to (* (* x (fabs (* x x))) (fabs (* x x)))
* * * * [misc]progress:  [ 6 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* x (log (exp (* (fabs (* x x)) (fabs (* x x)))))))))>
* [enter]simplify:  Simplifying (log (exp (* (fabs (* x x)) (fabs (* x x)))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (fabs (* x x)) (fabs (* x x)))
* [exit]simplify:  Simplified to (* (fabs (* x x)) (fabs (* x x)))
* * * * [misc]progress:  [ 7 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))) 1))))>
* * * * [misc]progress:  [ 8 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))>
* * * * [misc]progress:  [ 9 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (exp (log (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))))>
* [enter]simplify:  Simplifying (log (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (34 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (log (* (fabs (* x x)) (* x (fabs (* x x)))))
* [exit]simplify:  Simplified to (log (* (fabs (* x x)) (* x (fabs (* x x)))))
* * * * [misc]progress:  [ 10 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))))>
* [enter]simplify:  Simplifying (exp (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (56 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (* (fabs (* x x)) (fabs (* x x))))
* [exit]simplify:  Simplified to (pow (exp x) (* (fabs (* x x)) (fabs (* x x))))
* * * * [misc]progress:  [ 11 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x)))) (cbrt (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))) (cbrt (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x)))) (cbrt (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (26 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* [exit]simplify:  Simplified to (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)))
* [enter]simplify:  Simplifying (cbrt (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (cbrt (* (fabs (* x x)) (* x (fabs (* x x)))))
* [exit]simplify:  Simplified to (cbrt (* (fabs (* x x)) (* x (fabs (* x x)))))
* * * * [misc]progress:  [ 12 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (cbrt (* (* (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))) (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x)))) (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))))>
* [enter]simplify:  Simplifying (* (* (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))) (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x)))) (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (124 enodes)
* [exit]simplify:  Simplified to (* (* (* (fabs (* x x)) (* x x)) (* (fabs (* x x)) (fabs (* x x)))) (* (* (fabs (* x x)) x) (* (fabs (* x x)) (fabs (* x x)))))
* [exit]simplify:  Simplified to (* (* (* (fabs (* x x)) (* x x)) (* (fabs (* x x)) (fabs (* x x)))) (* (* (fabs (* x x)) x) (* (fabs (* x x)) (fabs (* x x)))))
* * * * [misc]progress:  [ 13 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (sqrt (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x)))) (sqrt (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))))>
* [enter]simplify:  Simplifying (sqrt (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (sqrt (* (fabs (* x x)) (* x (fabs (* x x)))))
* [exit]simplify:  Simplified to (sqrt (* (fabs (* x x)) (* x (fabs (* x x)))))
* [enter]simplify:  Simplifying (sqrt (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (sqrt (* (fabs (* x x)) (* x (fabs (* x x)))))
* [exit]simplify:  Simplified to (sqrt (* (fabs (* x x)) (* x (fabs (* x x)))))
* * * * [misc]progress:  [ 14 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* 1 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x)))))))>
* * * * [misc]progress:  [ 15 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (pow (* -160.0 (* (* x x) x)) 1)) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* * * * [misc]progress:  [ 16 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (exp (log (* -160.0 (* (* x x) x))))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (log (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (* -160.0 x)))
* [exit]simplify:  Simplified to (log (* (* x x) (* -160.0 x)))
* * * * [misc]progress:  [ 17 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (log (exp (* -160.0 (* (* x x) x))))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (exp (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* * * * [misc]progress:  [ 18 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* (cbrt (* -160.0 (* (* x x) x))) (cbrt (* -160.0 (* (* x x) x)))) (cbrt (* -160.0 (* (* x x) x))))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* -160.0 (* (* x x) x))) (cbrt (* -160.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -160.0 x) (* x x))) (cbrt (* (* -160.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -160.0 x) (* x x))) (cbrt (* (* -160.0 x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 19 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (cbrt (* (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* -160.0 (* (* x x) x))))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (210 enodes)
* [exit]simplify:  Simplified to (pow (* (* -160.0 x) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* -160.0 x) (* x x)) 3)
* * * * [misc]progress:  [ 20 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (sqrt (* -160.0 (* (* x x) x))) (sqrt (* -160.0 (* (* x x) x))))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (sqrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 21 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* 1 (* -160.0 (* (* x x) x)))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* * * * [misc]progress:  [ 22 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* -160.0 (* x x)) x)) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* -160.0 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* -160.0 (* x x))
* [exit]simplify:  Simplified to (* -160.0 (* x x))
* * * * [misc]progress:  [ 23 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* (* x x) x) -160.0)) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* * * * [misc]progress:  [ 24 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (pow (fabs (* x x)) (+ 1 1)) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 25 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (pow (* (fabs (* x x)) (fabs (* x x))) 1) x))))))>
* [enter]simplify:  Simplifying (* (fabs (* x x)) (fabs (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* [exit]simplify:  Simplified to (* (fabs (* x x)) (fabs (* x x)))
* [exit]simplify:  Simplified to (* (fabs (* x x)) (fabs (* x x)))
* * * * [misc]progress:  [ 26 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (pow (fabs (* x x)) 2) x))))))>
* * * * [misc]progress:  [ 27 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (pow (fabs (* x x)) (+ 1 1)) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 28 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (pow (* (fabs (* x x)) (fabs (* x x))) 1) x))))))>
* * * * [misc]progress:  [ 29 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (exp (+ (log (fabs (* x x))) (log (fabs (* x x))))) x))))))>
* [enter]simplify:  Simplifying (+ (log (fabs (* x x))) (log (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* [exit]simplify:  Simplified to (+ (log (fabs (* x x))) (log (fabs (* x x))))
* [exit]simplify:  Simplified to (+ (log (fabs (* x x))) (log (fabs (* x x))))
* * * * [misc]progress:  [ 30 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (exp (log (* (fabs (* x x)) (fabs (* x x))))) x))))))>
* [enter]simplify:  Simplifying (log (* (fabs (* x x)) (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (7 enodes)
* [exit]simplify:  Simplified to (+ (log (fabs (* x x))) (log (fabs (* x x))))
* [exit]simplify:  Simplified to (+ (log (fabs (* x x))) (log (fabs (* x x))))
* * * * [misc]progress:  [ 31 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (log (exp (* (fabs (* x x)) (fabs (* x x))))) x))))))>
* [enter]simplify:  Simplifying (exp (* (fabs (* x x)) (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (7 enodes)
* [exit]simplify:  Simplified to (exp (* (fabs (* x x)) (fabs (* x x))))
* [exit]simplify:  Simplified to (exp (* (fabs (* x x)) (fabs (* x x))))
* * * * [misc]progress:  [ 32 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (cbrt (* (* (* (fabs (* x x)) (fabs (* x x))) (fabs (* x x))) (* (* (fabs (* x x)) (fabs (* x x))) (fabs (* x x))))) x))))))>
* [enter]simplify:  Simplifying (* (* (* (fabs (* x x)) (fabs (* x x))) (fabs (* x x))) (* (* (fabs (* x x)) (fabs (* x x))) (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (pow (fabs (* x x)) (+ (+ 3 1) (+ 1 1)))
* [exit]simplify:  Simplified to (pow (fabs (* x x)) (+ (+ 3 1) (+ 1 1)))
* * * * [misc]progress:  [ 33 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (* (* (cbrt (* (fabs (* x x)) (fabs (* x x)))) (cbrt (* (fabs (* x x)) (fabs (* x x))))) (cbrt (* (fabs (* x x)) (fabs (* x x))))) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (fabs (* x x)) (fabs (* x x)))) (cbrt (* (fabs (* x x)) (fabs (* x x)))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (fabs (* x x)) (fabs (* x x)))) (cbrt (* (fabs (* x x)) (fabs (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (fabs (* x x)) (fabs (* x x)))) (cbrt (* (fabs (* x x)) (fabs (* x x)))))
* [enter]simplify:  Simplifying (cbrt (* (fabs (* x x)) (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* [exit]simplify:  Simplified to (cbrt (* (fabs (* x x)) (fabs (* x x))))
* [exit]simplify:  Simplified to (cbrt (* (fabs (* x x)) (fabs (* x x))))
* * * * [misc]progress:  [ 34 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (cbrt (* (* (* (fabs (* x x)) (fabs (* x x))) (* (fabs (* x x)) (fabs (* x x)))) (* (fabs (* x x)) (fabs (* x x))))) x))))))>
* [enter]simplify:  Simplifying (* (* (* (fabs (* x x)) (fabs (* x x))) (* (fabs (* x x)) (fabs (* x x)))) (* (fabs (* x x)) (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (pow (fabs (* x x)) (+ (+ 1 3) (+ 1 1)))
* [exit]simplify:  Simplified to (pow (fabs (* x x)) (+ (+ 1 3) (+ 1 1)))
* * * * [misc]progress:  [ 35 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (* (sqrt (* (fabs (* x x)) (fabs (* x x)))) (sqrt (* (fabs (* x x)) (fabs (* x x))))) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (fabs (* x x)) (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* [exit]simplify:  Simplified to (fabs (fabs (* x x)))
* [exit]simplify:  Simplified to (fabs (fabs (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (fabs (* x x)) (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* [exit]simplify:  Simplified to (fabs (fabs (* x x)))
* [exit]simplify:  Simplified to (fabs (fabs (* x x)))
* * * * [misc]progress:  [ 36 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (* 1 (* (fabs (* x x)) (fabs (* x x)))) x))))))>
* * * * [misc]progress:  [ 37 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (* (* (fabs (* x x)) (* (cbrt (fabs (* x x))) (cbrt (fabs (* x x))))) (cbrt (fabs (* x x)))) x))))))>
* [enter]simplify:  Simplifying (* (fabs (* x x)) (* (cbrt (fabs (* x x))) (cbrt (fabs (* x x)))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (fabs (* x x))) (cbrt (fabs (* x x)))) (fabs (* x x)))
* [exit]simplify:  Simplified to (* (* (cbrt (fabs (* x x))) (cbrt (fabs (* x x)))) (fabs (* x x)))
* * * * [misc]progress:  [ 38 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (* (* (fabs (* x x)) (sqrt (fabs (* x x)))) (sqrt (fabs (* x x)))) x))))))>
* [enter]simplify:  Simplifying (* (fabs (* x x)) (sqrt (fabs (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* [exit]simplify:  Simplified to (* (fabs (* x x)) (sqrt (fabs (* x x))))
* [exit]simplify:  Simplified to (* (fabs (* x x)) (sqrt (fabs (* x x))))
* * * * [misc]progress:  [ 39 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (* (* (fabs (* x x)) 1) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (fabs (* x x)) 1)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 40 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (* (* (cbrt (fabs (* x x))) (cbrt (fabs (* x x)))) (* (cbrt (fabs (* x x))) (fabs (* x x)))) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (fabs (* x x))) (fabs (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* [exit]simplify:  Simplified to (* (fabs (* x x)) (cbrt (fabs (* x x))))
* [exit]simplify:  Simplified to (* (fabs (* x x)) (cbrt (fabs (* x x))))
* * * * [misc]progress:  [ 41 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (* (sqrt (fabs (* x x))) (* (sqrt (fabs (* x x))) (fabs (* x x)))) x))))))>
* [enter]simplify:  Simplifying (* (sqrt (fabs (* x x))) (fabs (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* [exit]simplify:  Simplified to (* (fabs (* x x)) (sqrt (fabs (* x x))))
* [exit]simplify:  Simplified to (* (fabs (* x x)) (sqrt (fabs (* x x))))
* * * * [misc]progress:  [ 42 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (* 1 (* (fabs (* x x)) (fabs (* x x)))) x))))))>
* [enter]simplify:  Simplifying (* (fabs (* x x)) (fabs (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* [exit]simplify:  Simplified to (* (fabs (* x x)) (fabs (* x x)))
* [exit]simplify:  Simplified to (* (fabs (* x x)) (fabs (* x x)))
* * * * [misc]progress:  [ 43 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* * * * [misc]progress:  [ 44 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* * * * [misc]progress:  [ 45 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x (+ 2 1)))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 46 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow (* (* x x) x) 1))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* * * * [misc]progress:  [ 47 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (exp (log (* (* x x) x))))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (log (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 48 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (log (exp (* (* x x) x))))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (exp (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 49 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x))) (cbrt (* (* x x) x))))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 50 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (cbrt (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 51 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (sqrt (* (* x x) x)) (sqrt (* (* x x) x))))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 52 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* 1 (* (* x x) x)))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* * * * [misc]progress:  [ 53 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* x (* x x)))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 54 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* x (* x x)))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* * * * [misc]progress:  [ 55 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (pow x 2)) 2) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (pow x 2)) 2) x)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (171 enodes)
* * [misc]simplify:  iters left: 1 (256 enodes)
* [exit]simplify:  Simplified to (+ (* (fabs (* x x)) (* (fabs (* x x)) (* x 32.0))) (* (+ 120.0 (* (* x x) -160.0)) x))
* * * * [misc]progress:  [ 56 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (pow x 2)) 2) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (pow x 2)) 2) x)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (171 enodes)
* * [misc]simplify:  iters left: 1 (256 enodes)
* [exit]simplify:  Simplified to (+ (* (fabs (* x x)) (* (fabs (* x x)) (* x 32.0))) (* (+ 120.0 (* (* x x) -160.0)) x))
* * * * [misc]progress:  [ 57 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (pow x 2)) 2) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (fabs (pow x 2)) 2) x)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (171 enodes)
* * [misc]simplify:  iters left: 1 (256 enodes)
* [exit]simplify:  Simplified to (+ (* (fabs (* x x)) (* (fabs (* x x)) (* x 32.0))) (* (+ 120.0 (* (* x x) -160.0)) x))
* * * * [misc]progress:  [ 58 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (289 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 120.0 (* (* x x) -160.0)) x) (* (* (* x 32.0) (fabs (* x x))) (fabs (* x x))))
* * * * [misc]progress:  [ 59 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (289 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 120.0 (* (* x x) -160.0)) x) (* (* (* x 32.0) (fabs (* x x))) (fabs (* x x))))
* * * * [misc]progress:  [ 60 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (289 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 120.0 (* (* x x) -160.0)) x) (* (* (* x 32.0) (fabs (* x x))) (fabs (* x x))))
* * * * [misc]progress:  [ 61 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (pow (fabs (pow x 2)) 2) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (pow (fabs (pow x 2)) 2) x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (134 enodes)
* * [misc]simplify:  iters left: 2 (294 enodes)
* * [misc]simplify:  iters left: 1 (450 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* (fabs (* x x)) (fabs (* x x))) (* x 32.0)))
* * * * [misc]progress:  [ 62 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (pow (fabs (pow x 2)) 2) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (pow (fabs (pow x 2)) 2) x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (134 enodes)
* * [misc]simplify:  iters left: 2 (294 enodes)
* * [misc]simplify:  iters left: 1 (450 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* (fabs (* x x)) (fabs (* x x))) (* x 32.0)))
* * * * [misc]progress:  [ 63 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (pow (fabs (pow x 2)) 2) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (pow (fabs (pow x 2)) 2) x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (134 enodes)
* * [misc]simplify:  iters left: 2 (294 enodes)
* * [misc]simplify:  iters left: 1 (450 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* (fabs (* x x)) (fabs (* x x))) (* x 32.0)))
* * * * [misc]progress:  [ 64 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (289 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 120.0 (* (* x x) -160.0)) x) (* (* (* x 32.0) (fabs (* x x))) (fabs (* x x))))
* * * * [misc]progress:  [ 65 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (289 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 120.0 (* (* x x) -160.0)) x) (* (* (* x 32.0) (fabs (* x x))) (fabs (* x x))))
* * * * [misc]progress:  [ 66 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (289 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 120.0 (* (* x x) -160.0)) x) (* (* (* x 32.0) (fabs (* x x))) (fabs (* x x))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (* (fabs (* x x)) (fabs (* x x))) x))))))> #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))> #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (log (pow (exp -160.0) (pow x 3)))) (* 32.0 (* (* (* (* x x) x) x) x))))> #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (fabs (* x x)) (fabs (* x x))) x))))> #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x)) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))) (cbrt (* (* (fabs (* x x)) (fabs (* x x))) x))))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))) +nan.0)) , with alts (#<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))>)
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (* x (* x x)) x) x) 32.0) (+ (* 120.0 x) (* -160.0 (* x (* x x)))))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Setting MPFR precision to 832
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Setting MPFR precision to 832
* * * * [misc]points:  Setting MPFR precision to 1088
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 832
* * * * [misc]points:  Setting MPFR precision to 1088
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 832
* * * * [misc]points:  Setting MPFR precision to 1088
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 832
* * * * [misc]points:  Setting MPFR precision to 1088
* * * * [misc]points:  Setting MPFR precision to 1344
* * * * [misc]points:  Setting MPFR precision to 1600
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 1344
* * * * [misc]points:  Setting MPFR precision to 1600
* * * * [misc]points:  Setting MPFR precision to 1856
* * * * [misc]points:  Setting MPFR precision to 2112
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 1856
* * * * [misc]points:  Setting MPFR precision to 2112
* * * * [misc]points:  Setting MPFR precision to 2368
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 2112
* * * * [misc]points:  Setting MPFR precision to 2368
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 2112
* * * * [misc]points:  Setting MPFR precision to 2368
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
