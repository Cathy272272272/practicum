* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ (+ (+ (+ 1.0 (* -8.0 x)) (* 14.0 (* x x))) (* -9.333333 (* (* x x) x))) (* 2.916667 (* (* (* x x) x) x))) (* -0.466667 (* (* (* (* x x) x) x) x))) (* 0.038889 (* (* (* (* (* x x) x) x) x) x))) (* -0.001587 (* (* (* (* (* (* x x) x) x) x) x) x))) (* 2.5e-05 (* (* (* (* (* (* (* x x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (290 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 1 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 1 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (+ (* -9.333333 x) 14.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (+ (* -9.333333 x) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -9.333333 x) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* -9.333333 x) in x
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (+ (* -9.333333 x) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -9.333333 x) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* -9.333333 x) in x
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -9.333333 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 14.0) into 14.0
* [misc]backup-simplify:  Simplify (* 0 14.0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 1) (* 0 0)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (- 9.333333) 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 (- 9.333333)) (* 0 14.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 (- 9.333333)) (* 1 14.0))) into 14.0
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 (- 9.333333)) (* 0 14.0)))) into (- 9.333333)
* [misc]backup-simplify:  Simplify (- 9.333333) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 9.333333)) (* 0 14.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 9.333333)) (* 0 14.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 9.333333)) (* 0 14.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 9.333333)) (* 0 14.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 9.333333)) (* 0 14.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 9.333333)) (* 0 14.0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 9.333333) (pow x 3)) (* 14.0 (pow x 2))) into (- (* 14.0 (pow x 2)) (* 9.333333 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (+ (* -9.333333 (/ 1 x)) 14.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (+ (* -9.333333 (/ 1 x)) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -9.333333 (/ 1 x)) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* -9.333333 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (+ (* -9.333333 (/ 1 x)) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -9.333333 (/ 1 x)) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* -9.333333 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -9.333333 1) into -9.333333
* [misc]backup-simplify:  Simplify (+ -9.333333 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* 1 (- 9.333333)) into -9.333333
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 14.0) into 14.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 14.0) (* 0 (- 9.333333))) into 14.0
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 14.0) (* 0 (- 9.333333)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 14.0) (* 0 (- 9.333333))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 14.0) (* 0 (- 9.333333)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 14.0) (* 0 (- 9.333333))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 14.0) (* 0 (- 9.333333)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 14.0) (* 0 (- 9.333333))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 (pow (/ 1 (/ 1 x)) 2)) (* -9.333333 (pow (/ 1 (/ 1 x)) 3))) into (- (* 14.0 (pow x 2)) (* 9.333333 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -9.333333 (/ 1 (- x))) 14.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -9.333333 (/ 1 (- x))) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -9.333333 (/ 1 (- x))) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* -9.333333 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -9.333333 (/ 1 (- x))) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -9.333333 (/ 1 (- x))) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* -9.333333 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -9.333333 -1) into 9.333333
* [misc]backup-simplify:  Simplify (+ 9.333333 0) into 9.333333
* [misc]backup-simplify:  Simplify (* 1 9.333333) into 9.333333
* [misc]backup-simplify:  Simplify 9.333333 into 9.333333
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 14.0) into 14.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 14.0) (* 0 9.333333)) into 14.0
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 14.0) (* 0 9.333333))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 14.0) (* 0 9.333333)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 14.0) (* 0 9.333333))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 14.0) (* 0 9.333333)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 14.0) (* 0 9.333333))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 14.0) (* 0 9.333333)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 (pow (/ 1 (/ 1 (- x))) 2)) (* 9.333333 (pow (/ 1 (/ 1 (- x))) 3))) into (- (* 14.0 (pow x 2)) (* 9.333333 (pow x 3)))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (pow (* (* x x) (+ (* -9.333333 x) 14.0)) 1) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (+ (* -9.333333 x) 14.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -9.333333) 14.0) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x -9.333333) 14.0) (* x x))
* * * * [misc]progress:  [ 2 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (pow (* (* x x) (+ (* -9.333333 x) 14.0)) 1) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 3 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (exp (+ (log (* x x)) (log (+ (* -9.333333 x) 14.0)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (+ (* -9.333333 x) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* -9.333333 x) 14.0)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ (* -9.333333 x) 14.0)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 4 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (exp (log (* (* x x) (+ (* -9.333333 x) 14.0)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* (* x x) (+ (* -9.333333 x) 14.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (77 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* [exit]simplify:  Simplified to (log (* (+ (* x -9.333333) 14.0) (* x x)))
* [exit]simplify:  Simplified to (log (* (+ (* x -9.333333) 14.0) (* x x)))
* * * * [misc]progress:  [ 5 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (log (exp (* (* x x) (+ (* -9.333333 x) 14.0)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (+ (* -9.333333 x) 14.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (132 enodes)
* * [misc]simplify:  iters left: 1 (134 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -9.333333) 14.0))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -9.333333) 14.0))
* * * * [misc]progress:  [ 6 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (+ (* -9.333333 x) 14.0) (+ (* -9.333333 x) 14.0)) (+ (* -9.333333 x) 14.0)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (+ (* -9.333333 x) 14.0) (+ (* -9.333333 x) 14.0)) (+ (* -9.333333 x) 14.0)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))
* * * * [misc]progress:  [ 7 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* (cbrt (* (* x x) (+ (* -9.333333 x) 14.0))) (cbrt (* (* x x) (+ (* -9.333333 x) 14.0)))) (cbrt (* (* x x) (+ (* -9.333333 x) 14.0)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (+ (* -9.333333 x) 14.0))) (cbrt (* (* x x) (+ (* -9.333333 x) 14.0))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (64 enodes)
* * [misc]simplify:  iters left: 2 (68 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x -9.333333) 14.0) (* x x))) (cbrt (* (+ (* x -9.333333) 14.0) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x -9.333333) 14.0) (* x x))) (cbrt (* (+ (* x -9.333333) 14.0) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (+ (* -9.333333 x) 14.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* x -9.333333) 14.0) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (+ (* x -9.333333) 14.0) (* x x)))
* * * * [misc]progress:  [ 8 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* x x) (+ (* -9.333333 x) 14.0))) (* (* x x) (+ (* -9.333333 x) 14.0)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* x x) (+ (* -9.333333 x) 14.0))) (* (* x x) (+ (* -9.333333 x) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (128 enodes)
* [exit]simplify:  Simplified to (pow (* (+ (* x -9.333333) 14.0) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (+ (* x -9.333333) 14.0) (* x x)) 3)
* * * * [misc]progress:  [ 9 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (sqrt (* (* x x) (+ (* -9.333333 x) 14.0))) (sqrt (* (* x x) (+ (* -9.333333 x) 14.0)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (+ (* -9.333333 x) 14.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* x -9.333333) 14.0) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (+ (* x -9.333333) 14.0) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (+ (* -9.333333 x) 14.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* x -9.333333) 14.0) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (+ (* x -9.333333) 14.0) (* x x)))
* * * * [misc]progress:  [ 10 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* 1 (* (* x x) (+ (* -9.333333 x) 14.0))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 11 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (+ (* (* x x) (* -9.333333 x)) (* (* x x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* -9.333333 x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x -9.333333) (* x x))
* [exit]simplify:  Simplified to (* (* x -9.333333) (* x x))
* [enter]simplify:  Simplifying (* (* x x) 14.0)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to (* x (* x 14.0))
* [exit]simplify:  Simplified to (* x (* x 14.0))
* * * * [misc]progress:  [ 12 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (+ (* (* -9.333333 x) (* x x)) (* 14.0 (* x x))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* -9.333333 x) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* [exit]simplify:  Simplified to (* (* -9.333333 x) (* x x))
* [exit]simplify:  Simplified to (* (* -9.333333 x) (* x x))
* [enter]simplify:  Simplifying (* 14.0 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* 14.0 (* x x))
* [exit]simplify:  Simplified to (* 14.0 (* x x))
* * * * [misc]progress:  [ 13 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* (* x x) (* (cbrt (+ (* -9.333333 x) 14.0)) (cbrt (+ (* -9.333333 x) 14.0)))) (cbrt (+ (* -9.333333 x) 14.0))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* (cbrt (+ (* -9.333333 x) 14.0)) (cbrt (+ (* -9.333333 x) 14.0))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* [exit]simplify:  Simplified to (* (* x (cbrt (+ (* x -9.333333) 14.0))) (* x (cbrt (+ (* x -9.333333) 14.0))))
* [exit]simplify:  Simplified to (* (* x (cbrt (+ (* x -9.333333) 14.0))) (* x (cbrt (+ (* x -9.333333) 14.0))))
* * * * [misc]progress:  [ 14 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* (* x x) (sqrt (+ (* -9.333333 x) 14.0))) (sqrt (+ (* -9.333333 x) 14.0))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (sqrt (+ (* -9.333333 x) 14.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* x -9.333333) 14.0)) (* x x))
* [exit]simplify:  Simplified to (* (sqrt (+ (* x -9.333333) 14.0)) (* x x))
* * * * [misc]progress:  [ 15 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* (* x x) 1) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) 1)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 16 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* x (* x (+ (* -9.333333 x) 14.0))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* x (+ (* -9.333333 x) 14.0))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* [exit]simplify:  Simplified to (* x (+ 14.0 (* x -9.333333)))
* [exit]simplify:  Simplified to (* x (+ 14.0 (* x -9.333333)))
* * * * [misc]progress:  [ 17 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (* (* x x) (+ (pow (* -9.333333 x) 3) (pow 14.0 3))) (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (+ (pow (* -9.333333 x) 3) (pow 14.0 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (219 enodes)
* * [misc]simplify:  iters left: 2 (326 enodes)
* * [misc]simplify:  iters left: 1 (360 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x -9.333333) (* x x)) (* (* x -9.333333) (* x -9.333333))) (* (pow 14.0 3) (* x x)))
* [exit]simplify:  Simplified to (+ (* (* (* x -9.333333) (* x x)) (* (* x -9.333333) (* x -9.333333))) (* (pow 14.0 3) (* x x)))
* * * * [misc]progress:  [ 18 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (* (* x x) (- (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 14.0))) (- (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (- (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (168 enodes)
* * [misc]simplify:  iters left: 2 (486 enodes)
* [exit]simplify:  Simplified to (* (* x (- (* x -9.333333) 14.0)) (* (+ 14.0 (* x -9.333333)) x))
* [exit]simplify:  Simplified to (* (* x (- (* x -9.333333) 14.0)) (* (+ 14.0 (* x -9.333333)) x))
* * * * [misc]progress:  [ 19 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 20 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 21 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 22 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x (* 2 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 23 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) (* 1 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 24 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (pow x 3) (pow x 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 25 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 26 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (pow (* x x) 3) 1) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 27 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (log (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 28 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (log (exp (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 29 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 30 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 31 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (pow x 3) (pow x 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 32 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* x x) (* (* x x) (* x x))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 33 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 34 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 35 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* 1 (pow (* x x) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 36 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (exp (* (log (* x x)) 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 37 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (exp (* (log (* x x)) 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 38 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 39 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) (* 1 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 40 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (pow x 3) (pow x 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 41 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* x x)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 42 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (pow (* x x) 3) 1) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 43 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (exp (log (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 44 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (log (exp (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 45 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 46 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 47 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (pow x 3) (pow x 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 48 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* x x) (* (* x x) (* x x))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 49 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* x x)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 50 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 51 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* 1 (pow (* x x) 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 52 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x (+ 2 2)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ 2 2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 2 2)
* [exit]simplify:  Simplified to (+ 2 2)
* * * * [misc]progress:  [ 53 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* x x) (+ 1 1)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 54 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* x x) 2) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 55 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* (* x x) (* x x)) 1) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 56 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* x x) 2) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 57 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* x x) (+ 1 1)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 58 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* (* x x) (* x x)) 1) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 59 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (exp (+ (log (* x x)) (log (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 60 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (exp (log (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* * * * [misc]progress:  [ 61 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (log (exp (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 62 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 63 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x)))) (cbrt (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 64 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (cbrt (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (153 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 65 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (sqrt (* (* x x) (* x x))) (sqrt (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 66 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* 1 (* (* x x) (* x x))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 67 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* (* x x) x) x) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) x)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 68 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* x (* x (* x x))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 69 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 70 / 81 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (* 14.0 (pow x 2)) (* 9.333333 (pow x 3))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (* 14.0 (pow x 2)) (* 9.333333 (pow x 3))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (94 enodes)
* * [misc]simplify:  iters left: 4 (335 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (pow x 3) (pow x 3)) (+ (* (* x x) 2.5e-05) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* x x) (* x x)) (+ 2.916667 (* x -0.466667))) (* (* x x) (- 14.0 (* x 9.333333))))) (+ 1.0 (* -8.0 x)))
* * * * [misc]progress:  [ 71 / 81 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (* 14.0 (pow x 2)) (* 9.333333 (pow x 3))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (* 14.0 (pow x 2)) (* 9.333333 (pow x 3))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (94 enodes)
* * [misc]simplify:  iters left: 4 (335 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (pow x 3) (pow x 3)) (+ (* (* x x) 2.5e-05) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* x x) (* x x)) (+ 2.916667 (* x -0.466667))) (* (* x x) (- 14.0 (* x 9.333333))))) (+ 1.0 (* -8.0 x)))
* * * * [misc]progress:  [ 72 / 81 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (* 14.0 (pow x 2)) (* 9.333333 (pow x 3))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (* 14.0 (pow x 2)) (* 9.333333 (pow x 3))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (94 enodes)
* * [misc]simplify:  iters left: 4 (335 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (pow x 3) (pow x 3)) (+ (* (* x x) 2.5e-05) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* x x) (* x x)) (+ 2.916667 (* x -0.466667))) (* (* x x) (- 14.0 (* x 9.333333))))) (+ 1.0 (* -8.0 x)))
* * * * [misc]progress:  [ 73 / 81 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x 6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x 6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (92 enodes)
* * [misc]simplify:  iters left: 4 (284 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow (* x x) 3) (* (* x x) 2.5e-05)) (* (pow x 6) (+ 0.038889 (* -0.001587 x)))) (+ (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (+ 1.0 (* -8.0 x)))) (* (+ (* -9.333333 x) 14.0) (* x x)))
* * * * [misc]progress:  [ 74 / 81 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ 1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ 1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (96 enodes)
* * [misc]simplify:  iters left: 4 (292 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) (+ (* x -9.333333) 14.0)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (* -8.0 x)) (+ (+ 1.0 (* (pow (/ 1 x) -6) (+ 0.038889 (* x -0.001587)))) (* (pow (* x x) 3) (* (* x x) 2.5e-05))))
* * * * [misc]progress:  [ 75 / 81 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ -1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ -1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (94 enodes)
* * [misc]simplify:  iters left: 4 (298 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (+ (* (pow (/ -1 x) -6) (+ 0.038889 (* x -0.001587))) (* (* (* x x) 2.5e-05) (pow (* x x) 3)))) (+ (+ (* -8.0 x) (* (* x x) (+ (* x -9.333333) 14.0))) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 76 / 81 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow x 6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow x 6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (92 enodes)
* * [misc]simplify:  iters left: 4 (301 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (+ (* (* (* x x) (* x x)) (* (* -0.001587 x) (* x x))) (* 2.5e-05 (* (* x x) (pow x 6)))) (+ (* (* 0.038889 (* x x)) (* (* x x) (* x x))) (* (* x x) (+ (* -9.333333 x) 14.0)))))
* * * * [misc]progress:  [ 77 / 81 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (/ 1 x) -6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (/ 1 x) -6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (96 enodes)
* * [misc]simplify:  iters left: 4 (312 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667))) (* x -8.0)) (+ (+ 1.0 (* (* (* x x) (* x x)) (* (* x x) (* x -0.001587)))) (+ (* (* (* x x) (* x x)) (* x (* x 0.038889))) (* (* (* 2.5e-05 x) x) (pow (/ 1 x) -6)))))
* * * * [misc]progress:  [ 78 / 81 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (/ -1 x) -6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (/ -1 x) -6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (94 enodes)
* * [misc]simplify:  iters left: 4 (318 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ 1.0 (* (* (* x x) (* x -0.001587)) (* (* x x) (* x x)))) (+ (* (* (* x x) (* x x)) (* (* 0.038889 x) x)) (* (* (* 2.5e-05 x) x) (pow (/ -1 x) -6)))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667))) (* x -8.0)))
* * * * [misc]progress:  [ 79 / 81 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (309 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* (* x x) 2.5e-05) (+ (* -0.001587 x) 0.038889)) (pow (* x x) 3)) (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (+ 1.0 (* x -8.0)))) (* (+ (* x -0.466667) 2.916667) (pow x 4)))
* * * * [misc]progress:  [ 80 / 81 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (309 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* (* x x) 2.5e-05) (+ (* -0.001587 x) 0.038889)) (pow (* x x) 3)) (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (+ 1.0 (* x -8.0)))) (* (+ (* x -0.466667) 2.916667) (pow x 4)))
* * * * [misc]progress:  [ 81 / 81 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (309 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* (* x x) 2.5e-05) (+ (* -0.001587 x) 0.038889)) (pow (* x x) 3)) (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (+ 1.0 (* x -8.0)))) (* (+ (* x -0.466667) 2.916667) (pow x 4)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 1 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 1 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* x -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* x -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* x -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (* 1 14.0) into 14.0
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (* 14.0 14.0) into 196.0
* [misc]backup-simplify:  Simplify (* 14.0 196.0) into 2744.0
* [misc]backup-simplify:  Simplify (log 2744.0) into (log 2744.0)
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log 2744.0)) into (+ (* 6 (log x)) (log 2744.0))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 6 (log x)) (log 2744.0))) into (* 1/3 (+ (* 6 (log x)) (log 2744.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) into (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* x -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* x -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* x -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (* 1 14.0) into 14.0
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (* 14.0 14.0) into 196.0
* [misc]backup-simplify:  Simplify (* 14.0 196.0) into 2744.0
* [misc]backup-simplify:  Simplify (log 2744.0) into (log 2744.0)
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log 2744.0)) into (+ (* 6 (log x)) (log 2744.0))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 6 (log x)) (log 2744.0))) into (* 1/3 (+ (* 6 (log x)) (log 2744.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) into (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) into (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ 0 (- 9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ 0 (- 9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 14.0 (- 9.333333)) (* (- 9.333333) 14.0)) into (- 261.333324)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ 0 (- 9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 (- 9.333333)) (* 0 14.0)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 14.0 (- 261.333324)) (* (- 9.333333) 196.0)) into (- 5487.999804)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 5487.999804)) 1)) (pow 2744.0 1)))) 1) into -1.9999999285714285
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log 2744.0)) into (+ (* 6 (log x)) (log 2744.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.9999999285714285) (* 0 (+ (* 6 (log x)) (log 2744.0)))) into (- 0.6666666428571428)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (+ (* (/ (pow (- 0.6666666428571428) 1) 1)))) into (* -0.6666666428571428 (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))))
* [misc]backup-simplify:  Simplify (* -0.6666666428571428 (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0))))) into (* -0.6666666428571428 (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 0) (+ (* (- 9.333333) (- 9.333333)) (* 0 14.0))) into 87.11110488888899
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 (- 9.333333)) (* 0 14.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 87.11110488888899) (+ (* (- 9.333333) (- 261.333324)) (* 0 196.0))) into 3658.666405333338
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 5487.999804)) 2)) (pow 2744.0 2))) (* 1 (/ (* 1 (pow (* 2 3658.666405333338) 1)) (pow 2744.0 1)))) 2) into (* 1/2 (- 2.6666664761904797 (* 30118141.84870404 (/ 1 (pow 2744.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log 2744.0)) into (+ (* 6 (log x)) (log 2744.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 2.6666664761904797 (* 30118141.84870404 (/ 1 (pow 2744.0 2)))))) (+ (* 0 -1.9999999285714285) (* 0 (+ (* 6 (log x)) (log 2744.0))))) into (- 0.4444444126984133 (* 5019690.308117339 (/ 1 (pow 2744.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (+ (* (/ (pow (- 0.6666666428571428) 2) 2)) (* (/ (pow (- 0.4444444126984133 (* 5019690.308117339 (/ 1 (pow 2744.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (- 0.6666666190476199 (* 5019690.308117339 (/ 1 (pow 2744.0 2)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (- 0.6666666190476199 (* 5019690.308117339 (/ 1 (pow 2744.0 2))))) into (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (- 0.6666666190476199 (* 5019690.308117339 (/ 1 (pow 2744.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (- 0.6666666190476199 (* 5019690.308117339 (/ 1 (pow 2744.0 2))))) (pow x 2)) (+ (* (* -0.6666666428571428 (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0))))) x) (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))))) into (- (+ (* 0.6666666190476199 (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (pow x 2))) (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0))))) (+ (* 5019690.308117339 (/ (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (pow x 2)) (pow 2744.0 2))) (* 0.6666666428571428 (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) x))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 x) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 x) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 x) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ 0 -9.333333) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 6)) (- 9.333333)) into (/ -9.333333 (pow x 6))
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ 0 -9.333333) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ 0 -9.333333) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (- 9.333333) (- 9.333333)) into 87.11110488888899
* [misc]backup-simplify:  Simplify (* (/ -9.333333 (pow x 6)) 87.11110488888899) into (/ -813.0369499259289 (pow x 6))
* [misc]backup-simplify:  Simplify (log (/ -813.0369499259289 (pow x 6))) into (log (/ -813.0369499259289 (pow x 6)))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (/ -813.0369499259289 (pow x 6)))) into (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))) into (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))) into (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 x) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 x) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 x) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ 0 -9.333333) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 6)) (- 9.333333)) into (/ -9.333333 (pow x 6))
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ 0 -9.333333) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ 0 -9.333333) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (- 9.333333) (- 9.333333)) into 87.11110488888899
* [misc]backup-simplify:  Simplify (* (/ -9.333333 (pow x 6)) 87.11110488888899) into (/ -813.0369499259289 (pow x 6))
* [misc]backup-simplify:  Simplify (log (/ -813.0369499259289 (pow x 6))) into (log (/ -813.0369499259289 (pow x 6)))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (/ -813.0369499259289 (pow x 6)))) into (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))) into (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))) into (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))) into (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -9.333333)) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -9.333333)) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (+ (* (- 9.333333) 14.0) (* 14.0 (- 9.333333))) into (- 261.333324)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -9.333333)) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 14.0) (* 0 (- 9.333333))) into (* 14.0 (/ 1 (pow x 6)))
* [misc]backup-simplify:  Simplify (+ (* (/ -9.333333 (pow x 6)) (- 261.333324)) (* (* 14.0 (/ 1 (pow x 6))) 87.11110488888899)) into (* 3658.666405333338 (/ 1 (pow x 6)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* 3658.666405333338 (/ 1 (pow x 6)))) 1)) (pow (/ -813.0369499259289 (pow x 6)) 1)))) 1) into -4.5000001607142925
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (/ -813.0369499259289 (pow x 6)))) into (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -4.5000001607142925) (* 0 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))) into (- 1.5000000535714308)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))) (+ (* (/ (pow (- 1.5000000535714308) 1) 1)))) into (* -1.5000000535714308 (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -1.5000000535714308 (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))))) into (* -1.5000000535714308 (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 9.333333) 0) (+ (* 14.0 14.0) (* 0 (- 9.333333)))) into 196.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 14.0) (* 0 (- 9.333333)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ -9.333333 (pow x 6)) 196.0) (+ (* (* 14.0 (/ 1 (pow x 6))) (- 261.333324)) (* 0 87.11110488888899))) into (- (* 5487.999804 (/ 1 (pow x 6))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* 3658.666405333338 (/ 1 (pow x 6)))) 2)) (pow (/ -813.0369499259289 (pow x 6)) 2))) (* 1 (/ (* 1 (pow (* 2 (- (* 5487.999804 (/ 1 (pow x 6))))) 1)) (pow (/ -813.0369499259289 (pow x 6)) 1)))) 2) into (* 1/2 (- 13.50000096428577 (* 13385839.865514768 (/ 1 (pow -813.0369499259289 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (/ -813.0369499259289 (pow x 6)))) into (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 13.50000096428577 (* 13385839.865514768 (/ 1 (pow -813.0369499259289 2)))))) (+ (* 0 -4.5000001607142925) (* 0 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))))) into (- 2.2500001607142948 (* 2230973.310919128 (/ 1 (pow -813.0369499259289 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))) (+ (* (/ (pow (- 1.5000000535714308) 2) 2)) (* (/ (pow (- 2.2500001607142948 (* 2230973.310919128 (/ 1 (pow -813.0369499259289 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))) (- 3.3750002410714424 (* 2230973.310919128 (/ 1 (pow -813.0369499259289 2)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))) (- 3.3750002410714424 (* 2230973.310919128 (/ 1 (pow -813.0369499259289 2))))) into (* (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))) (- 3.3750002410714424 (* 2230973.310919128 (/ 1 (pow -813.0369499259289 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (/ -813.0369499259289 (pow (/ 1 x) 6))) (* 3 (log (/ 1 x)))))) (- 3.3750002410714424 (* 2230973.310919128 (/ 1 (pow -813.0369499259289 2))))) (pow (/ 1 x) 2)) (+ (* (* -1.5000000535714308 (exp (* 1/3 (- (log (/ -813.0369499259289 (pow (/ 1 x) 6))) (* 3 (log (/ 1 x))))))) (/ 1 x)) (exp (* 1/3 (- (log (/ -813.0369499259289 (pow (/ 1 x) 6))) (* 3 (log (/ 1 x)))))))) into (- (+ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) (* 3.3750002410714424 (/ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) (pow x 2)))) (+ (* 2230973.310919128 (/ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) (* (pow -813.0369499259289 2) (pow x 2)))) (* 1.5000000535714308 (/ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) x))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 (- x)) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 (- x)) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 (- x)) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 0 9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 9.333333) into (* 9.333333 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 0 9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 0 9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (* 9.333333 9.333333) into 87.11110488888899
* [misc]backup-simplify:  Simplify (* (* 9.333333 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 87.11110488888899) into (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) into (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))) into (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))) into (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 (- x)) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 (- x)) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 (- x)) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 0 9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 9.333333) into (* 9.333333 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 0 9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 0 9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (* 9.333333 9.333333) into 87.11110488888899
* [misc]backup-simplify:  Simplify (* (* 9.333333 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 87.11110488888899) into (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) into (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))) into (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))) into (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))) into (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -9.333333)) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -9.333333)) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (+ (* 9.333333 14.0) (* 14.0 9.333333)) into 261.333324
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -9.333333)) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 14.0) (* 0 9.333333)) into (* 14.0 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (+ (* (* 9.333333 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 261.333324) (* (* 14.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 87.11110488888899)) into (* 3658.666405333338 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* 3658.666405333338 (pow (exp (* 3 (- (log -1) (log x)))) 2))) 1)) (pow (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 1)))) 1) into 4.5000001607142925
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 4.5000001607142925) (* 0 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))) into 1.5000000535714308
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))) (+ (* (/ (pow 1.5000000535714308 1) 1)))) into (* 1.5000000535714308 (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* 1.5000000535714308 (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))))) into (* 1.5000000535714308 (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 9.333333 0) (+ (* 14.0 14.0) (* 0 9.333333))) into 196.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 14.0) (* 0 9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 9.333333 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 196.0) (+ (* (* 14.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 261.333324) (* 0 87.11110488888899))) into (* 5487.999804 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* 3658.666405333338 (pow (exp (* 3 (- (log -1) (log x)))) 2))) 2)) (pow (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 2))) (* 1 (/ (* 1 (pow (* 2 (* 5487.999804 (pow (exp (* 3 (- (log -1) (log x)))) 2))) 1)) (pow (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 1)))) 2) into (* 1/2 (- 13.50000096428577 (* 13385839.865514768 (/ 1 (pow 813.0369499259289 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 13.50000096428577 (* 13385839.865514768 (/ 1 (pow 813.0369499259289 2)))))) (+ (* 0 4.5000001607142925) (* 0 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))))) into (- 2.2500001607142948 (* 2230973.310919128 (/ 1 (pow 813.0369499259289 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))) (+ (* (/ (pow 1.5000000535714308 2) 2)) (* (/ (pow (- 2.2500001607142948 (* 2230973.310919128 (/ 1 (pow 813.0369499259289 2)))) 1) 1)))) into (* (- 3.3750002410714424 (* 2230973.310919128 (/ 1 (pow 813.0369499259289 2)))) (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* (- 3.3750002410714424 (* 2230973.310919128 (/ 1 (pow 813.0369499259289 2)))) (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))))) into (* (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))) (- 3.3750002410714424 (* 2230973.310919128 (/ 1 (pow 813.0369499259289 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2))) (* 3 (log (/ 1 (- x))))))) (- 3.3750002410714424 (* 2230973.310919128 (/ 1 (pow 813.0369499259289 2))))) (pow (/ 1 (- x)) 2)) (+ (* (* 1.5000000535714308 (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2))) (* 3 (log (/ 1 (- x)))))))) (/ 1 (- x))) (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2))) (* 3 (log (/ 1 (- x))))))))) into (- (+ (* 3.3750002410714424 (/ (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x)))))) (pow x 2))) (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x))))))) (+ (* 2230973.310919128 (/ (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x)))))) (* (pow 813.0369499259289 2) (pow x 2)))) (* 1.5000000535714308 (/ (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x)))))) x))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (pow (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))) 1/3) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 2 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (pow (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) 1) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 3 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (exp (log (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (log (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* * * * [misc]progress:  [ 4 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (log (exp (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (exp (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* * * * [misc]progress:  [ 5 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (cbrt (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333)))) (cbrt (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (207 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow (* x x) 3) (+ 14.0 (* -9.333333 x))))
* [exit]simplify:  Simplified to (cbrt (* (pow (* x x) 3) (+ 14.0 (* -9.333333 x))))
* [enter]simplify:  Simplifying (cbrt (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (138 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* -9.333333 x) 14.0) (+ (* -9.333333 x) 14.0)))
* [exit]simplify:  Simplified to (cbrt (* (+ (* -9.333333 x) 14.0) (+ (* -9.333333 x) 14.0)))
* * * * [misc]progress:  [ 6 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))) (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (224 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (pow x 3) (pow x 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (pow x 3) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* [exit]simplify:  Simplified to (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))
* [exit]simplify:  Simplified to (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))
* * * * [misc]progress:  [ 7 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))))) (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (- 14.0 (* x -9.333333)))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (214 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (pow x 3) (pow x 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (pow x 3) (pow x 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (- 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))) (- 14.0 (* x -9.333333))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))) (- 14.0 (* x -9.333333))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))))
* * * * [misc]progress:  [ 8 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))) (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (* (- 14.0 (* x -9.333333)) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (279 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (pow x 3) (pow x 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (pow x 3) (pow x 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (* (- 14.0 (* x -9.333333)) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- 14.0 (* x -9.333333)) (* (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))))))
* [exit]simplify:  Simplified to (cbrt (* (- 14.0 (* x -9.333333)) (* (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))))))
* * * * [misc]progress:  [ 9 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))))) (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333)))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (pow x 3) (pow x 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (pow x 3) (pow x 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (390 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))))
* [exit]simplify:  Simplified to (cbrt (* (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))))
* * * * [misc]progress:  [ 10 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ 14.0 (* x -9.333333)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))) (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ 14.0 (* x -9.333333)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (248 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (pow x 3)) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (+ (* x -9.333333) 14.0) (pow x 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (pow x 3)) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (+ (* x -9.333333) 14.0) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (383 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))))
* * * * [misc]progress:  [ 11 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ 14.0 (* x -9.333333)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))))) (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (- 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ 14.0 (* x -9.333333)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (217 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* (* x -9.333333) (* x -9.333333)) (* (* x -9.333333) (pow x 3))) (* (pow x 3) (pow 14.0 3))) (* (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0)) (* (+ (* x -9.333333) 14.0) (pow x 3)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* (* x -9.333333) (* x -9.333333)) (* (* x -9.333333) (pow x 3))) (* (pow x 3) (pow 14.0 3))) (* (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0)) (* (+ (* x -9.333333) 14.0) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (- 14.0 (* x -9.333333))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* x -9.333333)) 14.0) (- 14.0 (* x -9.333333))) (* (- 14.0 (* x -9.333333)) (* (* x -9.333333) (* x -9.333333)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* x -9.333333)) 14.0) (- 14.0 (* x -9.333333))) (* (- 14.0 (* x -9.333333)) (* (* x -9.333333) (* x -9.333333)))))
* * * * [misc]progress:  [ 12 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ 14.0 (* x -9.333333))))) (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (234 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* x -9.333333) 14.0) (* (pow x 3) (pow x 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* x -9.333333) 14.0) (* (pow x 3) (pow x 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (383 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))))
* * * * [misc]progress:  [ 13 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ 14.0 (* x -9.333333))))) (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (- 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (266 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (+ (* x -9.333333) 14.0)) (* (- 14.0 (* x -9.333333)) (pow x 3))) (+ (* (pow x 3) (pow 14.0 3)) (* (* (pow x 3) (* x -9.333333)) (* (* x -9.333333) (* x -9.333333))))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (+ (* x -9.333333) 14.0)) (* (- 14.0 (* x -9.333333)) (pow x 3))) (+ (* (pow x 3) (pow 14.0 3)) (* (* (pow x 3) (* x -9.333333)) (* (* x -9.333333) (* x -9.333333))))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (- 14.0 (* x -9.333333))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* x -9.333333)) 14.0) (- 14.0 (* x -9.333333))) (* (- 14.0 (* x -9.333333)) (* (* x -9.333333) (* x -9.333333)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* x -9.333333)) 14.0) (- 14.0 (* x -9.333333))) (* (- 14.0 (* x -9.333333)) (* (* x -9.333333) (* x -9.333333)))))
* * * * [misc]progress:  [ 14 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))) (cbrt (* (- 14.0 (* x -9.333333)) (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (225 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (* (pow x 3) (pow x 3))) (- 14.0 (* x -9.333333))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (* (pow x 3) (pow x 3))) (- 14.0 (* x -9.333333))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* [enter]simplify:  Simplifying (cbrt (* (- 14.0 (* x -9.333333)) (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* 14.0 14.0) (* (- (* -9.333333 x) 14.0) (* -9.333333 x))) (+ (* 14.0 14.0) (* (- (* -9.333333 x) 14.0) (* -9.333333 x)))) (- 14.0 (* -9.333333 x))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* 14.0 14.0) (* (- (* -9.333333 x) 14.0) (* -9.333333 x))) (+ (* 14.0 14.0) (* (- (* -9.333333 x) 14.0) (* -9.333333 x)))) (- 14.0 (* -9.333333 x))))
* * * * [misc]progress:  [ 15 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))))) (cbrt (* (- 14.0 (* x -9.333333)) (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (- 14.0 (* x -9.333333)))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (- 14.0 (* x -9.333333))) (* (pow x 3) (pow x 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (+ (* x -9.333333) 14.0) (- 14.0 (* x -9.333333))))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (- 14.0 (* x -9.333333))) (* (pow x 3) (pow x 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (+ (* x -9.333333) 14.0) (- 14.0 (* x -9.333333))))))
* [enter]simplify:  Simplifying (cbrt (* (- 14.0 (* x -9.333333)) (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (- 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (99 enodes)
* * [misc]simplify:  iters left: 3 (382 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* 14.0 (- 14.0 (* -9.333333 x))) (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x)))) (* (* (* -9.333333 x) (* -9.333333 x)) (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* 14.0 (- 14.0 (* -9.333333 x))) (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x)))) (* (* (* -9.333333 x) (* -9.333333 x)) (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))))))
* * * * [misc]progress:  [ 16 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))) (cbrt (* (- 14.0 (* x -9.333333)) (* (- 14.0 (* x -9.333333)) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (245 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (pow x 3) (pow x 3))) (* (* (+ (* x -9.333333) 14.0) (- 14.0 (* x -9.333333))) (* (+ (* x -9.333333) 14.0) (- 14.0 (* x -9.333333))))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (pow x 3) (pow x 3))) (* (* (+ (* x -9.333333) 14.0) (- 14.0 (* x -9.333333))) (* (+ (* x -9.333333) 14.0) (- 14.0 (* x -9.333333))))))
* [enter]simplify:  Simplifying (cbrt (* (- 14.0 (* x -9.333333)) (* (- 14.0 (* x -9.333333)) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (* -9.333333 x) (* -9.333333 x)) (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x)))) (* (* 14.0 (- 14.0 (* -9.333333 x))) (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (* -9.333333 x) (* -9.333333 x)) (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x)))) (* (* 14.0 (- 14.0 (* -9.333333 x))) (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))))))
* * * * [misc]progress:  [ 17 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))))) (cbrt (* (- 14.0 (* x -9.333333)) (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333)))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (* (* (pow x 3) (pow x 3)) (+ (* x -9.333333) 14.0)) (- 14.0 (* x -9.333333)))))
* [exit]simplify:  Simplified to (cbrt (* (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (* (* (pow x 3) (pow x 3)) (+ (* x -9.333333) 14.0)) (- 14.0 (* x -9.333333)))))
* [enter]simplify:  Simplifying (cbrt (* (- 14.0 (* x -9.333333)) (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (121 enodes)
* * [misc]simplify:  iters left: 2 (497 enodes)
* [exit]simplify:  Simplified to (- 14.0 (* -9.333333 x))
* [exit]simplify:  Simplified to (- 14.0 (* -9.333333 x))
* * * * [misc]progress:  [ 18 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ 14.0 (* x -9.333333)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))) (cbrt (* (- 14.0 (* x -9.333333)) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ 14.0 (* x -9.333333)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (243 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (+ (* x -9.333333) 14.0)) (* (* (pow x 3) (pow x 3)) (- 14.0 (* x -9.333333)))) (+ (pow (* x -9.333333) 3) (pow 14.0 3))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (+ (* x -9.333333) 14.0)) (* (* (pow x 3) (pow x 3)) (- 14.0 (* x -9.333333)))) (+ (pow (* x -9.333333) 3) (pow 14.0 3))))
* [enter]simplify:  Simplifying (cbrt (* (- 14.0 (* x -9.333333)) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (391 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))) 14.0) (* (* (* -9.333333 x) (* -9.333333 x)) (- 14.0 (* -9.333333 x)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))) 14.0) (* (* (* -9.333333 x) (* -9.333333 x)) (- 14.0 (* -9.333333 x)))))
* * * * [misc]progress:  [ 19 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ 14.0 (* x -9.333333)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))))) (cbrt (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ 14.0 (* x -9.333333)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- 14.0 (* x -9.333333)) (* (+ (* x -9.333333) 14.0) (pow x 3))) (* (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0)) (* (+ (* x -9.333333) 14.0) (pow x 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (- 14.0 (* x -9.333333)) (* (+ (* x -9.333333) 14.0) (pow x 3))) (* (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0)) (* (+ (* x -9.333333) 14.0) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (163 enodes)
* * [misc]simplify:  iters left: 1 (366 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))))
* [exit]simplify:  Simplified to (cbrt (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))))
* * * * [misc]progress:  [ 20 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ 14.0 (* x -9.333333))))) (cbrt (* (- 14.0 (* x -9.333333)) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (232 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (* (pow x 3) (pow x 3)) (+ (* x -9.333333) 14.0)) (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0))) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (* (pow x 3) (pow x 3)) (+ (* x -9.333333) 14.0)) (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0))) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))
* [enter]simplify:  Simplifying (cbrt (* (- 14.0 (* x -9.333333)) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (391 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))) 14.0) (* (* (* -9.333333 x) (* -9.333333 x)) (- 14.0 (* -9.333333 x)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))) 14.0) (* (* (* -9.333333 x) (* -9.333333 x)) (- 14.0 (* -9.333333 x)))))
* * * * [misc]progress:  [ 21 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ 14.0 (* x -9.333333))))) (cbrt (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (201 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0)) (* (* (pow x 3) (pow x 3)) (+ (* x -9.333333) 14.0))) (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0)) (* (* (pow x 3) (pow x 3)) (+ (* x -9.333333) 14.0))) (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0))))
* [enter]simplify:  Simplifying (cbrt (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (163 enodes)
* * [misc]simplify:  iters left: 1 (366 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))))
* [exit]simplify:  Simplified to (cbrt (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))))
* * * * [misc]progress:  [ 22 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))) (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* -9.333333 x) 3)) (+ (pow 14.0 3) (pow (* -9.333333 x) 3))) (+ (* (* 14.0 (* x x)) (* (* x x) (* x x))) (* (* (* -9.333333 x) (* x x)) (* (* x x) (* x x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* -9.333333 x) 3)) (+ (pow 14.0 3) (pow (* -9.333333 x) 3))) (+ (* (* 14.0 (* x x)) (* (* x x) (* x x))) (* (* (* -9.333333 x) (* x x)) (* (* x x) (* x x))))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (383 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))))
* * * * [misc]progress:  [ 23 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))))) (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (- 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (206 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- (* 14.0 14.0) (* (* -9.333333 x) (* -9.333333 x))) (+ (pow 14.0 3) (pow (* -9.333333 x) 3))) (+ (* (* 14.0 (* x x)) (* (* x x) (* x x))) (* (* (* -9.333333 x) (* x x)) (* (* x x) (* x x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (- (* 14.0 14.0) (* (* -9.333333 x) (* -9.333333 x))) (+ (pow 14.0 3) (pow (* -9.333333 x) 3))) (+ (* (* 14.0 (* x x)) (* (* x x) (* x x))) (* (* (* -9.333333 x) (* x x)) (* (* x x) (* x x))))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (- 14.0 (* x -9.333333))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* x -9.333333)) 14.0) (- 14.0 (* x -9.333333))) (* (- 14.0 (* x -9.333333)) (* (* x -9.333333) (* x -9.333333)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* x -9.333333)) 14.0) (- 14.0 (* x -9.333333))) (* (- 14.0 (* x -9.333333)) (* (* x -9.333333) (* x -9.333333)))))
* * * * [misc]progress:  [ 24 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))) (cbrt (* (- 14.0 (* x -9.333333)) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (270 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* -9.333333 x) 3) (pow 14.0 3)) (- (* 14.0 14.0) (* (* -9.333333 x) (* -9.333333 x)))) (+ (* (* 14.0 (* x x)) (* (* x x) (* x x))) (* (* (* -9.333333 x) (* x x)) (* (* x x) (* x x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* -9.333333 x) 3) (pow 14.0 3)) (- (* 14.0 14.0) (* (* -9.333333 x) (* -9.333333 x)))) (+ (* (* 14.0 (* x x)) (* (* x x) (* x x))) (* (* (* -9.333333 x) (* x x)) (* (* x x) (* x x))))))
* [enter]simplify:  Simplifying (cbrt (* (- 14.0 (* x -9.333333)) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (391 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))) 14.0) (* (* (* -9.333333 x) (* -9.333333 x)) (- 14.0 (* -9.333333 x)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))) 14.0) (* (* (* -9.333333 x) (* -9.333333 x)) (- 14.0 (* -9.333333 x)))))
* * * * [misc]progress:  [ 25 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))))) (cbrt (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))) (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (- 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (- 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))) (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (- 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* [enter]simplify:  Simplifying (cbrt (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (163 enodes)
* * [misc]simplify:  iters left: 1 (366 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))))
* [exit]simplify:  Simplified to (cbrt (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))))
* * * * [misc]progress:  [ 26 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))) (cbrt (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (234 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (pow 14.0 3) (pow (* -9.333333 x) 3)) (* (* (+ 14.0 (* -9.333333 x)) (* x x)) (* (* (* x x) (* x x)) (+ 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (cbrt (* (+ (pow 14.0 3) (pow (* -9.333333 x) 3)) (* (* (+ 14.0 (* -9.333333 x)) (* x x)) (* (* (* x x) (* x x)) (+ 14.0 (* -9.333333 x))))))
* [enter]simplify:  Simplifying (cbrt (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* x -9.333333) 14.0) (* x -9.333333)) (* 14.0 14.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* x -9.333333) 14.0) (* x -9.333333)) (* 14.0 14.0)))
* * * * [misc]progress:  [ 27 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))))) (cbrt (- 14.0 (* x -9.333333)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))) (* (* (+ 14.0 (* -9.333333 x)) (* x x)) (* (* (* x x) (* x x)) (+ 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (- 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))) (* (* (+ 14.0 (* -9.333333 x)) (* x x)) (* (* (* x x) (* x x)) (+ 14.0 (* -9.333333 x))))))
* [enter]simplify:  Simplifying (cbrt (- 14.0 (* x -9.333333)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (- 14.0 (* -9.333333 x)))
* [exit]simplify:  Simplified to (cbrt (- 14.0 (* -9.333333 x)))
* * * * [misc]progress:  [ 28 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ 14.0 (* x -9.333333))))) (cbrt (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (224 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (pow 14.0 3) (pow (* -9.333333 x) 3)) (* (* (+ 14.0 (* -9.333333 x)) (* x x)) (* (* (* x x) (* x x)) (+ 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (cbrt (* (+ (pow 14.0 3) (pow (* -9.333333 x) 3)) (* (* (+ 14.0 (* -9.333333 x)) (* x x)) (* (* (* x x) (* x x)) (+ 14.0 (* -9.333333 x))))))
* [enter]simplify:  Simplifying (cbrt (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* x -9.333333) 14.0) (* x -9.333333)) (* 14.0 14.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* x -9.333333) 14.0) (* x -9.333333)) (* 14.0 14.0)))
* * * * [misc]progress:  [ 29 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ 14.0 (* x -9.333333))))) (cbrt (- 14.0 (* x -9.333333)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (222 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))) (* (* (+ 14.0 (* -9.333333 x)) (* x x)) (* (* (* x x) (* x x)) (+ 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (- 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))) (* (* (+ 14.0 (* -9.333333 x)) (* x x)) (* (* (* x x) (* x x)) (+ 14.0 (* -9.333333 x))))))
* [enter]simplify:  Simplifying (cbrt (- 14.0 (* x -9.333333)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (- 14.0 (* -9.333333 x)))
* [exit]simplify:  Simplified to (cbrt (- 14.0 (* -9.333333 x)))
* * * * [misc]progress:  [ 30 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (cbrt (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (218 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (+ (* x -9.333333) 14.0)) (* x x)) (* (* (* x x) (* x x)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (+ (* x -9.333333) 14.0)) (* x x)) (* (* (* x x) (* x x)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* [enter]simplify:  Simplifying (cbrt (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* x -9.333333) 14.0) (* x -9.333333)) (* 14.0 14.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* x -9.333333) 14.0) (* x -9.333333)) (* 14.0 14.0)))
* * * * [misc]progress:  [ 31 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (cbrt (- 14.0 (* x -9.333333)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (180 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (+ (* x -9.333333) 14.0)) (* x x)) (* (* (* x x) (* x x)) (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (+ (* x -9.333333) 14.0)) (* x x)) (* (* (* x x) (* x x)) (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0)))))
* [enter]simplify:  Simplifying (cbrt (- 14.0 (* x -9.333333)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (- 14.0 (* -9.333333 x)))
* [exit]simplify:  Simplified to (cbrt (- 14.0 (* -9.333333 x)))
* * * * [misc]progress:  [ 32 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))) (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))) (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))) (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x)))))) (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x)))))) (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x)))))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* * * * [misc]progress:  [ 33 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))) (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))) (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))
* * * * [misc]progress:  [ 34 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (sqrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))) (sqrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* * * * [misc]progress:  [ 35 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* 1 (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 36 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 37 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 38 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x (* 2 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 39 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) (* 1 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 40 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (pow x 3) (pow x 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 41 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 42 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (pow (* x x) 3) 1) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 43 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (log (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 44 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (log (exp (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 45 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 46 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 47 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (pow x 3) (pow x 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 48 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* x x) (* (* x x) (* x x))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 49 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 50 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 51 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* 1 (pow (* x x) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 52 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (exp (* (log (* x x)) 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 53 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (exp (* (log (* x x)) 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 54 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 55 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) (* 1 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 56 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (pow x 3) (pow x 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 57 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* x x)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 58 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (pow (* x x) 3) 1) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 59 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (exp (log (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 60 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (log (exp (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 61 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 62 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 63 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (pow x 3) (pow x 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 64 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* x x) (* (* x x) (* x x))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 65 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* x x)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 66 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 67 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* 1 (pow (* x x) 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 68 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (pow x (+ 2 2)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ 2 2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 2 2)
* [exit]simplify:  Simplified to (+ 2 2)
* * * * [misc]progress:  [ 69 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (pow (* x x) (+ 1 1)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 70 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (pow (* x x) 2) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 71 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (pow (* (* x x) (* x x)) 1) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 72 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (pow (* x x) 2) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 73 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (pow (* x x) (+ 1 1)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 74 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (pow (* (* x x) (* x x)) 1) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 75 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (exp (+ (log (* x x)) (log (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 76 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (exp (log (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* * * * [misc]progress:  [ 77 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (log (exp (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 78 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 79 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x)))) (cbrt (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 80 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (cbrt (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (153 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 81 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (sqrt (* (* x x) (* x x))) (sqrt (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 82 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* 1 (* (* x x) (* x x))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 83 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* (* x x) x) x) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) x)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 84 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* x (* x (* x x))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 85 / 97 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 86 / 97 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (+ (* 0.6666666190476199 (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (pow x 2))) (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0))))) (+ (* 5019690.308117339 (/ (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (pow x 2)) (pow 2744.0 2))) (* 0.6666666428571428 (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) x)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (+ (* 0.6666666190476199 (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (pow x 2))) (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0))))) (+ (* 5019690.308117339 (/ (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (pow x 2)) (pow 2744.0 2))) (* 0.6666666428571428 (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) x)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (50 enodes)
* * [misc]simplify:  iters left: 5 (138 enodes)
* * [misc]simplify:  iters left: 4 (440 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* -8.0 x) 1.0) (* (* (pow x 3) (pow x 3)) (+ (* 2.5e-05 (* x x)) (+ (* -0.001587 x) 0.038889)))) (+ (+ (+ (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x))) (* (pow x (* 1/3 6)) (pow 2744.0 1/3))) (* (* (* x x) 0.6666666190476199) (* (pow x (* 1/3 6)) (pow 2744.0 1/3)))) (- (* (- (* x 0.6666666428571428)) (* (pow x (* 1/3 6)) (pow 2744.0 1/3))) (/ (* (pow x (* 1/3 6)) (* (pow 2744.0 1/3) 5019690.308117339)) (* (/ 2744.0 x) (/ 2744.0 x))))))
* * * * [misc]progress:  [ 87 / 97 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (+ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) (* 3.3750002410714424 (/ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) (pow x 2)))) (+ (* 2230973.310919128 (/ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) (* (pow -813.0369499259289 2) (pow x 2)))) (* 1.5000000535714308 (/ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) x)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (+ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) (* 3.3750002410714424 (/ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) (pow x 2)))) (+ (* 2230973.310919128 (/ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) (* (pow -813.0369499259289 2) (pow x 2)))) (* 1.5000000535714308 (/ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) x)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (55 enodes)
* * [misc]simplify:  iters left: 5 (147 enodes)
* * [misc]simplify:  iters left: 4 (467 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (pow x 3) (pow x 3)) (+ (* 2.5e-05 (* x x)) (+ (* -0.001587 x) 0.038889))) (pow (exp 1/3) (+ (+ (* (log x) 6) (* 3 (log x))) (log -813.0369499259289)))) (- (* (/ (pow (exp 1/3) (+ (+ (* (log x) 6) (* 3 (log x))) (log -813.0369499259289))) (* x x)) (- 3.3750002410714424 (/ 2230973.310919128 (* -813.0369499259289 -813.0369499259289)))) (- (* (/ 1.5000000535714308 x) (pow (exp 1/3) (+ (+ (* (log x) 6) (* 3 (log x))) (log -813.0369499259289)))) (+ (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (+ (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 88 / 97 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (+ (* 3.3750002410714424 (/ (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x)))))) (pow x 2))) (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x))))))) (+ (* 2230973.310919128 (/ (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x)))))) (* (pow 813.0369499259289 2) (pow x 2)))) (* 1.5000000535714308 (/ (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x)))))) x)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (+ (* 3.3750002410714424 (/ (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x)))))) (pow x 2))) (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x))))))) (+ (* 2230973.310919128 (/ (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x)))))) (* (pow 813.0369499259289 2) (pow x 2)))) (* 1.5000000535714308 (/ (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x)))))) x)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (58 enodes)
* * [misc]simplify:  iters left: 5 (152 enodes)
* * [misc]simplify:  iters left: 4 (460 enodes)
* [exit]simplify:  Simplified to (- (+ (* (/ (pow (exp 1/3) (+ (- (* (+ 0 (log x)) (+ 3 3)) (* 3 (log (/ -1 x)))) (log 813.0369499259289))) (* x x)) (- 3.3750002410714424 (/ 2230973.310919128 (* 813.0369499259289 813.0369499259289)))) (pow (exp 1/3) (+ (- (* (+ 0 (log x)) (+ 3 3)) (* 3 (log (/ -1 x)))) (log 813.0369499259289)))) (- (* (/ 1.5000000535714308 x) (pow (exp 1/3) (+ (- (* (+ 0 (log x)) (+ 3 3)) (* 3 (log (/ -1 x)))) (log 813.0369499259289)))) (+ (+ (+ (* -8.0 x) 1.0) (* (+ 2.916667 (* x -0.466667)) (* (* x x) (* x x)))) (* (* (pow x 3) (pow x 3)) (+ (* 2.5e-05 (* x x)) (+ (* -0.001587 x) 0.038889))))))
* * * * [misc]progress:  [ 89 / 97 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x 6) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x 6) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (106 enodes)
* * [misc]simplify:  iters left: 4 (447 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (* (+ 14.0 (* -9.333333 x)) (pow (* x x) 3)) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))) (+ (+ (* (pow (* x x) 3) (* (* x x) 2.5e-05)) (* (pow x 6) (+ 0.038889 (* -0.001587 x)))) (+ (+ (* x -8.0) 1.0) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))))
* * * * [misc]progress:  [ 90 / 97 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ 1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ 1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (110 enodes)
* * [misc]simplify:  iters left: 4 (450 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow (/ 1 x) -6) (+ 0.038889 (* x -0.001587))) (* (pow (* x x) (+ 1 3)) 2.5e-05)) (+ (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (+ (* x -8.0) 1.0))) (cbrt (* (* (+ 14.0 (* -9.333333 x)) (pow (* x x) 3)) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* * * * [misc]progress:  [ 91 / 97 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ -1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ -1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (449 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow (/ -1 x) -6) (+ 0.038889 (* x -0.001587))) (* (pow (* x x) (+ 1 3)) 2.5e-05)) (+ (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (+ (* x -8.0) 1.0))) (cbrt (* (* (+ 14.0 (* -9.333333 x)) (pow (* x x) 3)) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* * * * [misc]progress:  [ 92 / 97 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow x 6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow x 6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (106 enodes)
* * [misc]simplify:  iters left: 4 (466 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (* (+ 14.0 (* -9.333333 x)) (* (pow x 3) (pow x 3))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))) (+ (+ (* (* (pow x 6) 2.5e-05) (* x x)) (* (* (pow x 3) (pow x 3)) (+ 0.038889 (* -0.001587 x)))) (+ (+ (* x -8.0) 1.0) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))))
* * * * [misc]progress:  [ 93 / 97 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (/ 1 x) -6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (/ 1 x) -6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (110 enodes)
* * [misc]simplify:  iters left: 4 (469 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow (* x x) 3) (+ 0.038889 (* x -0.001587))) (* (* x (* 2.5e-05 x)) (pow (/ 1 x) -6))) (+ (* (* (* x x) (* x x)) (+ 2.916667 (* x -0.466667))) (+ (* x -8.0) 1.0))) (cbrt (* (* (+ 14.0 (* x -9.333333)) (pow (* x x) 3)) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))
* * * * [misc]progress:  [ 94 / 97 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (/ -1 x) -6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (/ -1 x) -6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (468 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow (* x x) 3) (+ 0.038889 (* x -0.001587))) (* (* x (* 2.5e-05 x)) (pow (/ -1 x) -6))) (+ (* (* (* x x) (* x x)) (+ 2.916667 (* x -0.466667))) (+ (* x -8.0) 1.0))) (cbrt (* (* (+ 14.0 (* x -9.333333)) (pow (* x x) 3)) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))
* * * * [misc]progress:  [ 95 / 97 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (104 enodes)
* * [misc]simplify:  iters left: 4 (452 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* (* x 2.5e-05) x) (+ (* -0.001587 x) 0.038889)) (pow (* x x) 3)) (+ (* (pow x 4) (+ (* x -0.466667) 2.916667)) (+ (* x -8.0) 1.0))) (cbrt (* (* (+ 14.0 (* -9.333333 x)) (pow (* x x) 3)) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* * * * [misc]progress:  [ 96 / 97 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (104 enodes)
* * [misc]simplify:  iters left: 4 (452 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* (* x 2.5e-05) x) (+ (* -0.001587 x) 0.038889)) (pow (* x x) 3)) (+ (* (pow x 4) (+ (* x -0.466667) 2.916667)) (+ (* x -8.0) 1.0))) (cbrt (* (* (+ 14.0 (* -9.333333 x)) (pow (* x x) 3)) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* * * * [misc]progress:  [ 97 / 97 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (104 enodes)
* * [misc]simplify:  iters left: 4 (452 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* (* x 2.5e-05) x) (+ (* -0.001587 x) 0.038889)) (pow (* x x) 3)) (+ (* (pow x 4) (+ (* x -0.466667) 2.916667)) (+ (* x -8.0) 1.0))) (cbrt (* (* (+ 14.0 (* -9.333333 x)) (pow (* x x) 3)) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2 1 1 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 2 1 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (log (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 2 (log x)) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 2 (log x)) into (* 2 (log x))
* [misc]approximate:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- (* 2 (log x))) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (* 2 (log (/ 1 x)))) into (- (* 2 (log (/ 1 x))))
* [misc]approximate:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- (* 2 (log x))) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (* 2 (log (/ 1 (- x))))) into (- (* 2 (log (/ -1 x))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* x -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* x -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* x -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (* 1 14.0) into 14.0
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (* 14.0 14.0) into 196.0
* [misc]backup-simplify:  Simplify (* 14.0 196.0) into 2744.0
* [misc]backup-simplify:  Simplify (log 2744.0) into (log 2744.0)
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log 2744.0)) into (+ (* 6 (log x)) (log 2744.0))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 6 (log x)) (log 2744.0))) into (* 1/3 (+ (* 6 (log x)) (log 2744.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) into (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* x -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* x -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* x -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (* 1 14.0) into 14.0
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (* 14.0 14.0) into 196.0
* [misc]backup-simplify:  Simplify (* 14.0 196.0) into 2744.0
* [misc]backup-simplify:  Simplify (log 2744.0) into (log 2744.0)
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log 2744.0)) into (+ (* 6 (log x)) (log 2744.0))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 6 (log x)) (log 2744.0))) into (* 1/3 (+ (* 6 (log x)) (log 2744.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) into (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) into (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ 0 (- 9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ 0 (- 9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 14.0 (- 9.333333)) (* (- 9.333333) 14.0)) into (- 261.333324)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ 0 (- 9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 (- 9.333333)) (* 0 14.0)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 14.0 (- 261.333324)) (* (- 9.333333) 196.0)) into (- 5487.999804)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 5487.999804)) 1)) (pow 2744.0 1)))) 1) into -1.9999999285714285
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log 2744.0)) into (+ (* 6 (log x)) (log 2744.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.9999999285714285) (* 0 (+ (* 6 (log x)) (log 2744.0)))) into (- 0.6666666428571428)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (+ (* (/ (pow (- 0.6666666428571428) 1) 1)))) into (* -0.6666666428571428 (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))))
* [misc]backup-simplify:  Simplify (* -0.6666666428571428 (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0))))) into (* -0.6666666428571428 (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 0) (+ (* (- 9.333333) (- 9.333333)) (* 0 14.0))) into 87.11110488888899
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 (- 9.333333)) (* 0 14.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 87.11110488888899) (+ (* (- 9.333333) (- 261.333324)) (* 0 196.0))) into 3658.666405333338
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 5487.999804)) 2)) (pow 2744.0 2))) (* 1 (/ (* 1 (pow (* 2 3658.666405333338) 1)) (pow 2744.0 1)))) 2) into (* 1/2 (- 2.6666664761904797 (* 30118141.84870404 (/ 1 (pow 2744.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log 2744.0)) into (+ (* 6 (log x)) (log 2744.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 2.6666664761904797 (* 30118141.84870404 (/ 1 (pow 2744.0 2)))))) (+ (* 0 -1.9999999285714285) (* 0 (+ (* 6 (log x)) (log 2744.0))))) into (- 0.4444444126984133 (* 5019690.308117339 (/ 1 (pow 2744.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (+ (* (/ (pow (- 0.6666666428571428) 2) 2)) (* (/ (pow (- 0.4444444126984133 (* 5019690.308117339 (/ 1 (pow 2744.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (- 0.6666666190476199 (* 5019690.308117339 (/ 1 (pow 2744.0 2)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (- 0.6666666190476199 (* 5019690.308117339 (/ 1 (pow 2744.0 2))))) into (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (- 0.6666666190476199 (* 5019690.308117339 (/ 1 (pow 2744.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (- 0.6666666190476199 (* 5019690.308117339 (/ 1 (pow 2744.0 2))))) (pow x 2)) (+ (* (* -0.6666666428571428 (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0))))) x) (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))))) into (- (+ (* 0.6666666190476199 (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (pow x 2))) (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0))))) (+ (* 5019690.308117339 (/ (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (pow x 2)) (pow 2744.0 2))) (* 0.6666666428571428 (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) x))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 x) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 x) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 x) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ 0 -9.333333) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 6)) (- 9.333333)) into (/ -9.333333 (pow x 6))
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ 0 -9.333333) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ 0 -9.333333) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (- 9.333333) (- 9.333333)) into 87.11110488888899
* [misc]backup-simplify:  Simplify (* (/ -9.333333 (pow x 6)) 87.11110488888899) into (/ -813.0369499259289 (pow x 6))
* [misc]backup-simplify:  Simplify (log (/ -813.0369499259289 (pow x 6))) into (log (/ -813.0369499259289 (pow x 6)))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (/ -813.0369499259289 (pow x 6)))) into (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))) into (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))) into (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 14.0 (* (/ 1 x) -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 x) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (* (+ 14.0 (* (/ 1 x) -9.333333)) (+ 14.0 (* (/ 1 x) -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 x) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 x) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ 0 -9.333333) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 6)) (- 9.333333)) into (/ -9.333333 (pow x 6))
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ 0 -9.333333) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ 0 -9.333333) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (- 9.333333) (- 9.333333)) into 87.11110488888899
* [misc]backup-simplify:  Simplify (* (/ -9.333333 (pow x 6)) 87.11110488888899) into (/ -813.0369499259289 (pow x 6))
* [misc]backup-simplify:  Simplify (log (/ -813.0369499259289 (pow x 6))) into (log (/ -813.0369499259289 (pow x 6)))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (/ -813.0369499259289 (pow x 6)))) into (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))) into (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))) into (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))) into (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -9.333333)) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -9.333333)) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (+ (* (- 9.333333) 14.0) (* 14.0 (- 9.333333))) into (- 261.333324)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -9.333333)) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 14.0) (* 0 (- 9.333333))) into (* 14.0 (/ 1 (pow x 6)))
* [misc]backup-simplify:  Simplify (+ (* (/ -9.333333 (pow x 6)) (- 261.333324)) (* (* 14.0 (/ 1 (pow x 6))) 87.11110488888899)) into (* 3658.666405333338 (/ 1 (pow x 6)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* 3658.666405333338 (/ 1 (pow x 6)))) 1)) (pow (/ -813.0369499259289 (pow x 6)) 1)))) 1) into -4.5000001607142925
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (/ -813.0369499259289 (pow x 6)))) into (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -4.5000001607142925) (* 0 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))) into (- 1.5000000535714308)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))) (+ (* (/ (pow (- 1.5000000535714308) 1) 1)))) into (* -1.5000000535714308 (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -1.5000000535714308 (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))))) into (* -1.5000000535714308 (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 9.333333) 0) (+ (* 14.0 14.0) (* 0 (- 9.333333)))) into 196.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 14.0) (* 0 (- 9.333333)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ -9.333333 (pow x 6)) 196.0) (+ (* (* 14.0 (/ 1 (pow x 6))) (- 261.333324)) (* 0 87.11110488888899))) into (- (* 5487.999804 (/ 1 (pow x 6))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* 3658.666405333338 (/ 1 (pow x 6)))) 2)) (pow (/ -813.0369499259289 (pow x 6)) 2))) (* 1 (/ (* 1 (pow (* 2 (- (* 5487.999804 (/ 1 (pow x 6))))) 1)) (pow (/ -813.0369499259289 (pow x 6)) 1)))) 2) into (* 1/2 (- 13.50000096428577 (* 13385839.865514768 (/ 1 (pow -813.0369499259289 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (/ -813.0369499259289 (pow x 6)))) into (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 13.50000096428577 (* 13385839.865514768 (/ 1 (pow -813.0369499259289 2)))))) (+ (* 0 -4.5000001607142925) (* 0 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x)))))) into (- 2.2500001607142948 (* 2230973.310919128 (/ 1 (pow -813.0369499259289 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))) (+ (* (/ (pow (- 1.5000000535714308) 2) 2)) (* (/ (pow (- 2.2500001607142948 (* 2230973.310919128 (/ 1 (pow -813.0369499259289 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))) (- 3.3750002410714424 (* 2230973.310919128 (/ 1 (pow -813.0369499259289 2)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))) (- 3.3750002410714424 (* 2230973.310919128 (/ 1 (pow -813.0369499259289 2))))) into (* (exp (* 1/3 (- (log (/ -813.0369499259289 (pow x 6))) (* 3 (log x))))) (- 3.3750002410714424 (* 2230973.310919128 (/ 1 (pow -813.0369499259289 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (/ -813.0369499259289 (pow (/ 1 x) 6))) (* 3 (log (/ 1 x)))))) (- 3.3750002410714424 (* 2230973.310919128 (/ 1 (pow -813.0369499259289 2))))) (pow (/ 1 x) 2)) (+ (* (* -1.5000000535714308 (exp (* 1/3 (- (log (/ -813.0369499259289 (pow (/ 1 x) 6))) (* 3 (log (/ 1 x))))))) (/ 1 x)) (exp (* 1/3 (- (log (/ -813.0369499259289 (pow (/ 1 x) 6))) (* 3 (log (/ 1 x)))))))) into (- (+ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) (* 3.3750002410714424 (/ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) (pow x 2)))) (+ (* 2230973.310919128 (/ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) (* (pow -813.0369499259289 2) (pow x 2)))) (* 1.5000000535714308 (/ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) x))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 (- x)) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 (- x)) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 (- x)) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 0 9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 9.333333) into (* 9.333333 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 0 9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 0 9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (* 9.333333 9.333333) into 87.11110488888899
* [misc]backup-simplify:  Simplify (* (* 9.333333 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 87.11110488888899) into (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) into (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))) into (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))) into (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 (- x)) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (* (+ 14.0 (* (/ 1 (- x)) -9.333333)) (+ 14.0 (* (/ 1 (- x)) -9.333333))) in x
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 (- x)) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (+ 14.0 (* (/ 1 (- x)) -9.333333)) in x
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 0 9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 9.333333) into (* 9.333333 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 0 9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 0 9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (* 9.333333 9.333333) into 87.11110488888899
* [misc]backup-simplify:  Simplify (* (* 9.333333 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 87.11110488888899) into (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) into (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))) into (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))) into (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))) into (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -9.333333)) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -9.333333)) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (+ (* 9.333333 14.0) (* 14.0 9.333333)) into 261.333324
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -9.333333)) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 14.0) (* 0 9.333333)) into (* 14.0 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (+ (* (* 9.333333 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 261.333324) (* (* 14.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 87.11110488888899)) into (* 3658.666405333338 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* 3658.666405333338 (pow (exp (* 3 (- (log -1) (log x)))) 2))) 1)) (pow (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 1)))) 1) into 4.5000001607142925
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 4.5000001607142925) (* 0 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))) into 1.5000000535714308
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))) (+ (* (/ (pow 1.5000000535714308 1) 1)))) into (* 1.5000000535714308 (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* 1.5000000535714308 (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))))) into (* 1.5000000535714308 (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 9.333333 0) (+ (* 14.0 14.0) (* 0 9.333333))) into 196.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 14.0) (* 0 9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 9.333333 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 196.0) (+ (* (* 14.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 261.333324) (* 0 87.11110488888899))) into (* 5487.999804 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* 3658.666405333338 (pow (exp (* 3 (- (log -1) (log x)))) 2))) 2)) (pow (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 2))) (* 1 (/ (* 1 (pow (* 2 (* 5487.999804 (pow (exp (* 3 (- (log -1) (log x)))) 2))) 1)) (pow (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 1)))) 2) into (* 1/2 (- 13.50000096428577 (* 13385839.865514768 (/ 1 (pow 813.0369499259289 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 13.50000096428577 (* 13385839.865514768 (/ 1 (pow 813.0369499259289 2)))))) (+ (* 0 4.5000001607142925) (* 0 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))))) into (- 2.2500001607142948 (* 2230973.310919128 (/ 1 (pow 813.0369499259289 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))) (+ (* (/ (pow 1.5000000535714308 2) 2)) (* (/ (pow (- 2.2500001607142948 (* 2230973.310919128 (/ 1 (pow 813.0369499259289 2)))) 1) 1)))) into (* (- 3.3750002410714424 (* 2230973.310919128 (/ 1 (pow 813.0369499259289 2)))) (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* (- 3.3750002410714424 (* 2230973.310919128 (/ 1 (pow 813.0369499259289 2)))) (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x)))))) into (* (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 3 (log x))))) (- 3.3750002410714424 (* 2230973.310919128 (/ 1 (pow 813.0369499259289 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2))) (* 3 (log (/ 1 (- x))))))) (- 3.3750002410714424 (* 2230973.310919128 (/ 1 (pow 813.0369499259289 2))))) (pow (/ 1 (- x)) 2)) (+ (* (* 1.5000000535714308 (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2))) (* 3 (log (/ 1 (- x)))))))) (/ 1 (- x))) (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2))) (* 3 (log (/ 1 (- x))))))))) into (- (+ (* 3.3750002410714424 (/ (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x)))))) (pow x 2))) (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x))))))) (+ (* 2230973.310919128 (/ (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x)))))) (* (pow 813.0369499259289 2) (pow x 2)))) (* 1.5000000535714308 (/ (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x)))))) x))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (exp (* (log (* x x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* (log (* x x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (log (* x x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* (* 2 (log x)) 3) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (exp (* (log (* x x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (log (* x x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* (* 2 (log x)) 3) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 2 (log x)) 0) (* 0 3)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 2 (log x)) 0) (+ (* 0 0) (* 0 3))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 2 (log x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 2 (log x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 2 (log x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 2 (log x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (exp (* (log (* (/ 1 x) (/ 1 x))) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* (log (* (/ 1 x) (/ 1 x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (log (* (/ 1 x) (/ 1 x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* (- (* 2 (log x))) 3) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (exp (* (log (* (/ 1 x) (/ 1 x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (log (* (/ 1 x) (/ 1 x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* (- (* 2 (log x))) 3) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (* 0 3)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (+ (* 0 0) (* 0 3))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (exp (* (log (* (/ 1 (- x)) (/ 1 (- x)))) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* (log (* (/ 1 (- x)) (/ 1 (- x)))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (log (* (/ 1 (- x)) (/ 1 (- x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* (- (* 2 (log x))) 3) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (exp (* (log (* (/ 1 (- x)) (/ 1 (- x)))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (log (* (/ 1 (- x)) (/ 1 (- x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* (- (* 2 (log x))) 3) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (* 0 3)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (+ (* 0 0) (* 0 3))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (log (* x x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (log (* x x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (* (log (* x x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* (* 2 (log x)) 3) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (* 6 (log x)) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 2 (log x)) 0) (* 0 3)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 2 (log x)) 0) (+ (* 0 0) (* 0 3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 2 (log x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 2 (log x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 2 (log x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 2 (log x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 6 (log x)) into (* 6 (log x))
* [misc]approximate:  Taking taylor expansion of (* (log (* (/ 1 x) (/ 1 x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (log (* (/ 1 x) (/ 1 x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (* (log (* (/ 1 x) (/ 1 x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* (- (* 2 (log x))) 3) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (* -6 (log x)) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (* 0 3)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (+ (* 0 0) (* 0 3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -6 (log (/ 1 x))) into (* -6 (log (/ 1 x)))
* [misc]approximate:  Taking taylor expansion of (* (log (* (/ 1 (- x)) (/ 1 (- x)))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (log (* (/ 1 (- x)) (/ 1 (- x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (* (log (* (/ 1 (- x)) (/ 1 (- x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* (- (* 2 (log x))) 3) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (* -6 (log x)) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (* 0 3)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (+ (* 0 0) (* 0 3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 2 (log x))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -6 (log (/ 1 (- x)))) into (* -6 (log (/ -1 x)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (+ (log x) (log x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log x)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (log x)
* [exit]simplify:  Simplified to (log x)
* [enter]simplify:  Simplifying (log x)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (log x)
* [exit]simplify:  Simplified to (log x)
* * * * [misc]progress:  [ 2 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (* 2 (log x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log x)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (log x)
* [exit]simplify:  Simplified to (log x)
* * * * [misc]progress:  [ 3 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (* 1 (log (* x x))) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* x x))
* * [misc]simplify:  iters left: 3 (3 enodes)
* * [misc]simplify:  iters left: 2 (5 enodes)
* [exit]simplify:  Simplified to (+ (log x) (log x))
* [exit]simplify:  Simplified to (+ (log x) (log x))
* * * * [misc]progress:  [ 4 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (pow (log (* x x)) 1) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 5 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 6 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (exp (log (log (* x x)))) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (log (* x x)))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (log (+ (log x) (log x)))
* [exit]simplify:  Simplified to (log (+ (log x) (log x)))
* * * * [misc]progress:  [ 7 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (exp (log (* x x)))) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (log (* x x)))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 8 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (* (* (cbrt (log (* x x))) (cbrt (log (* x x)))) (cbrt (log (* x x)))) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (log (* x x))) (cbrt (log (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (7 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (log x) (log x))) (cbrt (+ (log x) (log x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (log x) (log x))) (cbrt (+ (log x) (log x))))
* [enter]simplify:  Simplifying (cbrt (log (* x x)))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (log x) (log x)))
* [exit]simplify:  Simplified to (cbrt (+ (log x) (log x)))
* * * * [misc]progress:  [ 9 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (cbrt (* (* (log (* x x)) (log (* x x))) (log (* x x)))) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (log (* x x)) (log (* x x))) (log (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (254 enodes)
* [exit]simplify:  Simplified to (pow (+ (log x) (log x)) 3)
* [exit]simplify:  Simplified to (pow (+ (log x) (log x)) 3)
* * * * [misc]progress:  [ 10 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (* (sqrt (log (* x x))) (sqrt (log (* x x)))) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (log (* x x)))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (log x) (log x)))
* [exit]simplify:  Simplified to (sqrt (+ (log x) (log x)))
* [enter]simplify:  Simplifying (sqrt (log (* x x)))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (log x) (log x)))
* [exit]simplify:  Simplified to (sqrt (+ (log x) (log x)))
* * * * [misc]progress:  [ 11 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (* 1 (log (* x x))) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 12 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (pow (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))) 1/3) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 13 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (pow (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) 1) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 14 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (exp (log (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (log (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* * * * [misc]progress:  [ 15 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (log (exp (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (exp (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* * * * [misc]progress:  [ 16 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (cbrt (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333)))) (cbrt (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (207 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow (* x x) 3) (+ 14.0 (* -9.333333 x))))
* [exit]simplify:  Simplified to (cbrt (* (pow (* x x) 3) (+ 14.0 (* -9.333333 x))))
* [enter]simplify:  Simplifying (cbrt (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (138 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* -9.333333 x) 14.0) (+ (* -9.333333 x) 14.0)))
* [exit]simplify:  Simplified to (cbrt (* (+ (* -9.333333 x) 14.0) (+ (* -9.333333 x) 14.0)))
* * * * [misc]progress:  [ 17 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))) (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (224 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (pow x 3) (pow x 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (pow x 3) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* [exit]simplify:  Simplified to (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))
* [exit]simplify:  Simplified to (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))
* * * * [misc]progress:  [ 18 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))))) (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (- 14.0 (* x -9.333333)))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (214 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (pow x 3) (pow x 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (pow x 3) (pow x 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (- 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))) (- 14.0 (* x -9.333333))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))) (- 14.0 (* x -9.333333))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))))
* * * * [misc]progress:  [ 19 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))) (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (* (- 14.0 (* x -9.333333)) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (279 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (pow x 3) (pow x 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (pow x 3) (pow x 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (* (- 14.0 (* x -9.333333)) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- 14.0 (* x -9.333333)) (* (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))))))
* [exit]simplify:  Simplified to (cbrt (* (- 14.0 (* x -9.333333)) (* (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))))))
* * * * [misc]progress:  [ 20 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))))) (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333)))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (pow x 3) (pow x 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (pow x 3) (pow x 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (390 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))))
* [exit]simplify:  Simplified to (cbrt (* (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))))
* * * * [misc]progress:  [ 21 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ 14.0 (* x -9.333333)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))) (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ 14.0 (* x -9.333333)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (248 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (pow x 3)) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (+ (* x -9.333333) 14.0) (pow x 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (pow x 3)) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (+ (* x -9.333333) 14.0) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (383 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))))
* * * * [misc]progress:  [ 22 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ 14.0 (* x -9.333333)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))))) (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (- 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ 14.0 (* x -9.333333)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (217 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* (* x -9.333333) (* x -9.333333)) (* (* x -9.333333) (pow x 3))) (* (pow x 3) (pow 14.0 3))) (* (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0)) (* (+ (* x -9.333333) 14.0) (pow x 3)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* (* x -9.333333) (* x -9.333333)) (* (* x -9.333333) (pow x 3))) (* (pow x 3) (pow 14.0 3))) (* (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0)) (* (+ (* x -9.333333) 14.0) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (- 14.0 (* x -9.333333))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* x -9.333333)) 14.0) (- 14.0 (* x -9.333333))) (* (- 14.0 (* x -9.333333)) (* (* x -9.333333) (* x -9.333333)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* x -9.333333)) 14.0) (- 14.0 (* x -9.333333))) (* (- 14.0 (* x -9.333333)) (* (* x -9.333333) (* x -9.333333)))))
* * * * [misc]progress:  [ 23 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ 14.0 (* x -9.333333))))) (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (234 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* x -9.333333) 14.0) (* (pow x 3) (pow x 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* x -9.333333) 14.0) (* (pow x 3) (pow x 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (383 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))))
* * * * [misc]progress:  [ 24 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ 14.0 (* x -9.333333))))) (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (- 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (266 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (+ (* x -9.333333) 14.0)) (* (- 14.0 (* x -9.333333)) (pow x 3))) (+ (* (pow x 3) (pow 14.0 3)) (* (* (pow x 3) (* x -9.333333)) (* (* x -9.333333) (* x -9.333333))))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (+ (* x -9.333333) 14.0)) (* (- 14.0 (* x -9.333333)) (pow x 3))) (+ (* (pow x 3) (pow 14.0 3)) (* (* (pow x 3) (* x -9.333333)) (* (* x -9.333333) (* x -9.333333))))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (- 14.0 (* x -9.333333))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* x -9.333333)) 14.0) (- 14.0 (* x -9.333333))) (* (- 14.0 (* x -9.333333)) (* (* x -9.333333) (* x -9.333333)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* x -9.333333)) 14.0) (- 14.0 (* x -9.333333))) (* (- 14.0 (* x -9.333333)) (* (* x -9.333333) (* x -9.333333)))))
* * * * [misc]progress:  [ 25 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))) (cbrt (* (- 14.0 (* x -9.333333)) (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (225 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (* (pow x 3) (pow x 3))) (- 14.0 (* x -9.333333))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (* (pow x 3) (pow x 3))) (- 14.0 (* x -9.333333))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* [enter]simplify:  Simplifying (cbrt (* (- 14.0 (* x -9.333333)) (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* 14.0 14.0) (* (- (* -9.333333 x) 14.0) (* -9.333333 x))) (+ (* 14.0 14.0) (* (- (* -9.333333 x) 14.0) (* -9.333333 x)))) (- 14.0 (* -9.333333 x))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* 14.0 14.0) (* (- (* -9.333333 x) 14.0) (* -9.333333 x))) (+ (* 14.0 14.0) (* (- (* -9.333333 x) 14.0) (* -9.333333 x)))) (- 14.0 (* -9.333333 x))))
* * * * [misc]progress:  [ 26 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))))) (cbrt (* (- 14.0 (* x -9.333333)) (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (- 14.0 (* x -9.333333)))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (- 14.0 (* x -9.333333))) (* (pow x 3) (pow x 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (+ (* x -9.333333) 14.0) (- 14.0 (* x -9.333333))))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (- 14.0 (* x -9.333333))) (* (pow x 3) (pow x 3))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (+ (* x -9.333333) 14.0) (- 14.0 (* x -9.333333))))))
* [enter]simplify:  Simplifying (cbrt (* (- 14.0 (* x -9.333333)) (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (- 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (99 enodes)
* * [misc]simplify:  iters left: 3 (382 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* 14.0 (- 14.0 (* -9.333333 x))) (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x)))) (* (* (* -9.333333 x) (* -9.333333 x)) (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* 14.0 (- 14.0 (* -9.333333 x))) (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x)))) (* (* (* -9.333333 x) (* -9.333333 x)) (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))))))
* * * * [misc]progress:  [ 27 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))) (cbrt (* (- 14.0 (* x -9.333333)) (* (- 14.0 (* x -9.333333)) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (245 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (pow x 3) (pow x 3))) (* (* (+ (* x -9.333333) 14.0) (- 14.0 (* x -9.333333))) (* (+ (* x -9.333333) 14.0) (- 14.0 (* x -9.333333))))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (* (pow x 3) (pow x 3))) (* (* (+ (* x -9.333333) 14.0) (- 14.0 (* x -9.333333))) (* (+ (* x -9.333333) 14.0) (- 14.0 (* x -9.333333))))))
* [enter]simplify:  Simplifying (cbrt (* (- 14.0 (* x -9.333333)) (* (- 14.0 (* x -9.333333)) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (* -9.333333 x) (* -9.333333 x)) (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x)))) (* (* 14.0 (- 14.0 (* -9.333333 x))) (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (* -9.333333 x) (* -9.333333 x)) (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x)))) (* (* 14.0 (- 14.0 (* -9.333333 x))) (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))))))
* * * * [misc]progress:  [ 28 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))))) (cbrt (* (- 14.0 (* x -9.333333)) (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333)))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (* (* (pow x 3) (pow x 3)) (+ (* x -9.333333) 14.0)) (- 14.0 (* x -9.333333)))))
* [exit]simplify:  Simplified to (cbrt (* (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (* (* (pow x 3) (pow x 3)) (+ (* x -9.333333) 14.0)) (- 14.0 (* x -9.333333)))))
* [enter]simplify:  Simplifying (cbrt (* (- 14.0 (* x -9.333333)) (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (121 enodes)
* * [misc]simplify:  iters left: 2 (497 enodes)
* [exit]simplify:  Simplified to (- 14.0 (* -9.333333 x))
* [exit]simplify:  Simplified to (- 14.0 (* -9.333333 x))
* * * * [misc]progress:  [ 29 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ 14.0 (* x -9.333333)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))) (cbrt (* (- 14.0 (* x -9.333333)) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ 14.0 (* x -9.333333)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (243 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (+ (* x -9.333333) 14.0)) (* (* (pow x 3) (pow x 3)) (- 14.0 (* x -9.333333)))) (+ (pow (* x -9.333333) 3) (pow 14.0 3))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (+ (* x -9.333333) 14.0)) (* (* (pow x 3) (pow x 3)) (- 14.0 (* x -9.333333)))) (+ (pow (* x -9.333333) 3) (pow 14.0 3))))
* [enter]simplify:  Simplifying (cbrt (* (- 14.0 (* x -9.333333)) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (391 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))) 14.0) (* (* (* -9.333333 x) (* -9.333333 x)) (- 14.0 (* -9.333333 x)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))) 14.0) (* (* (* -9.333333 x) (* -9.333333 x)) (- 14.0 (* -9.333333 x)))))
* * * * [misc]progress:  [ 30 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ 14.0 (* x -9.333333)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))))) (cbrt (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ 14.0 (* x -9.333333)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- 14.0 (* x -9.333333)) (* (+ (* x -9.333333) 14.0) (pow x 3))) (* (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0)) (* (+ (* x -9.333333) 14.0) (pow x 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (- 14.0 (* x -9.333333)) (* (+ (* x -9.333333) 14.0) (pow x 3))) (* (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0)) (* (+ (* x -9.333333) 14.0) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (163 enodes)
* * [misc]simplify:  iters left: 1 (366 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))))
* [exit]simplify:  Simplified to (cbrt (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))))
* * * * [misc]progress:  [ 31 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ 14.0 (* x -9.333333))))) (cbrt (* (- 14.0 (* x -9.333333)) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (232 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (* (pow x 3) (pow x 3)) (+ (* x -9.333333) 14.0)) (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0))) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (* (pow x 3) (pow x 3)) (+ (* x -9.333333) 14.0)) (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0))) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))
* [enter]simplify:  Simplifying (cbrt (* (- 14.0 (* x -9.333333)) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (391 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))) 14.0) (* (* (* -9.333333 x) (* -9.333333 x)) (- 14.0 (* -9.333333 x)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))) 14.0) (* (* (* -9.333333 x) (* -9.333333 x)) (- 14.0 (* -9.333333 x)))))
* * * * [misc]progress:  [ 32 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ 14.0 (* x -9.333333))))) (cbrt (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (201 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0)) (* (* (pow x 3) (pow x 3)) (+ (* x -9.333333) 14.0))) (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0)) (* (* (pow x 3) (pow x 3)) (+ (* x -9.333333) 14.0))) (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0))))
* [enter]simplify:  Simplifying (cbrt (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (163 enodes)
* * [misc]simplify:  iters left: 1 (366 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))))
* [exit]simplify:  Simplified to (cbrt (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))))
* * * * [misc]progress:  [ 33 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))) (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* -9.333333 x) 3)) (+ (pow 14.0 3) (pow (* -9.333333 x) 3))) (+ (* (* 14.0 (* x x)) (* (* x x) (* x x))) (* (* (* -9.333333 x) (* x x)) (* (* x x) (* x x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow 14.0 3) (pow (* -9.333333 x) 3)) (+ (pow 14.0 3) (pow (* -9.333333 x) 3))) (+ (* (* 14.0 (* x x)) (* (* x x) (* x x))) (* (* (* -9.333333 x) (* x x)) (* (* x x) (* x x))))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (383 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0))) (+ (* 14.0 14.0) (* (* x -9.333333) (- (* x -9.333333) 14.0)))))
* * * * [misc]progress:  [ 34 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))))) (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (- 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (206 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- (* 14.0 14.0) (* (* -9.333333 x) (* -9.333333 x))) (+ (pow 14.0 3) (pow (* -9.333333 x) 3))) (+ (* (* 14.0 (* x x)) (* (* x x) (* x x))) (* (* (* -9.333333 x) (* x x)) (* (* x x) (* x x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (- (* 14.0 14.0) (* (* -9.333333 x) (* -9.333333 x))) (+ (pow 14.0 3) (pow (* -9.333333 x) 3))) (+ (* (* 14.0 (* x x)) (* (* x x) (* x x))) (* (* (* -9.333333 x) (* x x)) (* (* x x) (* x x))))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))) (- 14.0 (* x -9.333333))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* x -9.333333)) 14.0) (- 14.0 (* x -9.333333))) (* (- 14.0 (* x -9.333333)) (* (* x -9.333333) (* x -9.333333)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* x -9.333333)) 14.0) (- 14.0 (* x -9.333333))) (* (- 14.0 (* x -9.333333)) (* (* x -9.333333) (* x -9.333333)))))
* * * * [misc]progress:  [ 35 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))) (cbrt (* (- 14.0 (* x -9.333333)) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (270 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* -9.333333 x) 3) (pow 14.0 3)) (- (* 14.0 14.0) (* (* -9.333333 x) (* -9.333333 x)))) (+ (* (* 14.0 (* x x)) (* (* x x) (* x x))) (* (* (* -9.333333 x) (* x x)) (* (* x x) (* x x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* -9.333333 x) 3) (pow 14.0 3)) (- (* 14.0 14.0) (* (* -9.333333 x) (* -9.333333 x)))) (+ (* (* 14.0 (* x x)) (* (* x x) (* x x))) (* (* (* -9.333333 x) (* x x)) (* (* x x) (* x x))))))
* [enter]simplify:  Simplifying (cbrt (* (- 14.0 (* x -9.333333)) (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (391 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))) 14.0) (* (* (* -9.333333 x) (* -9.333333 x)) (- 14.0 (* -9.333333 x)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))) 14.0) (* (* (* -9.333333 x) (* -9.333333 x)) (- 14.0 (* -9.333333 x)))))
* * * * [misc]progress:  [ 36 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))))) (cbrt (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))) (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (- 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (- 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))) (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (- 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* [enter]simplify:  Simplifying (cbrt (* (- 14.0 (* x -9.333333)) (- 14.0 (* x -9.333333))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (163 enodes)
* * [misc]simplify:  iters left: 1 (366 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))))
* [exit]simplify:  Simplified to (cbrt (* (- 14.0 (* -9.333333 x)) (- 14.0 (* -9.333333 x))))
* * * * [misc]progress:  [ 37 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))))) (cbrt (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (234 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (pow 14.0 3) (pow (* -9.333333 x) 3)) (* (* (+ 14.0 (* -9.333333 x)) (* x x)) (* (* (* x x) (* x x)) (+ 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (cbrt (* (+ (pow 14.0 3) (pow (* -9.333333 x) 3)) (* (* (+ 14.0 (* -9.333333 x)) (* x x)) (* (* (* x x) (* x x)) (+ 14.0 (* -9.333333 x))))))
* [enter]simplify:  Simplifying (cbrt (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* x -9.333333) 14.0) (* x -9.333333)) (* 14.0 14.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* x -9.333333) 14.0) (* x -9.333333)) (* 14.0 14.0)))
* * * * [misc]progress:  [ 38 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))))) (cbrt (- 14.0 (* x -9.333333)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))) (* (* (+ 14.0 (* -9.333333 x)) (* x x)) (* (* (* x x) (* x x)) (+ 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (- 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))) (* (* (+ 14.0 (* -9.333333 x)) (* x x)) (* (* (* x x) (* x x)) (+ 14.0 (* -9.333333 x))))))
* [enter]simplify:  Simplifying (cbrt (- 14.0 (* x -9.333333)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (- 14.0 (* -9.333333 x)))
* [exit]simplify:  Simplified to (cbrt (- 14.0 (* -9.333333 x)))
* * * * [misc]progress:  [ 39 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ 14.0 (* x -9.333333))))) (cbrt (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ (pow 14.0 3) (pow (* x -9.333333) 3)) (+ 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (224 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (pow 14.0 3) (pow (* -9.333333 x) 3)) (* (* (+ 14.0 (* -9.333333 x)) (* x x)) (* (* (* x x) (* x x)) (+ 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (cbrt (* (+ (pow 14.0 3) (pow (* -9.333333 x) 3)) (* (* (+ 14.0 (* -9.333333 x)) (* x x)) (* (* (* x x) (* x x)) (+ 14.0 (* -9.333333 x))))))
* [enter]simplify:  Simplifying (cbrt (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* x -9.333333) 14.0) (* x -9.333333)) (* 14.0 14.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* x -9.333333) 14.0) (* x -9.333333)) (* 14.0 14.0)))
* * * * [misc]progress:  [ 40 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ 14.0 (* x -9.333333))))) (cbrt (- 14.0 (* x -9.333333)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333))) (+ 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (222 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))) (* (* (+ 14.0 (* -9.333333 x)) (* x x)) (* (* (* x x) (* x x)) (+ 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (- 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))) (* (* (+ 14.0 (* -9.333333 x)) (* x x)) (* (* (* x x) (* x x)) (+ 14.0 (* -9.333333 x))))))
* [enter]simplify:  Simplifying (cbrt (- 14.0 (* x -9.333333)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (- 14.0 (* -9.333333 x)))
* [exit]simplify:  Simplified to (cbrt (- 14.0 (* -9.333333 x)))
* * * * [misc]progress:  [ 41 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (cbrt (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (pow 14.0 3) (pow (* x -9.333333) 3))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (218 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (+ (* x -9.333333) 14.0)) (* x x)) (* (* (* x x) (* x x)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (+ (* x -9.333333) 14.0)) (* x x)) (* (* (* x x) (* x x)) (+ (pow 14.0 3) (pow (* x -9.333333) 3)))))
* [enter]simplify:  Simplifying (cbrt (+ (* 14.0 14.0) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* x -9.333333) 14.0) (* x -9.333333)) (* 14.0 14.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* x -9.333333) 14.0) (* x -9.333333)) (* 14.0 14.0)))
* * * * [misc]progress:  [ 42 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (cbrt (- 14.0 (* x -9.333333)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (- (* 14.0 14.0) (* (* x -9.333333) (* x -9.333333)))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (180 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (+ (* x -9.333333) 14.0)) (* x x)) (* (* (* x x) (* x x)) (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x -9.333333) 14.0) (+ (* x -9.333333) 14.0)) (* x x)) (* (* (* x x) (* x x)) (* (- 14.0 (* x -9.333333)) (+ (* x -9.333333) 14.0)))))
* [enter]simplify:  Simplifying (cbrt (- 14.0 (* x -9.333333)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (- 14.0 (* -9.333333 x)))
* [exit]simplify:  Simplified to (cbrt (- 14.0 (* -9.333333 x)))
* * * * [misc]progress:  [ 43 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))) (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))) (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))) (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x)))))) (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x)))))) (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x)))))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* * * * [misc]progress:  [ 44 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))) (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))) (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))
* * * * [misc]progress:  [ 45 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (sqrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))) (sqrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* -9.333333 x))) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* * * * [misc]progress:  [ 46 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* 1 (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333)))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 47 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 48 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (exp (* (log (* x x)) 3)) 1) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 49 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (exp (log (* x x))) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (log (* x x)))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 50 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (exp (log (* x x))) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (log (* x x)))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 51 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 52 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (log (exp (* (log (* x x)) 3)))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (exp (* (log (* x x)) 3)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* * [misc]simplify:  iters left: 2 (110 enodes)
* * [misc]simplify:  iters left: 1 (156 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 53 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (log (exp (exp (* (log (* x x)) 3)))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (exp (* (log (* x x)) 3)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (76 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (exp (pow x (+ 3 3)))
* [exit]simplify:  Simplified to (exp (pow x (+ 3 3)))
* * * * [misc]progress:  [ 54 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (cbrt (exp (* (log (* x x)) 3))) (cbrt (exp (* (log (* x x)) 3)))) (cbrt (exp (* (log (* x x)) 3)))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (exp (* (log (* x x)) 3))) (cbrt (exp (* (log (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (63 enodes)
* * [misc]simplify:  iters left: 1 (80 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (exp (* (log (* x x)) 3)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (78 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 55 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (cbrt (* (* (exp (* (log (* x x)) 3)) (exp (* (log (* x x)) 3))) (exp (* (log (* x x)) 3)))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (exp (* (log (* x x)) 3)) (exp (* (log (* x x)) 3))) (exp (* (log (* x x)) 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (116 enodes)
* * [misc]simplify:  iters left: 2 (272 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (+ 3 (+ 3 3)))
* [exit]simplify:  Simplified to (pow (* x x) (+ 3 (+ 3 3)))
* * * * [misc]progress:  [ 56 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (sqrt (exp (* (log (* x x)) 3))) (sqrt (exp (* (log (* x x)) 3)))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (exp (* (log (* x x)) 3)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (63 enodes)
* * [misc]simplify:  iters left: 1 (80 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (exp (* (log (* x x)) 3)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (63 enodes)
* * [misc]simplify:  iters left: 1 (80 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 57 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* 1 (exp (* (log (* x x)) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 58 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (pow (* (log (* x x)) 3) 1)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 59 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (exp (log (* (log (* x x)) 3)))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* (log (* x x)) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* [exit]simplify:  Simplified to (log (* (log x) (+ 3 3)))
* [exit]simplify:  Simplified to (log (* (log x) (+ 3 3)))
* * * * [misc]progress:  [ 60 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (log (exp (* (log (* x x)) 3)))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (* (log (* x x)) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (77 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 61 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (* (cbrt (* (log (* x x)) 3)) (cbrt (* (log (* x x)) 3))) (cbrt (* (log (* x x)) 3)))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (log (* x x)) 3)) (cbrt (* (log (* x x)) 3)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (log x) (+ 3 3))) (cbrt (* (log x) (+ 3 3))))
* [exit]simplify:  Simplified to (* (cbrt (* (log x) (+ 3 3))) (cbrt (* (log x) (+ 3 3))))
* [enter]simplify:  Simplifying (cbrt (* (log (* x x)) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* [exit]simplify:  Simplified to (cbrt (* (log x) (+ 3 3)))
* [exit]simplify:  Simplified to (cbrt (* (log x) (+ 3 3)))
* * * * [misc]progress:  [ 62 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (cbrt (* (* (* (log (* x x)) 3) (* (log (* x x)) 3)) (* (log (* x x)) 3)))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (log (* x x)) 3) (* (log (* x x)) 3)) (* (log (* x x)) 3))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (156 enodes)
* [exit]simplify:  Simplified to (pow (* (log x) (+ 3 3)) 3)
* [exit]simplify:  Simplified to (pow (* (log x) (+ 3 3)) 3)
* * * * [misc]progress:  [ 63 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (sqrt (* (log (* x x)) 3)) (sqrt (* (log (* x x)) 3)))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (* (log (* x x)) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* [exit]simplify:  Simplified to (sqrt (* (log x) (+ 3 3)))
* [exit]simplify:  Simplified to (sqrt (* (log x) (+ 3 3)))
* [enter]simplify:  Simplifying (sqrt (* (log (* x x)) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* [exit]simplify:  Simplified to (sqrt (* (log x) (+ 3 3)))
* [exit]simplify:  Simplified to (sqrt (* (log x) (+ 3 3)))
* * * * [misc]progress:  [ 64 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* 1 (* (log (* x x)) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 65 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* 2 (* (log x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (5 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 66 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* 1 (* (log (* x x)) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 67 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (* (cbrt (log (* x x))) (cbrt (log (* x x)))) (* (cbrt (log (* x x))) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (log (* x x))) 3)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (log (* x x))) 3)
* [exit]simplify:  Simplified to (* (cbrt (log (* x x))) 3)
* * * * [misc]progress:  [ 68 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (sqrt (log (* x x))) (* (sqrt (log (* x x))) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (sqrt (log (* x x))) 3)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (sqrt (log (* x x))) 3)
* [exit]simplify:  Simplified to (* (sqrt (log (* x x))) 3)
* * * * [misc]progress:  [ 69 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* 1 (* (log (* x x)) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 70 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* 3 (log (* x x)))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 71 / 82 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (* 2 (log x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (* 2 (log x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (471 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (* (* (* x x) (* x x)) (* x x)) (pow (+ (* x -9.333333) 14.0) 3))) (+ (+ (* (* (* x x) (* x x)) (+ 2.916667 (* x -0.466667))) (+ (* x -8.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.038889 (* -0.001587 x))) (* 2.5e-05 (pow (* x x) (+ 3 1))))))
* * * * [misc]progress:  [ 72 / 82 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (- (* 2 (log (/ 1 x)))) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (- (* 2 (log (/ 1 x)))) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (128 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (exp (* (* 3 2) (log x))) (+ (* -0.001587 x) 0.038889)) (* (pow (* x x) 3) (* (* x 2.5e-05) x))) (cbrt (* (* (+ (* -9.333333 x) 14.0) (+ (* -9.333333 x) 14.0)) (* (+ (* -9.333333 x) 14.0) (pow (* x x) 3))))) (+ (+ (* x -8.0) 1.0) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667))))
* * * * [misc]progress:  [ 73 / 82 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (- (* 2 (log (/ -1 x)))) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (- (* 2 (log (/ -1 x)))) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (125 enodes)
* * [misc]simplify:  iters left: 4 (496 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (/ 1 (pow (/ -1 x) (* 2 3))) (+ (* -0.001587 x) 0.038889)) (+ (* (pow (* x x) 3) (* (* x x) 2.5e-05)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)))) (cbrt (* (* (+ (* -9.333333 x) 14.0) (+ (* -9.333333 x) 14.0)) (* (+ (* -9.333333 x) 14.0) (pow (* x x) 3))))) (+ (* x -8.0) 1.0))
* * * * [misc]progress:  [ 74 / 82 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (+ (* 0.6666666190476199 (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (pow x 2))) (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0))))) (+ (* 5019690.308117339 (/ (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (pow x 2)) (pow 2744.0 2))) (* 0.6666666428571428 (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) x)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (+ (* 0.6666666190476199 (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (pow x 2))) (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0))))) (+ (* 5019690.308117339 (/ (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) (pow x 2)) (pow 2744.0 2))) (* 0.6666666428571428 (* (exp (* 1/3 (+ (* 6 (log x)) (log 2744.0)))) x)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (53 enodes)
* * [misc]simplify:  iters left: 5 (141 enodes)
* * [misc]simplify:  iters left: 4 (443 enodes)
* [exit]simplify:  Simplified to (- (- (* (+ (* 0.6666666190476199 (* x x)) 1) (* (pow 2744.0 1/3) (pow x (* 6 1/3)))) (/ (* (pow x (* 6 1/3)) (* (pow 2744.0 1/3) 5019690.308117339)) (* (/ 2744.0 x) (/ 2744.0 x)))) (- (- (* (* x 0.6666666428571428) (* (pow 2744.0 1/3) (pow x (* 6 1/3)))) (+ (+ 1.0 (* x -8.0)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))))) (* (* (pow x 3) (pow x 3)) (+ (* (* 2.5e-05 x) x) (+ (* x -0.001587) 0.038889)))))
* * * * [misc]progress:  [ 75 / 82 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (+ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) (* 3.3750002410714424 (/ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) (pow x 2)))) (+ (* 2230973.310919128 (/ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) (* (pow -813.0369499259289 2) (pow x 2)))) (* 1.5000000535714308 (/ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) x)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (+ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) (* 3.3750002410714424 (/ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) (pow x 2)))) (+ (* 2230973.310919128 (/ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) (* (pow -813.0369499259289 2) (pow x 2)))) (* 1.5000000535714308 (/ (exp (* 1/3 (- (log (* -813.0369499259289 (pow x 6))) (* 3 (log (/ 1 x)))))) x)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (58 enodes)
* * [misc]simplify:  iters left: 5 (150 enodes)
* * [misc]simplify:  iters left: 4 (491 enodes)
* [exit]simplify:  Simplified to (- (+ (pow (exp 1/3) (+ (+ (* 6 (log x)) (log -813.0369499259289)) (* 3 (log x)))) (* (/ (pow (exp 1/3) (+ (+ (* 6 (log x)) (log -813.0369499259289)) (* 3 (log x)))) x) (- (/ 3.3750002410714424 x) 1.5000000535714308))) (- (* (/ 2230973.310919128 (* (* x x) (* -813.0369499259289 -813.0369499259289))) (pow (exp 1/3) (+ (+ (* 6 (log x)) (log -813.0369499259289)) (* 3 (log x))))) (+ (+ (+ (* -8.0 x) 1.0) (* (+ 2.916667 (* x -0.466667)) (* (* x x) (* x x)))) (* (* (pow x 3) (pow x 3)) (+ (+ (* x -0.001587) 0.038889) (* (* 2.5e-05 x) x))))))
* * * * [misc]progress:  [ 76 / 82 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (+ (* 3.3750002410714424 (/ (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x)))))) (pow x 2))) (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x))))))) (+ (* 2230973.310919128 (/ (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x)))))) (* (pow 813.0369499259289 2) (pow x 2)))) (* 1.5000000535714308 (/ (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x)))))) x)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (+ (* 3.3750002410714424 (/ (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x)))))) (pow x 2))) (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x))))))) (+ (* 2230973.310919128 (/ (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x)))))) (* (pow 813.0369499259289 2) (pow x 2)))) (* 1.5000000535714308 (/ (exp (* 1/3 (- (log (* 813.0369499259289 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))) (* 3 (log (/ -1 x)))))) x)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (61 enodes)
* * [misc]simplify:  iters left: 5 (155 enodes)
* [exit]simplify:  Simplified to (+ (- (+ (/ (* (pow (exp 1/3) (- (log (* (* (pow (exp 3) (+ (- (log -1) (log -1)) (log x))) (pow (exp 3) (+ (- (log -1) (log -1)) (log x)))) 813.0369499259289)) (* (log (/ -1 x)) 3))) 3.3750002410714424) (* x x)) (pow (exp 1/3) (- (log (* (* (pow (exp 3) (+ (- (log -1) (log -1)) (log x))) (pow (exp 3) (+ (- (log -1) (log -1)) (log x)))) 813.0369499259289)) (* (log (/ -1 x)) 3)))) (+ (/ 1.5000000535714308 (/ x (pow (exp 1/3) (- (log (* (* (pow (exp 3) (+ (- (log -1) (log -1)) (log x))) (pow (exp 3) (+ (- (log -1) (log -1)) (log x)))) 813.0369499259289)) (* (log (/ -1 x)) 3))))) (* (/ 2230973.310919128 (* 813.0369499259289 813.0369499259289)) (/ (pow (exp 1/3) (- (log (* (* (pow (exp 3) (+ (- (log -1) (log -1)) (log x))) (pow (exp 3) (+ (- (log -1) (log -1)) (log x)))) 813.0369499259289)) (* (log (/ -1 x)) 3))) (* x x))))) (+ (+ (* (+ (* -0.466667 x) 2.916667) (* (* x x) (* x x))) (+ (* x -8.0) 1.0)) (* (* (pow x 3) (pow x 3)) (+ (* x (* x 2.5e-05)) (+ (* x -0.001587) 0.038889)))))
* * * * [misc]progress:  [ 77 / 82 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x 6) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x 6) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (106 enodes)
* * [misc]simplify:  iters left: 4 (447 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (* (+ 14.0 (* -9.333333 x)) (pow (* x x) 3)) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))) (+ (+ (* (pow (* x x) 3) (* (* x x) 2.5e-05)) (* (pow x 6) (+ 0.038889 (* -0.001587 x)))) (+ (+ (* x -8.0) 1.0) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))))
* * * * [misc]progress:  [ 78 / 82 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ 1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ 1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (110 enodes)
* * [misc]simplify:  iters left: 4 (450 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow (/ 1 x) -6) (+ 0.038889 (* x -0.001587))) (* (pow (* x x) (+ 1 3)) 2.5e-05)) (+ (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (+ (* x -8.0) 1.0))) (cbrt (* (* (+ 14.0 (* -9.333333 x)) (pow (* x x) 3)) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* * * * [misc]progress:  [ 79 / 82 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ -1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ -1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (449 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow (/ -1 x) -6) (+ 0.038889 (* x -0.001587))) (* (pow (* x x) (+ 1 3)) 2.5e-05)) (+ (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (+ (* x -8.0) 1.0))) (cbrt (* (* (+ 14.0 (* -9.333333 x)) (pow (* x x) 3)) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* * * * [misc]progress:  [ 80 / 82 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* 6 (log x))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* 6 (log x))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (111 enodes)
* * [misc]simplify:  iters left: 4 (453 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow x 6) (+ 0.038889 (* x -0.001587))) (* 2.5e-05 (pow (* x x) (+ 1 3)))) (+ (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (+ (* x -8.0) 1.0))) (cbrt (* (* (+ 14.0 (* -9.333333 x)) (pow (* x x) 3)) (* (+ 14.0 (* -9.333333 x)) (+ 14.0 (* -9.333333 x))))))
* * * * [misc]progress:  [ 81 / 82 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* -6 (log (/ 1 x)))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* -6 (log (/ 1 x)))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (119 enodes)
* * [misc]simplify:  iters left: 4 (465 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow (* x x) 3) (* (* x x) 2.5e-05)) (* (+ (* -0.001587 x) 0.038889) (pow (/ 1 x) -6))) (+ (+ (* -8.0 x) 1.0) (* (+ 2.916667 (* x -0.466667)) (* (* x x) (* x x))))) (cbrt (* (* (+ (* x -9.333333) 14.0) (+ (* x -9.333333) 14.0)) (* (+ (* x -9.333333) 14.0) (pow (* x x) 3)))))
* * * * [misc]progress:  [ 82 / 82 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* -6 (log (/ -1 x)))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* -6 (log (/ -1 x)))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (116 enodes)
* * [misc]simplify:  iters left: 4 (460 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (* (+ (* x -9.333333) 14.0) (+ (* x -9.333333) 14.0)) (* (+ (* x -9.333333) 14.0) (pow (* x x) 3)))) (+ (+ (+ (* -8.0 x) 1.0) (* (+ 2.916667 (* x -0.466667)) (* (* x x) (* x x)))) (+ (* (pow (* x x) 3) (* (* x x) 2.5e-05)) (* (+ (* -0.001587 x) 0.038889) (pow (/ -1 x) -6)))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 1 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1 2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (+ (* -9.333333 x) 14.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (+ (* -9.333333 x) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -9.333333 x) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* -9.333333 x) in x
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (+ (* -9.333333 x) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -9.333333 x) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* -9.333333 x) in x
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -9.333333 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 14.0) into 14.0
* [misc]backup-simplify:  Simplify (* 0 14.0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 1) (* 0 0)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (- 9.333333) 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 (- 9.333333)) (* 0 14.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 (- 9.333333)) (* 1 14.0))) into 14.0
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 (- 9.333333)) (* 0 14.0)))) into (- 9.333333)
* [misc]backup-simplify:  Simplify (- 9.333333) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 9.333333)) (* 0 14.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 9.333333)) (* 0 14.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 9.333333)) (* 0 14.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 9.333333)) (* 0 14.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 9.333333)) (* 0 14.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 9.333333)) (* 0 14.0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 9.333333) (pow x 3)) (* 14.0 (pow x 2))) into (- (* 14.0 (pow x 2)) (* 9.333333 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (+ (* -9.333333 (/ 1 x)) 14.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (+ (* -9.333333 (/ 1 x)) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -9.333333 (/ 1 x)) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* -9.333333 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (+ (* -9.333333 (/ 1 x)) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -9.333333 (/ 1 x)) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* -9.333333 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -9.333333 1) into -9.333333
* [misc]backup-simplify:  Simplify (+ -9.333333 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* 1 (- 9.333333)) into -9.333333
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 14.0) into 14.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 14.0) (* 0 (- 9.333333))) into 14.0
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 14.0) (* 0 (- 9.333333)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 14.0) (* 0 (- 9.333333))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 14.0) (* 0 (- 9.333333)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 14.0) (* 0 (- 9.333333))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 14.0) (* 0 (- 9.333333)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 14.0) (* 0 (- 9.333333))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 (pow (/ 1 (/ 1 x)) 2)) (* -9.333333 (pow (/ 1 (/ 1 x)) 3))) into (- (* 14.0 (pow x 2)) (* 9.333333 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -9.333333 (/ 1 (- x))) 14.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -9.333333 (/ 1 (- x))) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -9.333333 (/ 1 (- x))) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* -9.333333 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -9.333333 (/ 1 (- x))) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -9.333333 (/ 1 (- x))) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* -9.333333 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -9.333333 -1) into 9.333333
* [misc]backup-simplify:  Simplify (+ 9.333333 0) into 9.333333
* [misc]backup-simplify:  Simplify (* 1 9.333333) into 9.333333
* [misc]backup-simplify:  Simplify 9.333333 into 9.333333
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 14.0) into 14.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 14.0) (* 0 9.333333)) into 14.0
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 14.0) (* 0 9.333333))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 14.0) (* 0 9.333333)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 14.0) (* 0 9.333333))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 14.0) (* 0 9.333333)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 14.0) (* 0 9.333333))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 14.0) (* 0 9.333333)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 (pow (/ 1 (/ 1 (- x))) 2)) (* 9.333333 (pow (/ 1 (/ 1 (- x))) 3))) into (- (* 14.0 (pow x 2)) (* 9.333333 (pow x 3)))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* 2.5e-05 (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 2.5e-05 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 2.5e-05 in x
* [misc]backup-simplify:  Simplify 2.5e-05 into 2.5e-05
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 2.5e-05 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 2.5e-05 in x
* [misc]backup-simplify:  Simplify 2.5e-05 into 2.5e-05
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 2.5e-05 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5e-05 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 2.5e-05 1) (+ (* 0 0) (* 0 0))) into 2.5e-05
* [misc]backup-simplify:  Simplify 2.5e-05 into 2.5e-05
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5e-05 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5e-05 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5e-05 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5e-05 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5e-05 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5e-05 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 2.5e-05 (pow x 2)) into (* 2.5e-05 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 2.5e-05 (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 2.5e-05 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2.5e-05 in x
* [misc]backup-simplify:  Simplify 2.5e-05 into 2.5e-05
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 2.5e-05 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2.5e-05 in x
* [misc]backup-simplify:  Simplify 2.5e-05 into 2.5e-05
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 2.5e-05 1) into 2.5e-05
* [misc]backup-simplify:  Simplify 2.5e-05 into 2.5e-05
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5e-05 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5e-05 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5e-05 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5e-05 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5e-05 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5e-05 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 2.5e-05 (pow (/ 1 (/ 1 x)) 2)) into (* 2.5e-05 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 2.5e-05 (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 2.5e-05 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2.5e-05 in x
* [misc]backup-simplify:  Simplify 2.5e-05 into 2.5e-05
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 2.5e-05 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2.5e-05 in x
* [misc]backup-simplify:  Simplify 2.5e-05 into 2.5e-05
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 2.5e-05 1) into 2.5e-05
* [misc]backup-simplify:  Simplify 2.5e-05 into 2.5e-05
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5e-05 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5e-05 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5e-05 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5e-05 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5e-05 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5e-05 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 2.5e-05 (pow (/ 1 (/ 1 (- x))) 2)) into (* 2.5e-05 (pow x 2))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (pow (* (* x x) (+ (* -9.333333 x) 14.0)) 1) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (+ (* -9.333333 x) 14.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -9.333333) 14.0) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x -9.333333) 14.0) (* x x))
* * * * [misc]progress:  [ 2 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (pow (* (* x x) (+ (* -9.333333 x) 14.0)) 1) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 3 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (exp (+ (log (* x x)) (log (+ (* -9.333333 x) 14.0)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (+ (* -9.333333 x) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* -9.333333 x) 14.0)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ (* -9.333333 x) 14.0)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 4 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (exp (log (* (* x x) (+ (* -9.333333 x) 14.0)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* (* x x) (+ (* -9.333333 x) 14.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (77 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* [exit]simplify:  Simplified to (log (* (+ (* x -9.333333) 14.0) (* x x)))
* [exit]simplify:  Simplified to (log (* (+ (* x -9.333333) 14.0) (* x x)))
* * * * [misc]progress:  [ 5 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (log (exp (* (* x x) (+ (* -9.333333 x) 14.0)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (+ (* -9.333333 x) 14.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (132 enodes)
* * [misc]simplify:  iters left: 1 (134 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -9.333333) 14.0))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -9.333333) 14.0))
* * * * [misc]progress:  [ 6 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (+ (* -9.333333 x) 14.0) (+ (* -9.333333 x) 14.0)) (+ (* -9.333333 x) 14.0)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (+ (* -9.333333 x) 14.0) (+ (* -9.333333 x) 14.0)) (+ (* -9.333333 x) 14.0)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))
* * * * [misc]progress:  [ 7 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* (cbrt (* (* x x) (+ (* -9.333333 x) 14.0))) (cbrt (* (* x x) (+ (* -9.333333 x) 14.0)))) (cbrt (* (* x x) (+ (* -9.333333 x) 14.0)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (+ (* -9.333333 x) 14.0))) (cbrt (* (* x x) (+ (* -9.333333 x) 14.0))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (64 enodes)
* * [misc]simplify:  iters left: 2 (68 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x -9.333333) 14.0) (* x x))) (cbrt (* (+ (* x -9.333333) 14.0) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x -9.333333) 14.0) (* x x))) (cbrt (* (+ (* x -9.333333) 14.0) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (+ (* -9.333333 x) 14.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* x -9.333333) 14.0) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (+ (* x -9.333333) 14.0) (* x x)))
* * * * [misc]progress:  [ 8 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* x x) (+ (* -9.333333 x) 14.0))) (* (* x x) (+ (* -9.333333 x) 14.0)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* x x) (+ (* -9.333333 x) 14.0))) (* (* x x) (+ (* -9.333333 x) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (128 enodes)
* [exit]simplify:  Simplified to (pow (* (+ (* x -9.333333) 14.0) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (+ (* x -9.333333) 14.0) (* x x)) 3)
* * * * [misc]progress:  [ 9 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (sqrt (* (* x x) (+ (* -9.333333 x) 14.0))) (sqrt (* (* x x) (+ (* -9.333333 x) 14.0)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (+ (* -9.333333 x) 14.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* x -9.333333) 14.0) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (+ (* x -9.333333) 14.0) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (+ (* -9.333333 x) 14.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* x -9.333333) 14.0) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (+ (* x -9.333333) 14.0) (* x x)))
* * * * [misc]progress:  [ 10 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* 1 (* (* x x) (+ (* -9.333333 x) 14.0))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 11 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (+ (* (* x x) (* -9.333333 x)) (* (* x x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* -9.333333 x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x -9.333333) (* x x))
* [exit]simplify:  Simplified to (* (* x -9.333333) (* x x))
* [enter]simplify:  Simplifying (* (* x x) 14.0)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to (* x (* x 14.0))
* [exit]simplify:  Simplified to (* x (* x 14.0))
* * * * [misc]progress:  [ 12 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (+ (* (* -9.333333 x) (* x x)) (* 14.0 (* x x))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* -9.333333 x) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* [exit]simplify:  Simplified to (* (* -9.333333 x) (* x x))
* [exit]simplify:  Simplified to (* (* -9.333333 x) (* x x))
* [enter]simplify:  Simplifying (* 14.0 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* 14.0 (* x x))
* [exit]simplify:  Simplified to (* 14.0 (* x x))
* * * * [misc]progress:  [ 13 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* (* x x) (* (cbrt (+ (* -9.333333 x) 14.0)) (cbrt (+ (* -9.333333 x) 14.0)))) (cbrt (+ (* -9.333333 x) 14.0))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* (cbrt (+ (* -9.333333 x) 14.0)) (cbrt (+ (* -9.333333 x) 14.0))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* [exit]simplify:  Simplified to (* (* x (cbrt (+ (* x -9.333333) 14.0))) (* x (cbrt (+ (* x -9.333333) 14.0))))
* [exit]simplify:  Simplified to (* (* x (cbrt (+ (* x -9.333333) 14.0))) (* x (cbrt (+ (* x -9.333333) 14.0))))
* * * * [misc]progress:  [ 14 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* (* x x) (sqrt (+ (* -9.333333 x) 14.0))) (sqrt (+ (* -9.333333 x) 14.0))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (sqrt (+ (* -9.333333 x) 14.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* x -9.333333) 14.0)) (* x x))
* [exit]simplify:  Simplified to (* (sqrt (+ (* x -9.333333) 14.0)) (* x x))
* * * * [misc]progress:  [ 15 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* (* x x) 1) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) 1)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 16 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* x (* x (+ (* -9.333333 x) 14.0))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* x (+ (* -9.333333 x) 14.0))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* [exit]simplify:  Simplified to (* x (+ 14.0 (* x -9.333333)))
* [exit]simplify:  Simplified to (* x (+ 14.0 (* x -9.333333)))
* * * * [misc]progress:  [ 17 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (* (* x x) (+ (pow (* -9.333333 x) 3) (pow 14.0 3))) (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0)))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (+ (pow (* -9.333333 x) 3) (pow 14.0 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (219 enodes)
* * [misc]simplify:  iters left: 2 (326 enodes)
* * [misc]simplify:  iters left: 1 (360 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x -9.333333) (* x x)) (* (* x -9.333333) (* x -9.333333))) (* (pow 14.0 3) (* x x)))
* [exit]simplify:  Simplified to (+ (* (* (* x -9.333333) (* x x)) (* (* x -9.333333) (* x -9.333333))) (* (pow 14.0 3) (* x x)))
* * * * [misc]progress:  [ 18 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (/ (* (* x x) (- (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 14.0))) (- (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (- (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (168 enodes)
* * [misc]simplify:  iters left: 2 (486 enodes)
* [exit]simplify:  Simplified to (* (* x (- (* x -9.333333) 14.0)) (* (+ 14.0 (* x -9.333333)) x))
* [exit]simplify:  Simplified to (* (* x (- (* x -9.333333) 14.0)) (* (+ 14.0 (* x -9.333333)) x))
* * * * [misc]progress:  [ 19 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 20 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 21 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 22 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow x (* 2 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 23 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) (* 1 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 24 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (* (pow x 3) (pow x 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 25 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 26 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (pow (* x x) 3) 1) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 27 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (exp (log (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 28 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (log (exp (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 29 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 30 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 31 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (* (pow x 3) (pow x 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 32 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (* (* x x) (* (* x x) (* x x))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 33 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 34 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 35 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (* 1 (pow (* x x) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 36 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x (+ 2 2)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ 2 2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 2 2)
* [exit]simplify:  Simplified to (+ 2 2)
* * * * [misc]progress:  [ 37 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* x x) (+ 1 1)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 38 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* x x) 2) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 39 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* (* x x) (* x x)) 1) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 40 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* x x) 2) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 41 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* x x) (+ 1 1)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 42 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* (* x x) (* x x)) 1) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 43 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (exp (+ (log (* x x)) (log (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 44 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (exp (log (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* * * * [misc]progress:  [ 45 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (log (exp (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 46 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 47 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x)))) (cbrt (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 48 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (cbrt (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (153 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 49 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (sqrt (* (* x x) (* x x))) (sqrt (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 50 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* 1 (* (* x x) (* x x))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 51 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* (* x x) x) x) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) x)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 52 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* x (* x (* x x))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 53 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 54 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (pow (* 2.5e-05 (* x x)) 1)) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 55 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (exp (log (* 2.5e-05 (* x x))))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* 2.5e-05 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* 2.5e-05 (* x x)))
* [exit]simplify:  Simplified to (log (* 2.5e-05 (* x x)))
* * * * [misc]progress:  [ 56 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (log (exp (* 2.5e-05 (* x x))))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (* 2.5e-05 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp 2.5e-05) (* x x))
* [exit]simplify:  Simplified to (pow (exp 2.5e-05) (* x x))
* * * * [misc]progress:  [ 57 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* (* (cbrt (* 2.5e-05 (* x x))) (cbrt (* 2.5e-05 (* x x)))) (cbrt (* 2.5e-05 (* x x))))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* 2.5e-05 (* x x))) (cbrt (* 2.5e-05 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* 2.5e-05 (* x x))) (cbrt (* 2.5e-05 (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* 2.5e-05 (* x x))) (cbrt (* 2.5e-05 (* x x))))
* [enter]simplify:  Simplifying (cbrt (* 2.5e-05 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* 2.5e-05 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* 2.5e-05 (* x x)))
* * * * [misc]progress:  [ 58 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (cbrt (* (* (* 2.5e-05 (* x x)) (* 2.5e-05 (* x x))) (* 2.5e-05 (* x x))))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* 2.5e-05 (* x x)) (* 2.5e-05 (* x x))) (* 2.5e-05 (* x x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (270 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* 2.5e-05 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* 2.5e-05 (* x x)) 3)
* * * * [misc]progress:  [ 59 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* (sqrt (* 2.5e-05 (* x x))) (sqrt (* 2.5e-05 (* x x))))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (* 2.5e-05 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 2.5e-05 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 2.5e-05 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* 2.5e-05 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 2.5e-05 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 2.5e-05 (* x x)))
* * * * [misc]progress:  [ 60 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 1 (* 2.5e-05 (* x x)))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 61 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* (* 2.5e-05 x) x)) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* 2.5e-05 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2.5e-05 x)
* [exit]simplify:  Simplified to (* 2.5e-05 x)
* * * * [misc]progress:  [ 62 / 74 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* (* x x) 2.5e-05)) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 63 / 74 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (* 14.0 (pow x 2)) (* 9.333333 (pow x 3))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (* 14.0 (pow x 2)) (* 9.333333 (pow x 3))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (95 enodes)
* * [misc]simplify:  iters left: 4 (316 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) (- 14.0 (* x 9.333333))) (* x -8.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* x -0.466667)))) (+ (+ 1.0 (* (* (* x -0.001587) (* x x)) (* (* x x) (* x x)))) (+ (* (* (* x x) 0.038889) (* (* x x) (* x x))) (* (* (* 2.5e-05 x) x) (pow x (* 3 2))))))
* * * * [misc]progress:  [ 64 / 74 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (* 14.0 (pow x 2)) (* 9.333333 (pow x 3))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (* 14.0 (pow x 2)) (* 9.333333 (pow x 3))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (95 enodes)
* * [misc]simplify:  iters left: 4 (316 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) (- 14.0 (* x 9.333333))) (* x -8.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* x -0.466667)))) (+ (+ 1.0 (* (* (* x -0.001587) (* x x)) (* (* x x) (* x x)))) (+ (* (* (* x x) 0.038889) (* (* x x) (* x x))) (* (* (* 2.5e-05 x) x) (pow x (* 3 2))))))
* * * * [misc]progress:  [ 65 / 74 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (* 14.0 (pow x 2)) (* 9.333333 (pow x 3))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (- (* 14.0 (pow x 2)) (* 9.333333 (pow x 3))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (95 enodes)
* * [misc]simplify:  iters left: 4 (316 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) (- 14.0 (* x 9.333333))) (* x -8.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* x -0.466667)))) (+ (+ 1.0 (* (* (* x -0.001587) (* x x)) (* (* x x) (* x x)))) (+ (* (* (* x x) 0.038889) (* (* x x) (* x x))) (* (* (* 2.5e-05 x) x) (pow x (* 3 2))))))
* * * * [misc]progress:  [ 66 / 74 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow x 6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow x 6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (91 enodes)
* * [misc]simplify:  iters left: 4 (286 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ 1.0 (* -8.0 x)) (* (pow x 6) (+ 0.038889 (* x -0.001587)))) (+ (* (* (* 2.5e-05 x) x) (pow x (* 3 2))) (+ (* (* x x) (+ (* x -9.333333) 14.0)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* * * * [misc]progress:  [ 67 / 74 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (/ 1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (/ 1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (95 enodes)
* * [misc]simplify:  iters left: 4 (285 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* -0.001587 x) 0.038889) (pow (/ 1 x) -6)) (+ (+ (* (* (* 2.5e-05 x) x) (pow x (* 3 2))) (+ (* x -8.0) 1.0)) (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)))))
* * * * [misc]progress:  [ 68 / 74 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (/ -1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (/ -1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (93 enodes)
* * [misc]simplify:  iters left: 4 (283 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* x -9.333333) 14.0) (* x x)) (+ (* x -8.0) 1.0)) (+ (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (* (+ (* -0.001587 x) 0.038889) (pow (/ -1 x) -6)))) (* (* (* 2.5e-05 x) x) (pow x (* 3 2))))
* * * * [misc]progress:  [ 69 / 74 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (283 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ 1.0 (* -8.0 x)) (* (* (* x x) (* x x)) (* (* x -0.001587) (* x x)))) (+ (* (* (* x x) (* x x)) (* (* x x) 0.038889)) (* (* x (* 2.5e-05 x)) (pow x (* 3 2))))) (+ (* (+ 14.0 (* -9.333333 x)) (* x x)) (* (pow x 4) (+ (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 70 / 74 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (283 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ 1.0 (* -8.0 x)) (* (* (* x x) (* x x)) (* (* x -0.001587) (* x x)))) (+ (* (* (* x x) (* x x)) (* (* x x) 0.038889)) (* (* x (* 2.5e-05 x)) (pow x (* 3 2))))) (+ (* (+ 14.0 (* -9.333333 x)) (* x x)) (* (pow x 4) (+ (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 71 / 74 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (283 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ 1.0 (* -8.0 x)) (* (* (* x x) (* x x)) (* (* x -0.001587) (* x x)))) (+ (* (* (* x x) (* x x)) (* (* x x) 0.038889)) (* (* x (* 2.5e-05 x)) (pow x (* 3 2))))) (+ (* (+ 14.0 (* -9.333333 x)) (* x x)) (* (pow x 4) (+ (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 72 / 74 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (pow x 2))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (pow x 2))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (96 enodes)
* * [misc]simplify:  iters left: 4 (311 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* x x) (* x x)) (* (* x x) (* x -0.001587))) (* (* (* 2.5e-05 x) x) (pow x (* 3 2)))) (+ (* (* 0.038889 (* x x)) (* (* x x) (* x x))) (* (* x x) (+ (* x -9.333333) 14.0)))) (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))))
* * * * [misc]progress:  [ 73 / 74 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (pow x 2))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (pow x 2))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (96 enodes)
* * [misc]simplify:  iters left: 4 (311 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* x x) (* x x)) (* (* x x) (* x -0.001587))) (* (* (* 2.5e-05 x) x) (pow x (* 3 2)))) (+ (* (* 0.038889 (* x x)) (* (* x x) (* x x))) (* (* x x) (+ (* x -9.333333) 14.0)))) (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))))
* * * * [misc]progress:  [ 74 / 74 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (pow x 2))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (pow x 2))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (96 enodes)
* * [misc]simplify:  iters left: 4 (311 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* x x) (* x x)) (* (* x x) (* x -0.001587))) (* (* (* 2.5e-05 x) x) (pow x (* 3 2)))) (+ (* (* 0.038889 (* x x)) (* (* x x) (* x x))) (* (* x x) (+ (* x -9.333333) 14.0)))) (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-event (Î» (x) (+ (+ (+ (+ (+ (+ (+ (+ 1.0 (* -8.0 x)) (* 14.0 (* x x))) (* -9.333333 (* (* x x) x))) (* 2.916667 (* (* (* x x) x) x))) (* -0.466667 (* (* (* (* x x) x) x) x))) (* 0.038889 (* (* (* (* (* x x) x) x) x) x))) (* -0.001587 (* (* (* (* (* (* x x) x) x) x) x) x))) (* 2.5e-05 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))> #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))> #<alt-delta (Î» (x) (+ (+ (* (+ (* (* x x) 2.5e-05) (+ (* -0.001587 x) 0.038889)) (pow (* x x) 3)) (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (+ 1.0 (* x -8.0)))) (* (+ (* x -0.466667) 2.916667) (pow x 4))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (exp (log (* (log (* x x)) 3)))) (+ (* -0.001587 x) 0.038889))) (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 14.0 (* x -9.333333))) (* (+ 14.0 (* x -9.333333)) (+ 14.0 (* x -9.333333))))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ (+ (+ (+ (+ (+ (+ 1.0 (* -8.0 x)) (* 14.0 (* x x))) (* -9.333333 (* (* x x) x))) (* 2.916667 (* (* (* x x) x) x))) (* -0.466667 (* (* (* (* x x) x) x) x))) (* 0.038889 (* (* (* (* (* x x) x) x) x) x))) (* -0.001587 (* (* (* (* (* (* x x) x) x) x) x) x))) (* 2.5e-05 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>)
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
