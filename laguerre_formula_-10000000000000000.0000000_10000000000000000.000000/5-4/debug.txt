* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (253 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* x 3.0) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 3.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 3.0)) into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 3.0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 1) (* 0 0))) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow x 2)) into (* 3.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 3.0) into 3.0
* [misc]backup-simplify:  Simplify (* 3.0 1) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow (/ 1 (/ 1 x)) 2)) into (* 3.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 3.0) into -3.0
* [misc]backup-simplify:  Simplify (* -3.0 -1) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* 3.0 (pow x 2))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (pow x 3) (+ (* 0.041667 x) -0.666667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (* 1 (- 0.666667)) into -0.666667
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (+ (* 0.041667 1) (* 0 0)) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (+ (* 1 0.041667) (* 0 (- 0.666667))) into 0.041667
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0.041667) (* 0 (- 0.666667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0.041667) (* 0 (- 0.666667))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.041667) (* 0 (- 0.666667)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.041667) (* 0 (- 0.666667))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.041667) (* 0 (- 0.666667)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.041667) (* 0 (- 0.666667))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 (pow x 4)) (* -0.666667 (pow x 3))) into (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (* (pow x -3) 0.041667) into (/ 0.041667 (pow x 3))
* [misc]backup-simplify:  Simplify (/ 0.041667 (pow x 3)) into (/ 0.041667 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) (- 0.666667)) (* 0 0.041667)) into (- (* 0.666667 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (- (* 0.666667 (/ 1 (pow x 3)))) into (- (* 0.666667 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 (- 0.666667)) (* 0 0.041667))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 0.041667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 0.041667))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 0.041667)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 0.041667))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 0.041667)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (* 0.666667 (/ 1 (pow (/ 1 x) 3)))) (* (/ 0.041667 (pow (/ 1 x) 3)) (/ 1 (/ 1 x)))) into (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (- 0.041667)) into (* -0.041667 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* -0.041667 (exp (* 3 (- (log -1) (log x))))) into (* -0.041667 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) (- 0.666667)) (* 0 (- 0.041667))) into (- (* 0.666667 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- (* 0.666667 (exp (* 3 (- (log -1) (log x)))))) into (- (* 0.666667 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (* 0.666667 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (* (* -0.041667 (exp (* 3 (- (log -1) (log (/ 1 (- x))))))) (/ 1 (/ 1 (- x))))) into (- (* 0.041667 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 0.666667 (exp (* 3 (- (log -1) (log (/ -1 x)))))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* x -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -4.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* x -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -4.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* 0 3.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -4.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 3.0)) into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 3.0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (- 4.0) 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 1) (* 0 0))) into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -4.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (+ (* 3.0 (pow x 2)) (+ (* (- 4.0) x) 1.0)) into (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -4.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -4.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* 1 3.0) into 3.0
* [misc]backup-simplify:  Simplify (* 3.0 1) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (* 1 -4.0) into -4.0
* [misc]backup-simplify:  Simplify (+ -4.0 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -4.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 4.0) (/ 1 (/ 1 x))) (* 3.0 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -4.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -4.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* -1 3.0) into -3.0
* [misc]backup-simplify:  Simplify (* -3.0 -1) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (* -1 -4.0) into 4.0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify (+ 0 4.0) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -4.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 4.0 (/ 1 (/ 1 (- x)))) (* 3.0 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- 0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (+ (* 0.041667 1) (* 0 0)) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 x) (- 0.666667)) into (- (* 0.041667 x) 0.666667)
* [misc]approximate:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- 0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- 0.666667) (* 0.041667 (/ 1 (/ 1 x)))) into (- (* 0.041667 x) 0.666667)
* [misc]approximate:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (- 0.041667) into (- 0.041667)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- 0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- 0.666667) (* (- 0.041667) (/ 1 (/ 1 (- x))))) into (- (* 0.041667 x) 0.666667)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (pow (* (* x 3.0) x) 1) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 2 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (exp (log (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* [exit]simplify:  Simplified to (log (* x (* x 3.0)))
* [exit]simplify:  Simplified to (log (* x (* x 3.0)))
* * * * [misc]progress:  [ 3 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (log (exp (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* [exit]simplify:  Simplified to (exp (* x (* x 3.0)))
* [exit]simplify:  Simplified to (exp (* x (* x 3.0)))
* * * * [misc]progress:  [ 4 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* (cbrt (* (* x 3.0) x)) (cbrt (* (* x 3.0) x))) (cbrt (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x 3.0) x)) (cbrt (* (* x 3.0) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 3.0))) (cbrt (* x (* x 3.0))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 3.0))) (cbrt (* x (* x 3.0))))
* [enter]simplify:  Simplifying (cbrt (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (* x 3.0)))
* [exit]simplify:  Simplified to (cbrt (* x (* x 3.0)))
* * * * [misc]progress:  [ 5 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (cbrt (* (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (* x 3.0) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (335 enodes)
* [exit]simplify:  Simplified to (pow (* x (* x 3.0)) 3)
* [exit]simplify:  Simplified to (pow (* x (* x 3.0)) 3)
* * * * [misc]progress:  [ 6 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (sqrt (* (* x 3.0) x)) (sqrt (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* [enter]simplify:  Simplifying (sqrt (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* * * * [misc]progress:  [ 7 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* 1 (* (* x 3.0) x)) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 8 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (* 3.0 x)) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* 3.0 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 3.0 x)
* [exit]simplify:  Simplified to (* 3.0 x)
* * * * [misc]progress:  [ 9 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (* x 3.0)) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 10 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (pow (* (pow x 3) (+ (* 0.041667 x) -0.666667)) 1) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 11 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (+ (* (log x) 3) (log (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (log (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (+ (log (+ -0.666667 (* x 0.041667))) (* 3 (log x)))
* [exit]simplify:  Simplified to (+ (log (+ -0.666667 (* x 0.041667))) (* 3 (log x)))
* * * * [misc]progress:  [ 12 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (+ (log (pow x 3)) (log (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (log (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* [exit]simplify:  Simplified to (+ (log (+ -0.666667 (* x 0.041667))) (* (log x) 3))
* [exit]simplify:  Simplified to (+ (log (+ -0.666667 (* x 0.041667))) (* (log x) 3))
* * * * [misc]progress:  [ 13 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (log (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (140 enodes)
* * [misc]simplify:  iters left: 1 (142 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (+ (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 14 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (exp (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (141 enodes)
* * [misc]simplify:  iters left: 2 (199 enodes)
* * [misc]simplify:  iters left: 1 (206 enodes)
* [exit]simplify:  Simplified to (pow (exp (pow x 3)) (+ (* 0.041667 x) -0.666667))
* [exit]simplify:  Simplified to (pow (exp (pow x 3)) (+ (* 0.041667 x) -0.666667))
* * * * [misc]progress:  [ 15 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)) (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))
* [exit]simplify:  Simplified to (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))
* * * * [misc]progress:  [ 16 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (100 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* [enter]simplify:  Simplifying (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 17 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (+ (* 0.041667 x) -0.666667)) 3)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (+ (* 0.041667 x) -0.666667)) 3)
* * * * [misc]progress:  [ 18 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 19 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 1 (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 20 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x 3) (* 0.041667 x)) (* (pow x 3) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* 0.041667 x))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (39 enodes)
* [exit]simplify:  Simplified to (* (* 0.041667 x) (pow x 3))
* [exit]simplify:  Simplified to (* (* 0.041667 x) (pow x 3))
* [enter]simplify:  Simplifying (* (pow x 3) -0.666667)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* -0.666667 x) (* x x))
* [exit]simplify:  Simplified to (* (* -0.666667 x) (* x x))
* * * * [misc]progress:  [ 21 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* 0.041667 x) (pow x 3)) (* -0.666667 (pow x 3))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* 0.041667 x) (pow x 3))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (39 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* 0.041667 x))
* [exit]simplify:  Simplified to (* (pow x 3) (* 0.041667 x))
* [enter]simplify:  Simplifying (* -0.666667 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* -0.666667 x) (* x x))
* [exit]simplify:  Simplified to (* (* -0.666667 x) (* x x))
* * * * [misc]progress:  [ 22 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x))
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x))
* * * * [misc]progress:  [ 23 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (sqrt (+ (* 0.041667 x) -0.666667))) (sqrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (sqrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* 0.041667 x) -0.666667)) (pow x 3))
* [exit]simplify:  Simplified to (* (sqrt (+ (* 0.041667 x) -0.666667)) (pow x 3))
* * * * [misc]progress:  [ 24 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) 1) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) 1)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 25 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* x x) (* x (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* x (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* [exit]simplify:  Simplified to (* x (+ -0.666667 (* x 0.041667)))
* [exit]simplify:  Simplified to (* x (+ -0.666667 (* x 0.041667)))
* * * * [misc]progress:  [ 26 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (pow x 3)) (cbrt (pow x 3))) (* (cbrt (pow x 3)) (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (pow x 3)) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* [exit]simplify:  Simplified to (* (+ -0.666667 (* x 0.041667)) x)
* [exit]simplify:  Simplified to (* (+ -0.666667 (* x 0.041667)) x)
* * * * [misc]progress:  [ 27 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* x (* (* x x) (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* [exit]simplify:  Simplified to (* (+ (* x 0.041667) -0.666667) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x 0.041667) -0.666667) (* x x))
* * * * [misc]progress:  [ 28 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (sqrt (pow x 3)) (* (sqrt (pow x 3)) (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (sqrt (pow x 3)) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow x 3)) (+ -0.666667 (* x 0.041667)))
* [exit]simplify:  Simplified to (* (sqrt (pow x 3)) (+ -0.666667 (* x 0.041667)))
* * * * [misc]progress:  [ 29 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 1 (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (102 enodes)
* * [misc]simplify:  iters left: 1 (104 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (+ (* 0.041667 x) -0.666667))
* [exit]simplify:  Simplified to (* (pow x 3) (+ (* 0.041667 x) -0.666667))
* * * * [misc]progress:  [ 30 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (pow x 3) (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (99 enodes)
* * [misc]simplify:  iters left: 3 (291 enodes)
* [exit]simplify:  Simplified to (* (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)) (pow x 3))
* [exit]simplify:  Simplified to (* (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)) (pow x 3))
* * * * [misc]progress:  [ 31 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (pow x 3) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (- (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (164 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 0.041667 x) -0.666667) x) (* (* x x) (- (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (* (* (+ (* 0.041667 x) -0.666667) x) (* (* x x) (- (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 32 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (+ (* 0.041667 x) -0.666667) (pow x 3)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 33 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (log (* (exp (* (* x 3.0) x)) (exp (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (exp (* (* x 3.0) x)) (exp (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (58 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* * [misc]simplify:  iters left: 1 (69 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ 1.0 (* -4.0 x)) (* (* x x) 3.0)))
* [exit]simplify:  Simplified to (exp (+ (+ 1.0 (* -4.0 x)) (* (* x x) 3.0)))
* * * * [misc]progress:  [ 34 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (pow (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) 1)))>
* * * * [misc]progress:  [ 35 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (exp (log (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (log (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* [exit]simplify:  Simplified to (log (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0))))
* [exit]simplify:  Simplified to (log (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0))))
* * * * [misc]progress:  [ 36 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (log (exp (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (exp (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* * [misc]simplify:  iters left: 2 (72 enodes)
* * [misc]simplify:  iters left: 1 (74 enodes)
* [exit]simplify:  Simplified to (exp (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))
* [exit]simplify:  Simplified to (exp (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))
* * * * [misc]progress:  [ 37 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (* (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))) (cbrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))) (cbrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* [enter]simplify:  Simplifying (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0))))
* * * * [misc]progress:  [ 38 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (cbrt (* (* (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (* (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* [exit]simplify:  Simplified to (pow (+ (* 3.0 (* x x)) (+ 1.0 (* x -4.0))) 3)
* [exit]simplify:  Simplified to (pow (+ (* 3.0 (* x x)) (+ 1.0 (* x -4.0))) 3)
* * * * [misc]progress:  [ 39 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0))))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0))))
* [enter]simplify:  Simplifying (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0))))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0))))
* * * * [misc]progress:  [ 40 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (/ (+ (pow (* (* x 3.0) x) 3) (pow (+ (* x -4.0) 1.0) 3)) (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))))>
* [enter]simplify:  Simplifying (+ (pow (* (* x 3.0) x) 3) (pow (+ (* x -4.0) 1.0) 3))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (240 enodes)
* [exit]simplify:  Simplified to (+ (pow (* x (* x 3.0)) 3) (pow (+ 1.0 (* x -4.0)) 3))
* [exit]simplify:  Simplified to (+ (pow (* x (* x 3.0)) 3) (pow (+ 1.0 (* x -4.0)) 3))
* [enter]simplify:  Simplifying (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* [exit]simplify:  Simplified to (+ (* (* x (* x 3.0)) (* x (* x 3.0))) (* (- (+ 1.0 (* -4.0 x)) (* x (* x 3.0))) (+ 1.0 (* -4.0 x))))
* [exit]simplify:  Simplified to (+ (* (* x (* x 3.0)) (* x (* x 3.0))) (* (- (+ 1.0 (* -4.0 x)) (* x (* x 3.0))) (+ 1.0 (* -4.0 x))))
* * * * [misc]progress:  [ 41 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* 1 (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))>
* * * * [misc]progress:  [ 42 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (/ (- (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0))) (- (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))>
* [enter]simplify:  Simplifying (- (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (258 enodes)
* [exit]simplify:  Simplified to (* (+ (+ 1.0 (* -4.0 x)) (* x (* x 3.0))) (- (* x (* x 3.0)) (+ 1.0 (* -4.0 x))))
* [exit]simplify:  Simplified to (* (+ (+ 1.0 (* -4.0 x)) (* x (* x 3.0))) (- (* x (* x 3.0)) (+ 1.0 (* -4.0 x))))
* [enter]simplify:  Simplifying (- (* (* x 3.0) x) (+ (* x -4.0) 1.0))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (78 enodes)
* [exit]simplify:  Simplified to (- (* (* x x) 3.0) (+ 1.0 (* x -4.0)))
* [exit]simplify:  Simplified to (- (* (* x x) 3.0) (+ 1.0 (* x -4.0)))
* * * * [misc]progress:  [ 43 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ (* (* x 3.0) x) (* x -4.0)) 1.0)))>
* [enter]simplify:  Simplifying (+ (* (* x 3.0) x) (* x -4.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* [exit]simplify:  Simplified to (* x (+ -4.0 (* x 3.0)))
* [exit]simplify:  Simplified to (* x (+ -4.0 (* x 3.0)))
* * * * [misc]progress:  [ 44 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ (* x -4.0) 1.0) (* (* x 3.0) x))))>
* * * * [misc]progress:  [ 45 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (pow (+ (* 0.041667 x) -0.666667) 1)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 46 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (exp (log (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (log (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (log (+ -0.666667 (* 0.041667 x)))
* [exit]simplify:  Simplified to (log (+ -0.666667 (* 0.041667 x)))
* * * * [misc]progress:  [ 47 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (log (exp (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (exp (+ -0.666667 (* 0.041667 x)))
* [exit]simplify:  Simplified to (exp (+ -0.666667 (* 0.041667 x)))
* * * * [misc]progress:  [ 48 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x))))
* [exit]simplify:  Simplified to (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x))))
* [enter]simplify:  Simplifying (cbrt (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (cbrt (+ -0.666667 (* 0.041667 x)))
* [exit]simplify:  Simplified to (cbrt (+ -0.666667 (* 0.041667 x)))
* * * * [misc]progress:  [ 49 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (cbrt (* (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)) (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (pow (+ -0.666667 (* 0.041667 x)) 3)
* [exit]simplify:  Simplified to (pow (+ -0.666667 (* 0.041667 x)) 3)
* * * * [misc]progress:  [ 50 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (* (sqrt (+ (* 0.041667 x) -0.666667)) (sqrt (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (+ -0.666667 (* 0.041667 x)))
* [exit]simplify:  Simplified to (sqrt (+ -0.666667 (* 0.041667 x)))
* [enter]simplify:  Simplifying (sqrt (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (+ -0.666667 (* 0.041667 x)))
* [exit]simplify:  Simplified to (sqrt (+ -0.666667 (* 0.041667 x)))
* * * * [misc]progress:  [ 51 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (/ (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)) (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (78 enodes)
* * [misc]simplify:  iters left: 1 (101 enodes)
* [exit]simplify:  Simplified to (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))
* [exit]simplify:  Simplified to (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))
* [enter]simplify:  Simplifying (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (150 enodes)
* * [misc]simplify:  iters left: 1 (217 enodes)
* [exit]simplify:  Simplified to (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667))
* [exit]simplify:  Simplified to (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667))
* * * * [misc]progress:  [ 52 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (* 1 (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 53 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (/ (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)) (- (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (92 enodes)
* * [misc]simplify:  iters left: 1 (195 enodes)
* [exit]simplify:  Simplified to (* (+ -0.666667 (* 0.041667 x)) (- (* 0.041667 x) -0.666667))
* [exit]simplify:  Simplified to (* (+ -0.666667 (* 0.041667 x)) (- (* 0.041667 x) -0.666667))
* [enter]simplify:  Simplifying (- (* 0.041667 x) -0.666667)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (- (* 0.041667 x) -0.666667)
* [exit]simplify:  Simplified to (- (* 0.041667 x) -0.666667)
* * * * [misc]progress:  [ 54 / 66 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ -0.666667 (* 0.041667 x))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 55 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (264 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ 1.0 (* -4.0 x)) (* (* x 3.0) x)))
* * * * [misc]progress:  [ 56 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (264 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ 1.0 (* -4.0 x)) (* (* x 3.0) x)))
* * * * [misc]progress:  [ 57 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (264 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ 1.0 (* -4.0 x)) (* (* x 3.0) x)))
* * * * [misc]progress:  [ 58 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (248 enodes)
* [exit]simplify:  Simplified to (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x)))
* * * * [misc]progress:  [ 59 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (248 enodes)
* [exit]simplify:  Simplified to (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x)))
* * * * [misc]progress:  [ 60 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (* 0.041667 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 0.666667 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (- (* 0.041667 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 0.666667 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (287 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ 1.0 (* x -4.0)) (* 3.0 (* x x))) (* (- (* 0.041667 x) 0.666667) (pow x 3)))
* * * * [misc]progress:  [ 61 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (304 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x 3.0) x) (- 1.0 (* 4.0 x))) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 62 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (304 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x 3.0) x) (- 1.0 (* 4.0 x))) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 63 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (304 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x 3.0) x) (- 1.0 (* 4.0 x))) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 64 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (- (* 0.041667 x) 0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (- (* 0.041667 x) 0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (185 enodes)
* * [misc]simplify:  iters left: 2 (478 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ 1.0 (* x -4.0)) (* (* x 3.0) x)) (* (pow x 3) (- (* 0.041667 x) 0.666667)))
* * * * [misc]progress:  [ 65 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (- (* 0.041667 x) 0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (- (* 0.041667 x) 0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (185 enodes)
* * [misc]simplify:  iters left: 2 (478 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ 1.0 (* x -4.0)) (* (* x 3.0) x)) (* (pow x 3) (- (* 0.041667 x) 0.666667)))
* * * * [misc]progress:  [ 66 / 66 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (- (* 0.041667 x) 0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (- (* 0.041667 x) 0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (185 enodes)
* * [misc]simplify:  iters left: 2 (478 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ 1.0 (* x -4.0)) (* (* x 3.0) x)) (* (pow x 3) (- (* 0.041667 x) 0.666667)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-event (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* x x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 3)) into (pow x 3)
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 3)) into (pow x 3)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (* -0.666667 (* (* x x) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -0.666667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -0.666667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.666667 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.666667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.666667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.666667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- 0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.666667 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.666667 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 0.666667) (pow x 3)) into (* -0.666667 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -0.666667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -0.666667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -0.666667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.666667 1) into -0.666667
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.666667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.666667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.666667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -0.666667 (pow (/ 1 (/ 1 x)) 3)) into (* -0.666667 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -0.666667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -0.666667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -0.666667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.666667 -1) into 0.666667
* [misc]backup-simplify:  Simplify 0.666667 into 0.666667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.666667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.666667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.666667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.666667 (pow (/ 1 (/ 1 (- x))) 3)) into (* -0.666667 (pow x 3))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* 3.0 (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 3.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 3.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 3.0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 3.0 1) (+ (* 0 0) (* 0 0))) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow x 2)) into (* 3.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 3.0 (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 3.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 3.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 3.0 1) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow (/ 1 (/ 1 x)) 2)) into (* 3.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 3.0 (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 3.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 3.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 3.0 1) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* 3.0 (pow x 2))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (pow x 3) x))))>
* * * * [misc]progress:  [ 2 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (pow x (+ 2 1)) x))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 3 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (pow (* (* x x) x) 1) x))))>
* * * * [misc]progress:  [ 4 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (exp (log (* (* x x) x))) x))))>
* [enter]simplify:  Simplifying (log (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 5 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (log (exp (* (* x x) x))) x))))>
* [enter]simplify:  Simplifying (exp (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 6 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x))) (cbrt (* (* x x) x))) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 7 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (cbrt (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))) x))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 8 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (sqrt (* (* x x) x)) (sqrt (* (* x x) x))) x))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 9 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* 1 (* (* x x) x)) x))))>
* * * * [misc]progress:  [ 10 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* x (* x x)) x))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 11 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* x (* x x)) x))))>
* * * * [misc]progress:  [ 12 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (pow x 3))) (* 0.041667 (* (* (* x x) x) x))))>
* * * * [misc]progress:  [ 13 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (pow x (+ 2 1)))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 14 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (pow (* (* x x) x) 1))) (* 0.041667 (* (* (* x x) x) x))))>
* * * * [misc]progress:  [ 15 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (exp (log (* (* x x) x))))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (log (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 16 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (log (exp (* (* x x) x))))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (exp (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 17 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x))) (cbrt (* (* x x) x))))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 18 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (cbrt (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 19 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (sqrt (* (* x x) x)) (sqrt (* (* x x) x))))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 20 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* 1 (* (* x x) x)))) (* 0.041667 (* (* (* x x) x) x))))>
* * * * [misc]progress:  [ 21 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* x (* x x)))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 22 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* x (* x x)))) (* 0.041667 (* (* (* x x) x) x))))>
* * * * [misc]progress:  [ 23 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (pow (* -0.666667 (* (* x x) x)) 1)) (* 0.041667 (* (* (* x x) x) x))))>
* * * * [misc]progress:  [ 24 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (exp (log (* -0.666667 (* (* x x) x))))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (log (* -0.666667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (* -0.666667 x)))
* [exit]simplify:  Simplified to (log (* (* x x) (* -0.666667 x)))
* * * * [misc]progress:  [ 25 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (log (exp (* -0.666667 (* (* x x) x))))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (exp (* -0.666667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (pow (exp -0.666667) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp -0.666667) (pow x 3))
* * * * [misc]progress:  [ 26 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* (* (cbrt (* -0.666667 (* (* x x) x))) (cbrt (* -0.666667 (* (* x x) x)))) (cbrt (* -0.666667 (* (* x x) x))))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* -0.666667 (* (* x x) x))) (cbrt (* -0.666667 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.666667 x) (* x x))) (cbrt (* (* -0.666667 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.666667 x) (* x x))) (cbrt (* (* -0.666667 x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* -0.666667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* -0.666667 x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* -0.666667 x) (* x x)))
* * * * [misc]progress:  [ 27 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (cbrt (* (* (* -0.666667 (* (* x x) x)) (* -0.666667 (* (* x x) x))) (* -0.666667 (* (* x x) x))))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (* (* (* -0.666667 (* (* x x) x)) (* -0.666667 (* (* x x) x))) (* -0.666667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (210 enodes)
* [exit]simplify:  Simplified to (pow (* (* -0.666667 x) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* -0.666667 x) (* x x)) 3)
* * * * [misc]progress:  [ 28 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* (sqrt (* -0.666667 (* (* x x) x))) (sqrt (* -0.666667 (* (* x x) x))))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (sqrt (* -0.666667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -0.666667 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -0.666667 x) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* -0.666667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -0.666667 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -0.666667 x) (* x x)))
* * * * [misc]progress:  [ 29 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* 1 (* -0.666667 (* (* x x) x)))) (* 0.041667 (* (* (* x x) x) x))))>
* * * * [misc]progress:  [ 30 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* (* -0.666667 (* x x)) x)) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (* -0.666667 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* -0.666667 (* x x))
* [exit]simplify:  Simplified to (* -0.666667 (* x x))
* * * * [misc]progress:  [ 31 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* (* (* x x) x) -0.666667)) (* 0.041667 (* (* (* x x) x) x))))>
* * * * [misc]progress:  [ 32 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (pow (* 3.0 (* x x)) 1)) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x))))>
* * * * [misc]progress:  [ 33 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (exp (log (* 3.0 (* x x))))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (log (* 3.0 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* 3.0 (* x x)))
* [exit]simplify:  Simplified to (log (* 3.0 (* x x)))
* * * * [misc]progress:  [ 34 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (log (exp (* 3.0 (* x x))))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (exp (* 3.0 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp 3.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp 3.0) (* x x))
* * * * [misc]progress:  [ 35 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* (* (cbrt (* 3.0 (* x x))) (cbrt (* 3.0 (* x x)))) (cbrt (* 3.0 (* x x))))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* 3.0 (* x x))) (cbrt (* 3.0 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* 3.0 (* x x))) (cbrt (* 3.0 (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* 3.0 (* x x))) (cbrt (* 3.0 (* x x))))
* [enter]simplify:  Simplifying (cbrt (* 3.0 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* 3.0 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* 3.0 (* x x)))
* * * * [misc]progress:  [ 36 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (cbrt (* (* (* 3.0 (* x x)) (* 3.0 (* x x))) (* 3.0 (* x x))))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (* (* (* 3.0 (* x x)) (* 3.0 (* x x))) (* 3.0 (* x x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (270 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* 3.0 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* 3.0 (* x x)) 3)
* * * * [misc]progress:  [ 37 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* (sqrt (* 3.0 (* x x))) (sqrt (* 3.0 (* x x))))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (sqrt (* 3.0 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 3.0 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 3.0 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* 3.0 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 3.0 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 3.0 (* x x)))
* * * * [misc]progress:  [ 38 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 1 (* 3.0 (* x x)))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x))))>
* * * * [misc]progress:  [ 39 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* (* 3.0 x) x)) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (* 3.0 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 3.0 x)
* [exit]simplify:  Simplified to (* 3.0 x)
* * * * [misc]progress:  [ 40 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* (* x x) 3.0)) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x))))>
* * * * [misc]progress:  [ 41 / 52 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (pow x 3) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (pow x 3) x)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (258 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * * * [misc]progress:  [ 42 / 52 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (pow x 3) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (pow x 3) x)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (258 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * * * [misc]progress:  [ 43 / 52 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (pow x 3) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (pow x 3) x)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (258 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * * * [misc]progress:  [ 44 / 52 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (pow x 3))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (pow x 3))) (* 0.041667 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (254 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ -0.666667 (* 0.041667 x))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * * * [misc]progress:  [ 45 / 52 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (pow x 3))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (pow x 3))) (* 0.041667 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (254 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ -0.666667 (* 0.041667 x))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * * * [misc]progress:  [ 46 / 52 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (pow x 3))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (pow x 3))) (* 0.041667 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (254 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ -0.666667 (* 0.041667 x))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * * * [misc]progress:  [ 47 / 52 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (pow x 3))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (pow x 3))) (* 0.041667 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (254 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ -0.666667 (* 0.041667 x))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * * * [misc]progress:  [ 48 / 52 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (pow x 3))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (pow x 3))) (* 0.041667 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (254 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ -0.666667 (* 0.041667 x))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * * * [misc]progress:  [ 49 / 52 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (pow x 3))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (pow x 3))) (* 0.041667 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (254 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ -0.666667 (* 0.041667 x))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * * * [misc]progress:  [ 50 / 52 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (pow x 2))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (pow x 2))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (268 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ -0.666667 (* 0.041667 x))) (+ (+ (* x -4.0) 1.0) (* x (* x 3.0))))
* * * * [misc]progress:  [ 51 / 52 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (pow x 2))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (pow x 2))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (268 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ -0.666667 (* 0.041667 x))) (+ (+ (* x -4.0) 1.0) (* x (* x 3.0))))
* * * * [misc]progress:  [ 52 / 52 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (pow x 2))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (pow x 2))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (268 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ -0.666667 (* 0.041667 x))) (+ (+ (* x -4.0) 1.0) (* x (* x 3.0))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 x) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 x) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (log (- 0.666667)) into (log (- 0.666667))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 0.666667))) into (* 1/3 (log (- 0.666667)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 0.666667)))) into (pow (- 0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 x) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 x) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (log (- 0.666667)) into (log (- 0.666667))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 0.666667))) into (* 1/3 (log (- 0.666667)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 0.666667)))) into (pow (- 0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 x) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 x) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (log (- 0.666667)) into (log (- 0.666667))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 0.666667))) into (* 1/3 (log (- 0.666667)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 0.666667)))) into (pow (- 0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 x) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 x) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (log (- 0.666667)) into (log (- 0.666667))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 0.666667))) into (* 1/3 (log (- 0.666667)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 0.666667)))) into (pow (- 0.666667) 1/3)
* [misc]backup-simplify:  Simplify (* (pow (- 0.666667) 1/3) (pow (- 0.666667) 1/3)) into (pow (pow -0.666667 2) 1/3)
* [misc]backup-simplify:  Simplify (* 1 (pow (pow -0.666667 2) 1/3)) into (pow (pow -0.666667 2) 1/3)
* [misc]backup-simplify:  Simplify (pow (pow -0.666667 2) 1/3) into (pow (pow -0.666667 2) 1/3)
* [misc]backup-simplify:  Simplify (+ (* 0.041667 1) (* 0 0)) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0.041667) 1)) (pow (- 0.666667) 1)))) 1) into -0.06250046874976563
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.06250046874976563) (* 0 (log (- 0.666667)))) into (- 0.020833489583255208)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 0.666667)))) (+ (* (/ (pow (- 0.020833489583255208) 1) 1)))) into (* -0.020833489583255208 (pow -0.666667 1/3))
* [misc]backup-simplify:  Simplify (+ (* 0.041667 1) (* 0 0)) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0.041667) 1)) (pow (- 0.666667) 1)))) 1) into -0.06250046874976563
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.06250046874976563) (* 0 (log (- 0.666667)))) into (- 0.020833489583255208)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 0.666667)))) (+ (* (/ (pow (- 0.020833489583255208) 1) 1)))) into (* -0.020833489583255208 (pow -0.666667 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow (- 0.666667) 1/3) (* -0.020833489583255208 (pow -0.666667 1/3))) (* (* -0.020833489583255208 (pow -0.666667 1/3)) (pow (- 0.666667) 1/3))) into (- (* 0.041666979166510416 (pow (pow -0.666667 2) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* 1 (- (* 0.041666979166510416 (pow (pow -0.666667 2) 1/3)))) (* 0 (pow (pow -0.666667 2) 1/3))) into (- (* 0.041666979166510416 (pow (pow -0.666667 2) 1/3)))
* [misc]backup-simplify:  Simplify (- (* 0.041666979166510416 (pow (pow -0.666667 2) 1/3))) into (- (* 0.041666979166510416 (pow (pow -0.666667 2) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0.041667) 2)) (pow (- 0.666667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.666667) 1)))) 2) into (/ -0.0008680694445000001 (pow -0.666667 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.0008680694445000001 (pow -0.666667 2))) (+ (* 0 -0.06250046874976563) (* 0 (log (- 0.666667))))) into (- (* 0.0002893564815 (/ 1 (pow -0.666667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 0.666667)))) (+ (* (/ (pow (- 0.020833489583255208) 2) 2)) (* (/ (pow (- (* 0.0002893564815 (/ 1 (pow -0.666667 2)))) 1) 1)))) into (* (pow -0.666667 1/3) (- 0.00021701714410780163 (* 0.0002893564815 (/ 1 (pow -0.666667 2)))))
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0.041667) 2)) (pow (- 0.666667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.666667) 1)))) 2) into (/ -0.0008680694445000001 (pow -0.666667 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.0008680694445000001 (pow -0.666667 2))) (+ (* 0 -0.06250046874976563) (* 0 (log (- 0.666667))))) into (- (* 0.0002893564815 (/ 1 (pow -0.666667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 0.666667)))) (+ (* (/ (pow (- 0.020833489583255208) 2) 2)) (* (/ (pow (- (* 0.0002893564815 (/ 1 (pow -0.666667 2)))) 1) 1)))) into (* (pow -0.666667 1/3) (- 0.00021701714410780163 (* 0.0002893564815 (/ 1 (pow -0.666667 2)))))
* [misc]backup-simplify:  Simplify (+ (* (pow (- 0.666667) 1/3) (* (pow -0.666667 1/3) (- 0.00021701714410780163 (* 0.0002893564815 (/ 1 (pow -0.666667 2)))))) (+ (* (* -0.020833489583255208 (pow -0.666667 1/3)) (* -0.020833489583255208 (pow -0.666667 1/3))) (* (* (pow -0.666667 1/3) (- 0.00021701714410780163 (* 0.0002893564815 (/ 1 (pow -0.666667 2))))) (pow (- 0.666667) 1/3)))) into (- (* 0.0008680685764312065 (pow (pow -0.666667 2) 1/3)) (* 0.000578712963 (pow (/ 1 (pow -0.666667 4)) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* 1 (- (* 0.0008680685764312065 (pow (pow -0.666667 2) 1/3)) (* 0.000578712963 (pow (/ 1 (pow -0.666667 4)) 1/3)))) (+ (* 0 (- (* 0.041666979166510416 (pow (pow -0.666667 2) 1/3)))) (* 0 (pow (pow -0.666667 2) 1/3)))) into (- (* 0.0008680685764312065 (pow (pow -0.666667 2) 1/3)) (* 0.000578712963 (pow (/ 1 (pow -0.666667 4)) 1/3)))
* [misc]backup-simplify:  Simplify (- (* 0.0008680685764312065 (pow (pow -0.666667 2) 1/3)) (* 0.000578712963 (pow (/ 1 (pow -0.666667 4)) 1/3))) into (- (* 0.0008680685764312065 (pow (pow -0.666667 2) 1/3)) (* 0.000578712963 (pow (/ 1 (pow -0.666667 4)) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.0008680685764312065 (pow (pow -0.666667 2) 1/3)) (* 0.000578712963 (pow (/ 1 (pow -0.666667 4)) 1/3))) (pow x 5)) (+ (* (- (* 0.041666979166510416 (pow (pow -0.666667 2) 1/3))) (pow x 4)) (* (pow (pow -0.666667 2) 1/3) (pow x 3)))) into (- (+ (* 0.0008680685764312065 (* (pow (pow -0.666667 2) 1/3) (pow x 5))) (* (pow (pow -0.666667 2) 1/3) (pow x 3))) (+ (* 0.041666979166510416 (* (pow (pow -0.666667 2) 1/3) (pow x 4))) (* 0.000578712963 (* (pow (/ 1 (pow -0.666667 4)) 1/3) (pow x 5)))))
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 x)) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (log 0.041667) into (log 0.041667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.041667) (log x))) into (* 1/3 (- (log 0.041667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.041667) (log x)))) into (exp (* 1/3 (- (log 0.041667) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 x)) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (log 0.041667) into (log 0.041667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.041667) (log x))) into (* 1/3 (- (log 0.041667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.041667) (log x)))) into (exp (* 1/3 (- (log 0.041667) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 x)) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (log 0.041667) into (log 0.041667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.041667) (log x))) into (* 1/3 (- (log 0.041667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.041667) (log x)))) into (exp (* 1/3 (- (log 0.041667) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 x)) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (log 0.041667) into (log 0.041667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.041667) (log x))) into (* 1/3 (- (log 0.041667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.041667) (log x)))) into (exp (* 1/3 (- (log 0.041667) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.041667) (log x)))) (exp (* 1/3 (- (log 0.041667) (log x))))) into (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)) into (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow x 3))
* [misc]backup-simplify:  Simplify (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow x 3)) into (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.666667)) 1)) (pow 0.041667 1)))) 1) into -15.999880000959992
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -15.999880000959992) (* 0 (- (log 0.041667) (log x)))) into (- 5.33329333365333)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.041667) (log x)))) (+ (* (/ (pow (- 5.33329333365333) 1) 1)))) into (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.666667)) 1)) (pow 0.041667 1)))) 1) into -15.999880000959992
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -15.999880000959992) (* 0 (- (log 0.041667) (log x)))) into (- 5.33329333365333)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.041667) (log x)))) (+ (* (/ (pow (- 5.33329333365333) 1) 1)))) into (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.041667) (log x)))) (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x)))))) (* (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x))))) (exp (* 1/3 (- (log 0.041667) (log x)))))) into (- (* 10.66658666730666 (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) (- (* 10.66658666730666 (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)))) (* 0 (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2))) into (- (* 10.66658666730666 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow x 3))))
* [misc]backup-simplify:  Simplify (- (* 10.66658666730666 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow x 3)))) into (- (* 10.66658666730666 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow x 3))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.666667)) 2)) (pow 0.041667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.041667 1)))) 2) into (/ -0.2222224444445 (pow 0.041667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.2222224444445 (pow 0.041667 2))) (+ (* 0 -15.999880000959992) (* 0 (- (log 0.041667) (log x))))) into (- (* 0.07407414814816667 (/ 1 (pow 0.041667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.041667) (log x)))) (+ (* (/ (pow (- 5.33329333365333) 2) 2)) (* (/ (pow (- (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) 1) 1)))) into (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) (exp (* 1/3 (- (log 0.041667) (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.666667)) 2)) (pow 0.041667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.041667 1)))) 2) into (/ -0.2222224444445 (pow 0.041667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.2222224444445 (pow 0.041667 2))) (+ (* 0 -15.999880000959992) (* 0 (- (log 0.041667) (log x))))) into (- (* 0.07407414814816667 (/ 1 (pow 0.041667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.041667) (log x)))) (+ (* (/ (pow (- 5.33329333365333) 2) 2)) (* (/ (pow (- (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) 1) 1)))) into (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) (exp (* 1/3 (- (log 0.041667) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.041667) (log x)))) (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) (exp (* 1/3 (- (log 0.041667) (log x)))))) (+ (* (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x))))) (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x)))))) (* (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) (exp (* 1/3 (- (log 0.041667) (log x))))) (exp (* 1/3 (- (log 0.041667) (log x))))))) into (- (* 56.8880355655821 (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow 0.041667 2))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) (- (* 56.8880355655821 (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow 0.041667 2))))) (+ (* 0 (- (* 10.66658666730666 (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)))) (* 0 (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)))) into (- (* 56.8880355655821 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow x 3))) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (* (pow x 3) (pow 0.041667 2)))))
* [misc]backup-simplify:  Simplify (- (* 56.8880355655821 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow x 3))) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (* (pow x 3) (pow 0.041667 2))))) into (- (* 56.8880355655821 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow x 3))) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (* (pow 0.041667 2) (pow x 3)))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 56.8880355655821 (/ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) (pow (/ 1 x) 3))) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) (* (pow 0.041667 2) (pow (/ 1 x) 3))))) (pow (/ 1 x) 2)) (+ (* (- (* 10.66658666730666 (/ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) (pow (/ 1 x) 3)))) (/ 1 x)) (/ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) (pow (/ 1 x) 3)))) into (- (+ (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) (pow x 3)) (* 56.8880355655821 (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) x))) (+ (* 0.14814829629633333 (/ (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) x) (pow 0.041667 2))) (* 10.66658666730666 (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) (pow x 2)))))
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 (- x))) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (log (- 0.041667)) into (log (- 0.041667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.041667)) (log x))) into (* 1/3 (- (log (- 0.041667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.041667)) (log x)))) into (exp (* 1/3 (- (log (- 0.041667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 (- x))) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (log (- 0.041667)) into (log (- 0.041667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.041667)) (log x))) into (* 1/3 (- (log (- 0.041667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.041667)) (log x)))) into (exp (* 1/3 (- (log (- 0.041667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 (- x))) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (log (- 0.041667)) into (log (- 0.041667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.041667)) (log x))) into (* 1/3 (- (log (- 0.041667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.041667)) (log x)))) into (exp (* 1/3 (- (log (- 0.041667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 (- x))) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (log (- 0.041667)) into (log (- 0.041667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.041667)) (log x))) into (* 1/3 (- (log (- 0.041667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.041667)) (log x)))) into (exp (* 1/3 (- (log (- 0.041667)) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (exp (* 1/3 (- (log (- 0.041667)) (log x))))) into (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)) into (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)) into (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.666667)) 1)) (pow (- 0.041667) 1)))) 1) into 15.999880000959992
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 15.999880000959992) (* 0 (- (log (- 0.041667)) (log x)))) into 5.33329333365333
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (+ (* (/ (pow 5.33329333365333 1) 1)))) into (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.666667)) 1)) (pow (- 0.041667) 1)))) 1) into 15.999880000959992
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 15.999880000959992) (* 0 (- (log (- 0.041667)) (log x)))) into 5.33329333365333
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (+ (* (/ (pow 5.33329333365333 1) 1)))) into (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x)))))) (* (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x))))) (exp (* 1/3 (- (log (- 0.041667)) (log x)))))) into (* 10.66658666730666 (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) (* 10.66658666730666 (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))) (* 0 (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))) into (* 10.66658666730666 (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (* 10.66658666730666 (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))) into (* 10.66658666730666 (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.666667)) 2)) (pow (- 0.041667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.041667) 1)))) 2) into (/ -0.2222224444445 (pow -0.041667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.2222224444445 (pow -0.041667 2))) (+ (* 0 15.999880000959992) (* 0 (- (log (- 0.041667)) (log x))))) into (- (* 0.07407414814816667 (/ 1 (pow -0.041667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (+ (* (/ (pow 5.33329333365333 2) 2)) (* (/ (pow (- (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) 1) 1)))) into (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) (exp (* 1/3 (- (log (- 0.041667)) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.666667)) 2)) (pow (- 0.041667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.041667) 1)))) 2) into (/ -0.2222224444445 (pow -0.041667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.2222224444445 (pow -0.041667 2))) (+ (* 0 15.999880000959992) (* 0 (- (log (- 0.041667)) (log x))))) into (- (* 0.07407414814816667 (/ 1 (pow -0.041667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (+ (* (/ (pow 5.33329333365333 2) 2)) (* (/ (pow (- (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) 1) 1)))) into (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) (exp (* 1/3 (- (log (- 0.041667)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) (exp (* 1/3 (- (log (- 0.041667)) (log x)))))) (+ (* (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x))))) (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x)))))) (* (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) (exp (* 1/3 (- (log (- 0.041667)) (log x))))) (exp (* 1/3 (- (log (- 0.041667)) (log x))))))) into (- (* 56.8880355655821 (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2) (pow -0.041667 2))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) (- (* 56.8880355655821 (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2) (pow -0.041667 2))))) (+ (* 0 (* 10.66658666730666 (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))) (* 0 (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)))) into (- (* 56.8880355655821 (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))) (* 0.14814829629633333 (/ (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)) (pow -0.041667 2))))
* [misc]backup-simplify:  Simplify (- (* 56.8880355655821 (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))) (* 0.14814829629633333 (/ (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)) (pow -0.041667 2)))) into (- (* 56.8880355655821 (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))) (* 0.14814829629633333 (/ (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)) (pow -0.041667 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 56.8880355655821 (* (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ 1 (- x)))))) 2))) (* 0.14814829629633333 (/ (* (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ 1 (- x)))))) 2)) (pow -0.041667 2)))) (pow (/ 1 (- x)) 2)) (+ (* (* 10.66658666730666 (* (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ 1 (- x)))))) 2))) (/ 1 (- x))) (* (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ 1 (- x)))))) 2)))) into (- (+ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2)) (* 56.8880355655821 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 10.66658666730666 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2)) x)) (* 0.14814829629633333 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2)) (* (pow -0.041667 2) (pow x 2))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* x 3.0) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 3.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 3.0)) into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 3.0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 1) (* 0 0))) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow x 2)) into (* 3.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 3.0) into 3.0
* [misc]backup-simplify:  Simplify (* 3.0 1) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow (/ 1 (/ 1 x)) 2)) into (* 3.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 3.0) into -3.0
* [misc]backup-simplify:  Simplify (* -3.0 -1) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* 3.0 (pow x 2))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 x) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 x) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (log (- 0.666667)) into (log (- 0.666667))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 0.666667))) into (* 1/3 (log (- 0.666667)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 0.666667)))) into (pow (- 0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 x) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 x) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (log (- 0.666667)) into (log (- 0.666667))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 0.666667))) into (* 1/3 (log (- 0.666667)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 0.666667)))) into (pow (- 0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 x) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 x) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (log (- 0.666667)) into (log (- 0.666667))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 0.666667))) into (* 1/3 (log (- 0.666667)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 0.666667)))) into (pow (- 0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 x) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 x) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (log (- 0.666667)) into (log (- 0.666667))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 0.666667))) into (* 1/3 (log (- 0.666667)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 0.666667)))) into (pow (- 0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 x) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 x) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (log (- 0.666667)) into (log (- 0.666667))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 0.666667))) into (* 1/3 (log (- 0.666667)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 0.666667)))) into (pow (- 0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 x) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 x) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (log (- 0.666667)) into (log (- 0.666667))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 0.666667))) into (* 1/3 (log (- 0.666667)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 0.666667)))) into (pow (- 0.666667) 1/3)
* [misc]backup-simplify:  Simplify (* (pow (- 0.666667) 1/3) (pow (- 0.666667) 1/3)) into (pow (pow -0.666667 2) 1/3)
* [misc]backup-simplify:  Simplify (* 1 (pow (pow -0.666667 2) 1/3)) into (pow (pow -0.666667 2) 1/3)
* [misc]backup-simplify:  Simplify (* (pow (pow -0.666667 2) 1/3) (pow (- 0.666667) 1/3)) into -0.666667
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (+ (* 0.041667 1) (* 0 0)) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0.041667) 1)) (pow (- 0.666667) 1)))) 1) into -0.06250046874976563
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.06250046874976563) (* 0 (log (- 0.666667)))) into (- 0.020833489583255208)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 0.666667)))) (+ (* (/ (pow (- 0.020833489583255208) 1) 1)))) into (* -0.020833489583255208 (pow -0.666667 1/3))
* [misc]backup-simplify:  Simplify (+ (* 0.041667 1) (* 0 0)) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0.041667) 1)) (pow (- 0.666667) 1)))) 1) into -0.06250046874976563
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.06250046874976563) (* 0 (log (- 0.666667)))) into (- 0.020833489583255208)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 0.666667)))) (+ (* (/ (pow (- 0.020833489583255208) 1) 1)))) into (* -0.020833489583255208 (pow -0.666667 1/3))
* [misc]backup-simplify:  Simplify (+ (* 0.041667 1) (* 0 0)) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0.041667) 1)) (pow (- 0.666667) 1)))) 1) into -0.06250046874976563
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.06250046874976563) (* 0 (log (- 0.666667)))) into (- 0.020833489583255208)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 0.666667)))) (+ (* (/ (pow (- 0.020833489583255208) 1) 1)))) into (* -0.020833489583255208 (pow -0.666667 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow (- 0.666667) 1/3) (* -0.020833489583255208 (pow -0.666667 1/3))) (* (* -0.020833489583255208 (pow -0.666667 1/3)) (pow (- 0.666667) 1/3))) into (- (* 0.041666979166510416 (pow (pow -0.666667 2) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* 1 (- (* 0.041666979166510416 (pow (pow -0.666667 2) 1/3)))) (* 0 (pow (pow -0.666667 2) 1/3))) into (- (* 0.041666979166510416 (pow (pow -0.666667 2) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* (pow (pow -0.666667 2) 1/3) (* -0.020833489583255208 (pow -0.666667 1/3))) (* (- (* 0.041666979166510416 (pow (pow -0.666667 2) 1/3))) (pow (- 0.666667) 1/3))) into 0.041667
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0.041667) 2)) (pow (- 0.666667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.666667) 1)))) 2) into (/ -0.0008680694445000001 (pow -0.666667 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.0008680694445000001 (pow -0.666667 2))) (+ (* 0 -0.06250046874976563) (* 0 (log (- 0.666667))))) into (- (* 0.0002893564815 (/ 1 (pow -0.666667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 0.666667)))) (+ (* (/ (pow (- 0.020833489583255208) 2) 2)) (* (/ (pow (- (* 0.0002893564815 (/ 1 (pow -0.666667 2)))) 1) 1)))) into (* (pow -0.666667 1/3) (- 0.00021701714410780163 (* 0.0002893564815 (/ 1 (pow -0.666667 2)))))
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0.041667) 2)) (pow (- 0.666667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.666667) 1)))) 2) into (/ -0.0008680694445000001 (pow -0.666667 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.0008680694445000001 (pow -0.666667 2))) (+ (* 0 -0.06250046874976563) (* 0 (log (- 0.666667))))) into (- (* 0.0002893564815 (/ 1 (pow -0.666667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 0.666667)))) (+ (* (/ (pow (- 0.020833489583255208) 2) 2)) (* (/ (pow (- (* 0.0002893564815 (/ 1 (pow -0.666667 2)))) 1) 1)))) into (* (pow -0.666667 1/3) (- 0.00021701714410780163 (* 0.0002893564815 (/ 1 (pow -0.666667 2)))))
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0.041667) 2)) (pow (- 0.666667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.666667) 1)))) 2) into (/ -0.0008680694445000001 (pow -0.666667 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.0008680694445000001 (pow -0.666667 2))) (+ (* 0 -0.06250046874976563) (* 0 (log (- 0.666667))))) into (- (* 0.0002893564815 (/ 1 (pow -0.666667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 0.666667)))) (+ (* (/ (pow (- 0.020833489583255208) 2) 2)) (* (/ (pow (- (* 0.0002893564815 (/ 1 (pow -0.666667 2)))) 1) 1)))) into (* (pow -0.666667 1/3) (- 0.00021701714410780163 (* 0.0002893564815 (/ 1 (pow -0.666667 2)))))
* [misc]backup-simplify:  Simplify (+ (* (pow (- 0.666667) 1/3) (* (pow -0.666667 1/3) (- 0.00021701714410780163 (* 0.0002893564815 (/ 1 (pow -0.666667 2)))))) (+ (* (* -0.020833489583255208 (pow -0.666667 1/3)) (* -0.020833489583255208 (pow -0.666667 1/3))) (* (* (pow -0.666667 1/3) (- 0.00021701714410780163 (* 0.0002893564815 (/ 1 (pow -0.666667 2))))) (pow (- 0.666667) 1/3)))) into (- (* 0.0008680685764312065 (pow (pow -0.666667 2) 1/3)) (* 0.000578712963 (pow (/ 1 (pow -0.666667 4)) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* 1 (- (* 0.0008680685764312065 (pow (pow -0.666667 2) 1/3)) (* 0.000578712963 (pow (/ 1 (pow -0.666667 4)) 1/3)))) (+ (* 0 (- (* 0.041666979166510416 (pow (pow -0.666667 2) 1/3)))) (* 0 (pow (pow -0.666667 2) 1/3)))) into (- (* 0.0008680685764312065 (pow (pow -0.666667 2) 1/3)) (* 0.000578712963 (pow (/ 1 (pow -0.666667 4)) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* (pow (pow -0.666667 2) 1/3) (* (pow -0.666667 1/3) (- 0.00021701714410780163 (* 0.0002893564815 (/ 1 (pow -0.666667 2)))))) (+ (* (- (* 0.041666979166510416 (pow (pow -0.666667 2) 1/3))) (* -0.020833489583255208 (pow -0.666667 1/3))) (* (- (* 0.0008680685764312065 (pow (pow -0.666667 2) 1/3)) (* 0.000578712963 (pow (/ 1 (pow -0.666667 4)) 1/3))) (pow (- 0.666667) 1/3)))) into (- (* 0.00019290441745216052 (/ 1 (pow -0.666667 2))) (+ 0.0013021035156982421 (* 0.000578712963 -1.499999250000375)))
* [misc]backup-simplify:  Simplify (- (* 0.00019290441745216052 (/ 1 (pow -0.666667 2))) (+ 0.0013021035156982421 (* 0.000578712963 -1.499999250000375))) into (- (* 0.00019290441745216052 (/ 1 (pow -0.666667 2))) 0.00043403450523274727)
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.00019290441745216052 (/ 1 (pow -0.666667 2))) 0.00043403450523274727) (pow x 5)) (+ (* 0.041667 (pow x 4)) (* -0.666667 (pow x 3)))) into (- (+ (* 0.041667 (pow x 4)) (* 0.00019290441745216052 (/ (pow x 5) (pow -0.666667 2)))) (+ (* 0.666667 (pow x 3)) (* 0.00043403450523274727 (pow x 5))))
* [misc]approximate:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)))) (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)))) (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 x)) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (log 0.041667) into (log 0.041667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.041667) (log x))) into (* 1/3 (- (log 0.041667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.041667) (log x)))) into (exp (* 1/3 (- (log 0.041667) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 x)) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (log 0.041667) into (log 0.041667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.041667) (log x))) into (* 1/3 (- (log 0.041667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.041667) (log x)))) into (exp (* 1/3 (- (log 0.041667) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 x)) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (log 0.041667) into (log 0.041667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.041667) (log x))) into (* 1/3 (- (log 0.041667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.041667) (log x)))) into (exp (* 1/3 (- (log 0.041667) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)))) (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 x)) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (log 0.041667) into (log 0.041667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.041667) (log x))) into (* 1/3 (- (log 0.041667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.041667) (log x)))) into (exp (* 1/3 (- (log 0.041667) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 x)) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (log 0.041667) into (log 0.041667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.041667) (log x))) into (* 1/3 (- (log 0.041667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.041667) (log x)))) into (exp (* 1/3 (- (log 0.041667) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 x)) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (log 0.041667) into (log 0.041667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.041667) (log x))) into (* 1/3 (- (log 0.041667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.041667) (log x)))) into (exp (* 1/3 (- (log 0.041667) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.041667) (log x)))) (exp (* 1/3 (- (log 0.041667) (log x))))) into (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)) into (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow x 3))
* [misc]backup-simplify:  Simplify (* (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow x 3)) (exp (* 1/3 (- (log 0.041667) (log x))))) into (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 3) (pow x 3))
* [misc]backup-simplify:  Simplify (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 3) (pow x 3)) into (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 3) (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.666667)) 1)) (pow 0.041667 1)))) 1) into -15.999880000959992
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -15.999880000959992) (* 0 (- (log 0.041667) (log x)))) into (- 5.33329333365333)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.041667) (log x)))) (+ (* (/ (pow (- 5.33329333365333) 1) 1)))) into (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.666667)) 1)) (pow 0.041667 1)))) 1) into -15.999880000959992
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -15.999880000959992) (* 0 (- (log 0.041667) (log x)))) into (- 5.33329333365333)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.041667) (log x)))) (+ (* (/ (pow (- 5.33329333365333) 1) 1)))) into (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.666667)) 1)) (pow 0.041667 1)))) 1) into -15.999880000959992
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -15.999880000959992) (* 0 (- (log 0.041667) (log x)))) into (- 5.33329333365333)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.041667) (log x)))) (+ (* (/ (pow (- 5.33329333365333) 1) 1)))) into (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.041667) (log x)))) (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x)))))) (* (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x))))) (exp (* 1/3 (- (log 0.041667) (log x)))))) into (- (* 10.66658666730666 (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) (- (* 10.66658666730666 (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)))) (* 0 (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2))) into (- (* 10.66658666730666 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow x 3))))
* [misc]backup-simplify:  Simplify (+ (* (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow x 3)) (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x)))))) (* (- (* 10.66658666730666 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow x 3)))) (exp (* 1/3 (- (log 0.041667) (log x)))))) into (- (* 15.99988000095999 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 3) (pow x 3))))
* [misc]backup-simplify:  Simplify (- (* 15.99988000095999 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 3) (pow x 3)))) into (- (* 15.99988000095999 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 3) (pow x 3))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.666667)) 2)) (pow 0.041667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.041667 1)))) 2) into (/ -0.2222224444445 (pow 0.041667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.2222224444445 (pow 0.041667 2))) (+ (* 0 -15.999880000959992) (* 0 (- (log 0.041667) (log x))))) into (- (* 0.07407414814816667 (/ 1 (pow 0.041667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.041667) (log x)))) (+ (* (/ (pow (- 5.33329333365333) 2) 2)) (* (/ (pow (- (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) 1) 1)))) into (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) (exp (* 1/3 (- (log 0.041667) (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.666667)) 2)) (pow 0.041667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.041667 1)))) 2) into (/ -0.2222224444445 (pow 0.041667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.2222224444445 (pow 0.041667 2))) (+ (* 0 -15.999880000959992) (* 0 (- (log 0.041667) (log x))))) into (- (* 0.07407414814816667 (/ 1 (pow 0.041667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.041667) (log x)))) (+ (* (/ (pow (- 5.33329333365333) 2) 2)) (* (/ (pow (- (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) 1) 1)))) into (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) (exp (* 1/3 (- (log 0.041667) (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.666667)) 2)) (pow 0.041667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.041667 1)))) 2) into (/ -0.2222224444445 (pow 0.041667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.2222224444445 (pow 0.041667 2))) (+ (* 0 -15.999880000959992) (* 0 (- (log 0.041667) (log x))))) into (- (* 0.07407414814816667 (/ 1 (pow 0.041667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.041667) (log x)))) (+ (* (/ (pow (- 5.33329333365333) 2) 2)) (* (/ (pow (- (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) 1) 1)))) into (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) (exp (* 1/3 (- (log 0.041667) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.041667) (log x)))) (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) (exp (* 1/3 (- (log 0.041667) (log x)))))) (+ (* (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x))))) (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x)))))) (* (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) (exp (* 1/3 (- (log 0.041667) (log x))))) (exp (* 1/3 (- (log 0.041667) (log x))))))) into (- (* 56.8880355655821 (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow 0.041667 2))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) (- (* 56.8880355655821 (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow 0.041667 2))))) (+ (* 0 (- (* 10.66658666730666 (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)))) (* 0 (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)))) into (- (* 56.8880355655821 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow x 3))) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (* (pow x 3) (pow 0.041667 2)))))
* [misc]backup-simplify:  Simplify (+ (* (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow x 3)) (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) (exp (* 1/3 (- (log 0.041667) (log x)))))) (+ (* (- (* 10.66658666730666 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow x 3)))) (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x)))))) (* (- (* 56.8880355655821 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow x 3))) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (* (pow x 3) (pow 0.041667 2))))) (exp (* 1/3 (- (log 0.041667) (log x))))))) into (- (* 127.99808002255972 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 3) (pow x 3))) (* 0.2222224444445 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 3) (* (pow x 3) (pow 0.041667 2)))))
* [misc]backup-simplify:  Simplify (- (* 127.99808002255972 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 3) (pow x 3))) (* 0.2222224444445 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 3) (* (pow x 3) (pow 0.041667 2))))) into (- (* 127.99808002255972 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 3) (pow x 3))) (* 0.2222224444445 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 3) (* (pow 0.041667 2) (pow x 3)))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 127.99808002255972 (/ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 3) (pow (/ 1 x) 3))) (* 0.2222224444445 (/ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 3) (* (pow 0.041667 2) (pow (/ 1 x) 3))))) (pow (/ 1 x) 2)) (+ (* (- (* 15.99988000095999 (/ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 3) (pow (/ 1 x) 3)))) (/ 1 x)) (/ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 3) (pow (/ 1 x) 3)))) into (- (+ (* 127.99808002255972 (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 3) x)) (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 3) (pow x 3))) (+ (* 0.2222224444445 (/ (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 3) x) (pow 0.041667 2))) (* 15.99988000095999 (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 3) (pow x 2)))))
* [misc]approximate:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 (- x))) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (log (- 0.041667)) into (log (- 0.041667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.041667)) (log x))) into (* 1/3 (- (log (- 0.041667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.041667)) (log x)))) into (exp (* 1/3 (- (log (- 0.041667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 (- x))) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (log (- 0.041667)) into (log (- 0.041667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.041667)) (log x))) into (* 1/3 (- (log (- 0.041667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.041667)) (log x)))) into (exp (* 1/3 (- (log (- 0.041667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 (- x))) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (log (- 0.041667)) into (log (- 0.041667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.041667)) (log x))) into (* 1/3 (- (log (- 0.041667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.041667)) (log x)))) into (exp (* 1/3 (- (log (- 0.041667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 (- x))) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (log (- 0.041667)) into (log (- 0.041667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.041667)) (log x))) into (* 1/3 (- (log (- 0.041667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.041667)) (log x)))) into (exp (* 1/3 (- (log (- 0.041667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 (- x))) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (log (- 0.041667)) into (log (- 0.041667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.041667)) (log x))) into (* 1/3 (- (log (- 0.041667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.041667)) (log x)))) into (exp (* 1/3 (- (log (- 0.041667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 (- x))) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (log (- 0.041667)) into (log (- 0.041667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.041667)) (log x))) into (* 1/3 (- (log (- 0.041667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.041667)) (log x)))) into (exp (* 1/3 (- (log (- 0.041667)) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (exp (* 1/3 (- (log (- 0.041667)) (log x))))) into (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)) into (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)) (exp (* 1/3 (- (log (- 0.041667)) (log x))))) into (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 3))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 3)) into (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 3))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.666667)) 1)) (pow (- 0.041667) 1)))) 1) into 15.999880000959992
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 15.999880000959992) (* 0 (- (log (- 0.041667)) (log x)))) into 5.33329333365333
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (+ (* (/ (pow 5.33329333365333 1) 1)))) into (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.666667)) 1)) (pow (- 0.041667) 1)))) 1) into 15.999880000959992
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 15.999880000959992) (* 0 (- (log (- 0.041667)) (log x)))) into 5.33329333365333
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (+ (* (/ (pow 5.33329333365333 1) 1)))) into (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.666667)) 1)) (pow (- 0.041667) 1)))) 1) into 15.999880000959992
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 15.999880000959992) (* 0 (- (log (- 0.041667)) (log x)))) into 5.33329333365333
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (+ (* (/ (pow 5.33329333365333 1) 1)))) into (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x)))))) (* (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x))))) (exp (* 1/3 (- (log (- 0.041667)) (log x)))))) into (* 10.66658666730666 (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) (* 10.66658666730666 (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))) (* 0 (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))) into (* 10.66658666730666 (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)) (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x)))))) (* (* 10.66658666730666 (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))) (exp (* 1/3 (- (log (- 0.041667)) (log x)))))) into (* 15.99988000095999 (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (* 15.99988000095999 (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 3))) into (* 15.99988000095999 (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.666667)) 2)) (pow (- 0.041667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.041667) 1)))) 2) into (/ -0.2222224444445 (pow -0.041667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.2222224444445 (pow -0.041667 2))) (+ (* 0 15.999880000959992) (* 0 (- (log (- 0.041667)) (log x))))) into (- (* 0.07407414814816667 (/ 1 (pow -0.041667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (+ (* (/ (pow 5.33329333365333 2) 2)) (* (/ (pow (- (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) 1) 1)))) into (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) (exp (* 1/3 (- (log (- 0.041667)) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.666667)) 2)) (pow (- 0.041667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.041667) 1)))) 2) into (/ -0.2222224444445 (pow -0.041667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.2222224444445 (pow -0.041667 2))) (+ (* 0 15.999880000959992) (* 0 (- (log (- 0.041667)) (log x))))) into (- (* 0.07407414814816667 (/ 1 (pow -0.041667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (+ (* (/ (pow 5.33329333365333 2) 2)) (* (/ (pow (- (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) 1) 1)))) into (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) (exp (* 1/3 (- (log (- 0.041667)) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.666667)) 2)) (pow (- 0.041667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.041667) 1)))) 2) into (/ -0.2222224444445 (pow -0.041667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.2222224444445 (pow -0.041667 2))) (+ (* 0 15.999880000959992) (* 0 (- (log (- 0.041667)) (log x))))) into (- (* 0.07407414814816667 (/ 1 (pow -0.041667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (+ (* (/ (pow 5.33329333365333 2) 2)) (* (/ (pow (- (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) 1) 1)))) into (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) (exp (* 1/3 (- (log (- 0.041667)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) (exp (* 1/3 (- (log (- 0.041667)) (log x)))))) (+ (* (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x))))) (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x)))))) (* (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) (exp (* 1/3 (- (log (- 0.041667)) (log x))))) (exp (* 1/3 (- (log (- 0.041667)) (log x))))))) into (- (* 56.8880355655821 (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2) (pow -0.041667 2))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) (- (* 56.8880355655821 (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2) (pow -0.041667 2))))) (+ (* 0 (* 10.66658666730666 (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))) (* 0 (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)))) into (- (* 56.8880355655821 (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))) (* 0.14814829629633333 (/ (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)) (pow -0.041667 2))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)) (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) (exp (* 1/3 (- (log (- 0.041667)) (log x)))))) (+ (* (* 10.66658666730666 (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))) (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x)))))) (* (- (* 56.8880355655821 (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))) (* 0.14814829629633333 (/ (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)) (pow -0.041667 2)))) (exp (* 1/3 (- (log (- 0.041667)) (log x))))))) into (- (* 127.99808002255972 (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 3))) (* 0.2222224444445 (/ (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 3)) (pow -0.041667 2))))
* [misc]backup-simplify:  Simplify (- (* 127.99808002255972 (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 3))) (* 0.2222224444445 (/ (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 3)) (pow -0.041667 2)))) into (- (* 127.99808002255972 (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 3))) (* 0.2222224444445 (/ (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 3)) (pow -0.041667 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 127.99808002255972 (* (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ 1 (- x)))))) 3))) (* 0.2222224444445 (/ (* (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ 1 (- x)))))) 3)) (pow -0.041667 2)))) (pow (/ 1 (- x)) 2)) (+ (* (* 15.99988000095999 (* (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ 1 (- x)))))) 3))) (/ 1 (- x))) (* (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ 1 (- x)))))) 3)))) into (- (+ (* 127.99808002255972 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 3)) (pow x 2))) (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 3))) (+ (* 15.99988000095999 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 3)) x)) (* 0.2222224444445 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 3)) (* (pow -0.041667 2) (pow x 2))))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 x) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 x) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (log (- 0.666667)) into (log (- 0.666667))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 0.666667))) into (* 1/3 (log (- 0.666667)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 0.666667)))) into (pow (- 0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 x) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 x) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (log (- 0.666667)) into (log (- 0.666667))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 0.666667))) into (* 1/3 (log (- 0.666667)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 0.666667)))) into (pow (- 0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 x) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 x) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (log (- 0.666667)) into (log (- 0.666667))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 0.666667))) into (* 1/3 (log (- 0.666667)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 0.666667)))) into (pow (- 0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 x) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 x) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 x) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (log (- 0.666667)) into (log (- 0.666667))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 0.666667))) into (* 1/3 (log (- 0.666667)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 0.666667)))) into (pow (- 0.666667) 1/3)
* [misc]backup-simplify:  Simplify (* (pow (- 0.666667) 1/3) (pow (- 0.666667) 1/3)) into (pow (pow -0.666667 2) 1/3)
* [misc]backup-simplify:  Simplify (pow (pow -0.666667 2) 1/3) into (pow (pow -0.666667 2) 1/3)
* [misc]backup-simplify:  Simplify (+ (* 0.041667 1) (* 0 0)) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0.041667) 1)) (pow (- 0.666667) 1)))) 1) into -0.06250046874976563
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.06250046874976563) (* 0 (log (- 0.666667)))) into (- 0.020833489583255208)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 0.666667)))) (+ (* (/ (pow (- 0.020833489583255208) 1) 1)))) into (* -0.020833489583255208 (pow -0.666667 1/3))
* [misc]backup-simplify:  Simplify (+ (* 0.041667 1) (* 0 0)) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0.041667) 1)) (pow (- 0.666667) 1)))) 1) into -0.06250046874976563
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.06250046874976563) (* 0 (log (- 0.666667)))) into (- 0.020833489583255208)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 0.666667)))) (+ (* (/ (pow (- 0.020833489583255208) 1) 1)))) into (* -0.020833489583255208 (pow -0.666667 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow (- 0.666667) 1/3) (* -0.020833489583255208 (pow -0.666667 1/3))) (* (* -0.020833489583255208 (pow -0.666667 1/3)) (pow (- 0.666667) 1/3))) into (- (* 0.041666979166510416 (pow (pow -0.666667 2) 1/3)))
* [misc]backup-simplify:  Simplify (- (* 0.041666979166510416 (pow (pow -0.666667 2) 1/3))) into (- (* 0.041666979166510416 (pow (pow -0.666667 2) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0.041667) 2)) (pow (- 0.666667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.666667) 1)))) 2) into (/ -0.0008680694445000001 (pow -0.666667 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.0008680694445000001 (pow -0.666667 2))) (+ (* 0 -0.06250046874976563) (* 0 (log (- 0.666667))))) into (- (* 0.0002893564815 (/ 1 (pow -0.666667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 0.666667)))) (+ (* (/ (pow (- 0.020833489583255208) 2) 2)) (* (/ (pow (- (* 0.0002893564815 (/ 1 (pow -0.666667 2)))) 1) 1)))) into (* (pow -0.666667 1/3) (- 0.00021701714410780163 (* 0.0002893564815 (/ 1 (pow -0.666667 2)))))
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0.041667) 2)) (pow (- 0.666667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.666667) 1)))) 2) into (/ -0.0008680694445000001 (pow -0.666667 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.0008680694445000001 (pow -0.666667 2))) (+ (* 0 -0.06250046874976563) (* 0 (log (- 0.666667))))) into (- (* 0.0002893564815 (/ 1 (pow -0.666667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 0.666667)))) (+ (* (/ (pow (- 0.020833489583255208) 2) 2)) (* (/ (pow (- (* 0.0002893564815 (/ 1 (pow -0.666667 2)))) 1) 1)))) into (* (pow -0.666667 1/3) (- 0.00021701714410780163 (* 0.0002893564815 (/ 1 (pow -0.666667 2)))))
* [misc]backup-simplify:  Simplify (+ (* (pow (- 0.666667) 1/3) (* (pow -0.666667 1/3) (- 0.00021701714410780163 (* 0.0002893564815 (/ 1 (pow -0.666667 2)))))) (+ (* (* -0.020833489583255208 (pow -0.666667 1/3)) (* -0.020833489583255208 (pow -0.666667 1/3))) (* (* (pow -0.666667 1/3) (- 0.00021701714410780163 (* 0.0002893564815 (/ 1 (pow -0.666667 2))))) (pow (- 0.666667) 1/3)))) into (- (* 0.0008680685764312065 (pow (pow -0.666667 2) 1/3)) (* 0.000578712963 (pow (/ 1 (pow -0.666667 4)) 1/3)))
* [misc]backup-simplify:  Simplify (- (* 0.0008680685764312065 (pow (pow -0.666667 2) 1/3)) (* 0.000578712963 (pow (/ 1 (pow -0.666667 4)) 1/3))) into (- (* 0.0008680685764312065 (pow (pow -0.666667 2) 1/3)) (* 0.000578712963 (pow (/ 1 (pow -0.666667 4)) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.0008680685764312065 (pow (pow -0.666667 2) 1/3)) (* 0.000578712963 (pow (/ 1 (pow -0.666667 4)) 1/3))) (pow x 2)) (+ (* (- (* 0.041666979166510416 (pow (pow -0.666667 2) 1/3))) x) (pow (pow -0.666667 2) 1/3))) into (- (+ (* 0.0008680685764312065 (* (pow (pow -0.666667 2) 1/3) (pow x 2))) (pow (pow -0.666667 2) 1/3)) (+ (* 0.000578712963 (* (pow (/ 1 (pow -0.666667 4)) 1/3) (pow x 2))) (* 0.041666979166510416 (* (pow (pow -0.666667 2) 1/3) x))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 x)) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (log 0.041667) into (log 0.041667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.041667) (log x))) into (* 1/3 (- (log 0.041667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.041667) (log x)))) into (exp (* 1/3 (- (log 0.041667) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 x)) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (log 0.041667) into (log 0.041667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.041667) (log x))) into (* 1/3 (- (log 0.041667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.041667) (log x)))) into (exp (* 1/3 (- (log 0.041667) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 x)) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (log 0.041667) into (log 0.041667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.041667) (log x))) into (* 1/3 (- (log 0.041667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.041667) (log x)))) into (exp (* 1/3 (- (log 0.041667) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 x)) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 x)) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (log 0.041667) into (log 0.041667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.041667) (log x))) into (* 1/3 (- (log 0.041667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.041667) (log x)))) into (exp (* 1/3 (- (log 0.041667) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.041667) (log x)))) (exp (* 1/3 (- (log 0.041667) (log x))))) into (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) into (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.666667)) 1)) (pow 0.041667 1)))) 1) into -15.999880000959992
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -15.999880000959992) (* 0 (- (log 0.041667) (log x)))) into (- 5.33329333365333)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.041667) (log x)))) (+ (* (/ (pow (- 5.33329333365333) 1) 1)))) into (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.666667)) 1)) (pow 0.041667 1)))) 1) into -15.999880000959992
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -15.999880000959992) (* 0 (- (log 0.041667) (log x)))) into (- 5.33329333365333)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.041667) (log x)))) (+ (* (/ (pow (- 5.33329333365333) 1) 1)))) into (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.041667) (log x)))) (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x)))))) (* (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x))))) (exp (* 1/3 (- (log 0.041667) (log x)))))) into (- (* 10.66658666730666 (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- (* 10.66658666730666 (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2))) into (- (* 10.66658666730666 (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.666667)) 2)) (pow 0.041667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.041667 1)))) 2) into (/ -0.2222224444445 (pow 0.041667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.2222224444445 (pow 0.041667 2))) (+ (* 0 -15.999880000959992) (* 0 (- (log 0.041667) (log x))))) into (- (* 0.07407414814816667 (/ 1 (pow 0.041667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.041667) (log x)))) (+ (* (/ (pow (- 5.33329333365333) 2) 2)) (* (/ (pow (- (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) 1) 1)))) into (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) (exp (* 1/3 (- (log 0.041667) (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.666667)) 2)) (pow 0.041667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.041667 1)))) 2) into (/ -0.2222224444445 (pow 0.041667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.041667)) into (- (log 0.041667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.2222224444445 (pow 0.041667 2))) (+ (* 0 -15.999880000959992) (* 0 (- (log 0.041667) (log x))))) into (- (* 0.07407414814816667 (/ 1 (pow 0.041667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.041667) (log x)))) (+ (* (/ (pow (- 5.33329333365333) 2) 2)) (* (/ (pow (- (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) 1) 1)))) into (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) (exp (* 1/3 (- (log 0.041667) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.041667) (log x)))) (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) (exp (* 1/3 (- (log 0.041667) (log x)))))) (+ (* (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x))))) (* -5.33329333365333 (exp (* 1/3 (- (log 0.041667) (log x)))))) (* (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow 0.041667 2)))) (exp (* 1/3 (- (log 0.041667) (log x))))) (exp (* 1/3 (- (log 0.041667) (log x))))))) into (- (* 56.8880355655821 (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow 0.041667 2))))
* [misc]backup-simplify:  Simplify (- (* 56.8880355655821 (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow 0.041667 2)))) into (- (* 56.8880355655821 (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2)) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log 0.041667) (log x)))) 2) (pow 0.041667 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 56.8880355655821 (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2)) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) (pow 0.041667 2)))) (pow (/ 1 x) 2)) (+ (* (- (* 10.66658666730666 (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2))) (/ 1 x)) (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2))) into (- (+ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) (* 56.8880355655821 (/ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) (pow x 2)))) (+ (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) (* (pow 0.041667 2) (pow x 2)))) (* 10.66658666730666 (/ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) x))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 (- x))) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (log (- 0.041667)) into (log (- 0.041667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.041667)) (log x))) into (* 1/3 (- (log (- 0.041667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.041667)) (log x)))) into (exp (* 1/3 (- (log (- 0.041667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 (- x))) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (log (- 0.041667)) into (log (- 0.041667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.041667)) (log x))) into (* 1/3 (- (log (- 0.041667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.041667)) (log x)))) into (exp (* 1/3 (- (log (- 0.041667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 (- x))) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (log (- 0.041667)) into (log (- 0.041667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.041667)) (log x))) into (* 1/3 (- (log (- 0.041667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.041667)) (log x)))) into (exp (* 1/3 (- (log (- 0.041667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* 0.041667 (/ 1 (- x))) -0.666667) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* 0.041667 (/ 1 (- x))) -0.666667))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (log (- 0.041667)) into (log (- 0.041667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.041667)) (log x))) into (* 1/3 (- (log (- 0.041667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.041667)) (log x)))) into (exp (* 1/3 (- (log (- 0.041667)) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (exp (* 1/3 (- (log (- 0.041667)) (log x))))) into (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2) into (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.666667)) 1)) (pow (- 0.041667) 1)))) 1) into 15.999880000959992
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 15.999880000959992) (* 0 (- (log (- 0.041667)) (log x)))) into 5.33329333365333
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (+ (* (/ (pow 5.33329333365333 1) 1)))) into (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.666667)) 1)) (pow (- 0.041667) 1)))) 1) into 15.999880000959992
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 15.999880000959992) (* 0 (- (log (- 0.041667)) (log x)))) into 5.33329333365333
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (+ (* (/ (pow 5.33329333365333 1) 1)))) into (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x)))))) (* (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x))))) (exp (* 1/3 (- (log (- 0.041667)) (log x)))))) into (* 10.66658666730666 (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* 10.66658666730666 (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)) into (* 10.66658666730666 (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.666667)) 2)) (pow (- 0.041667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.041667) 1)))) 2) into (/ -0.2222224444445 (pow -0.041667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.2222224444445 (pow -0.041667 2))) (+ (* 0 15.999880000959992) (* 0 (- (log (- 0.041667)) (log x))))) into (- (* 0.07407414814816667 (/ 1 (pow -0.041667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (+ (* (/ (pow 5.33329333365333 2) 2)) (* (/ (pow (- (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) 1) 1)))) into (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) (exp (* 1/3 (- (log (- 0.041667)) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.666667)) 2)) (pow (- 0.041667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.041667) 1)))) 2) into (/ -0.2222224444445 (pow -0.041667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.041667))) into (- (log (- 0.041667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.2222224444445 (pow -0.041667 2))) (+ (* 0 15.999880000959992) (* 0 (- (log (- 0.041667)) (log x))))) into (- (* 0.07407414814816667 (/ 1 (pow -0.041667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (+ (* (/ (pow 5.33329333365333 2) 2)) (* (/ (pow (- (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) 1) 1)))) into (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) (exp (* 1/3 (- (log (- 0.041667)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 0.041667)) (log x)))) (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) (exp (* 1/3 (- (log (- 0.041667)) (log x)))))) (+ (* (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x))))) (* 5.33329333365333 (exp (* 1/3 (- (log (- 0.041667)) (log x)))))) (* (* (- 14.222008891395525 (* 0.07407414814816667 (/ 1 (pow -0.041667 2)))) (exp (* 1/3 (- (log (- 0.041667)) (log x))))) (exp (* 1/3 (- (log (- 0.041667)) (log x))))))) into (- (* 56.8880355655821 (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2) (pow -0.041667 2))))
* [misc]backup-simplify:  Simplify (- (* 56.8880355655821 (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2) (pow -0.041667 2)))) into (- (* 56.8880355655821 (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2)) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log (- 0.041667)) (log x)))) 2) (pow -0.041667 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 56.8880355655821 (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ 1 (- x)))))) 2)) (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ 1 (- x)))))) 2) (pow -0.041667 2)))) (pow (/ 1 (- x)) 2)) (+ (* (* 10.66658666730666 (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ 1 (- x)))))) 2)) (/ 1 (- x))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ 1 (- x)))))) 2))) into (- (+ (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2) (* 56.8880355655821 (/ (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2) (pow x 2)))) (+ (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2) (* (pow -0.041667 2) (pow x 2)))) (* 10.66658666730666 (/ (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2) x))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) 1) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 2 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (exp (+ (* (log x) 3) (+ (log (cbrt (+ (* 0.041667 x) -0.666667))) (log (cbrt (+ (* 0.041667 x) -0.666667)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (+ (log (cbrt (+ (* 0.041667 x) -0.666667))) (log (cbrt (+ (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (log (cbrt (+ -0.666667 (* x 0.041667))))) (log (cbrt (+ -0.666667 (* x 0.041667)))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (log (cbrt (+ -0.666667 (* x 0.041667))))) (log (cbrt (+ -0.666667 (* x 0.041667)))))
* * * * [misc]progress:  [ 3 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (exp (+ (* (log x) 3) (log (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (log (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (* 3 (log x))))
* * * * [misc]progress:  [ 4 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (exp (+ (log (pow x 3)) (+ (log (cbrt (+ (* 0.041667 x) -0.666667))) (log (cbrt (+ (* 0.041667 x) -0.666667)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (+ (log (cbrt (+ (* 0.041667 x) -0.666667))) (log (cbrt (+ (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (71 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (+ (* (log x) 3) (log (cbrt (+ -0.666667 (* x 0.041667))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (+ (* (log x) 3) (log (cbrt (+ -0.666667 (* x 0.041667))))))
* * * * [misc]progress:  [ 5 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (exp (+ (log (pow x 3)) (log (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (log (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (74 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (* (log x) 3)))
* * * * [misc]progress:  [ 6 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (exp (log (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (120 enodes)
* * [misc]simplify:  iters left: 1 (125 enodes)
* [exit]simplify:  Simplified to (log (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (* x x)) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)))
* [exit]simplify:  Simplified to (log (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (* x x)) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)))
* * * * [misc]progress:  [ 7 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (log (exp (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* [exit]simplify:  Simplified to (pow (exp (pow x 3)) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))
* [exit]simplify:  Simplified to (pow (exp (pow x 3)) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))
* * * * [misc]progress:  [ 8 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (cbrt (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (+ -0.666667 (* 0.041667 x))) (* (+ -0.666667 (* 0.041667 x)) (pow x 3)))
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (+ -0.666667 (* 0.041667 x))) (* (+ -0.666667 (* 0.041667 x)) (pow x 3)))
* * * * [misc]progress:  [ 9 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (cbrt (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (308 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (+ -0.666667 (* 0.041667 x))) (* (+ -0.666667 (* 0.041667 x)) (pow x 3)))
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (+ -0.666667 (* 0.041667 x))) (* (+ -0.666667 (* 0.041667 x)) (pow x 3)))
* * * * [misc]progress:  [ 10 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (* (cbrt (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))) (cbrt (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* (cbrt (+ (* 0.041667 x) -0.666667)) x) (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (* (* (cbrt (+ (* 0.041667 x) -0.666667)) x) (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))))))
* [exit]simplify:  Simplified to (* (cbrt (* (* (cbrt (+ (* 0.041667 x) -0.666667)) x) (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (* (* (cbrt (+ (* 0.041667 x) -0.666667)) x) (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))))))
* [enter]simplify:  Simplifying (cbrt (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)))
* [exit]simplify:  Simplified to (cbrt (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)))
* * * * [misc]progress:  [ 11 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (cbrt (* (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (77 enodes)
* * [misc]simplify:  iters left: 3 (288 enodes)
* [exit]simplify:  Simplified to (* (* (pow (pow x 3) 3) (+ (* 0.041667 x) -0.666667)) (+ (* 0.041667 x) -0.666667))
* [exit]simplify:  Simplified to (* (* (pow (pow x 3) 3) (+ (* 0.041667 x) -0.666667)) (+ (* 0.041667 x) -0.666667))
* * * * [misc]progress:  [ 12 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (sqrt (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (sqrt (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)))
* [exit]simplify:  Simplified to (sqrt (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)))
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)))
* [exit]simplify:  Simplified to (sqrt (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)))
* * * * [misc]progress:  [ 13 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* 1 (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 14 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (* (pow x 3) (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 0.041667 x) -0.666667)) (pow x 3))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 0.041667 x) -0.666667)) (pow x 3))
* * * * [misc]progress:  [ 15 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (* x x) (* x (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* x (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* x (* (cbrt (+ -0.666667 (* x 0.041667))) (cbrt (+ -0.666667 (* x 0.041667)))))
* [exit]simplify:  Simplified to (* x (* (cbrt (+ -0.666667 (* x 0.041667))) (cbrt (+ -0.666667 (* x 0.041667)))))
* * * * [misc]progress:  [ 16 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (* (cbrt (pow x 3)) (cbrt (pow x 3))) (* (cbrt (pow x 3)) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (pow x 3)) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ -0.666667 (* x 0.041667))) (cbrt (+ -0.666667 (* x 0.041667)))) x)
* [exit]simplify:  Simplified to (* (* (cbrt (+ -0.666667 (* x 0.041667))) (cbrt (+ -0.666667 (* x 0.041667)))) x)
* * * * [misc]progress:  [ 17 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* x (* (* x x) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* [exit]simplify:  Simplified to (* (* x (cbrt (+ (* x 0.041667) -0.666667))) (* x (cbrt (+ (* x 0.041667) -0.666667))))
* [exit]simplify:  Simplified to (* (* x (cbrt (+ (* x 0.041667) -0.666667))) (* x (cbrt (+ (* x 0.041667) -0.666667))))
* * * * [misc]progress:  [ 18 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (sqrt (pow x 3)) (* (sqrt (pow x 3)) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (sqrt (pow x 3)) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ -0.666667 (* x 0.041667))) (cbrt (+ -0.666667 (* x 0.041667)))) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (* (cbrt (+ -0.666667 (* x 0.041667))) (cbrt (+ -0.666667 (* x 0.041667)))) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 19 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* 1 (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x))
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x))
* * * * [misc]progress:  [ 20 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (/ (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (126 enodes)
* * [misc]simplify:  iters left: 2 (157 enodes)
* * [misc]simplify:  iters left: 1 (159 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (* x x)) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) x))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (* x x)) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) x))
* * * * [misc]progress:  [ 21 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (/ (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (- (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (165 enodes)
* * [misc]simplify:  iters left: 2 (234 enodes)
* * [misc]simplify:  iters left: 1 (340 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) x) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (* x x)))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) x) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (* x x)))
* * * * [misc]progress:  [ 22 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (/ (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (168 enodes)
* * [misc]simplify:  iters left: 2 (240 enodes)
* * [misc]simplify:  iters left: 1 (346 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (* (- (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)))) (* (cbrt (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))) x))
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (* (- (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)))) (* (cbrt (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))) x))
* * * * [misc]progress:  [ 23 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (/ (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (247 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (- (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667))) x) (* (cbrt (* (- (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667))) (* x x)))
* [exit]simplify:  Simplified to (* (* (cbrt (* (- (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667))) x) (* (cbrt (* (- (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667))) (* x x)))
* * * * [misc]progress:  [ 24 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (/ (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (142 enodes)
* * [misc]simplify:  iters left: 2 (193 enodes)
* * [misc]simplify:  iters left: 1 (200 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (pow x 3)) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (pow x 3)) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))
* * * * [misc]progress:  [ 25 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (/ (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (cbrt (- (* 0.041667 x) -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (110 enodes)
* * [misc]simplify:  iters left: 2 (170 enodes)
* * [misc]simplify:  iters left: 1 (278 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (pow x 3)) (cbrt (* (- (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (pow x 3)) (cbrt (* (- (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667))))
* * * * [misc]progress:  [ 26 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (/ (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (142 enodes)
* * [misc]simplify:  iters left: 2 (180 enodes)
* * [misc]simplify:  iters left: 1 (182 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (pow x 3)) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (pow x 3)) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))
* * * * [misc]progress:  [ 27 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (/ (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (- (* 0.041667 x) -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (110 enodes)
* * [misc]simplify:  iters left: 2 (170 enodes)
* * [misc]simplify:  iters left: 1 (278 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (pow x 3)) (cbrt (* (- (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (pow x 3)) (cbrt (* (- (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667))))
* * * * [misc]progress:  [ 28 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))) (pow x 3)) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 29 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (pow (* (* x 3.0) x) 1) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 30 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (exp (log (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* [exit]simplify:  Simplified to (log (* x (* x 3.0)))
* [exit]simplify:  Simplified to (log (* x (* x 3.0)))
* * * * [misc]progress:  [ 31 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (log (exp (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* [exit]simplify:  Simplified to (exp (* x (* x 3.0)))
* [exit]simplify:  Simplified to (exp (* x (* x 3.0)))
* * * * [misc]progress:  [ 32 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* (cbrt (* (* x 3.0) x)) (cbrt (* (* x 3.0) x))) (cbrt (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x 3.0) x)) (cbrt (* (* x 3.0) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 3.0))) (cbrt (* x (* x 3.0))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 3.0))) (cbrt (* x (* x 3.0))))
* [enter]simplify:  Simplifying (cbrt (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (* x 3.0)))
* [exit]simplify:  Simplified to (cbrt (* x (* x 3.0)))
* * * * [misc]progress:  [ 33 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (cbrt (* (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (* x 3.0) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (335 enodes)
* [exit]simplify:  Simplified to (pow (* x (* x 3.0)) 3)
* [exit]simplify:  Simplified to (pow (* x (* x 3.0)) 3)
* * * * [misc]progress:  [ 34 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (sqrt (* (* x 3.0) x)) (sqrt (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* [enter]simplify:  Simplifying (sqrt (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* * * * [misc]progress:  [ 35 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* 1 (* (* x 3.0) x)) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 36 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* x (* 3.0 x)) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* 3.0 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 3.0 x)
* [exit]simplify:  Simplified to (* 3.0 x)
* * * * [misc]progress:  [ 37 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* x (* x 3.0)) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 38 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (pow (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) 1) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (102 enodes)
* * [misc]simplify:  iters left: 1 (133 enodes)
* [exit]simplify:  Simplified to (* (+ (* 0.041667 x) -0.666667) (pow x 3))
* [exit]simplify:  Simplified to (* (+ (* 0.041667 x) -0.666667) (pow x 3))
* * * * [misc]progress:  [ 39 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (pow (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) 1) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 40 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (+ (+ (* (log x) 3) (+ (log (cbrt (+ (* 0.041667 x) -0.666667))) (log (cbrt (+ (* 0.041667 x) -0.666667))))) (log (cbrt (+ (* 0.041667 x) -0.666667))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (log (cbrt (+ (* 0.041667 x) -0.666667))) (log (cbrt (+ (* 0.041667 x) -0.666667))))) (log (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (log (cbrt (+ -0.666667 (* x 0.041667))))) (+ (* 3 (log x)) (log (cbrt (+ -0.666667 (* x 0.041667))))))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (log (cbrt (+ -0.666667 (* x 0.041667))))) (+ (* 3 (log x)) (log (cbrt (+ -0.666667 (* x 0.041667))))))
* * * * [misc]progress:  [ 41 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (+ (+ (* (log x) 3) (log (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (log (cbrt (+ (* 0.041667 x) -0.666667))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (log (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (log (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (* 3 (log x))) (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (log (cbrt (+ -0.666667 (* x 0.041667))))))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (* 3 (log x))) (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (log (cbrt (+ -0.666667 (* x 0.041667))))))
* * * * [misc]progress:  [ 42 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (+ (+ (log (pow x 3)) (+ (log (cbrt (+ (* 0.041667 x) -0.666667))) (log (cbrt (+ (* 0.041667 x) -0.666667))))) (log (cbrt (+ (* 0.041667 x) -0.666667))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (log (cbrt (+ (* 0.041667 x) -0.666667))) (log (cbrt (+ (* 0.041667 x) -0.666667))))) (log (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (60 enodes)
* * [misc]simplify:  iters left: 2 (98 enodes)
* * [misc]simplify:  iters left: 1 (124 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (log (cbrt (+ -0.666667 (* x 0.041667))))) (+ (* (log x) 3) (log (cbrt (+ -0.666667 (* x 0.041667))))))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (log (cbrt (+ -0.666667 (* x 0.041667))))) (+ (* (log x) 3) (log (cbrt (+ -0.666667 (* x 0.041667))))))
* * * * [misc]progress:  [ 43 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (+ (+ (log (pow x 3)) (log (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (log (cbrt (+ (* 0.041667 x) -0.666667))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (log (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (log (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (98 enodes)
* * [misc]simplify:  iters left: 1 (133 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (log (cbrt (+ -0.666667 (* x 0.041667))))) (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (log (cbrt (+ -0.666667 (* x 0.041667))))) (+ (log (cbrt (+ -0.666667 (* x 0.041667)))) (* 3 (log x))))
* * * * [misc]progress:  [ 44 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (+ (log (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (log (cbrt (+ (* 0.041667 x) -0.666667))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (log (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (log (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (157 enodes)
* * [misc]simplify:  iters left: 1 (178 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* 0.041667 x) -0.666667))) (* (log x) 3)) (log (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* 0.041667 x) -0.666667))) (* (log x) 3)) (log (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))
* * * * [misc]progress:  [ 45 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (log (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (122 enodes)
* * [misc]simplify:  iters left: 2 (213 enodes)
* * [misc]simplify:  iters left: 1 (281 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 0.041667 x) -0.666667)) (* 3 (log x)))
* [exit]simplify:  Simplified to (+ (log (+ (* 0.041667 x) -0.666667)) (* 3 (log x)))
* * * * [misc]progress:  [ 46 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (exp (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (149 enodes)
* * [misc]simplify:  iters left: 1 (188 enodes)
* [exit]simplify:  Simplified to (exp (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (exp (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 47 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667))) (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667))) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (185 enodes)
* [exit]simplify:  Simplified to (* (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)))
* [exit]simplify:  Simplified to (* (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)))
* * * * [misc]progress:  [ 48 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (* (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)))
* [exit]simplify:  Simplified to (* (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)))
* * * * [misc]progress:  [ 49 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* [exit]simplify:  Simplified to (* (pow (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)) 3) (+ (* 0.041667 x) -0.666667))
* [exit]simplify:  Simplified to (* (pow (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)) 3) (+ (* 0.041667 x) -0.666667))
* * * * [misc]progress:  [ 50 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (127 enodes)
* * [misc]simplify:  iters left: 1 (156 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* 0.041667 x) -0.666667)) x) (* (cbrt (+ (* 0.041667 x) -0.666667)) x))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* 0.041667 x) -0.666667)) x) (* (cbrt (+ (* 0.041667 x) -0.666667)) x))
* [enter]simplify:  Simplifying (cbrt (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (105 enodes)
* * [misc]simplify:  iters left: 1 (140 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 0.041667 x) -0.666667)) x)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 0.041667 x) -0.666667)) x)
* * * * [misc]progress:  [ 51 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667)))) (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667)))) (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (363 enodes)
* [exit]simplify:  Simplified to (pow (* (+ (* 0.041667 x) -0.666667) (pow x 3)) 3)
* [exit]simplify:  Simplified to (pow (* (+ (* 0.041667 x) -0.666667) (pow x 3)) 3)
* * * * [misc]progress:  [ 52 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (sqrt (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667)))) (sqrt (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (105 enodes)
* * [misc]simplify:  iters left: 1 (140 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* 0.041667 x) -0.666667) (pow x 3)))
* [exit]simplify:  Simplified to (sqrt (* (+ (* 0.041667 x) -0.666667) (pow x 3)))
* [enter]simplify:  Simplifying (sqrt (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (105 enodes)
* * [misc]simplify:  iters left: 1 (140 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* 0.041667 x) -0.666667) (pow x 3)))
* [exit]simplify:  Simplified to (sqrt (* (+ (* 0.041667 x) -0.666667) (pow x 3)))
* * * * [misc]progress:  [ 53 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (157 enodes)
* * [misc]simplify:  iters left: 2 (207 enodes)
* * [misc]simplify:  iters left: 1 (232 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* 0.041667 x) (* 0.041667 x)) (* (* 0.041667 x) (pow x 3))) (* (pow -0.666667 3) (pow x 3)))
* [exit]simplify:  Simplified to (+ (* (* (* 0.041667 x) (* 0.041667 x)) (* (* 0.041667 x) (pow x 3))) (* (pow -0.666667 3) (pow x 3)))
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (108 enodes)
* * [misc]simplify:  iters left: 2 (154 enodes)
* * [misc]simplify:  iters left: 1 (221 enodes)
* [exit]simplify:  Simplified to (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 54 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))) (* (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))))) (cbrt (- (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (204 enodes)
* * [misc]simplify:  iters left: 2 (349 enodes)
* * [misc]simplify:  iters left: 1 (498 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))) (pow x 3)))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))) (pow x 3)))
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))))) (cbrt (- (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (159 enodes)
* * [misc]simplify:  iters left: 1 (224 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* 0.041667 x) -0.666667)) (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* 0.041667 x) -0.666667)) (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667)))))
* * * * [misc]progress:  [ 55 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (- (* 0.041667 x) -0.666667))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (216 enodes)
* * [misc]simplify:  iters left: 2 (360 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))) (pow x 3)))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))) (pow x 3)))
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (- (* 0.041667 x) -0.666667))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (158 enodes)
* * [misc]simplify:  iters left: 1 (224 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667))) (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667))) (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667)))))
* * * * [misc]progress:  [ 56 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))) (* (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (- (* 0.041667 x) -0.666667))) (cbrt (- (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (213 enodes)
* * [misc]simplify:  iters left: 2 (348 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (pow x 3)) (* (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))) (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (pow x 3)) (* (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))) (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667)))))
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (- (* 0.041667 x) -0.666667))) (cbrt (- (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (158 enodes)
* * [misc]simplify:  iters left: 1 (223 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))) (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))) (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667))))
* * * * [misc]progress:  [ 57 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (210 enodes)
* * [misc]simplify:  iters left: 2 (340 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))) (cbrt (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))) (* (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))) (pow x 3)))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))) (cbrt (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))) (* (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))) (pow x 3)))
* [enter]simplify:  Simplifying (* (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (158 enodes)
* * [misc]simplify:  iters left: 1 (223 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* 0.041667 x) -0.666667)) (* (cbrt (+ (* -0.666667 (- -0.666667 (* 0.041667 x))) (* (* 0.041667 x) (* 0.041667 x)))) (cbrt (+ (* -0.666667 (- -0.666667 (* 0.041667 x))) (* (* 0.041667 x) (* 0.041667 x))))))
* [exit]simplify:  Simplified to (* (cbrt (- (* 0.041667 x) -0.666667)) (* (cbrt (+ (* -0.666667 (- -0.666667 (* 0.041667 x))) (* (* 0.041667 x) (* 0.041667 x)))) (cbrt (+ (* -0.666667 (- -0.666667 (* 0.041667 x))) (* (* 0.041667 x) (* 0.041667 x))))))
* * * * [misc]progress:  [ 58 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))) (* (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))))) (cbrt (- (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (213 enodes)
* * [misc]simplify:  iters left: 2 (354 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))) (pow x 3)) (* (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))) (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))) (pow x 3)) (* (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))) (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667)))))
* [enter]simplify:  Simplifying (* (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))))) (cbrt (- (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (159 enodes)
* * [misc]simplify:  iters left: 1 (224 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -0.666667 (- -0.666667 (* 0.041667 x))) (* (* 0.041667 x) (* 0.041667 x)))) (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -0.666667 (- -0.666667 (* 0.041667 x))) (* (* 0.041667 x) (* 0.041667 x)))) (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667))))
* * * * [misc]progress:  [ 59 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (208 enodes)
* * [misc]simplify:  iters left: 2 (373 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))) (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667)))) (* (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))) (pow x 3)))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))) (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667)))) (* (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))) (pow x 3)))
* [enter]simplify:  Simplifying (* (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (159 enodes)
* * [misc]simplify:  iters left: 1 (224 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667))) (cbrt (+ (* (- (* 0.041667 x) -0.666667) (* 0.041667 x)) (* -0.666667 -0.666667))))
* [exit]simplify:  Simplified to (* (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667))) (cbrt (+ (* (- (* 0.041667 x) -0.666667) (* 0.041667 x)) (* -0.666667 -0.666667))))
* * * * [misc]progress:  [ 60 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))) (* (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667))) (cbrt (- (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (128 enodes)
* * [misc]simplify:  iters left: 2 (202 enodes)
* * [misc]simplify:  iters left: 1 (395 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (+ (* 0.041667 x) -0.666667)) (* x (- (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (* (* (* x x) (+ (* 0.041667 x) -0.666667)) (* x (- (* 0.041667 x) -0.666667)))
* [enter]simplify:  Simplifying (* (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667))) (cbrt (- (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (- (* 0.041667 x) -0.666667)
* [exit]simplify:  Simplified to (- (* 0.041667 x) -0.666667)
* * * * [misc]progress:  [ 61 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (190 enodes)
* * [misc]simplify:  iters left: 2 (295 enodes)
* * [misc]simplify:  iters left: 1 (398 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (* x x)))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (* x x)))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (149 enodes)
* * [misc]simplify:  iters left: 1 (217 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667))))
* * * * [misc]progress:  [ 62 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))) (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (- (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (244 enodes)
* * [misc]simplify:  iters left: 2 (486 enodes)
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (* 0.041667 x) -0.666667)) x) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (* x x)))
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (* 0.041667 x) -0.666667)) x) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (* x x)))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (- (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (108 enodes)
* * [misc]simplify:  iters left: 2 (150 enodes)
* * [misc]simplify:  iters left: 1 (216 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))))
* * * * [misc]progress:  [ 63 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (240 enodes)
* * [misc]simplify:  iters left: 2 (470 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (* x x)) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (* x x)) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)))
* [enter]simplify:  Simplifying (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (152 enodes)
* * [misc]simplify:  iters left: 1 (217 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -0.666667 (- -0.666667 (* 0.041667 x))) (* (* 0.041667 x) (* 0.041667 x)))) (cbrt (- (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -0.666667 (- -0.666667 (* 0.041667 x))) (* (* 0.041667 x) (* 0.041667 x)))) (cbrt (- (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 64 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))) (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (153 enodes)
* * [misc]simplify:  iters left: 2 (293 enodes)
* * [misc]simplify:  iters left: 1 (493 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) (* x x))) (* x (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (* (* (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) (* x x))) (* x (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667)))))
* [enter]simplify:  Simplifying (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 65 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (195 enodes)
* * [misc]simplify:  iters left: 2 (289 enodes)
* * [misc]simplify:  iters left: 1 (349 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (* x (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))))
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (* x (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (149 enodes)
* * [misc]simplify:  iters left: 1 (217 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667))))
* * * * [misc]progress:  [ 66 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))) (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (- (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (245 enodes)
* * [misc]simplify:  iters left: 2 (484 enodes)
* [exit]simplify:  Simplified to (* (* x (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))) (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))))
* [exit]simplify:  Simplified to (* (* x (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))) (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (- (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (108 enodes)
* * [misc]simplify:  iters left: 2 (150 enodes)
* * [misc]simplify:  iters left: 1 (216 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))))
* * * * [misc]progress:  [ 67 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (237 enodes)
* * [misc]simplify:  iters left: 2 (476 enodes)
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (* x x)) (cbrt (* (- (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)))) (* x (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))))
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (* x x)) (cbrt (* (- (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)))) (* x (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))))
* [enter]simplify:  Simplifying (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (152 enodes)
* * [misc]simplify:  iters left: 1 (217 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -0.666667 (- -0.666667 (* 0.041667 x))) (* (* 0.041667 x) (* 0.041667 x)))) (cbrt (- (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -0.666667 (- -0.666667 (* 0.041667 x))) (* (* 0.041667 x) (* 0.041667 x)))) (cbrt (- (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 68 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))) (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (155 enodes)
* * [misc]simplify:  iters left: 2 (285 enodes)
* * [misc]simplify:  iters left: 1 (428 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))) x) (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (* x x)) (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (* (* (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))) x) (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (* x x)) (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667)))))
* [enter]simplify:  Simplifying (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 69 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 1 (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 70 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (cbrt (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (217 enodes)
* * [misc]simplify:  iters left: 1 (291 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)))
* * * * [misc]progress:  [ 71 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (sqrt (+ (* 0.041667 x) -0.666667)))) (cbrt (sqrt (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (sqrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (217 enodes)
* * [misc]simplify:  iters left: 1 (271 enodes)
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (* 0.041667 x) -0.666667)) x) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)) (* x (cbrt (sqrt (+ (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (* 0.041667 x) -0.666667)) x) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)) (* x (cbrt (sqrt (+ (* 0.041667 x) -0.666667)))))
* * * * [misc]progress:  [ 72 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt 1)) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt 1))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (110 enodes)
* * [misc]simplify:  iters left: 2 (214 enodes)
* * [misc]simplify:  iters left: 1 (291 enodes)
* [exit]simplify:  Simplified to (* (* (* x (cbrt 1)) (cbrt (+ (* 0.041667 x) -0.666667))) (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))))
* [exit]simplify:  Simplified to (* (* (* x (cbrt 1)) (cbrt (+ (* 0.041667 x) -0.666667))) (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))))
* * * * [misc]progress:  [ 73 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (* (cbrt (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (cbrt (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (* (cbrt (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (cbrt (+ (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (167 enodes)
* * [misc]simplify:  iters left: 2 (381 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)) (* (cbrt (cbrt (+ (* 0.041667 x) -0.666667))) (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)) (* (cbrt (cbrt (+ (* 0.041667 x) -0.666667))) (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667)))))
* * * * [misc]progress:  [ 74 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (sqrt (cbrt (+ (* 0.041667 x) -0.666667)))) (sqrt (cbrt (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (sqrt (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (217 enodes)
* * [misc]simplify:  iters left: 1 (291 enodes)
* [exit]simplify:  Simplified to (* (* x (sqrt (cbrt (+ (* 0.041667 x) -0.666667)))) (* (* (cbrt (+ (* 0.041667 x) -0.666667)) x) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)))
* [exit]simplify:  Simplified to (* (* x (sqrt (cbrt (+ (* 0.041667 x) -0.666667)))) (* (* (cbrt (+ (* 0.041667 x) -0.666667)) x) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)))
* * * * [misc]progress:  [ 75 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) 1) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) 1)
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (96 enodes)
* * [misc]simplify:  iters left: 2 (160 enodes)
* * [misc]simplify:  iters left: 1 (224 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* x (cbrt (+ (* 0.041667 x) -0.666667))))
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* x (cbrt (+ (* 0.041667 x) -0.666667))))
* * * * [misc]progress:  [ 76 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (+ -0.666667 (* 0.041667 x))
* [exit]simplify:  Simplified to (+ -0.666667 (* 0.041667 x))
* * * * [misc]progress:  [ 77 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (179 enodes)
* * [misc]simplify:  iters left: 2 (319 enodes)
* * [misc]simplify:  iters left: 1 (397 enodes)
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (* 0.041667 x) -0.666667)) x) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)) (* (cbrt (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))) x))
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (* 0.041667 x) -0.666667)) x) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)) (* (cbrt (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))) x))
* * * * [misc]progress:  [ 78 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))) (cbrt (- (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (147 enodes)
* * [misc]simplify:  iters left: 2 (299 enodes)
* * [misc]simplify:  iters left: 1 (481 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))) x) (* (* (cbrt (+ (* 0.041667 x) -0.666667)) x) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)))
* [exit]simplify:  Simplified to (* (* (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))) x) (* (* (cbrt (+ (* 0.041667 x) -0.666667)) x) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)))
* * * * [misc]progress:  [ 79 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (178 enodes)
* * [misc]simplify:  iters left: 2 (290 enodes)
* * [misc]simplify:  iters left: 1 (357 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667)))) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) x))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667)))) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) x))
* * * * [misc]progress:  [ 80 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (- (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (241 enodes)
* * [misc]simplify:  iters left: 2 (480 enodes)
* [exit]simplify:  Simplified to (* (* (* x (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (* x x)))
* [exit]simplify:  Simplified to (* (* (* x (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (* x x)))
* * * * [misc]progress:  [ 81 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (240 enodes)
* * [misc]simplify:  iters left: 2 (472 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))) (* (* x (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (* (- (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))) (* (* x (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (* (- (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)))))
* * * * [misc]progress:  [ 82 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (149 enodes)
* * [misc]simplify:  iters left: 2 (293 enodes)
* * [misc]simplify:  iters left: 1 (482 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (- (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667))) x) (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (* (- (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (* (* (cbrt (* (- (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667))) x) (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (* (- (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)))))
* * * * [misc]progress:  [ 83 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (193 enodes)
* * [misc]simplify:  iters left: 2 (284 enodes)
* * [misc]simplify:  iters left: 1 (313 enodes)
* [exit]simplify:  Simplified to (* (* x (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (* (cbrt (+ (* 0.041667 x) -0.666667)) x) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)))
* [exit]simplify:  Simplified to (* (* x (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (* (cbrt (+ (* 0.041667 x) -0.666667)) x) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)))
* * * * [misc]progress:  [ 84 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (- (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (155 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (444 enodes)
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (* 0.041667 x) -0.666667)) x) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)) (* x (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (* 0.041667 x) -0.666667)) x) (* (cbrt (+ (* 0.041667 x) -0.666667)) x)) (* x (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667)))))
* * * * [misc]progress:  [ 85 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (192 enodes)
* * [misc]simplify:  iters left: 2 (304 enodes)
* * [misc]simplify:  iters left: 1 (365 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) x) (* (* x (cbrt (+ (* 0.041667 x) -0.666667))) (* x (cbrt (+ (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) x) (* (* x (cbrt (+ (* 0.041667 x) -0.666667))) (* x (cbrt (+ (* 0.041667 x) -0.666667)))))
* * * * [misc]progress:  [ 86 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (- (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (152 enodes)
* * [misc]simplify:  iters left: 2 (297 enodes)
* * [misc]simplify:  iters left: 1 (449 enodes)
* [exit]simplify:  Simplified to (* (* (* x (cbrt (+ (* 0.041667 x) -0.666667))) (* x (cbrt (+ (* 0.041667 x) -0.666667)))) (* (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))) x))
* [exit]simplify:  Simplified to (* (* (* x (cbrt (+ (* 0.041667 x) -0.666667))) (* x (cbrt (+ (* 0.041667 x) -0.666667)))) (* (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))) x))
* * * * [misc]progress:  [ 87 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (cbrt (+ (* 0.041667 x) -0.666667)) (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 88 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (pow (+ (* 0.041667 x) -0.666667) (+ 1/3 1/3))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 89 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (pow (cbrt (+ (* 0.041667 x) -0.666667)) (+ 1 1))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 90 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (pow (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)) 1/3)) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (215 enodes)
* [exit]simplify:  Simplified to (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))
* [exit]simplify:  Simplified to (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))
* * * * [misc]progress:  [ 91 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (pow (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))) 1)) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x))))
* [exit]simplify:  Simplified to (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x))))
* * * * [misc]progress:  [ 92 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (pow (cbrt (+ (* 0.041667 x) -0.666667)) 2)) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 93 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (pow (cbrt (+ (* 0.041667 x) -0.666667)) (+ 1 1))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 94 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (pow (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))) 1)) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 95 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (exp (+ (log (cbrt (+ (* 0.041667 x) -0.666667))) (log (cbrt (+ (* 0.041667 x) -0.666667)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (+ (* 0.041667 x) -0.666667))) (log (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ -0.666667 (* 0.041667 x)))) (log (cbrt (+ -0.666667 (* 0.041667 x)))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ -0.666667 (* 0.041667 x)))) (log (cbrt (+ -0.666667 (* 0.041667 x)))))
* * * * [misc]progress:  [ 96 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (exp (log (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (log (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x)))))
* [exit]simplify:  Simplified to (log (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x)))))
* * * * [misc]progress:  [ 97 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (log (exp (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x)))))
* [exit]simplify:  Simplified to (exp (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x)))))
* * * * [misc]progress:  [ 98 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (cbrt (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (215 enodes)
* [exit]simplify:  Simplified to (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))
* [exit]simplify:  Simplified to (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))
* * * * [misc]progress:  [ 99 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (* (cbrt (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x))))) (cbrt (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x))))) (cbrt (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x))))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x)))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x)))))
* * * * [misc]progress:  [ 100 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (cbrt (* (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (130 enodes)
* [exit]simplify:  Simplified to (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))
* [exit]simplify:  Simplified to (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))
* * * * [misc]progress:  [ 101 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (sqrt (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (sqrt (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ -0.666667 (* 0.041667 x))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ -0.666667 (* 0.041667 x))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ -0.666667 (* 0.041667 x))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ -0.666667 (* 0.041667 x))))
* * * * [misc]progress:  [ 102 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (/ (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (78 enodes)
* * [misc]simplify:  iters left: 2 (100 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (149 enodes)
* * [misc]simplify:  iters left: 1 (217 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667))))
* * * * [misc]progress:  [ 103 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (/ (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))) (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (- (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (110 enodes)
* * [misc]simplify:  iters left: 2 (174 enodes)
* * [misc]simplify:  iters left: 1 (277 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (cbrt (- (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (108 enodes)
* * [misc]simplify:  iters left: 2 (150 enodes)
* * [misc]simplify:  iters left: 1 (216 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))))
* * * * [misc]progress:  [ 104 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (/ (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (176 enodes)
* * [misc]simplify:  iters left: 1 (279 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (* (+ -0.666667 (* 0.041667 x)) (- (* 0.041667 x) -0.666667))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (* (+ -0.666667 (* 0.041667 x)) (- (* 0.041667 x) -0.666667))))
* [enter]simplify:  Simplifying (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (152 enodes)
* * [misc]simplify:  iters left: 1 (217 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -0.666667 (- -0.666667 (* 0.041667 x))) (* (* 0.041667 x) (* 0.041667 x)))) (cbrt (- (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -0.666667 (- -0.666667 (* 0.041667 x))) (* (* 0.041667 x) (* 0.041667 x)))) (cbrt (- (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 105 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (/ (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))) (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (94 enodes)
* * [misc]simplify:  iters left: 1 (197 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (* 0.041667 x) -0.666667) (+ -0.666667 (* 0.041667 x)))) (cbrt (* (- (* 0.041667 x) -0.666667) (+ -0.666667 (* 0.041667 x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (* 0.041667 x) -0.666667) (+ -0.666667 (* 0.041667 x)))) (cbrt (* (- (* 0.041667 x) -0.666667) (+ -0.666667 (* 0.041667 x)))))
* [enter]simplify:  Simplifying (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (* (cbrt (- (* 0.041667 x) -0.666667)) (cbrt (- (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 106 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* 1 (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 107 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x))))))
* * * * [misc]progress:  [ 108 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (sqrt (+ (* 0.041667 x) -0.666667)))) (cbrt (sqrt (+ (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (sqrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (sqrt (+ -0.666667 (* 0.041667 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (sqrt (+ -0.666667 (* 0.041667 x)))))
* * * * [misc]progress:  [ 109 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt 1)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt 1))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt 1))
* [exit]simplify:  Simplified to (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt 1))
* * * * [misc]progress:  [ 110 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (* (cbrt (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* 0.041667 x) -0.666667)) (* (cbrt (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (cbrt (+ (* 0.041667 x) -0.666667)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ -0.666667 (* 0.041667 x))) (* (cbrt (cbrt (+ -0.666667 (* 0.041667 x)))) (cbrt (cbrt (+ -0.666667 (* 0.041667 x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ -0.666667 (* 0.041667 x))) (* (cbrt (cbrt (+ -0.666667 (* 0.041667 x)))) (cbrt (cbrt (+ -0.666667 (* 0.041667 x))))))
* * * * [misc]progress:  [ 111 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (sqrt (cbrt (+ (* 0.041667 x) -0.666667)))) (sqrt (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* 0.041667 x) -0.666667)) (sqrt (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ -0.666667 (* 0.041667 x)))) (cbrt (+ -0.666667 (* 0.041667 x))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ -0.666667 (* 0.041667 x)))) (cbrt (+ -0.666667 (* 0.041667 x))))
* * * * [misc]progress:  [ 112 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (* (cbrt (+ (* 0.041667 x) -0.666667)) 1) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* 0.041667 x) -0.666667)) 1)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (cbrt (+ -0.666667 (* 0.041667 x)))
* [exit]simplify:  Simplified to (cbrt (+ -0.666667 (* 0.041667 x)))
* * * * [misc]progress:  [ 113 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (cbrt (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (* (cbrt (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ -0.666667 (* 0.041667 x)))) (cbrt (+ -0.666667 (* 0.041667 x))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ -0.666667 (* 0.041667 x)))) (cbrt (+ -0.666667 (* 0.041667 x))))
* * * * [misc]progress:  [ 114 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (cbrt (sqrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (sqrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (sqrt (+ -0.666667 (* 0.041667 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (sqrt (+ -0.666667 (* 0.041667 x)))))
* * * * [misc]progress:  [ 115 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (cbrt 1) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x))))
* [exit]simplify:  Simplified to (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x))))
* * * * [misc]progress:  [ 116 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (* (cbrt (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (cbrt (+ (* 0.041667 x) -0.666667)))) (* (cbrt (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ -0.666667 (* 0.041667 x)))) (cbrt (+ -0.666667 (* 0.041667 x))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ -0.666667 (* 0.041667 x)))) (cbrt (+ -0.666667 (* 0.041667 x))))
* * * * [misc]progress:  [ 117 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (sqrt (cbrt (+ (* 0.041667 x) -0.666667))) (* (sqrt (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ -0.666667 (* 0.041667 x)))) (cbrt (+ -0.666667 (* 0.041667 x))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ -0.666667 (* 0.041667 x)))) (cbrt (+ -0.666667 (* 0.041667 x))))
* * * * [misc]progress:  [ 118 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* 1 (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x))))
* [exit]simplify:  Simplified to (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x))))
* * * * [misc]progress:  [ 119 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (/ (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (86 enodes)
* * [misc]simplify:  iters left: 2 (117 enodes)
* * [misc]simplify:  iters left: 1 (119 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))) (cbrt (+ -0.666667 (* 0.041667 x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))) (cbrt (+ -0.666667 (* 0.041667 x))))
* * * * [misc]progress:  [ 120 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (/ (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))) (cbrt (- (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (96 enodes)
* * [misc]simplify:  iters left: 1 (199 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ -0.666667 (* 0.041667 x))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ -0.666667 (* 0.041667 x))))
* * * * [misc]progress:  [ 121 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (/ (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (86 enodes)
* * [misc]simplify:  iters left: 2 (118 enodes)
* * [misc]simplify:  iters left: 1 (120 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))))
* * * * [misc]progress:  [ 122 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (/ (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667))) (cbrt (- (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (cbrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (96 enodes)
* * [misc]simplify:  iters left: 1 (199 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ -0.666667 (* 0.041667 x)) (- (* 0.041667 x) -0.666667))) (cbrt (+ -0.666667 (* 0.041667 x))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ -0.666667 (* 0.041667 x)) (- (* 0.041667 x) -0.666667))) (cbrt (+ -0.666667 (* 0.041667 x))))
* * * * [misc]progress:  [ 123 / 135 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 124 / 135 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (- (+ (* 0.0008680685764312065 (* (pow (pow -0.666667 2) 1/3) (pow x 5))) (* (pow (pow -0.666667 2) 1/3) (pow x 3))) (+ (* 0.041666979166510416 (* (pow (pow -0.666667 2) 1/3) (pow x 4))) (* 0.000578712963 (* (pow (/ 1 (pow -0.666667 4)) 1/3) (pow x 5))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (- (+ (* 0.0008680685764312065 (* (pow (pow -0.666667 2) 1/3) (pow x 5))) (* (pow (pow -0.666667 2) 1/3) (pow x 3))) (+ (* 0.041666979166510416 (* (pow (pow -0.666667 2) 1/3) (pow x 4))) (* 0.000578712963 (* (pow (/ 1 (pow -0.666667 4)) 1/3) (pow x 5))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (86 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* * [misc]simplify:  iters left: 3 (404 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (+ (* 3.0 x) -4.0)) (+ (* (* (cbrt (* -0.666667 -0.666667)) (* 0.0008680685764312065 (pow x 5))) (cbrt (+ -0.666667 (* 0.041667 x)))) 1.0)) (* (- (* (cbrt (* -0.666667 -0.666667)) (- (pow x 3) (* 0.041666979166510416 (pow x 4)))) (* (* 0.000578712963 (pow x 5)) (cbrt (/ 1 (pow -0.666667 4))))) (cbrt (+ -0.666667 (* 0.041667 x)))))
* * * * [misc]progress:  [ 125 / 135 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (- (+ (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) (pow x 3)) (* 56.8880355655821 (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) x))) (+ (* 0.14814829629633333 (/ (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) x) (pow 0.041667 2))) (* 10.66658666730666 (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) (pow x 2))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (- (+ (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) (pow x 3)) (* 56.8880355655821 (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) x))) (+ (* 0.14814829629633333 (/ (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) x) (pow 0.041667 2))) (* 10.66658666730666 (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) (pow x 2))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (95 enodes)
* * [misc]simplify:  iters left: 4 (228 enodes)
* [exit]simplify:  Simplified to (+ (* (- (+ (* (exp (* (+ (log 0.041667) (log x)) (+ 1/3 1/3))) (pow x 3)) (* (exp (* (+ (log 0.041667) (log x)) (+ 1/3 1/3))) (- (* 56.8880355655821 x) (* 10.66658666730666 (* x x))))) (* (/ (exp (* (+ (log 0.041667) (log x)) (+ 1/3 1/3))) (/ (* 0.041667 0.041667) x)) 0.14814829629633333)) (cbrt (+ -0.666667 (* 0.041667 x)))) (+ (+ 1.0 (* -4.0 x)) (* (* x x) 3.0)))
* * * * [misc]progress:  [ 126 / 135 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (- (+ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2)) (* 56.8880355655821 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 10.66658666730666 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2)) x)) (* 0.14814829629633333 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2)) (* (pow -0.041667 2) (pow x 2)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (- (+ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2)) (* 56.8880355655821 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 10.66658666730666 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2)) x)) (* 0.14814829629633333 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2)) (* (pow -0.041667 2) (pow x 2)))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (49 enodes)
* * [misc]simplify:  iters left: 5 (106 enodes)
* * [misc]simplify:  iters left: 4 (301 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) 3.0) (+ (* -4.0 x) 1.0)) (* (* (cbrt (+ (* 0.041667 x) -0.666667)) (pow (exp 3) (+ 0 (log x)))) (exp (* (- (log (- 0.041667)) (log (/ -1 x))) (+ 1/3 1/3))))) (* (- (* (/ (exp (* (- (log (- 0.041667)) (log (/ -1 x))) (+ 1/3 1/3))) (/ (* x x) (pow (exp 3) (+ 0 (log x))))) (- 56.8880355655821 (/ 0.14814829629633333 (* -0.041667 -0.041667)))) (* (/ (* (pow (exp 3) (+ 0 (log x))) 10.66658666730666) x) (exp (* (- (log (- 0.041667)) (log (/ -1 x))) (+ 1/3 1/3))))) (cbrt (+ (* 0.041667 x) -0.666667))))
* * * * [misc]progress:  [ 127 / 135 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (171 enodes)
* * [misc]simplify:  iters left: 2 (285 enodes)
* * [misc]simplify:  iters left: 1 (419 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* -4.0 x) 1.0) (* x (* x 3.0))) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 128 / 135 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (171 enodes)
* * [misc]simplify:  iters left: 2 (285 enodes)
* * [misc]simplify:  iters left: 1 (419 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* -4.0 x) 1.0) (* x (* x 3.0))) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 129 / 135 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (171 enodes)
* * [misc]simplify:  iters left: 2 (285 enodes)
* * [misc]simplify:  iters left: 1 (419 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* -4.0 x) 1.0) (* x (* x 3.0))) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 130 / 135 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (+ (* 0.041667 (pow x 4)) (* 0.00019290441745216052 (/ (pow x 5) (pow -0.666667 2)))) (+ (* 0.666667 (pow x 3)) (* 0.00043403450523274727 (pow x 5)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (- (+ (* 0.041667 (pow x 4)) (* 0.00019290441745216052 (/ (pow x 5) (pow -0.666667 2)))) (+ (* 0.666667 (pow x 3)) (* 0.00043403450523274727 (pow x 5)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* [exit]simplify:  Simplified to (+ (- (/ (/ (pow x 5) (/ -0.666667 0.00019290441745216052)) -0.666667) (+ (* (* x x) (* 0.666667 x)) (* 0.00043403450523274727 (pow x 5)))) (+ (* x (+ -4.0 (* 3.0 x))) (+ 1.0 (* (pow x 4) 0.041667))))
* * * * [misc]progress:  [ 131 / 135 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (+ (* 127.99808002255972 (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 3) x)) (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 3) (pow x 3))) (+ (* 0.2222224444445 (/ (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 3) x) (pow 0.041667 2))) (* 15.99988000095999 (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 3) (pow x 2))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (- (+ (* 127.99808002255972 (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 3) x)) (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 3) (pow x 3))) (+ (* 0.2222224444445 (/ (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 3) x) (pow 0.041667 2))) (* 15.99988000095999 (* (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 3) (pow x 2))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (91 enodes)
* * [misc]simplify:  iters left: 4 (265 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* x -4.0) 1.0) (* x (* x 3.0))) (* (exp (* (+ (log 0.041667) (log x)) (+ 1/3 1/3))) (* (pow (exp 1/3) (+ (log 0.041667) (log x))) (pow x 3)))) (- (- (* (* (* x 127.99808002255972) (pow (exp 1/3) (+ (log 0.041667) (log x)))) (exp (* (+ (log 0.041667) (log x)) (+ 1/3 1/3)))) (* (* (* 15.99988000095999 (* x x)) (pow (exp 1/3) (+ (log 0.041667) (log x)))) (exp (* (+ (log 0.041667) (log x)) (+ 1/3 1/3))))) (* (/ (* 0.2222224444445 x) 0.041667) (/ (exp (* (+ (log 0.041667) (log x)) (+ 1/3 1/3))) (/ 0.041667 (pow (exp 1/3) (+ (log 0.041667) (log x))))))))
* * * * [misc]progress:  [ 132 / 135 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (+ (* 127.99808002255972 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 3)) (pow x 2))) (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 3))) (+ (* 15.99988000095999 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 3)) x)) (* 0.2222224444445 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 3)) (* (pow -0.041667 2) (pow x 2)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (- (+ (* 127.99808002255972 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 3)) (pow x 2))) (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 3))) (+ (* 15.99988000095999 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 3)) x)) (* 0.2222224444445 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 3)) (* (pow -0.041667 2) (pow x 2)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (102 enodes)
* * [misc]simplify:  iters left: 4 (339 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* 3.0 x) x) (+ (* -4.0 x) 1.0)) (* (* (pow (exp 3) (+ 0 (log x))) (pow (exp 1/3) (- (log (- 0.041667)) (log (/ -1 x))))) (exp (* (- (log (- 0.041667)) (log (/ -1 x))) (+ 1/3 1/3))))) (* (* (* (/ (pow (exp 3) (+ 0 (log x))) x) (pow (exp 1/3) (- (log (- 0.041667)) (log (/ -1 x))))) (exp (* (- (log (- 0.041667)) (log (/ -1 x))) (+ 1/3 1/3)))) (- (/ 127.99808002255972 x) 15.99988000095999))) (* (* (* (/ (pow (exp 3) (+ 0 (log x))) (* (* x x) (* -0.041667 -0.041667))) (pow (exp 1/3) (- (log (- 0.041667)) (log (/ -1 x))))) (exp (* (- (log (- 0.041667)) (log (/ -1 x))) (+ 1/3 1/3)))) (- 0.2222224444445)))
* * * * [misc]progress:  [ 133 / 135 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (* (pow x 3) (- (+ (* 0.0008680685764312065 (* (pow (pow -0.666667 2) 1/3) (pow x 2))) (pow (pow -0.666667 2) 1/3)) (+ (* 0.000578712963 (* (pow (/ 1 (pow -0.666667 4)) 1/3) (pow x 2))) (* 0.041666979166510416 (* (pow (pow -0.666667 2) 1/3) x))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (* (pow x 3) (- (+ (* 0.0008680685764312065 (* (pow (pow -0.666667 2) 1/3) (pow x 2))) (pow (pow -0.666667 2) 1/3)) (+ (* 0.000578712963 (* (pow (/ 1 (pow -0.666667 4)) 1/3) (pow x 2))) (* 0.041666979166510416 (* (pow (pow -0.666667 2) 1/3) x))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (85 enodes)
* * [misc]simplify:  iters left: 4 (190 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x 3.0)) (+ (* x -4.0) 1.0)) (* (+ (* (cbrt (* -0.666667 -0.666667)) (* (* x x) 0.0008680685764312065)) (- (- (cbrt (* -0.666667 -0.666667)) (* (* x 0.041666979166510416) (cbrt (* -0.666667 -0.666667)))) (* (* x (* x 0.000578712963)) (cbrt (/ 1 (pow -0.666667 4)))))) (* (pow x 3) (cbrt (+ -0.666667 (* 0.041667 x))))))
* * * * [misc]progress:  [ 134 / 135 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (* (pow x 3) (- (+ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) (* 56.8880355655821 (/ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) (pow x 2)))) (+ (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) (* (pow 0.041667 2) (pow x 2)))) (* 10.66658666730666 (/ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) x))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (* (pow x 3) (- (+ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) (* 56.8880355655821 (/ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) (pow x 2)))) (+ (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) (* (pow 0.041667 2) (pow x 2)))) (* 10.66658666730666 (/ (pow (exp (* 1/3 (- (log 0.041667) (log (/ 1 x))))) 2) x))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (96 enodes)
* * [misc]simplify:  iters left: 4 (247 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (/ (exp (* (+ (log x) (log 0.041667)) (+ 1/3 1/3))) (* x x)) (- 56.8880355655821 (/ 0.14814829629633333 (* 0.041667 0.041667)))) (- (* (/ 10.66658666730666 x) (exp (* (+ (log x) (log 0.041667)) (+ 1/3 1/3)))) (exp (* (+ (log x) (log 0.041667)) (+ 1/3 1/3))))) (* (cbrt (+ -0.666667 (* x 0.041667))) (pow x 3))) (+ (* (* x x) 3.0) (+ (* x -4.0) 1.0)))
* * * * [misc]progress:  [ 135 / 135 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (* (pow x 3) (- (+ (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2) (* 56.8880355655821 (/ (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2) (pow x 2)))) (+ (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2) (* (pow -0.041667 2) (pow x 2)))) (* 10.66658666730666 (/ (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2) x))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (* (pow x 3) (- (+ (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2) (* 56.8880355655821 (/ (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2) (pow x 2)))) (+ (* 0.14814829629633333 (/ (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2) (* (pow -0.041667 2) (pow x 2)))) (* 10.66658666730666 (/ (pow (exp (* 1/3 (- (log (- 0.041667)) (log (/ -1 x))))) 2) x))))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (95 enodes)
* * [misc]simplify:  iters left: 4 (247 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (+ (* x 0.041667) -0.666667)) (pow x 3)) (- (* (/ (exp (* (- (log (- 0.041667)) (log (/ -1 x))) (+ 1/3 1/3))) (* x x)) (- 56.8880355655821 (/ 0.14814829629633333 (* -0.041667 -0.041667)))) (- (* (/ 10.66658666730666 x) (exp (* (- (log (- 0.041667)) (log (/ -1 x))) (+ 1/3 1/3)))) (exp (* (- (log (- 0.041667)) (log (/ -1 x))) (+ 1/3 1/3)))))) (+ (* x (* 3.0 x)) (+ 1.0 (* x -4.0))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 2 1 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (* x 3.0) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 3.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 3.0)) into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 3.0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 1) (* 0 0))) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow x 2)) into (* 3.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 3.0) into 3.0
* [misc]backup-simplify:  Simplify (* 3.0 1) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow (/ 1 (/ 1 x)) 2)) into (* 3.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 3.0) into -3.0
* [misc]backup-simplify:  Simplify (* -3.0 -1) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* 3.0 (pow x 2))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (* (* x 3.0) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 3.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 3.0)) into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 3.0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 1) (* 0 0))) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow x 2)) into (* 3.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 3.0) into 3.0
* [misc]backup-simplify:  Simplify (* 3.0 1) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow (/ 1 (/ 1 x)) 2)) into (* 3.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 3.0) into -3.0
* [misc]backup-simplify:  Simplify (* -3.0 -1) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* 3.0 (pow x 2))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (pow x 3) (+ (* 0.041667 x) -0.666667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (* 1 (- 0.666667)) into -0.666667
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (+ (* 0.041667 1) (* 0 0)) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (+ (* 1 0.041667) (* 0 (- 0.666667))) into 0.041667
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0.041667) (* 0 (- 0.666667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0.041667) (* 0 (- 0.666667))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.041667) (* 0 (- 0.666667)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.041667) (* 0 (- 0.666667))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.041667) (* 0 (- 0.666667)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.041667) (* 0 (- 0.666667))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 (pow x 4)) (* -0.666667 (pow x 3))) into (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (* (pow x -3) 0.041667) into (/ 0.041667 (pow x 3))
* [misc]backup-simplify:  Simplify (/ 0.041667 (pow x 3)) into (/ 0.041667 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) (- 0.666667)) (* 0 0.041667)) into (- (* 0.666667 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (- (* 0.666667 (/ 1 (pow x 3)))) into (- (* 0.666667 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 (- 0.666667)) (* 0 0.041667))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 0.041667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 0.041667))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 0.041667)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 0.041667))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 0.041667)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (* 0.666667 (/ 1 (pow (/ 1 x) 3)))) (* (/ 0.041667 (pow (/ 1 x) 3)) (/ 1 (/ 1 x)))) into (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (- 0.041667)) into (* -0.041667 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* -0.041667 (exp (* 3 (- (log -1) (log x))))) into (* -0.041667 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) (- 0.666667)) (* 0 (- 0.041667))) into (- (* 0.666667 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- (* 0.666667 (exp (* 3 (- (log -1) (log x)))))) into (- (* 0.666667 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (* 0.666667 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (* (* -0.041667 (exp (* 3 (- (log -1) (log (/ 1 (- x))))))) (/ 1 (/ 1 (- x))))) into (- (* 0.041667 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 0.666667 (exp (* 3 (- (log -1) (log (/ -1 x)))))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* x -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -4.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* 0 3.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -4.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 3.0)) into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 3.0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (- 4.0) 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (/ (- 4.0) (* 2 (sqrt 1.0))) into (/ -2.0 (sqrt 1.0))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* x -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -4.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* 0 3.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -4.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 3.0)) into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 3.0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (- 4.0) 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (/ (- 4.0) (* 2 (sqrt 1.0))) into (/ -2.0 (sqrt 1.0))
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* x -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -4.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* 0 3.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -4.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 3.0)) into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 3.0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (- 4.0) 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (/ (- 4.0) (* 2 (sqrt 1.0))) into (/ -2.0 (sqrt 1.0))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* x -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -4.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* 0 3.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -4.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 3.0)) into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 3.0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (- 4.0) 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (/ (- 4.0) (* 2 (sqrt 1.0))) into (/ -2.0 (sqrt 1.0))
* [misc]backup-simplify:  Simplify (* (sqrt 1.0) (sqrt 1.0)) into (pow (sqrt 1.0) 2)
* [misc]backup-simplify:  Simplify (pow (sqrt 1.0) 2) into (pow (sqrt 1.0) 2)
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.0) (/ -2.0 (sqrt 1.0))) (* (/ -2.0 (sqrt 1.0)) (sqrt 1.0))) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 1) (* 0 0))) into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -4.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (/ (- 3.0 (pow (/ -2.0 (sqrt 1.0)) 2) (+)) (* 2 (sqrt 1.0))) into (* 1/2 (/ (- 3.0 (* 4.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 1) (* 0 0))) into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -4.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (/ (- 3.0 (pow (/ -2.0 (sqrt 1.0)) 2) (+)) (* 2 (sqrt 1.0))) into (* 1/2 (/ (- 3.0 (* 4.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.0) (* 1/2 (/ (- 3.0 (* 4.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))) (+ (* (/ -2.0 (sqrt 1.0)) (/ -2.0 (sqrt 1.0))) (* (* 1/2 (/ (- 3.0 (* 4.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0))) (sqrt 1.0)))) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (+ (* 3.0 (pow x 2)) (+ (* (- 4.0) x) (pow (sqrt 1.0) 2))) into (- (+ (* 3.0 (pow x 2)) (pow (sqrt 1.0) 2)) (* 4.0 x))
* [misc]approximate:  Taking taylor expansion of (* (sqrt (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0))) (sqrt (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0))) (sqrt (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -4.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* 1 3.0) into 3.0
* [misc]backup-simplify:  Simplify (* 3.0 1) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (sqrt 3.0) into (sqrt 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (* 1 -4.0) into -4.0
* [misc]backup-simplify:  Simplify (+ -4.0 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (/ (- 4.0) (* 2 (sqrt 3.0))) into (/ -2.0 (sqrt 3.0))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -4.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* 1 3.0) into 3.0
* [misc]backup-simplify:  Simplify (* 3.0 1) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (sqrt 3.0) into (sqrt 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (* 1 -4.0) into -4.0
* [misc]backup-simplify:  Simplify (+ -4.0 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (/ (- 4.0) (* 2 (sqrt 3.0))) into (/ -2.0 (sqrt 3.0))
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0))) (sqrt (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -4.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* 1 3.0) into 3.0
* [misc]backup-simplify:  Simplify (* 3.0 1) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (sqrt 3.0) into (sqrt 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (* 1 -4.0) into -4.0
* [misc]backup-simplify:  Simplify (+ -4.0 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (/ (- 4.0) (* 2 (sqrt 3.0))) into (/ -2.0 (sqrt 3.0))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -4.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* 1 3.0) into 3.0
* [misc]backup-simplify:  Simplify (* 3.0 1) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (sqrt 3.0) into (sqrt 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (* 1 -4.0) into -4.0
* [misc]backup-simplify:  Simplify (+ -4.0 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (/ (- 4.0) (* 2 (sqrt 3.0))) into (/ -2.0 (sqrt 3.0))
* [misc]backup-simplify:  Simplify (* (sqrt 3.0) (sqrt 3.0)) into (pow (sqrt 3.0) 2)
* [misc]backup-simplify:  Simplify (pow (sqrt 3.0) 2) into (pow (sqrt 3.0) 2)
* [misc]backup-simplify:  Simplify (+ (* (sqrt 3.0) (/ -2.0 (sqrt 3.0))) (* (/ -2.0 (sqrt 3.0)) (sqrt 3.0))) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -4.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ -2.0 (sqrt 3.0)) 2) (+)) (* 2 (sqrt 3.0))) into (* 1/2 (/ (- 1.0 (* 4.0 (/ 1 (pow (sqrt 3.0) 2)))) (sqrt 3.0)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -4.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ -2.0 (sqrt 3.0)) 2) (+)) (* 2 (sqrt 3.0))) into (* 1/2 (/ (- 1.0 (* 4.0 (/ 1 (pow (sqrt 3.0) 2)))) (sqrt 3.0)))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 3.0) (* 1/2 (/ (- 1.0 (* 4.0 (/ 1 (pow (sqrt 3.0) 2)))) (sqrt 3.0)))) (+ (* (/ -2.0 (sqrt 3.0)) (/ -2.0 (sqrt 3.0))) (* (* 1/2 (/ (- 1.0 (* 4.0 (/ 1 (pow (sqrt 3.0) 2)))) (sqrt 3.0))) (sqrt 3.0)))) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 4.0) (/ 1 (/ 1 x))) (* (pow (sqrt 3.0) 2) (pow (/ 1 (/ 1 x)) 2)))) into (- (+ 1.0 (* (pow (sqrt 3.0) 2) (pow x 2))) (* 4.0 x))
* [misc]approximate:  Taking taylor expansion of (* (sqrt (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0))) (sqrt (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0))) (sqrt (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -4.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* -1 3.0) into -3.0
* [misc]backup-simplify:  Simplify (* -3.0 -1) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (sqrt 3.0) into (sqrt 3.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (* -1 -4.0) into 4.0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify (+ 0 4.0) into 4.0
* [misc]backup-simplify:  Simplify (/ 4.0 (* 2 (sqrt 3.0))) into (/ 2.0 (sqrt 3.0))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -4.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* -1 3.0) into -3.0
* [misc]backup-simplify:  Simplify (* -3.0 -1) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (sqrt 3.0) into (sqrt 3.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (* -1 -4.0) into 4.0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify (+ 0 4.0) into 4.0
* [misc]backup-simplify:  Simplify (/ 4.0 (* 2 (sqrt 3.0))) into (/ 2.0 (sqrt 3.0))
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0))) (sqrt (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -4.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* -1 3.0) into -3.0
* [misc]backup-simplify:  Simplify (* -3.0 -1) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (sqrt 3.0) into (sqrt 3.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (* -1 -4.0) into 4.0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify (+ 0 4.0) into 4.0
* [misc]backup-simplify:  Simplify (/ 4.0 (* 2 (sqrt 3.0))) into (/ 2.0 (sqrt 3.0))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -4.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* -1 3.0) into -3.0
* [misc]backup-simplify:  Simplify (* -3.0 -1) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (sqrt 3.0) into (sqrt 3.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (* -1 -4.0) into 4.0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify (+ 0 4.0) into 4.0
* [misc]backup-simplify:  Simplify (/ 4.0 (* 2 (sqrt 3.0))) into (/ 2.0 (sqrt 3.0))
* [misc]backup-simplify:  Simplify (* (sqrt 3.0) (sqrt 3.0)) into (pow (sqrt 3.0) 2)
* [misc]backup-simplify:  Simplify (pow (sqrt 3.0) 2) into (pow (sqrt 3.0) 2)
* [misc]backup-simplify:  Simplify (+ (* (sqrt 3.0) (/ 2.0 (sqrt 3.0))) (* (/ 2.0 (sqrt 3.0)) (sqrt 3.0))) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -4.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ 2.0 (sqrt 3.0)) 2) (+)) (* 2 (sqrt 3.0))) into (* 1/2 (/ (- 1.0 (* 4.0 (/ 1 (pow (sqrt 3.0) 2)))) (sqrt 3.0)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -4.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ 2.0 (sqrt 3.0)) 2) (+)) (* 2 (sqrt 3.0))) into (* 1/2 (/ (- 1.0 (* 4.0 (/ 1 (pow (sqrt 3.0) 2)))) (sqrt 3.0)))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 3.0) (* 1/2 (/ (- 1.0 (* 4.0 (/ 1 (pow (sqrt 3.0) 2)))) (sqrt 3.0)))) (+ (* (/ 2.0 (sqrt 3.0)) (/ 2.0 (sqrt 3.0))) (* (* 1/2 (/ (- 1.0 (* 4.0 (/ 1 (pow (sqrt 3.0) 2)))) (sqrt 3.0))) (sqrt 3.0)))) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 4.0 (/ 1 (/ 1 (- x)))) (* (pow (sqrt 3.0) 2) (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ 1.0 (* (pow (sqrt 3.0) 2) (pow x 2))) (* 4.0 x))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (pow (* (* x 3.0) x) 1) (+ (* x -4.0) 1.0))))))>
* * * * [misc]progress:  [ 2 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (exp (log (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (log (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* [exit]simplify:  Simplified to (log (* x (* x 3.0)))
* [exit]simplify:  Simplified to (log (* x (* x 3.0)))
* * * * [misc]progress:  [ 3 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (log (exp (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (exp (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* [exit]simplify:  Simplified to (exp (* x (* x 3.0)))
* [exit]simplify:  Simplified to (exp (* x (* x 3.0)))
* * * * [misc]progress:  [ 4 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* (cbrt (* (* x 3.0) x)) (cbrt (* (* x 3.0) x))) (cbrt (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x 3.0) x)) (cbrt (* (* x 3.0) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 3.0))) (cbrt (* x (* x 3.0))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 3.0))) (cbrt (* x (* x 3.0))))
* [enter]simplify:  Simplifying (cbrt (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (* x 3.0)))
* [exit]simplify:  Simplified to (cbrt (* x (* x 3.0)))
* * * * [misc]progress:  [ 5 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (cbrt (* (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (* x 3.0) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (335 enodes)
* [exit]simplify:  Simplified to (pow (* x (* x 3.0)) 3)
* [exit]simplify:  Simplified to (pow (* x (* x 3.0)) 3)
* * * * [misc]progress:  [ 6 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (sqrt (* (* x 3.0) x)) (sqrt (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* [enter]simplify:  Simplifying (sqrt (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* * * * [misc]progress:  [ 7 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* 1 (* (* x 3.0) x)) (+ (* x -4.0) 1.0))))))>
* * * * [misc]progress:  [ 8 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* x (* 3.0 x)) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* 3.0 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 3.0 x)
* [exit]simplify:  Simplified to (* 3.0 x)
* * * * [misc]progress:  [ 9 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* x (* x 3.0)) (+ (* x -4.0) 1.0))))))>
* * * * [misc]progress:  [ 10 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (pow (* (* x 3.0) x) 1) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* * * * [misc]progress:  [ 11 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (exp (log (* (* x 3.0) x))) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (log (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* [exit]simplify:  Simplified to (log (* x (* x 3.0)))
* [exit]simplify:  Simplified to (log (* x (* x 3.0)))
* * * * [misc]progress:  [ 12 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (log (exp (* (* x 3.0) x))) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (exp (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* [exit]simplify:  Simplified to (exp (* x (* x 3.0)))
* [exit]simplify:  Simplified to (exp (* x (* x 3.0)))
* * * * [misc]progress:  [ 13 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* (cbrt (* (* x 3.0) x)) (cbrt (* (* x 3.0) x))) (cbrt (* (* x 3.0) x))) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x 3.0) x)) (cbrt (* (* x 3.0) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 3.0))) (cbrt (* x (* x 3.0))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 3.0))) (cbrt (* x (* x 3.0))))
* [enter]simplify:  Simplifying (cbrt (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (* x 3.0)))
* [exit]simplify:  Simplified to (cbrt (* x (* x 3.0)))
* * * * [misc]progress:  [ 14 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (cbrt (* (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (* x 3.0) x))) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (* x 3.0) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (335 enodes)
* [exit]simplify:  Simplified to (pow (* x (* x 3.0)) 3)
* [exit]simplify:  Simplified to (pow (* x (* x 3.0)) 3)
* * * * [misc]progress:  [ 15 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (sqrt (* (* x 3.0) x)) (sqrt (* (* x 3.0) x))) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* [enter]simplify:  Simplifying (sqrt (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* * * * [misc]progress:  [ 16 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* 1 (* (* x 3.0) x)) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* * * * [misc]progress:  [ 17 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* x (* 3.0 x)) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* 3.0 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 3.0 x)
* [exit]simplify:  Simplified to (* 3.0 x)
* * * * [misc]progress:  [ 18 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* x (* x 3.0)) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* * * * [misc]progress:  [ 19 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (pow (* (pow x 3) (+ (* 0.041667 x) -0.666667)) 1) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* * * * [misc]progress:  [ 20 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (+ (* (log x) 3) (log (+ (* 0.041667 x) -0.666667)))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (log (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (+ (log (+ -0.666667 (* x 0.041667))) (* 3 (log x)))
* [exit]simplify:  Simplified to (+ (log (+ -0.666667 (* x 0.041667))) (* 3 (log x)))
* * * * [misc]progress:  [ 21 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (+ (log (pow x 3)) (log (+ (* 0.041667 x) -0.666667)))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (log (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* [exit]simplify:  Simplified to (+ (log (+ -0.666667 (* x 0.041667))) (* (log x) 3))
* [exit]simplify:  Simplified to (+ (log (+ -0.666667 (* x 0.041667))) (* (log x) 3))
* * * * [misc]progress:  [ 22 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (log (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (log (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (140 enodes)
* * [misc]simplify:  iters left: 1 (142 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (+ (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 23 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (exp (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (exp (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (141 enodes)
* * [misc]simplify:  iters left: 2 (199 enodes)
* * [misc]simplify:  iters left: 1 (206 enodes)
* [exit]simplify:  Simplified to (pow (exp (pow x 3)) (+ (* 0.041667 x) -0.666667))
* [exit]simplify:  Simplified to (pow (exp (pow x 3)) (+ (* 0.041667 x) -0.666667))
* * * * [misc]progress:  [ 24 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)) (+ (* 0.041667 x) -0.666667)))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))
* [exit]simplify:  Simplified to (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))
* * * * [misc]progress:  [ 25 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (100 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* [enter]simplify:  Simplifying (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 26 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (+ (* 0.041667 x) -0.666667)) 3)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (+ (* 0.041667 x) -0.666667)) 3)
* * * * [misc]progress:  [ 27 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 28 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 1 (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* * * * [misc]progress:  [ 29 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x 3) (* 0.041667 x)) (* (pow x 3) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* 0.041667 x))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (39 enodes)
* [exit]simplify:  Simplified to (* (* 0.041667 x) (pow x 3))
* [exit]simplify:  Simplified to (* (* 0.041667 x) (pow x 3))
* [enter]simplify:  Simplifying (* (pow x 3) -0.666667)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* -0.666667 x) (* x x))
* [exit]simplify:  Simplified to (* (* -0.666667 x) (* x x))
* * * * [misc]progress:  [ 30 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* 0.041667 x) (pow x 3)) (* -0.666667 (pow x 3))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (* 0.041667 x) (pow x 3))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (39 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* 0.041667 x))
* [exit]simplify:  Simplified to (* (pow x 3) (* 0.041667 x))
* [enter]simplify:  Simplifying (* -0.666667 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* -0.666667 x) (* x x))
* [exit]simplify:  Simplified to (* (* -0.666667 x) (* x x))
* * * * [misc]progress:  [ 31 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x))
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x))
* * * * [misc]progress:  [ 32 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (sqrt (+ (* 0.041667 x) -0.666667))) (sqrt (+ (* 0.041667 x) -0.666667))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (sqrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* 0.041667 x) -0.666667)) (pow x 3))
* [exit]simplify:  Simplified to (* (sqrt (+ (* 0.041667 x) -0.666667)) (pow x 3))
* * * * [misc]progress:  [ 33 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) 1) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (pow x 3) 1)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 34 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* x x) (* x (+ (* 0.041667 x) -0.666667))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* x (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* [exit]simplify:  Simplified to (* x (+ -0.666667 (* x 0.041667)))
* [exit]simplify:  Simplified to (* x (+ -0.666667 (* x 0.041667)))
* * * * [misc]progress:  [ 35 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (pow x 3)) (cbrt (pow x 3))) (* (cbrt (pow x 3)) (+ (* 0.041667 x) -0.666667))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow x 3)) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* [exit]simplify:  Simplified to (* (+ -0.666667 (* x 0.041667)) x)
* [exit]simplify:  Simplified to (* (+ -0.666667 (* x 0.041667)) x)
* * * * [misc]progress:  [ 36 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* x (* (* x x) (+ (* 0.041667 x) -0.666667))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (* x x) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* [exit]simplify:  Simplified to (* (+ (* x 0.041667) -0.666667) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x 0.041667) -0.666667) (* x x))
* * * * [misc]progress:  [ 37 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (sqrt (pow x 3)) (* (sqrt (pow x 3)) (+ (* 0.041667 x) -0.666667))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (sqrt (pow x 3)) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow x 3)) (+ -0.666667 (* x 0.041667)))
* [exit]simplify:  Simplified to (* (sqrt (pow x 3)) (+ -0.666667 (* x 0.041667)))
* * * * [misc]progress:  [ 38 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 1 (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (102 enodes)
* * [misc]simplify:  iters left: 1 (104 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (+ (* 0.041667 x) -0.666667))
* [exit]simplify:  Simplified to (* (pow x 3) (+ (* 0.041667 x) -0.666667))
* * * * [misc]progress:  [ 39 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (pow x 3) (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (99 enodes)
* * [misc]simplify:  iters left: 3 (291 enodes)
* [exit]simplify:  Simplified to (* (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)) (pow x 3))
* [exit]simplify:  Simplified to (* (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)) (pow x 3))
* * * * [misc]progress:  [ 40 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (pow x 3) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (- (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (164 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 0.041667 x) -0.666667) x) (* (* x x) (- (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (* (* (+ (* 0.041667 x) -0.666667) x) (* (* x x) (- (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 41 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (+ (* 0.041667 x) -0.666667) (pow x 3)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* * * * [misc]progress:  [ 42 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (pow (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) (+ 1/2 1/2))))>
* [enter]simplify:  Simplifying (+ 1/2 1/2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/2 1/2)
* [exit]simplify:  Simplified to (+ 1/2 1/2)
* * * * [misc]progress:  [ 43 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (pow (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (+ 1 1))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 44 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (pow (* (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) 1/2)))>
* [enter]simplify:  Simplifying (* (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (77 enodes)
* * [misc]simplify:  iters left: 3 (364 enodes)
* [exit]simplify:  Simplified to (* (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))) (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))
* [exit]simplify:  Simplified to (* (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))) (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))
* * * * [misc]progress:  [ 45 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (pow (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) 1)))>
* [enter]simplify:  Simplifying (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))
* [exit]simplify:  Simplified to (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))
* * * * [misc]progress:  [ 46 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (pow (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) 2)))>
* * * * [misc]progress:  [ 47 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (pow (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (+ 1 1))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 48 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (pow (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) 1)))>
* * * * [misc]progress:  [ 49 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (exp (+ (log (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (log (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))))>
* [enter]simplify:  Simplifying (+ (log (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (log (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (+ (log (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))) (log (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))))
* [exit]simplify:  Simplified to (+ (log (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))) (log (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))))
* * * * [misc]progress:  [ 50 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (exp (log (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))))>
* [enter]simplify:  Simplifying (log (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (log (+ (* 3.0 (* x x)) (+ 1.0 (* x -4.0))))
* [exit]simplify:  Simplified to (log (+ (* 3.0 (* x x)) (+ 1.0 (* x -4.0))))
* * * * [misc]progress:  [ 51 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (log (exp (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))))>
* [enter]simplify:  Simplifying (exp (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (58 enodes)
* * [misc]simplify:  iters left: 2 (76 enodes)
* * [misc]simplify:  iters left: 1 (78 enodes)
* [exit]simplify:  Simplified to (exp (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))
* [exit]simplify:  Simplified to (exp (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))
* * * * [misc]progress:  [ 52 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (cbrt (* (* (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (* (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))))>
* [enter]simplify:  Simplifying (* (* (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (* (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (401 enodes)
* [exit]simplify:  Simplified to (pow (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))) 3)
* [exit]simplify:  Simplified to (pow (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))) 3)
* * * * [misc]progress:  [ 53 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (* (cbrt (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))) (cbrt (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))) (cbrt (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))) (cbrt (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))) (cbrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))) (cbrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* [enter]simplify:  Simplifying (cbrt (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))
* [exit]simplify:  Simplified to (cbrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))
* * * * [misc]progress:  [ 54 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (cbrt (* (* (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))))>
* [enter]simplify:  Simplifying (* (* (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* [exit]simplify:  Simplified to (pow (+ (* 3.0 (* x x)) (+ 1.0 (* x -4.0))) 3)
* [exit]simplify:  Simplified to (pow (+ (* 3.0 (* x x)) (+ 1.0 (* x -4.0))) 3)
* * * * [misc]progress:  [ 55 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (sqrt (* (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (77 enodes)
* * [misc]simplify:  iters left: 3 (364 enodes)
* [exit]simplify:  Simplified to (* (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))) (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))
* [exit]simplify:  Simplified to (* (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))) (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))
* * * * [misc]progress:  [ 56 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))) (sqrt (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))))>
* [enter]simplify:  Simplifying (sqrt (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))
* [enter]simplify:  Simplifying (sqrt (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))
* * * * [misc]progress:  [ 57 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 58 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (/ (* (sqrt (+ (pow (* (* x 3.0) x) 3) (pow (+ (* x -4.0) 1.0) 3))) (sqrt (+ (pow (* (* x 3.0) x) 3) (pow (+ (* x -4.0) 1.0) 3)))) (* (sqrt (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0))))) (sqrt (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (pow (* (* x 3.0) x) 3) (pow (+ (* x -4.0) 1.0) 3))) (sqrt (+ (pow (* (* x 3.0) x) 3) (pow (+ (* x -4.0) 1.0) 3))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (242 enodes)
* [exit]simplify:  Simplified to (+ (pow (* x (* x 3.0)) 3) (pow (+ 1.0 (* x -4.0)) 3))
* [exit]simplify:  Simplified to (+ (pow (* x (* x 3.0)) 3) (pow (+ 1.0 (* x -4.0)) 3))
* [enter]simplify:  Simplifying (* (sqrt (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0))))) (sqrt (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (164 enodes)
* [exit]simplify:  Simplified to (- (* (+ 1.0 (* -4.0 x)) (+ 1.0 (* -4.0 x))) (* (* x (* x 3.0)) (- (+ 1.0 (* -4.0 x)) (* x (* x 3.0)))))
* [exit]simplify:  Simplified to (- (* (+ 1.0 (* -4.0 x)) (+ 1.0 (* -4.0 x))) (* (* x (* x 3.0)) (- (+ 1.0 (* -4.0 x)) (* x (* x 3.0)))))
* * * * [misc]progress:  [ 59 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (/ (* (sqrt (+ (pow (* (* x 3.0) x) 3) (pow (+ (* x -4.0) 1.0) 3))) (sqrt (- (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0))))) (* (sqrt (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0))))) (sqrt (- (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (pow (* (* x 3.0) x) 3) (pow (+ (* x -4.0) 1.0) 3))) (sqrt (- (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (492 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (- (* x (* x 3.0)) (+ 1.0 (* x -4.0))) (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))) (sqrt (+ (pow (* x (* x 3.0)) 3) (pow (+ 1.0 (* x -4.0)) 3))))
* [exit]simplify:  Simplified to (* (sqrt (* (- (* x (* x 3.0)) (+ 1.0 (* x -4.0))) (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))) (sqrt (+ (pow (* x (* x 3.0)) 3) (pow (+ 1.0 (* x -4.0)) 3))))
* [enter]simplify:  Simplifying (* (sqrt (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0))))) (sqrt (- (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* [exit]simplify:  Simplified to (* (sqrt (- (* (* x x) 3.0) (+ 1.0 (* -4.0 x)))) (sqrt (+ (* (* (* x x) 3.0) (- (* (* x x) 3.0) (+ 1.0 (* -4.0 x)))) (* (+ 1.0 (* -4.0 x)) (+ 1.0 (* -4.0 x))))))
* [exit]simplify:  Simplified to (* (sqrt (- (* (* x x) 3.0) (+ 1.0 (* -4.0 x)))) (sqrt (+ (* (* (* x x) 3.0) (- (* (* x x) 3.0) (+ 1.0 (* -4.0 x)))) (* (+ 1.0 (* -4.0 x)) (+ 1.0 (* -4.0 x))))))
* * * * [misc]progress:  [ 60 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (/ (* (sqrt (- (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)))) (sqrt (+ (pow (* (* x 3.0) x) 3) (pow (+ (* x -4.0) 1.0) 3)))) (* (sqrt (- (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))))))>
* [enter]simplify:  Simplifying (* (sqrt (- (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)))) (sqrt (+ (pow (* (* x 3.0) x) 3) (pow (+ (* x -4.0) 1.0) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (495 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (- (* x (* x 3.0)) (+ 1.0 (* -4.0 x))) (+ (+ 1.0 (* -4.0 x)) (* x (* x 3.0))))) (sqrt (+ (pow (+ 1.0 (* -4.0 x)) 3) (pow (* x (* x 3.0)) 3))))
* [exit]simplify:  Simplified to (* (sqrt (* (- (* x (* x 3.0)) (+ 1.0 (* -4.0 x))) (+ (+ 1.0 (* -4.0 x)) (* x (* x 3.0))))) (sqrt (+ (pow (+ 1.0 (* -4.0 x)) 3) (pow (* x (* x 3.0)) 3))))
* [enter]simplify:  Simplifying (* (sqrt (- (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x (* x 3.0)) (- (* x (* x 3.0)) (+ 1.0 (* x -4.0)))) (* (+ 1.0 (* x -4.0)) (+ 1.0 (* x -4.0))))) (sqrt (- (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x (* x 3.0)) (- (* x (* x 3.0)) (+ 1.0 (* x -4.0)))) (* (+ 1.0 (* x -4.0)) (+ 1.0 (* x -4.0))))) (sqrt (- (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* * * * [misc]progress:  [ 61 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (/ (* (sqrt (- (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)))) (sqrt (- (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0))))) (* (sqrt (- (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (- (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))))>
* [enter]simplify:  Simplifying (* (sqrt (- (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)))) (sqrt (- (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (241 enodes)
* [exit]simplify:  Simplified to (* (+ (+ 1.0 (* -4.0 x)) (* (* x x) 3.0)) (- (* (* x x) 3.0) (+ 1.0 (* -4.0 x))))
* [exit]simplify:  Simplified to (* (+ (+ 1.0 (* -4.0 x)) (* (* x x) 3.0)) (- (* (* x x) 3.0) (+ 1.0 (* -4.0 x))))
* [enter]simplify:  Simplifying (* (sqrt (- (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (- (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (65 enodes)
* * [misc]simplify:  iters left: 1 (82 enodes)
* [exit]simplify:  Simplified to (- (* x (* x 3.0)) (+ 1.0 (* x -4.0)))
* [exit]simplify:  Simplified to (- (* x (* x 3.0)) (+ 1.0 (* x -4.0)))
* * * * [misc]progress:  [ 62 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* 1 (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))))>
* * * * [misc]progress:  [ 63 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (* (cbrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (cbrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))) (cbrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (* (cbrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (cbrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (sqrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0))))) (cbrt (sqrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0)))))) (sqrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0)))))
* [exit]simplify:  Simplified to (* (* (cbrt (sqrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0))))) (cbrt (sqrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0)))))) (sqrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0)))))
* * * * [misc]progress:  [ 64 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (* (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))) (sqrt (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (* (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0)))) (fabs (cbrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0))))))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0)))) (fabs (cbrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0))))))
* * * * [misc]progress:  [ 65 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))) (sqrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))) (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))) (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* * * * [misc]progress:  [ 66 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt 1)) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt 1))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* [exit]simplify:  Simplified to (* (sqrt 1) (sqrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0)))))
* [exit]simplify:  Simplified to (* (sqrt 1) (sqrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0)))))
* * * * [misc]progress:  [ 67 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))) (sqrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))) (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))) (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* * * * [misc]progress:  [ 68 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) 1) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) 1)
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))
* * * * [misc]progress:  [ 69 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (* (cbrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (cbrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))) (* (cbrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))) (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))) (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* * * * [misc]progress:  [ 70 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (* (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))) (* (sqrt (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))) (sqrt (cbrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))))
* [exit]simplify:  Simplified to (* (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))) (sqrt (cbrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))))
* * * * [misc]progress:  [ 71 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (* (sqrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))))>
* [enter]simplify:  Simplifying (* (sqrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))) (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))) (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* * * * [misc]progress:  [ 72 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt 1) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))
* [exit]simplify:  Simplified to (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))
* * * * [misc]progress:  [ 73 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (* (sqrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))))>
* [enter]simplify:  Simplifying (* (sqrt (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))) (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))) (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* * * * [misc]progress:  [ 74 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* 1 (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))
* [exit]simplify:  Simplified to (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))
* * * * [misc]progress:  [ 75 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (/ (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (pow (* (* x 3.0) x) 3) (pow (+ (* x -4.0) 1.0) 3)))) (sqrt (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (pow (* (* x 3.0) x) 3) (pow (+ (* x -4.0) 1.0) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (260 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (pow (* x (* x 3.0)) 3) (pow (+ 1.0 (* x -4.0)) 3))) (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* [exit]simplify:  Simplified to (* (sqrt (+ (pow (* x (* x 3.0)) 3) (pow (+ 1.0 (* x -4.0)) 3))) (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* * * * [misc]progress:  [ 76 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (/ (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (- (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0))))) (sqrt (- (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (- (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (271 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))) (- (* x (* x 3.0)) (+ 1.0 (* x -4.0))))) (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* [exit]simplify:  Simplified to (* (sqrt (* (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))) (- (* x (* x 3.0)) (+ 1.0 (* x -4.0))))) (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* * * * [misc]progress:  [ 77 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (/ (* (sqrt (+ (pow (* (* x 3.0) x) 3) (pow (+ (* x -4.0) 1.0) 3))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (sqrt (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (pow (* (* x 3.0) x) 3) (pow (+ (* x -4.0) 1.0) 3))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (256 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (pow (* x (* x 3.0)) 3) (pow (+ 1.0 (* x -4.0)) 3))) (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* [exit]simplify:  Simplified to (* (sqrt (+ (pow (* x (* x 3.0)) 3) (pow (+ 1.0 (* x -4.0)) 3))) (sqrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* * * * [misc]progress:  [ 78 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (/ (* (sqrt (- (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (sqrt (- (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (sqrt (- (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (274 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (- (* x (* x 3.0)) (+ 1.0 (* -4.0 x))) (+ (+ 1.0 (* -4.0 x)) (* x (* x 3.0))))) (sqrt (+ (+ 1.0 (* -4.0 x)) (* x (* x 3.0)))))
* [exit]simplify:  Simplified to (* (sqrt (* (- (* x (* x 3.0)) (+ 1.0 (* -4.0 x))) (+ (+ 1.0 (* -4.0 x)) (* x (* x 3.0))))) (sqrt (+ (+ 1.0 (* -4.0 x)) (* x (* x 3.0)))))
* * * * [misc]progress:  [ 79 / 91 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* * * * [misc]progress:  [ 80 / 91 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (110 enodes)
* * [misc]simplify:  iters left: 3 (173 enodes)
* * [misc]simplify:  iters left: 2 (279 enodes)
* * [misc]simplify:  iters left: 1 (434 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* 3.0 (* x x)) (+ 1.0 (* x -4.0))))
* * * * [misc]progress:  [ 81 / 91 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (110 enodes)
* * [misc]simplify:  iters left: 3 (173 enodes)
* * [misc]simplify:  iters left: 2 (279 enodes)
* * [misc]simplify:  iters left: 1 (434 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* 3.0 (* x x)) (+ 1.0 (* x -4.0))))
* * * * [misc]progress:  [ 82 / 91 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (110 enodes)
* * [misc]simplify:  iters left: 3 (173 enodes)
* * [misc]simplify:  iters left: 2 (279 enodes)
* * [misc]simplify:  iters left: 1 (434 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* 3.0 (* x x)) (+ 1.0 (* x -4.0))))
* * * * [misc]progress:  [ 83 / 91 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (110 enodes)
* * [misc]simplify:  iters left: 3 (170 enodes)
* * [misc]simplify:  iters left: 2 (268 enodes)
* * [misc]simplify:  iters left: 1 (408 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ 1.0 (* -4.0 x)) (* (* x x) 3.0)))
* * * * [misc]progress:  [ 84 / 91 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (110 enodes)
* * [misc]simplify:  iters left: 3 (170 enodes)
* * [misc]simplify:  iters left: 2 (268 enodes)
* * [misc]simplify:  iters left: 1 (408 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ 1.0 (* -4.0 x)) (* (* x x) 3.0)))
* * * * [misc]progress:  [ 85 / 91 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (110 enodes)
* * [misc]simplify:  iters left: 3 (170 enodes)
* * [misc]simplify:  iters left: 2 (268 enodes)
* * [misc]simplify:  iters left: 1 (408 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ 1.0 (* -4.0 x)) (* (* x x) 3.0)))
* * * * [misc]progress:  [ 86 / 91 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (+ (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (243 enodes)
* * [misc]simplify:  iters left: 2 (498 enodes)
* [exit]simplify:  Simplified to (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (* x x) (- (* 0.666667 x) 3.0)))
* * * * [misc]progress:  [ 87 / 91 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (+ (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (243 enodes)
* * [misc]simplify:  iters left: 2 (498 enodes)
* [exit]simplify:  Simplified to (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (* x x) (- (* 0.666667 x) 3.0)))
* * * * [misc]progress:  [ 88 / 91 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (* 0.041667 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 0.666667 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (+ (- (* 0.041667 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 0.666667 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (277 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ 1.0 (* x -4.0)) (* 3.0 (* x x))) (* (pow x 3) (- (* 0.041667 x) 0.666667)))
* * * * [misc]progress:  [ 89 / 91 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (+ (* 3.0 (pow x 2)) (pow (sqrt 1.0) 2)) (* 4.0 x))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (+ (* 3.0 (pow x 2)) (pow (sqrt 1.0) 2)) (* 4.0 x)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (128 enodes)
* * [misc]simplify:  iters left: 3 (345 enodes)
* [exit]simplify:  Simplified to (+ (+ (- 1.0 (* 4.0 x)) (* x (* x 3.0))) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 90 / 91 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (+ 1.0 (* (pow (sqrt 3.0) 2) (pow x 2))) (* 4.0 x))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (+ 1.0 (* (pow (sqrt 3.0) 2) (pow x 2))) (* 4.0 x)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* * [misc]simplify:  iters left: 3 (301 enodes)
* [exit]simplify:  Simplified to (+ (- (* x (* 3.0 x)) (- (* 4.0 x) 1.0)) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 91 / 91 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (+ 1.0 (* (pow (sqrt 3.0) 2) (pow x 2))) (* 4.0 x))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (+ 1.0 (* (pow (sqrt 3.0) 2) (pow x 2))) (* 4.0 x)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* * [misc]simplify:  iters left: 3 (301 enodes)
* [exit]simplify:  Simplified to (+ (- (* x (* 3.0 x)) (- (* 4.0 x) 1.0)) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))> #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (* (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))> #<alt-delta (Î» (x) (+ (* (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))> #<alt-event (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x))))> #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x))) +nan.0)) , with alts (#<alt-event (Î» (x) (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x))))>)
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x (* x x)) -0.666667) (+ (* (* x x) 3.0) (+ (* x -4.0) 1.0))) (* 0.041667 (* x (* x (* x x)))))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
