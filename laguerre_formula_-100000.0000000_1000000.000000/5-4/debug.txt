* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (253 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* x 3.0) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 3.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 3.0)) into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 3.0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 1) (* 0 0))) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow x 2)) into (* 3.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 3.0) into 3.0
* [misc]backup-simplify:  Simplify (* 3.0 1) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow (/ 1 (/ 1 x)) 2)) into (* 3.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 3.0) into -3.0
* [misc]backup-simplify:  Simplify (* -3.0 -1) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* 3.0 (pow x 2))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (pow x 3) (+ (* 0.041667 x) -0.666667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (* 1 (- 0.666667)) into -0.666667
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (+ (* 0.041667 1) (* 0 0)) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (+ (* 1 0.041667) (* 0 (- 0.666667))) into 0.041667
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0.041667) (* 0 (- 0.666667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0.041667) (* 0 (- 0.666667))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.041667) (* 0 (- 0.666667)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.041667) (* 0 (- 0.666667))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.041667) (* 0 (- 0.666667)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.041667) (* 0 (- 0.666667))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 (pow x 4)) (* -0.666667 (pow x 3))) into (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (* (pow x -3) 0.041667) into (/ 0.041667 (pow x 3))
* [misc]backup-simplify:  Simplify (/ 0.041667 (pow x 3)) into (/ 0.041667 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) (- 0.666667)) (* 0 0.041667)) into (- (* 0.666667 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (- (* 0.666667 (/ 1 (pow x 3)))) into (- (* 0.666667 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 (- 0.666667)) (* 0 0.041667))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 0.041667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 0.041667))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 0.041667)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 0.041667))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 0.041667)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (* 0.666667 (/ 1 (pow (/ 1 x) 3)))) (* (/ 0.041667 (pow (/ 1 x) 3)) (/ 1 (/ 1 x)))) into (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (- 0.041667)) into (* -0.041667 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* -0.041667 (exp (* 3 (- (log -1) (log x))))) into (* -0.041667 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) (- 0.666667)) (* 0 (- 0.041667))) into (- (* 0.666667 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- (* 0.666667 (exp (* 3 (- (log -1) (log x)))))) into (- (* 0.666667 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (* 0.666667 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (* (* -0.041667 (exp (* 3 (- (log -1) (log (/ 1 (- x))))))) (/ 1 (/ 1 (- x))))) into (- (* 0.041667 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 0.666667 (exp (* 3 (- (log -1) (log (/ -1 x)))))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* x -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -4.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* x -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -4.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* 0 3.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -4.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 3.0)) into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 3.0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (- 4.0) 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 1) (* 0 0))) into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -4.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (+ (* 3.0 (pow x 2)) (+ (* (- 4.0) x) 1.0)) into (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -4.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -4.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* 1 3.0) into 3.0
* [misc]backup-simplify:  Simplify (* 3.0 1) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (* 1 -4.0) into -4.0
* [misc]backup-simplify:  Simplify (+ -4.0 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -4.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 4.0) (/ 1 (/ 1 x))) (* 3.0 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -4.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -4.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* -1 3.0) into -3.0
* [misc]backup-simplify:  Simplify (* -3.0 -1) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (* -1 -4.0) into 4.0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify (+ 0 4.0) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -4.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 4.0 (/ 1 (/ 1 (- x)))) (* 3.0 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* x -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -4.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* x -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -4.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* 0 3.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -4.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 3.0)) into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 3.0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (- 4.0) 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 1) (* 0 0))) into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -4.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (+ 0 3.0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (+ (* 3.0 (pow x 2)) (+ (* (- 4.0) x) 1.0)) into (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -4.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 3.0) (/ 1 x)) (+ (* (/ 1 x) -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -4.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* 1 3.0) into 3.0
* [misc]backup-simplify:  Simplify (* 3.0 1) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (+ 0 3.0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (* (pow x -3) 0.041667) into (/ 0.041667 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (* 1 -4.0) into -4.0
* [misc]backup-simplify:  Simplify (+ -4.0 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (/ 0.041667 (pow x 3)) (- 4.0)) into (- (* 0.041667 (/ 1 (pow x 3))) 4.0)
* [misc]backup-simplify:  Simplify (- (* 0.041667 (/ 1 (pow x 3))) 4.0) into (- (* 0.041667 (/ 1 (pow x 3))) 4.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) (- 0.666667)) (* 0 0.041667)) into (- (* 0.666667 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -4.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ (- (* 0.666667 (/ 1 (pow x 3)))) 1.0) into (- 1.0 (* 0.666667 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (- 1.0 (* 0.666667 (/ 1 (pow x 3)))) into (- 1.0 (* 0.666667 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (+ (- 1.0 (* 0.666667 (/ 1 (pow (/ 1 x) 3)))) (+ (* (- (* 0.041667 (/ 1 (pow (/ 1 x) 3))) 4.0) (/ 1 (/ 1 x))) (* 3.0 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 3.0 (pow x 2)) (+ (* 0.041667 (pow x 4)) 1.0)) (+ (* 0.666667 (pow x 3)) (* 4.0 x)))
* [misc]approximate:  Taking taylor expansion of (+ (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -4.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) (+ (* (/ 1 (- x)) -4.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -4.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -4.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* -1 3.0) into -3.0
* [misc]backup-simplify:  Simplify (* -3.0 -1) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (+ 0 3.0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (- 0.041667)) into (* -0.041667 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (* -1 -4.0) into 4.0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify (+ 0 4.0) into 4.0
* [misc]backup-simplify:  Simplify (+ (* -0.041667 (exp (* 3 (- (log -1) (log x))))) 4.0) into (- 4.0 (* 0.041667 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 4.0 (* 0.041667 (exp (* 3 (- (log -1) (log x)))))) into (- 4.0 (* 0.041667 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) (- 0.666667)) (* 0 (- 0.041667))) into (- (* 0.666667 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -4.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ (- (* 0.666667 (exp (* 3 (- (log -1) (log x)))))) 1.0) into (- 1.0 (* 0.666667 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 1.0 (* 0.666667 (exp (* 3 (- (log -1) (log x)))))) into (- 1.0 (* 0.666667 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (- 1.0 (* 0.666667 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (+ (* (- 4.0 (* 0.041667 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (/ 1 (/ 1 (- x)))) (* 3.0 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 0.041667 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (+ 1.0 (* 3.0 (pow x 2)))) (+ (* 0.666667 (exp (* 3 (- (log -1) (log (/ -1 x)))))) (* 4.0 x)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (pow (* (* x 3.0) x) 1) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 2 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (exp (log (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* [exit]simplify:  Simplified to (log (* x (* x 3.0)))
* [exit]simplify:  Simplified to (log (* x (* x 3.0)))
* * * * [misc]progress:  [ 3 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (log (exp (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* [exit]simplify:  Simplified to (exp (* x (* x 3.0)))
* [exit]simplify:  Simplified to (exp (* x (* x 3.0)))
* * * * [misc]progress:  [ 4 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* (cbrt (* (* x 3.0) x)) (cbrt (* (* x 3.0) x))) (cbrt (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x 3.0) x)) (cbrt (* (* x 3.0) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 3.0))) (cbrt (* x (* x 3.0))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 3.0))) (cbrt (* x (* x 3.0))))
* [enter]simplify:  Simplifying (cbrt (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (* x 3.0)))
* [exit]simplify:  Simplified to (cbrt (* x (* x 3.0)))
* * * * [misc]progress:  [ 5 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (cbrt (* (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (* x 3.0) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (335 enodes)
* [exit]simplify:  Simplified to (pow (* x (* x 3.0)) 3)
* [exit]simplify:  Simplified to (pow (* x (* x 3.0)) 3)
* * * * [misc]progress:  [ 6 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (sqrt (* (* x 3.0) x)) (sqrt (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* [enter]simplify:  Simplifying (sqrt (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* * * * [misc]progress:  [ 7 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* 1 (* (* x 3.0) x)) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 8 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (* 3.0 x)) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* 3.0 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 3.0 x)
* [exit]simplify:  Simplified to (* 3.0 x)
* * * * [misc]progress:  [ 9 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (* x 3.0)) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 10 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (pow (* (pow x 3) (+ (* 0.041667 x) -0.666667)) 1) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 11 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (+ (* (log x) 3) (log (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (log (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (+ (log (+ -0.666667 (* x 0.041667))) (* 3 (log x)))
* [exit]simplify:  Simplified to (+ (log (+ -0.666667 (* x 0.041667))) (* 3 (log x)))
* * * * [misc]progress:  [ 12 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (+ (log (pow x 3)) (log (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (log (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* [exit]simplify:  Simplified to (+ (log (+ -0.666667 (* x 0.041667))) (* (log x) 3))
* [exit]simplify:  Simplified to (+ (log (+ -0.666667 (* x 0.041667))) (* (log x) 3))
* * * * [misc]progress:  [ 13 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (log (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (140 enodes)
* * [misc]simplify:  iters left: 1 (142 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (+ (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 14 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (exp (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (141 enodes)
* * [misc]simplify:  iters left: 2 (199 enodes)
* * [misc]simplify:  iters left: 1 (206 enodes)
* [exit]simplify:  Simplified to (pow (exp (pow x 3)) (+ (* 0.041667 x) -0.666667))
* [exit]simplify:  Simplified to (pow (exp (pow x 3)) (+ (* 0.041667 x) -0.666667))
* * * * [misc]progress:  [ 15 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)) (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))
* [exit]simplify:  Simplified to (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))
* * * * [misc]progress:  [ 16 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (100 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* [enter]simplify:  Simplifying (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 17 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (+ (* 0.041667 x) -0.666667)) 3)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (+ (* 0.041667 x) -0.666667)) 3)
* * * * [misc]progress:  [ 18 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 19 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 1 (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 20 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x 3) (* 0.041667 x)) (* (pow x 3) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* 0.041667 x))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (39 enodes)
* [exit]simplify:  Simplified to (* (* 0.041667 x) (pow x 3))
* [exit]simplify:  Simplified to (* (* 0.041667 x) (pow x 3))
* [enter]simplify:  Simplifying (* (pow x 3) -0.666667)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* -0.666667 x) (* x x))
* [exit]simplify:  Simplified to (* (* -0.666667 x) (* x x))
* * * * [misc]progress:  [ 21 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* 0.041667 x) (pow x 3)) (* -0.666667 (pow x 3))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* 0.041667 x) (pow x 3))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (39 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* 0.041667 x))
* [exit]simplify:  Simplified to (* (pow x 3) (* 0.041667 x))
* [enter]simplify:  Simplifying (* -0.666667 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* -0.666667 x) (* x x))
* [exit]simplify:  Simplified to (* (* -0.666667 x) (* x x))
* * * * [misc]progress:  [ 22 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x))
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x))
* * * * [misc]progress:  [ 23 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (sqrt (+ (* 0.041667 x) -0.666667))) (sqrt (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (sqrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* 0.041667 x) -0.666667)) (pow x 3))
* [exit]simplify:  Simplified to (* (sqrt (+ (* 0.041667 x) -0.666667)) (pow x 3))
* * * * [misc]progress:  [ 24 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) 1) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) 1)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 25 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* x x) (* x (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* x (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* [exit]simplify:  Simplified to (* x (+ -0.666667 (* x 0.041667)))
* [exit]simplify:  Simplified to (* x (+ -0.666667 (* x 0.041667)))
* * * * [misc]progress:  [ 26 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (pow x 3)) (cbrt (pow x 3))) (* (cbrt (pow x 3)) (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (pow x 3)) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* [exit]simplify:  Simplified to (* (+ -0.666667 (* x 0.041667)) x)
* [exit]simplify:  Simplified to (* (+ -0.666667 (* x 0.041667)) x)
* * * * [misc]progress:  [ 27 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* x (* (* x x) (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* [exit]simplify:  Simplified to (* (+ (* x 0.041667) -0.666667) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x 0.041667) -0.666667) (* x x))
* * * * [misc]progress:  [ 28 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (sqrt (pow x 3)) (* (sqrt (pow x 3)) (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (sqrt (pow x 3)) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow x 3)) (+ -0.666667 (* x 0.041667)))
* [exit]simplify:  Simplified to (* (sqrt (pow x 3)) (+ -0.666667 (* x 0.041667)))
* * * * [misc]progress:  [ 29 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 1 (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (102 enodes)
* * [misc]simplify:  iters left: 1 (104 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (+ (* 0.041667 x) -0.666667))
* [exit]simplify:  Simplified to (* (pow x 3) (+ (* 0.041667 x) -0.666667))
* * * * [misc]progress:  [ 30 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (pow x 3) (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (99 enodes)
* * [misc]simplify:  iters left: 3 (291 enodes)
* [exit]simplify:  Simplified to (* (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)) (pow x 3))
* [exit]simplify:  Simplified to (* (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)) (pow x 3))
* * * * [misc]progress:  [ 31 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (pow x 3) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (- (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (164 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 0.041667 x) -0.666667) x) (* (* x x) (- (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (* (* (+ (* 0.041667 x) -0.666667) x) (* (* x x) (- (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 32 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (+ (* 0.041667 x) -0.666667) (pow x 3)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 33 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (log (* (exp (* (* x 3.0) x)) (exp (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (exp (* (* x 3.0) x)) (exp (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (58 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* * [misc]simplify:  iters left: 1 (69 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ 1.0 (* -4.0 x)) (* (* x x) 3.0)))
* [exit]simplify:  Simplified to (exp (+ (+ 1.0 (* -4.0 x)) (* (* x x) 3.0)))
* * * * [misc]progress:  [ 34 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (pow (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) 1)))>
* * * * [misc]progress:  [ 35 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (exp (log (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (log (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* [exit]simplify:  Simplified to (log (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0))))
* [exit]simplify:  Simplified to (log (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0))))
* * * * [misc]progress:  [ 36 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (log (exp (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (exp (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* * [misc]simplify:  iters left: 2 (72 enodes)
* * [misc]simplify:  iters left: 1 (74 enodes)
* [exit]simplify:  Simplified to (exp (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))
* [exit]simplify:  Simplified to (exp (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0))))
* * * * [misc]progress:  [ 37 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (* (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))) (cbrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))) (cbrt (+ (* x (* x 3.0)) (+ 1.0 (* x -4.0)))))
* [enter]simplify:  Simplifying (cbrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0))))
* * * * [misc]progress:  [ 38 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (cbrt (* (* (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (* (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* [exit]simplify:  Simplified to (pow (+ (* 3.0 (* x x)) (+ 1.0 (* x -4.0))) 3)
* [exit]simplify:  Simplified to (pow (+ (* 3.0 (* x x)) (+ 1.0 (* x -4.0))) 3)
* * * * [misc]progress:  [ 39 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0))))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0))))
* [enter]simplify:  Simplifying (sqrt (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0))))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0))))
* * * * [misc]progress:  [ 40 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (/ (+ (pow (* (* x 3.0) x) 3) (pow (+ (* x -4.0) 1.0) 3)) (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))))>
* [enter]simplify:  Simplifying (+ (pow (* (* x 3.0) x) 3) (pow (+ (* x -4.0) 1.0) 3))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (240 enodes)
* [exit]simplify:  Simplified to (+ (pow (* x (* x 3.0)) 3) (pow (+ 1.0 (* x -4.0)) 3))
* [exit]simplify:  Simplified to (+ (pow (* x (* x 3.0)) 3) (pow (+ 1.0 (* x -4.0)) 3))
* [enter]simplify:  Simplifying (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* [exit]simplify:  Simplified to (+ (* (* x (* x 3.0)) (* x (* x 3.0))) (* (- (+ 1.0 (* -4.0 x)) (* x (* x 3.0))) (+ 1.0 (* -4.0 x))))
* [exit]simplify:  Simplified to (+ (* (* x (* x 3.0)) (* x (* x 3.0))) (* (- (+ 1.0 (* -4.0 x)) (* x (* x 3.0))) (+ 1.0 (* -4.0 x))))
* * * * [misc]progress:  [ 41 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* 1 (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))>
* * * * [misc]progress:  [ 42 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (/ (- (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0))) (- (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))>
* [enter]simplify:  Simplifying (- (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (258 enodes)
* [exit]simplify:  Simplified to (* (+ (+ 1.0 (* -4.0 x)) (* x (* x 3.0))) (- (* x (* x 3.0)) (+ 1.0 (* -4.0 x))))
* [exit]simplify:  Simplified to (* (+ (+ 1.0 (* -4.0 x)) (* x (* x 3.0))) (- (* x (* x 3.0)) (+ 1.0 (* -4.0 x))))
* [enter]simplify:  Simplifying (- (* (* x 3.0) x) (+ (* x -4.0) 1.0))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (78 enodes)
* [exit]simplify:  Simplified to (- (* (* x x) 3.0) (+ 1.0 (* x -4.0)))
* [exit]simplify:  Simplified to (- (* (* x x) 3.0) (+ 1.0 (* x -4.0)))
* * * * [misc]progress:  [ 43 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ (* (* x 3.0) x) (* x -4.0)) 1.0)))>
* [enter]simplify:  Simplifying (+ (* (* x 3.0) x) (* x -4.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* [exit]simplify:  Simplified to (* x (+ -4.0 (* x 3.0)))
* [exit]simplify:  Simplified to (* x (+ -4.0 (* x 3.0)))
* * * * [misc]progress:  [ 44 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ (* x -4.0) 1.0) (* (* x 3.0) x))))>
* * * * [misc]progress:  [ 45 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (* (exp (* (* x 3.0) x)) (exp (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (exp (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (* (exp (* (* x 3.0) x)) (exp (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (127 enodes)
* * [misc]simplify:  iters left: 3 (286 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ (* -4.0 x) 1.0) (* 3.0 (* x x)))))
* [exit]simplify:  Simplified to (exp (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ (* -4.0 x) 1.0) (* 3.0 (* x x)))))
* * * * [misc]progress:  [ 46 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (exp (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (exp (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (exp (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (326 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ 1.0 (* -4.0 x)) (* x (* 3.0 x)))))
* [exit]simplify:  Simplified to (exp (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ 1.0 (* -4.0 x)) (* x (* 3.0 x)))))
* * * * [misc]progress:  [ 47 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) 1))>
* * * * [misc]progress:  [ 48 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (log (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (255 enodes)
* [exit]simplify:  Simplified to (log (+ (+ (+ 1.0 (* x -4.0)) (* 3.0 (* x x))) (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* [exit]simplify:  Simplified to (log (+ (+ (+ 1.0 (* x -4.0)) (* 3.0 (* x x))) (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* * * * [misc]progress:  [ 49 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (exp (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (362 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ (+ 1.0 (* x -4.0)) (* 3.0 (* x x))) (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* [exit]simplify:  Simplified to (exp (+ (+ (+ 1.0 (* x -4.0)) (* 3.0 (* x x))) (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* * * * [misc]progress:  [ 50 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (cbrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))) (cbrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (cbrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (258 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (+ 1.0 (* x -4.0)) (* (* x 3.0) x)) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (+ (+ 1.0 (* x -4.0)) (* (* x 3.0) x)) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (+ 1.0 (* x -4.0)) (* (* x 3.0) x)) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (+ (+ 1.0 (* x -4.0)) (* (* x 3.0) x)) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))))
* [enter]simplify:  Simplifying (cbrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (255 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ (+ 1.0 (* x -4.0)) (* 3.0 (* x x))) (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* [exit]simplify:  Simplified to (cbrt (+ (+ (+ 1.0 (* x -4.0)) (* 3.0 (* x x))) (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* * * * [misc]progress:  [ 51 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (* (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (264 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ (+ 1.0 (* x -4.0)) (* (* x 3.0) x)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ (+ 1.0 (* x -4.0)) (* (* x 3.0) x)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))) 3)
* * * * [misc]progress:  [ 52 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (sqrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))))>
* [enter]simplify:  Simplifying (sqrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (255 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (+ 1.0 (* x -4.0)) (* 3.0 (* x x))) (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* [exit]simplify:  Simplified to (sqrt (+ (+ (+ 1.0 (* x -4.0)) (* 3.0 (* x x))) (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* [enter]simplify:  Simplifying (sqrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (255 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (+ 1.0 (* x -4.0)) (* 3.0 (* x x))) (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* [exit]simplify:  Simplified to (sqrt (+ (+ (+ 1.0 (* x -4.0)) (* 3.0 (* x x))) (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* * * * [misc]progress:  [ 53 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (* (pow x 3) (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0))))) (* (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))) (+ (pow (* (* x 3.0) x) 3) (pow (+ (* x -4.0) 1.0) 3)))) (* (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))) (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))))>
* [enter]simplify:  Simplifying (+ (* (* (pow x 3) (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0))))) (* (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))) (+ (pow (* (* x 3.0) x) 3) (pow (+ (* x -4.0) 1.0) 3))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (119 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* x (* x 3.0)) (* x (* x 3.0))) (* (- (+ 1.0 (* -4.0 x)) (* x (* x 3.0))) (+ 1.0 (* -4.0 x)))) (+ (* (pow -0.666667 3) (pow x 3)) (* (* (pow x 3) (* 0.041667 x)) (* (* 0.041667 x) (* 0.041667 x))))) (* (+ (* -0.666667 (- -0.666667 (* 0.041667 x))) (* (* 0.041667 x) (* 0.041667 x))) (+ (pow (+ 1.0 (* -4.0 x)) 3) (pow (* x (* x 3.0)) 3))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* x (* x 3.0)) (* x (* x 3.0))) (* (- (+ 1.0 (* -4.0 x)) (* x (* x 3.0))) (+ 1.0 (* -4.0 x)))) (+ (* (pow -0.666667 3) (pow x 3)) (* (* (pow x 3) (* 0.041667 x)) (* (* 0.041667 x) (* 0.041667 x))))) (* (+ (* -0.666667 (- -0.666667 (* 0.041667 x))) (* (* 0.041667 x) (* 0.041667 x))) (+ (pow (+ 1.0 (* -4.0 x)) 3) (pow (* x (* x 3.0)) 3))))
* [enter]simplify:  Simplifying (* (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))) (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (75 enodes)
* * [misc]simplify:  iters left: 4 (273 enodes)
* [exit]simplify:  Simplified to (* (+ (* (- (+ (* -4.0 x) 1.0) (* (* x x) 3.0)) (+ (* -4.0 x) 1.0)) (* (* (* x x) 3.0) (* (* x x) 3.0))) (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667)))
* [exit]simplify:  Simplified to (* (+ (* (- (+ (* -4.0 x) 1.0) (* (* x x) 3.0)) (+ (* -4.0 x) 1.0)) (* (* (* x x) 3.0) (* (* x x) 3.0))) (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667)))
* * * * [misc]progress:  [ 54 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (* (pow x 3) (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (- (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (* (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))) (- (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0))))) (* (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))) (- (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))>
* [enter]simplify:  Simplifying (+ (* (* (pow x 3) (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (- (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (* (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))) (- (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (303 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* 3.0 (* x x)) (+ (* -4.0 x) 1.0)) (* x x)) (+ (* (* -0.666667 -0.666667) (* x -0.666667)) (* (* (* 0.041667 x) (* 0.041667 x)) (* x (* 0.041667 x))))) (* (+ (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (- -0.666667 (* 0.041667 x)))) (* (+ (* 3.0 (* x x)) (+ (* -4.0 x) 1.0)) (- (* 3.0 (* x x)) (+ (* -4.0 x) 1.0)))))
* [exit]simplify:  Simplified to (+ (* (* (- (* 3.0 (* x x)) (+ (* -4.0 x) 1.0)) (* x x)) (+ (* (* -0.666667 -0.666667) (* x -0.666667)) (* (* (* 0.041667 x) (* 0.041667 x)) (* x (* 0.041667 x))))) (* (+ (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (- -0.666667 (* 0.041667 x)))) (* (+ (* 3.0 (* x x)) (+ (* -4.0 x) 1.0)) (- (* 3.0 (* x x)) (+ (* -4.0 x) 1.0)))))
* [enter]simplify:  Simplifying (* (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))) (- (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (276 enodes)
* [exit]simplify:  Simplified to (* (- (* (* 3.0 x) x) (+ 1.0 (* -4.0 x))) (+ (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (- -0.666667 (* 0.041667 x)))))
* [exit]simplify:  Simplified to (* (- (* (* 3.0 x) x) (+ 1.0 (* -4.0 x))) (+ (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (- -0.666667 (* 0.041667 x)))))
* * * * [misc]progress:  [ 55 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (* (pow x 3) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0))))) (* (- (* 0.041667 x) -0.666667) (+ (pow (* (* x 3.0) x) 3) (pow (+ (* x -4.0) 1.0) 3)))) (* (- (* 0.041667 x) -0.666667) (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))))>
* [enter]simplify:  Simplifying (+ (* (* (pow x 3) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0))))) (* (- (* 0.041667 x) -0.666667) (+ (pow (* (* x 3.0) x) 3) (pow (+ (* x -4.0) 1.0) 3))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (98 enodes)
* * [misc]simplify:  iters left: 4 (406 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* 3.0 (* x x)) (- (* 0.041667 x) -0.666667)) (* (* 3.0 (* x x)) (* 3.0 (* x x)))) (* (* (+ 1.0 (* -4.0 x)) (+ 1.0 (* -4.0 x))) (* (- (* 0.041667 x) -0.666667) (+ 1.0 (* -4.0 x))))) (* (- (* (+ 1.0 (* -4.0 x)) (+ 1.0 (* -4.0 x))) (* (* 3.0 (* x x)) (- (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))))) (* (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667)) (pow x 3))))
* [exit]simplify:  Simplified to (+ (+ (* (* (* 3.0 (* x x)) (- (* 0.041667 x) -0.666667)) (* (* 3.0 (* x x)) (* 3.0 (* x x)))) (* (* (+ 1.0 (* -4.0 x)) (+ 1.0 (* -4.0 x))) (* (- (* 0.041667 x) -0.666667) (+ 1.0 (* -4.0 x))))) (* (- (* (+ 1.0 (* -4.0 x)) (+ 1.0 (* -4.0 x))) (* (* 3.0 (* x x)) (- (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))))) (* (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667)) (pow x 3))))
* [enter]simplify:  Simplifying (* (- (* 0.041667 x) -0.666667) (+ (* (* (* x 3.0) x) (* (* x 3.0) x)) (- (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)) (* (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (219 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* 0.041667 x) -0.666667) (+ 1.0 (* -4.0 x))) (- (+ 1.0 (* -4.0 x)) (* (* x x) 3.0))) (* (* (* (* x x) 3.0) (* (* x x) 3.0)) (- (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (+ (* (* (- (* 0.041667 x) -0.666667) (+ 1.0 (* -4.0 x))) (- (+ 1.0 (* -4.0 x)) (* (* x x) 3.0))) (* (* (* (* x x) 3.0) (* (* x x) 3.0)) (- (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 56 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (* (pow x 3) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (- (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (* (- (* 0.041667 x) -0.666667) (- (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0))))) (* (- (* 0.041667 x) -0.666667) (- (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))>
* [enter]simplify:  Simplifying (+ (* (* (pow x 3) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (- (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (* (- (* 0.041667 x) -0.666667) (- (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (+ (* x -4.0) 1.0) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (210 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ (* 3.0 (* x x)) (+ (* -4.0 x) 1.0)) (- (* 0.041667 x) -0.666667)) (- (* 3.0 (* x x)) (+ (* -4.0 x) 1.0))) (* (* (- (* 3.0 (* x x)) (+ (* -4.0 x) 1.0)) (* x x)) (* x (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (+ (* (* (+ (* 3.0 (* x x)) (+ (* -4.0 x) 1.0)) (- (* 0.041667 x) -0.666667)) (- (* 3.0 (* x x)) (+ (* -4.0 x) 1.0))) (* (* (- (* 3.0 (* x x)) (+ (* -4.0 x) 1.0)) (* x x)) (* x (* (+ (* 0.041667 x) -0.666667) (- (* 0.041667 x) -0.666667)))))
* [enter]simplify:  Simplifying (* (- (* 0.041667 x) -0.666667) (- (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (134 enodes)
* * [misc]simplify:  iters left: 2 (499 enodes)
* [exit]simplify:  Simplified to (* (- (* 0.041667 x) -0.666667) (- (* (* x x) 3.0) (+ (* x -4.0) 1.0)))
* [exit]simplify:  Simplified to (* (- (* 0.041667 x) -0.666667) (- (* (* x x) 3.0) (+ (* x -4.0) 1.0)))
* * * * [misc]progress:  [ 57 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (* (pow x 3) (+ (* 0.041667 x) -0.666667)) 3) (pow (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) 3)) (+ (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (- (* (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))))>
* [enter]simplify:  Simplifying (+ (pow (* (pow x 3) (+ (* 0.041667 x) -0.666667)) 3) (pow (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) 3))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (+ 1.0 (* -4.0 x)) (* (* x x) 3.0)) 3) (pow (* (pow x 3) (+ (* 0.041667 x) -0.666667)) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (+ 1.0 (* -4.0 x)) (* (* x x) 3.0)) 3) (pow (* (pow x 3) (+ (* 0.041667 x) -0.666667)) 3))
* [enter]simplify:  Simplifying (+ (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (- (* (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))) (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (346 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (+ 1.0 (* -4.0 x)) (* (* x x) 3.0)) (+ (* (* (- x) (* x x)) (+ (* 0.041667 x) -0.666667)) (+ (+ 1.0 (* -4.0 x)) (* (* x x) 3.0)))) (* (* (+ (* 0.041667 x) -0.666667) (* (* x x) (* x x))) (* (+ (* 0.041667 x) -0.666667) (* x x))))
* [exit]simplify:  Simplified to (+ (* (+ (+ 1.0 (* -4.0 x)) (* (* x x) 3.0)) (+ (* (* (- x) (* x x)) (+ (* 0.041667 x) -0.666667)) (+ (+ 1.0 (* -4.0 x)) (* (* x x) 3.0)))) (* (* (+ (* 0.041667 x) -0.666667) (* (* x x) (* x x))) (* (+ (* 0.041667 x) -0.666667) (* x x))))
* * * * [misc]progress:  [ 58 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))>
* * * * [misc]progress:  [ 59 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (* (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))) (- (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))>
* [enter]simplify:  Simplifying (- (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (* (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (222 enodes)
* [exit]simplify:  Simplified to (- (* (* (* x x) (+ (* 0.041667 x) -0.666667)) (* (+ (* 0.041667 x) -0.666667) (* (* x x) (* x x)))) (* (+ (+ 1.0 (* -4.0 x)) (* x (* 3.0 x))) (+ (+ 1.0 (* -4.0 x)) (* x (* 3.0 x)))))
* [exit]simplify:  Simplified to (- (* (* (* x x) (+ (* 0.041667 x) -0.666667)) (* (+ (* 0.041667 x) -0.666667) (* (* x x) (* x x)))) (* (+ (+ 1.0 (* -4.0 x)) (* x (* 3.0 x))) (+ (+ 1.0 (* -4.0 x)) (* x (* 3.0 x)))))
* [enter]simplify:  Simplifying (- (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* * [misc]simplify:  iters left: 3 (274 enodes)
* [exit]simplify:  Simplified to (- (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ 1.0 (* x -4.0)) (* (* x 3.0) x)))
* [exit]simplify:  Simplified to (- (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ 1.0 (* x -4.0)) (* (* x 3.0) x)))
* * * * [misc]progress:  [ 60 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (* x 3.0) x)) (+ (* x -4.0) 1.0)))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (* x 3.0) x))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (138 enodes)
* * [misc]simplify:  iters left: 2 (234 enodes)
* * [misc]simplify:  iters left: 1 (341 enodes)
* [exit]simplify:  Simplified to (* (+ (+ 3.0 (* -0.666667 x)) (* x (* 0.041667 x))) (* x x))
* [exit]simplify:  Simplified to (* (+ (+ 3.0 (* -0.666667 x)) (* x (* 0.041667 x))) (* x x))
* * * * [misc]progress:  [ 61 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (* 0.041667 x)) (+ (* (pow x 3) -0.666667) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) -0.666667) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (146 enodes)
* * [misc]simplify:  iters left: 1 (182 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ (* -0.666667 x) 3.0)) (+ (* x -4.0) 1.0))
* [exit]simplify:  Simplified to (+ (* (* x x) (+ (* -0.666667 x) 3.0)) (+ (* x -4.0) 1.0))
* * * * [misc]progress:  [ 62 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* 0.041667 x) (pow x 3)) (+ (* -0.666667 (pow x 3)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))))>
* [enter]simplify:  Simplifying (+ (* -0.666667 (pow x 3)) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (146 enodes)
* * [misc]simplify:  iters left: 1 (182 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ (* -0.666667 x) 3.0)) (+ (* x -4.0) 1.0))
* [exit]simplify:  Simplified to (+ (* (* x x) (+ (* -0.666667 x) 3.0)) (+ (* x -4.0) 1.0))
* * * * [misc]progress:  [ 63 / 75 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))))>
* * * * [misc]progress:  [ 64 / 75 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (264 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ 1.0 (* -4.0 x)) (* (* x 3.0) x)))
* * * * [misc]progress:  [ 65 / 75 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (264 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ 1.0 (* -4.0 x)) (* (* x 3.0) x)))
* * * * [misc]progress:  [ 66 / 75 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (264 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ 1.0 (* -4.0 x)) (* (* x 3.0) x)))
* * * * [misc]progress:  [ 67 / 75 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (248 enodes)
* [exit]simplify:  Simplified to (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x)))
* * * * [misc]progress:  [ 68 / 75 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (248 enodes)
* [exit]simplify:  Simplified to (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x)))
* * * * [misc]progress:  [ 69 / 75 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (* 0.041667 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 0.666667 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (- (* 0.041667 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 0.666667 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (287 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ 1.0 (* x -4.0)) (* 3.0 (* x x))) (* (- (* 0.041667 x) 0.666667) (pow x 3)))
* * * * [misc]progress:  [ 70 / 75 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (304 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x 3.0) x) (- 1.0 (* 4.0 x))) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 71 / 75 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (304 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x 3.0) x) (- 1.0 (* 4.0 x))) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 72 / 75 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (304 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x 3.0) x) (- 1.0 (* 4.0 x))) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 73 / 75 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 3.0 x)) (- 1.0 (* 4.0 x)))
* * * * [misc]progress:  [ 74 / 75 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 3.0 (pow x 2)) (+ (* 0.041667 (pow x 4)) 1.0)) (+ (* 0.666667 (pow x 3)) (* 4.0 x))))>
* [enter]simplify:  Simplifying (- (+ (* 3.0 (pow x 2)) (+ (* 0.041667 (pow x 4)) 1.0)) (+ (* 0.666667 (pow x 3)) (* 4.0 x)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (252 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 0.041667 (pow x 4)) (- 1.0 (* 4.0 x))) (* (* x x) (- 3.0 (* 0.666667 x))))
* * * * [misc]progress:  [ 75 / 75 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.041667 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (+ 1.0 (* 3.0 (pow x 2)))) (+ (* 0.666667 (exp (* 3 (- (log -1) (log (/ -1 x)))))) (* 4.0 x))))>
* [enter]simplify:  Simplifying (- (+ (* 0.041667 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (+ 1.0 (* 3.0 (pow x 2)))) (+ (* 0.666667 (exp (* 3 (- (log -1) (log (/ -1 x)))))) (* 4.0 x)))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (280 enodes)
* [exit]simplify:  Simplified to (+ (+ (- 1.0 (* x 4.0)) (* (* x 3.0) x)) (* (pow x 3) (- (* 0.041667 x) 0.666667)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* (- (* 0.666667 x) 3.0) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (- (* 0.666667 x) 3.0) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (- (* 0.666667 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (* 0.666667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.666667 in x
* [misc]backup-simplify:  Simplify 0.666667 into 0.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (- (* 0.666667 x) 3.0) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (- (* 0.666667 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (* 0.666667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.666667 in x
* [misc]backup-simplify:  Simplify 0.666667 into 0.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0.666667 0) into 0
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (- 3.0) 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 1) (* 0 0)) into 0.666667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.666667 0) into 0.666667
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 0) (* 0.666667 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 1) (+ (* 0.666667 0) (* 0 0))) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 0) (+ (* 0.666667 1) (+ (* 0 0) (* 0 0)))) into 0.666667
* [misc]backup-simplify:  Simplify 0.666667 into 0.666667
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 0) (+ (* 0.666667 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 0) (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 0) (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 0) (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 0) (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 0) (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 (pow x 3)) (* (- 3.0) (pow x 2))) into (- (* 0.666667 (pow x 3)) (* 3.0 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (* (- (* 0.666667 (/ 1 x)) 3.0) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (- (* 0.666667 (/ 1 x)) 3.0) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (- (* 0.666667 (/ 1 x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (* 0.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.666667 in x
* [misc]backup-simplify:  Simplify 0.666667 into 0.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (- (* 0.666667 (/ 1 x)) 3.0) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (- (* 0.666667 (/ 1 x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (* 0.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.666667 in x
* [misc]backup-simplify:  Simplify 0.666667 into 0.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.666667 1) into 0.666667
* [misc]backup-simplify:  Simplify (+ 0.666667 0) into 0.666667
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.666667 1) into 0.666667
* [misc]backup-simplify:  Simplify 0.666667 into 0.666667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (* (- 3.0) 1)) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* (- 3.0) 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* (- 3.0) 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* (- 3.0) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* (- 3.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* (- 3.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* (- 3.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) (pow (/ 1 (/ 1 x)) 2)) (* 0.666667 (pow (/ 1 (/ 1 x)) 3))) into (- (* 0.666667 (pow x 3)) (* 3.0 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (* (- (* 0.666667 (/ 1 (- x))) 3.0) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (- (* 0.666667 (/ 1 (- x))) 3.0) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* 0.666667 (/ 1 (- x))) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (* 0.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.666667 in x
* [misc]backup-simplify:  Simplify 0.666667 into 0.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (- (* 0.666667 (/ 1 (- x))) 3.0) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* 0.666667 (/ 1 (- x))) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (* 0.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.666667 in x
* [misc]backup-simplify:  Simplify 0.666667 into 0.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 0.666667 -1) into -0.666667
* [misc]backup-simplify:  Simplify (+ -0.666667 0) into (- 0.666667)
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.666667) 1) into -0.666667
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* (- 0.666667) 0) (* (- 3.0) 1)) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.666667) 0) (+ (* (- 3.0) 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.666667) 0) (+ (* (- 3.0) 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.666667) 0) (+ (* (- 3.0) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.666667) 0) (+ (* (- 3.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.666667) 0) (+ (* (- 3.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.666667) 0) (+ (* (- 3.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) (pow (/ 1 (/ 1 (- x))) 2)) (* -0.666667 (pow (/ 1 (/ 1 (- x))) 3))) into (- (* 0.666667 (pow x 3)) (* 3.0 (pow x 2)))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (* (pow x 4) 0.041667) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow x 4) 0.041667) in x
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (* (pow x 4) 0.041667) in x
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]backup-simplify:  Simplify (* 1 0.041667) into 0.041667
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 0.041667)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 0.041667))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.041667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.041667))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.041667)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.041667))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.041667 (pow x 4)) into (* 0.041667 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 x) 4) 0.041667) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 4) 0.041667) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 4) 0.041667) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]backup-simplify:  Simplify (* (pow x -4) 0.041667) into (/ 0.041667 (pow x 4))
* [misc]backup-simplify:  Simplify (/ 0.041667 (pow x 4)) into (/ 0.041667 (pow x 4))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (* 0 0.041667)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (* 0 0.041667))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.041667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.041667))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.041667)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.041667))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ 0.041667 (pow (/ 1 x) 4)) into (* 0.041667 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 (- x)) 4) 0.041667) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 4) 0.041667) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 4) 0.041667) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) 0.041667) into (* 0.041667 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 0.041667 (exp (* 4 (- (log -1) (log x))))) into (* 0.041667 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (* 0 0.041667)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 0.041667))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.041667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.041667))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.041667)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.041667))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.041667 (exp (* 4 (- (log -1) (log (/ 1 (- x))))))) into (* 0.041667 (exp (* 4 (- (log -1) (log (/ -1 x))))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -4.0 x) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -4.0 x) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (pow x 4) 0.041667) in x
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (* (- (* 0.666667 x) 3.0) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (- (* 0.666667 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (* 0.666667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.666667 in x
* [misc]backup-simplify:  Simplify 0.666667 into 0.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -4.0 x) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -4.0 x) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (pow x 4) 0.041667) in x
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (* (- (* 0.666667 x) 3.0) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (- (* 0.666667 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (* 0.666667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.666667 in x
* [misc]backup-simplify:  Simplify 0.666667 into 0.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -4.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0.666667 0) into 0
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (- 3.0) 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -4.0 1) (* 0 0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (- 4.0) 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (- 4.0) 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 1) (* 0 0)) into 0.666667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.666667 0) into 0.666667
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 0) (* 0.666667 0)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ (- 4.0) 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (* -4.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 1) (+ (* 0.666667 0) (* 0 0))) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (- 3.0)) into 3.0
* [misc]backup-simplify:  Simplify (+ 0 3.0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (+ (* 3.0 (pow x 2)) (+ (* (- 4.0) x) 1.0)) into (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x))
* [misc]approximate:  Taking taylor expansion of (- (+ (+ (* -4.0 (/ 1 x)) 1.0) (* (pow (/ 1 x) 4) 0.041667)) (* (- (* 0.666667 (/ 1 x)) 3.0) (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (+ (+ (* -4.0 (/ 1 x)) 1.0) (* (pow (/ 1 x) 4) 0.041667)) (* (- (* 0.666667 (/ 1 x)) 3.0) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* -4.0 (/ 1 x)) 1.0) (* (pow (/ 1 x) 4) 0.041667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -4.0 (/ 1 x)) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -4.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 4) 0.041667) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (* (- (* 0.666667 (/ 1 x)) 3.0) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (- (* 0.666667 (/ 1 x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (* 0.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.666667 in x
* [misc]backup-simplify:  Simplify 0.666667 into 0.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (- (+ (+ (* -4.0 (/ 1 x)) 1.0) (* (pow (/ 1 x) 4) 0.041667)) (* (- (* 0.666667 (/ 1 x)) 3.0) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* -4.0 (/ 1 x)) 1.0) (* (pow (/ 1 x) 4) 0.041667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -4.0 (/ 1 x)) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -4.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 4) 0.041667) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (* (- (* 0.666667 (/ 1 x)) 3.0) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (- (* 0.666667 (/ 1 x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (* 0.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.666667 in x
* [misc]backup-simplify:  Simplify 0.666667 into 0.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.666667 1) into 0.666667
* [misc]backup-simplify:  Simplify (+ 0.666667 0) into 0.666667
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.666667 1) into 0.666667
* [misc]backup-simplify:  Simplify (- 0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.666667)) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- 0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (* (- 3.0) 1)) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (- 3.0)) into 3.0
* [misc]backup-simplify:  Simplify (+ 0 3.0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (* -4.0 1) into -4.0
* [misc]backup-simplify:  Simplify (+ -4.0 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (- 4.0) 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* (- 3.0) 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ (- 4.0) 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (* (- 4.0) (/ 1 (/ 1 x))) (+ (* 3.0 (pow (/ 1 (/ 1 x)) 2)) (* (- 0.666667) (pow (/ 1 (/ 1 x)) 3)))) into (- (* 3.0 (pow x 2)) (+ (* 0.666667 (pow x 3)) (* 4.0 x)))
* [misc]approximate:  Taking taylor expansion of (- (+ (+ (* -4.0 (/ 1 (- x))) 1.0) (* (pow (/ 1 (- x)) 4) 0.041667)) (* (- (* 0.666667 (/ 1 (- x))) 3.0) (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (+ (+ (* -4.0 (/ 1 (- x))) 1.0) (* (pow (/ 1 (- x)) 4) 0.041667)) (* (- (* 0.666667 (/ 1 (- x))) 3.0) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* -4.0 (/ 1 (- x))) 1.0) (* (pow (/ 1 (- x)) 4) 0.041667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -4.0 (/ 1 (- x))) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -4.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 4) 0.041667) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (* (- (* 0.666667 (/ 1 (- x))) 3.0) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* 0.666667 (/ 1 (- x))) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (* 0.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.666667 in x
* [misc]backup-simplify:  Simplify 0.666667 into 0.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (- (+ (+ (* -4.0 (/ 1 (- x))) 1.0) (* (pow (/ 1 (- x)) 4) 0.041667)) (* (- (* 0.666667 (/ 1 (- x))) 3.0) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* -4.0 (/ 1 (- x))) 1.0) (* (pow (/ 1 (- x)) 4) 0.041667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -4.0 (/ 1 (- x))) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -4.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 4) 0.041667) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (* (- (* 0.666667 (/ 1 (- x))) 3.0) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* 0.666667 (/ 1 (- x))) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (* 0.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.666667 in x
* [misc]backup-simplify:  Simplify 0.666667 into 0.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 0.666667 -1) into -0.666667
* [misc]backup-simplify:  Simplify (+ -0.666667 0) into (- 0.666667)
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.666667) 1) into -0.666667
* [misc]backup-simplify:  Simplify (- -0.666667) into 0.666667
* [misc]backup-simplify:  Simplify (+ 0 0.666667) into 0.666667
* [misc]backup-simplify:  Simplify 0.666667 into 0.666667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* (- 0.666667) 0) (* (- 3.0) 1)) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (- 3.0)) into 3.0
* [misc]backup-simplify:  Simplify (+ 0 3.0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (* -4.0 -1) into 4.0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.666667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.666667) 0) (+ (* (- 3.0) 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (+ (* 4.0 (/ 1 (/ 1 (- x)))) (+ (* 3.0 (pow (/ 1 (/ 1 (- x))) 2)) (* 0.666667 (pow (/ 1 (/ 1 (- x))) 3)))) into (- (* 3.0 (pow x 2)) (+ (* 0.666667 (pow x 3)) (* 4.0 x)))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -4.0 x) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -4.0 x) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (pow x 4) 0.041667) in x
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -4.0 x) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -4.0 x) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (pow x 4) 0.041667) in x
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]backup-simplify:  Simplify (* -4.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -4.0 1) (* 0 0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (- 4.0) 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (- 4.0) 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (* -4.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -4.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -4.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1 0.041667) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0 0.041667) into 0.041667
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]backup-simplify:  Simplify (+ (* 0.041667 (pow x 4)) (+ (* (- 4.0) x) 1.0)) into (- (+ (* 0.041667 (pow x 4)) 1.0) (* 4.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* -4.0 (/ 1 x)) 1.0) (* (pow (/ 1 x) 4) 0.041667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* -4.0 (/ 1 x)) 1.0) (* (pow (/ 1 x) 4) 0.041667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -4.0 (/ 1 x)) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -4.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 4) 0.041667) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (+ (+ (* -4.0 (/ 1 x)) 1.0) (* (pow (/ 1 x) 4) 0.041667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -4.0 (/ 1 x)) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -4.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 4) 0.041667) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]backup-simplify:  Simplify (* -4.0 1) into -4.0
* [misc]backup-simplify:  Simplify (+ -4.0 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (- 4.0) 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* (pow x -4) 0.041667) into (/ 0.041667 (pow x 4))
* [misc]backup-simplify:  Simplify (+ 1.0 (/ 0.041667 (pow x 4))) into (+ 1.0 (* 0.041667 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (+ 1.0 (* 0.041667 (/ 1 (pow x 4)))) into (+ 1.0 (* 0.041667 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (* 0 0.041667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (* 0 0.041667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.041667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.041667))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.041667)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.041667))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (+ 1.0 (* 0.041667 (/ 1 (pow (/ 1 x) 4)))) (* (- 4.0) (/ 1 (/ 1 x)))) into (- (+ (* 0.041667 (pow x 4)) 1.0) (* 4.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* -4.0 (/ 1 (- x))) 1.0) (* (pow (/ 1 (- x)) 4) 0.041667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* -4.0 (/ 1 (- x))) 1.0) (* (pow (/ 1 (- x)) 4) 0.041667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -4.0 (/ 1 (- x))) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -4.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 4) 0.041667) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (+ (+ (* -4.0 (/ 1 (- x))) 1.0) (* (pow (/ 1 (- x)) 4) 0.041667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -4.0 (/ 1 (- x))) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -4.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 4) 0.041667) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]backup-simplify:  Simplify (* -4.0 -1) into 4.0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) 0.041667) into (* 0.041667 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ 1.0 (* 0.041667 (exp (* 4 (- (log -1) (log x)))))) into (+ 1.0 (* 0.041667 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ 1.0 (* 0.041667 (exp (* 4 (- (log -1) (log x)))))) into (+ 1.0 (* 0.041667 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (* 0 0.041667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 0.041667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.041667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.041667))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.041667)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.041667))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (+ 1.0 (* 0.041667 (exp (* 4 (- (log -1) (log (/ 1 (- x)))))))) (* 4.0 (/ 1 (/ 1 (- x))))) into (- (+ (* 0.041667 (exp (* 4 (- (log -1) (log (/ -1 x)))))) 1.0) (* 4.0 x))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (pow (* (- (* 0.666667 x) 3.0) (* x x)) 1)))>
* [enter]simplify:  Simplifying (* (- (* 0.666667 x) 3.0) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* * [misc]simplify:  iters left: 1 (82 enodes)
* [exit]simplify:  Simplified to (* (* x x) (- (* 0.666667 x) 3.0))
* [exit]simplify:  Simplified to (* (* x x) (- (* 0.666667 x) 3.0))
* * * * [misc]progress:  [ 2 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (pow (* (- (* 0.666667 x) 3.0) (* x x)) 1)))>
* * * * [misc]progress:  [ 3 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (exp (+ (log (- (* 0.666667 x) 3.0)) (log (* x x))))))>
* [enter]simplify:  Simplifying (+ (log (- (* 0.666667 x) 3.0)) (log (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* [exit]simplify:  Simplified to (+ (log (- (* 0.666667 x) 3.0)) (log (* x x)))
* [exit]simplify:  Simplified to (+ (log (- (* 0.666667 x) 3.0)) (log (* x x)))
* * * * [misc]progress:  [ 4 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (exp (log (* (- (* 0.666667 x) 3.0) (* x x))))))>
* [enter]simplify:  Simplifying (log (* (- (* 0.666667 x) 3.0) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* * [misc]simplify:  iters left: 1 (96 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (- (* 0.666667 x) 3.0)))
* [exit]simplify:  Simplified to (log (* (* x x) (- (* 0.666667 x) 3.0)))
* * * * [misc]progress:  [ 5 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (log (exp (* (- (* 0.666667 x) 3.0) (* x x))))))>
* [enter]simplify:  Simplifying (exp (* (- (* 0.666667 x) 3.0) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* * [misc]simplify:  iters left: 2 (126 enodes)
* * [misc]simplify:  iters left: 1 (179 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (- (* 0.666667 x) 3.0))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (- (* 0.666667 x) 3.0))
* * * * [misc]progress:  [ 6 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (cbrt (* (* (* (- (* 0.666667 x) 3.0) (- (* 0.666667 x) 3.0)) (- (* 0.666667 x) 3.0)) (* (* (* x x) (* x x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* (- (* 0.666667 x) 3.0) (- (* 0.666667 x) 3.0)) (- (* 0.666667 x) 3.0)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (341 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (- (* 0.666667 x) 3.0)) (* (- (* 0.666667 x) 3.0) (- (* 0.666667 x) 3.0)))
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (- (* 0.666667 x) 3.0)) (* (- (* 0.666667 x) 3.0) (- (* 0.666667 x) 3.0)))
* * * * [misc]progress:  [ 7 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (* (cbrt (* (- (* 0.666667 x) 3.0) (* x x))) (cbrt (* (- (* 0.666667 x) 3.0) (* x x)))) (cbrt (* (- (* 0.666667 x) 3.0) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (- (* 0.666667 x) 3.0) (* x x))) (cbrt (* (- (* 0.666667 x) 3.0) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (71 enodes)
* * [misc]simplify:  iters left: 1 (86 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (- (* 0.666667 x) 3.0))) (cbrt (* (* x x) (- (* 0.666667 x) 3.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (- (* 0.666667 x) 3.0))) (cbrt (* (* x x) (- (* 0.666667 x) 3.0))))
* [enter]simplify:  Simplifying (cbrt (* (- (* 0.666667 x) 3.0) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (68 enodes)
* * [misc]simplify:  iters left: 1 (83 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (- (* 0.666667 x) 3.0)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (- (* 0.666667 x) 3.0)))
* * * * [misc]progress:  [ 8 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (cbrt (* (* (* (- (* 0.666667 x) 3.0) (* x x)) (* (- (* 0.666667 x) 3.0) (* x x))) (* (- (* 0.666667 x) 3.0) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* (- (* 0.666667 x) 3.0) (* x x)) (* (- (* 0.666667 x) 3.0) (* x x))) (* (- (* 0.666667 x) 3.0) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (359 enodes)
* [exit]simplify:  Simplified to (pow (* (* x x) (- (* 0.666667 x) 3.0)) 3)
* [exit]simplify:  Simplified to (pow (* (* x x) (- (* 0.666667 x) 3.0)) 3)
* * * * [misc]progress:  [ 9 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (sqrt (* (- (* 0.666667 x) 3.0) (* x x))) (sqrt (* (- (* 0.666667 x) 3.0) (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (* (- (* 0.666667 x) 3.0) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (68 enodes)
* * [misc]simplify:  iters left: 1 (83 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (- (* 0.666667 x) 3.0)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (- (* 0.666667 x) 3.0)))
* [enter]simplify:  Simplifying (sqrt (* (- (* 0.666667 x) 3.0) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (68 enodes)
* * [misc]simplify:  iters left: 1 (83 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (- (* 0.666667 x) 3.0)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (- (* 0.666667 x) 3.0)))
* * * * [misc]progress:  [ 10 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* 1 (* (- (* 0.666667 x) 3.0) (* x x)))))>
* * * * [misc]progress:  [ 11 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (* (- (* 0.666667 x) 3.0) x) x)))>
* [enter]simplify:  Simplifying (* (- (* 0.666667 x) 3.0) x)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (31 enodes)
* [exit]simplify:  Simplified to (* x (- (* 0.666667 x) 3.0))
* [exit]simplify:  Simplified to (* x (- (* 0.666667 x) 3.0))
* * * * [misc]progress:  [ 12 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (* (cbrt (- (* 0.666667 x) 3.0)) (cbrt (- (* 0.666667 x) 3.0))) (* (cbrt (- (* 0.666667 x) 3.0)) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* 0.666667 x) 3.0)) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (* (* x x) (cbrt (- (* 0.666667 x) 3.0)))
* [exit]simplify:  Simplified to (* (* x x) (cbrt (- (* 0.666667 x) 3.0)))
* * * * [misc]progress:  [ 13 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (sqrt (- (* 0.666667 x) 3.0)) (* (sqrt (- (* 0.666667 x) 3.0)) (* x x)))))>
* [enter]simplify:  Simplifying (* (sqrt (- (* 0.666667 x) 3.0)) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (* (* x x) (sqrt (- (* 0.666667 x) 3.0)))
* [exit]simplify:  Simplified to (* (* x x) (sqrt (- (* 0.666667 x) 3.0)))
* * * * [misc]progress:  [ 14 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* 1 (* (- (* 0.666667 x) 3.0) (* x x)))))>
* [enter]simplify:  Simplifying (* (- (* 0.666667 x) 3.0) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* * [misc]simplify:  iters left: 1 (82 enodes)
* [exit]simplify:  Simplified to (* (* x x) (- (* 0.666667 x) 3.0))
* [exit]simplify:  Simplified to (* (* x x) (- (* 0.666667 x) 3.0))
* * * * [misc]progress:  [ 15 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (/ (* (- (pow (* 0.666667 x) 3) (pow 3.0 3)) (* x x)) (+ (* (* 0.666667 x) (* 0.666667 x)) (+ (* 3.0 3.0) (* (* 0.666667 x) 3.0))))))>
* [enter]simplify:  Simplifying (* (- (pow (* 0.666667 x) 3) (pow 3.0 3)) (* x x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (163 enodes)
* * [misc]simplify:  iters left: 2 (341 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* 0.666667 x) (* 0.666667 x)) (* (* x x) (* 0.666667 x))) (* (* (* 3.0 x) (* 3.0 x)) (- 3.0)))
* [exit]simplify:  Simplified to (+ (* (* (* 0.666667 x) (* 0.666667 x)) (* (* x x) (* 0.666667 x))) (* (* (* 3.0 x) (* 3.0 x)) (- 3.0)))
* * * * [misc]progress:  [ 16 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (/ (* (- (* (* 0.666667 x) (* 0.666667 x)) (* 3.0 3.0)) (* x x)) (+ (* 0.666667 x) 3.0))))>
* [enter]simplify:  Simplifying (* (- (* (* 0.666667 x) (* 0.666667 x)) (* 3.0 3.0)) (* x x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (132 enodes)
* * [misc]simplify:  iters left: 2 (402 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* (- (* 0.666667 x) 3.0) (+ 3.0 (* 0.666667 x))))
* [exit]simplify:  Simplified to (* (* x x) (* (- (* 0.666667 x) 3.0) (+ 3.0 (* 0.666667 x))))
* * * * [misc]progress:  [ 17 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (* x x) (- (* 0.666667 x) 3.0))))>
* * * * [misc]progress:  [ 18 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (pow (* (pow x 4) 0.041667) 1)) (* (- (* 0.666667 x) 3.0) (* x x))))>
* * * * [misc]progress:  [ 19 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (exp (log (* (pow x 4) 0.041667)))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (log (* (pow x 4) 0.041667))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (+ (log 0.041667) (* (log x) 4))
* [exit]simplify:  Simplified to (+ (log 0.041667) (* (log x) 4))
* * * * [misc]progress:  [ 20 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (log (exp (* (pow x 4) 0.041667)))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (exp (* (pow x 4) 0.041667))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* [exit]simplify:  Simplified to (exp (* (pow x 4) 0.041667))
* [exit]simplify:  Simplified to (exp (* (pow x 4) 0.041667))
* * * * [misc]progress:  [ 21 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (* (cbrt (* (pow x 4) 0.041667)) (cbrt (* (pow x 4) 0.041667))) (cbrt (* (pow x 4) 0.041667)))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 4) 0.041667)) (cbrt (* (pow x 4) 0.041667)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 4) 0.041667)) (cbrt (* (pow x 4) 0.041667)))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 4) 0.041667)) (cbrt (* (pow x 4) 0.041667)))
* [enter]simplify:  Simplifying (cbrt (* (pow x 4) 0.041667))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 4) 0.041667))
* [exit]simplify:  Simplified to (cbrt (* (pow x 4) 0.041667))
* * * * [misc]progress:  [ 22 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (cbrt (* (* (* (pow x 4) 0.041667) (* (pow x 4) 0.041667)) (* (pow x 4) 0.041667)))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 4) 0.041667) (* (pow x 4) 0.041667)) (* (pow x 4) 0.041667))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x 4) 0.041667) 3)
* [exit]simplify:  Simplified to (pow (* (pow x 4) 0.041667) 3)
* * * * [misc]progress:  [ 23 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (sqrt (* (pow x 4) 0.041667)) (sqrt (* (pow x 4) 0.041667)))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (sqrt (* (pow x 4) 0.041667))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 4) 0.041667))
* [exit]simplify:  Simplified to (sqrt (* (pow x 4) 0.041667))
* [enter]simplify:  Simplifying (sqrt (* (pow x 4) 0.041667))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 4) 0.041667))
* [exit]simplify:  Simplified to (sqrt (* (pow x 4) 0.041667))
* * * * [misc]progress:  [ 24 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* 1 (* (pow x 4) 0.041667))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* * * * [misc]progress:  [ 25 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (* (cbrt (pow x 4)) (cbrt (pow x 4))) (* (cbrt (pow x 4)) 0.041667))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (* (cbrt (pow x 4)) 0.041667)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow x 4)) 0.041667)
* [exit]simplify:  Simplified to (* (cbrt (pow x 4)) 0.041667)
* * * * [misc]progress:  [ 26 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (sqrt (pow x 4)) (* (sqrt (pow x 4)) 0.041667))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (* (sqrt (pow x 4)) 0.041667)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow x 4)) 0.041667)
* [exit]simplify:  Simplified to (* (sqrt (pow x 4)) 0.041667)
* * * * [misc]progress:  [ 27 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* 1 (* (pow x 4) 0.041667))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (* (pow x 4) 0.041667)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (* (pow x 4) 0.041667)
* [exit]simplify:  Simplified to (* (pow x 4) 0.041667)
* * * * [misc]progress:  [ 28 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* * * * [misc]progress:  [ 29 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (log (/ (* (exp (+ (* -4.0 x) 1.0)) (exp (* (pow x 4) 0.041667))) (exp (* (- (* 0.666667 x) 3.0) (* x x))))))>
* [enter]simplify:  Simplifying (/ (* (exp (+ (* -4.0 x) 1.0)) (exp (* (pow x 4) 0.041667))) (exp (* (- (* 0.666667 x) 3.0) (* x x))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (163 enodes)
* * [misc]simplify:  iters left: 2 (430 enodes)
* [exit]simplify:  Simplified to (exp (- (+ (* (pow x 4) 0.041667) (+ 1.0 (* -4.0 x))) (* (* x x) (- (* 0.666667 x) 3.0))))
* [exit]simplify:  Simplified to (exp (- (+ (* (pow x 4) 0.041667) (+ 1.0 (* -4.0 x))) (* (* x x) (- (* 0.666667 x) 3.0))))
* * * * [misc]progress:  [ 30 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (log (/ (exp (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667))) (exp (* (- (* 0.666667 x) 3.0) (* x x))))))>
* [enter]simplify:  Simplifying (/ (exp (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667))) (exp (* (- (* 0.666667 x) 3.0) (* x x))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (77 enodes)
* * [misc]simplify:  iters left: 3 (208 enodes)
* [exit]simplify:  Simplified to (exp (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* x 0.666667) 3.0) (* x x))))
* [exit]simplify:  Simplified to (exp (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* x 0.666667) 3.0) (* x x))))
* * * * [misc]progress:  [ 31 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (pow (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))) 1))>
* * * * [misc]progress:  [ 32 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))))))>
* [enter]simplify:  Simplifying (log (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (177 enodes)
* * [misc]simplify:  iters left: 2 (433 enodes)
* [exit]simplify:  Simplified to (log (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x))))
* [exit]simplify:  Simplified to (log (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x))))
* * * * [misc]progress:  [ 33 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))))))>
* [enter]simplify:  Simplifying (exp (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (251 enodes)
* [exit]simplify:  Simplified to (exp (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x))))
* [exit]simplify:  Simplified to (exp (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x))))
* * * * [misc]progress:  [ 34 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x)))) (cbrt (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))))) (cbrt (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x)))) (cbrt (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (178 enodes)
* * [misc]simplify:  iters left: 2 (442 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x)))) (cbrt (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x)))) (cbrt (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x)))))
* [enter]simplify:  Simplifying (cbrt (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (177 enodes)
* * [misc]simplify:  iters left: 2 (433 enodes)
* [exit]simplify:  Simplified to (cbrt (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x))))
* [exit]simplify:  Simplified to (cbrt (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x))))
* * * * [misc]progress:  [ 35 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x)))) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x)))) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* [exit]simplify:  Simplified to (pow (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x))) 3)
* [exit]simplify:  Simplified to (pow (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x))) 3)
* * * * [misc]progress:  [ 36 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x)))) (sqrt (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (177 enodes)
* * [misc]simplify:  iters left: 2 (433 enodes)
* [exit]simplify:  Simplified to (sqrt (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x))))
* [exit]simplify:  Simplified to (sqrt (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x))))
* [enter]simplify:  Simplifying (sqrt (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (177 enodes)
* * [misc]simplify:  iters left: 2 (433 enodes)
* [exit]simplify:  Simplified to (sqrt (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x))))
* [exit]simplify:  Simplified to (sqrt (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x))))
* * * * [misc]progress:  [ 37 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ (pow (+ (* -4.0 x) 1.0) 3) (pow (* (pow x 4) 0.041667) 3)) (+ (* (* 0.666667 x) (* 0.666667 x)) (+ (* 3.0 3.0) (* (* 0.666667 x) 3.0)))) (* (+ (* (+ (* -4.0 x) 1.0) (+ (* -4.0 x) 1.0)) (- (* (* (pow x 4) 0.041667) (* (pow x 4) 0.041667)) (* (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)))) (* (- (pow (* 0.666667 x) 3) (pow 3.0 3)) (* x x)))) (* (+ (* (+ (* -4.0 x) 1.0) (+ (* -4.0 x) 1.0)) (- (* (* (pow x 4) 0.041667) (* (pow x 4) 0.041667)) (* (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)))) (+ (* (* 0.666667 x) (* 0.666667 x)) (+ (* 3.0 3.0) (* (* 0.666667 x) 3.0))))))>
* [enter]simplify:  Simplifying (- (* (+ (pow (+ (* -4.0 x) 1.0) 3) (pow (* (pow x 4) 0.041667) 3)) (+ (* (* 0.666667 x) (* 0.666667 x)) (+ (* 3.0 3.0) (* (* 0.666667 x) 3.0)))) (* (+ (* (+ (* -4.0 x) 1.0) (+ (* -4.0 x) 1.0)) (- (* (* (pow x 4) 0.041667) (* (pow x 4) 0.041667)) (* (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)))) (* (- (pow (* 0.666667 x) 3) (pow 3.0 3)) (* x x))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (103 enodes)
* * [misc]simplify:  iters left: 4 (378 enodes)
* [exit]simplify:  Simplified to (- (* (+ (* (* 0.666667 x) (* 0.666667 x)) (* (+ 3.0 (* 0.666667 x)) 3.0)) (+ (pow (+ 1.0 (* -4.0 x)) 3) (pow (* (pow x 4) 0.041667) 3))) (* (+ (* (- (* (pow x 4) 0.041667) (+ 1.0 (* -4.0 x))) (* (pow x 4) 0.041667)) (* (+ 1.0 (* -4.0 x)) (+ 1.0 (* -4.0 x)))) (+ (* (* (* x x) 3.0) (- (* 3.0 3.0))) (* (* (* x x) (* 0.666667 x)) (* (* 0.666667 x) (* 0.666667 x))))))
* [exit]simplify:  Simplified to (- (* (+ (* (* 0.666667 x) (* 0.666667 x)) (* (+ 3.0 (* 0.666667 x)) 3.0)) (+ (pow (+ 1.0 (* -4.0 x)) 3) (pow (* (pow x 4) 0.041667) 3))) (* (+ (* (- (* (pow x 4) 0.041667) (+ 1.0 (* -4.0 x))) (* (pow x 4) 0.041667)) (* (+ 1.0 (* -4.0 x)) (+ 1.0 (* -4.0 x)))) (+ (* (* (* x x) 3.0) (- (* 3.0 3.0))) (* (* (* x x) (* 0.666667 x)) (* (* 0.666667 x) (* 0.666667 x))))))
* [enter]simplify:  Simplifying (* (+ (* (+ (* -4.0 x) 1.0) (+ (* -4.0 x) 1.0)) (- (* (* (pow x 4) 0.041667) (* (pow x 4) 0.041667)) (* (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)))) (+ (* (* 0.666667 x) (* 0.666667 x)) (+ (* 3.0 3.0) (* (* 0.666667 x) 3.0))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (227 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* (pow x 4) 0.041667) (- (* (pow x 4) 0.041667) (+ 1.0 (* -4.0 x)))) (* (+ 1.0 (* -4.0 x)) (+ 1.0 (* -4.0 x)))) (+ (* (* 0.666667 x) (+ (* 0.666667 x) 3.0)) (* 3.0 3.0)))
* [exit]simplify:  Simplified to (* (+ (* (* (pow x 4) 0.041667) (- (* (pow x 4) 0.041667) (+ 1.0 (* -4.0 x)))) (* (+ 1.0 (* -4.0 x)) (+ 1.0 (* -4.0 x)))) (+ (* (* 0.666667 x) (+ (* 0.666667 x) 3.0)) (* 3.0 3.0)))
* * * * [misc]progress:  [ 38 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ (pow (+ (* -4.0 x) 1.0) 3) (pow (* (pow x 4) 0.041667) 3)) (+ (* 0.666667 x) 3.0)) (* (+ (* (+ (* -4.0 x) 1.0) (+ (* -4.0 x) 1.0)) (- (* (* (pow x 4) 0.041667) (* (pow x 4) 0.041667)) (* (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)))) (* (- (* (* 0.666667 x) (* 0.666667 x)) (* 3.0 3.0)) (* x x)))) (* (+ (* (+ (* -4.0 x) 1.0) (+ (* -4.0 x) 1.0)) (- (* (* (pow x 4) 0.041667) (* (pow x 4) 0.041667)) (* (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)))) (+ (* 0.666667 x) 3.0))))>
* [enter]simplify:  Simplifying (- (* (+ (pow (+ (* -4.0 x) 1.0) 3) (pow (* (pow x 4) 0.041667) 3)) (+ (* 0.666667 x) 3.0)) (* (+ (* (+ (* -4.0 x) 1.0) (+ (* -4.0 x) 1.0)) (- (* (* (pow x 4) 0.041667) (* (pow x 4) 0.041667)) (* (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)))) (* (- (* (* 0.666667 x) (* 0.666667 x)) (* 3.0 3.0)) (* x x))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (86 enodes)
* * [misc]simplify:  iters left: 4 (315 enodes)
* [exit]simplify:  Simplified to (- (+ (* (* (+ 1.0 (* -4.0 x)) (+ 1.0 (* -4.0 x))) (* (+ 1.0 (* -4.0 x)) (+ (* 0.666667 x) 3.0))) (* (* (+ (* 0.666667 x) 3.0) (* (pow x 4) 0.041667)) (* (* (pow x 4) 0.041667) (* (pow x 4) 0.041667)))) (* (* (* x x) (- (* (* 0.666667 x) (* 0.666667 x)) (* 3.0 3.0))) (+ (* (* (pow x 4) 0.041667) (- (* (pow x 4) 0.041667) (+ 1.0 (* -4.0 x)))) (* (+ 1.0 (* -4.0 x)) (+ 1.0 (* -4.0 x))))))
* [exit]simplify:  Simplified to (- (+ (* (* (+ 1.0 (* -4.0 x)) (+ 1.0 (* -4.0 x))) (* (+ 1.0 (* -4.0 x)) (+ (* 0.666667 x) 3.0))) (* (* (+ (* 0.666667 x) 3.0) (* (pow x 4) 0.041667)) (* (* (pow x 4) 0.041667) (* (pow x 4) 0.041667)))) (* (* (* x x) (- (* (* 0.666667 x) (* 0.666667 x)) (* 3.0 3.0))) (+ (* (* (pow x 4) 0.041667) (- (* (pow x 4) 0.041667) (+ 1.0 (* -4.0 x)))) (* (+ 1.0 (* -4.0 x)) (+ 1.0 (* -4.0 x))))))
* [enter]simplify:  Simplifying (* (+ (* (+ (* -4.0 x) 1.0) (+ (* -4.0 x) 1.0)) (- (* (* (pow x 4) 0.041667) (* (pow x 4) 0.041667)) (* (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)))) (+ (* 0.666667 x) 3.0))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ 3.0 (* 0.666667 x)) (* (pow x 4) 0.041667)) (- (* (pow x 4) 0.041667) (+ 1.0 (* -4.0 x)))) (* (* (+ 3.0 (* 0.666667 x)) (+ 1.0 (* -4.0 x))) (+ 1.0 (* -4.0 x))))
* [exit]simplify:  Simplified to (+ (* (* (+ 3.0 (* 0.666667 x)) (* (pow x 4) 0.041667)) (- (* (pow x 4) 0.041667) (+ 1.0 (* -4.0 x)))) (* (* (+ 3.0 (* 0.666667 x)) (+ 1.0 (* -4.0 x))) (+ 1.0 (* -4.0 x))))
* * * * [misc]progress:  [ 39 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (- (* (+ (* -4.0 x) 1.0) (+ (* -4.0 x) 1.0)) (* (* (pow x 4) 0.041667) (* (pow x 4) 0.041667))) (+ (* (* 0.666667 x) (* 0.666667 x)) (+ (* 3.0 3.0) (* (* 0.666667 x) 3.0)))) (* (- (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (pow (* 0.666667 x) 3) (pow 3.0 3)) (* x x)))) (* (- (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (+ (* (* 0.666667 x) (* 0.666667 x)) (+ (* 3.0 3.0) (* (* 0.666667 x) 3.0))))))>
* [enter]simplify:  Simplifying (- (* (- (* (+ (* -4.0 x) 1.0) (+ (* -4.0 x) 1.0)) (* (* (pow x 4) 0.041667) (* (pow x 4) 0.041667))) (+ (* (* 0.666667 x) (* 0.666667 x)) (+ (* 3.0 3.0) (* (* 0.666667 x) 3.0)))) (* (- (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (pow (* 0.666667 x) 3) (pow 3.0 3)) (* x x))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (89 enodes)
* * [misc]simplify:  iters left: 4 (330 enodes)
* [exit]simplify:  Simplified to (- (* (+ (* (+ (* 0.666667 x) 3.0) 3.0) (* (* 0.666667 x) (* 0.666667 x))) (* (+ (* (pow x 4) 0.041667) (+ 1.0 (* -4.0 x))) (- (+ 1.0 (* -4.0 x)) (* (pow x 4) 0.041667)))) (* (- (+ 1.0 (* -4.0 x)) (* (pow x 4) 0.041667)) (+ (* (* (- 3.0) (* 3.0 3.0)) (* x x)) (* (* (* x x) (* 0.666667 x)) (* (* 0.666667 x) (* 0.666667 x))))))
* [exit]simplify:  Simplified to (- (* (+ (* (+ (* 0.666667 x) 3.0) 3.0) (* (* 0.666667 x) (* 0.666667 x))) (* (+ (* (pow x 4) 0.041667) (+ 1.0 (* -4.0 x))) (- (+ 1.0 (* -4.0 x)) (* (pow x 4) 0.041667)))) (* (- (+ 1.0 (* -4.0 x)) (* (pow x 4) 0.041667)) (+ (* (* (- 3.0) (* 3.0 3.0)) (* x x)) (* (* (* x x) (* 0.666667 x)) (* (* 0.666667 x) (* 0.666667 x))))))
* [enter]simplify:  Simplifying (* (- (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (+ (* (* 0.666667 x) (* 0.666667 x)) (+ (* 3.0 3.0) (* (* 0.666667 x) 3.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* 0.666667 x) (* 0.666667 x)) (* 3.0 (+ (* 0.666667 x) 3.0))) (- (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))))
* [exit]simplify:  Simplified to (* (+ (* (* 0.666667 x) (* 0.666667 x)) (* 3.0 (+ (* 0.666667 x) 3.0))) (- (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))))
* * * * [misc]progress:  [ 40 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (- (* (+ (* -4.0 x) 1.0) (+ (* -4.0 x) 1.0)) (* (* (pow x 4) 0.041667) (* (pow x 4) 0.041667))) (+ (* 0.666667 x) 3.0)) (* (- (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* (* 0.666667 x) (* 0.666667 x)) (* 3.0 3.0)) (* x x)))) (* (- (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (+ (* 0.666667 x) 3.0))))>
* [enter]simplify:  Simplifying (- (* (- (* (+ (* -4.0 x) 1.0) (+ (* -4.0 x) 1.0)) (* (* (pow x 4) 0.041667) (* (pow x 4) 0.041667))) (+ (* 0.666667 x) 3.0)) (* (- (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* (* 0.666667 x) (* 0.666667 x)) (* 3.0 3.0)) (* x x))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (71 enodes)
* * [misc]simplify:  iters left: 4 (265 enodes)
* [exit]simplify:  Simplified to (* (- (+ 1.0 (* -4.0 x)) (* (pow x 4) 0.041667)) (- (* (+ (* (pow x 4) 0.041667) (+ 1.0 (* -4.0 x))) (+ 3.0 (* 0.666667 x))) (* (* x (+ 3.0 (* 0.666667 x))) (* (- (* 0.666667 x) 3.0) x))))
* [exit]simplify:  Simplified to (* (- (+ 1.0 (* -4.0 x)) (* (pow x 4) 0.041667)) (- (* (+ (* (pow x 4) 0.041667) (+ 1.0 (* -4.0 x))) (+ 3.0 (* 0.666667 x))) (* (* x (+ 3.0 (* 0.666667 x))) (* (- (* 0.666667 x) 3.0) x))))
* [enter]simplify:  Simplifying (* (- (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (+ (* 0.666667 x) 3.0))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (352 enodes)
* [exit]simplify:  Simplified to (* (+ (* 0.666667 x) 3.0) (- (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))))
* [exit]simplify:  Simplified to (* (+ (* 0.666667 x) 3.0) (- (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))))
* * * * [misc]progress:  [ 41 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (pow (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) 3) (pow (* (- (* 0.666667 x) 3.0) (* x x)) 3)) (+ (* (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667))) (+ (* (* (- (* 0.666667 x) 3.0) (* x x)) (* (- (* 0.666667 x) 3.0) (* x x))) (* (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x)))))))>
* [enter]simplify:  Simplifying (- (pow (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) 3) (pow (* (- (* 0.666667 x) 3.0) (* x x)) 3))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* [exit]simplify:  Simplified to (- (pow (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) 3) (pow (* (* x x) (- (* 0.666667 x) 3.0)) 3))
* [exit]simplify:  Simplified to (- (pow (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) 3) (pow (* (* x x) (- (* 0.666667 x) 3.0)) 3))
* [enter]simplify:  Simplifying (+ (* (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667))) (+ (* (* (- (* 0.666667 x) 3.0) (* x x)) (* (- (* 0.666667 x) 3.0) (* x x))) (* (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (202 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* x 0.666667) 3.0) (* x x))) (* (- (* x 0.666667) 3.0) (* x x))) (* (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4)))))
* [exit]simplify:  Simplified to (+ (* (+ (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* x 0.666667) 3.0) (* x x))) (* (- (* x 0.666667) 3.0) (* x x))) (* (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4)))))
* * * * [misc]progress:  [ 42 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (- (* (- (* 0.666667 x) 3.0) (* x x)))))>
* [enter]simplify:  Simplifying (- (* (- (* 0.666667 x) 3.0) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (187 enodes)
* * [misc]simplify:  iters left: 1 (207 enodes)
* [exit]simplify:  Simplified to (* (* x x) (- 3.0 (* 0.666667 x)))
* [exit]simplify:  Simplified to (* (* x x) (- 3.0 (* 0.666667 x)))
* * * * [misc]progress:  [ 43 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x)))))>
* * * * [misc]progress:  [ 44 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667))) (* (* (- (* 0.666667 x) 3.0) (* x x)) (* (- (* 0.666667 x) 3.0) (* x x)))) (+ (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x)))))>
* [enter]simplify:  Simplifying (- (* (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667))) (* (* (- (* 0.666667 x) 3.0) (* x x)) (* (- (* 0.666667 x) 3.0) (* x x))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (162 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* x 0.666667) 3.0) (* x x))) (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* x 0.666667) 3.0) (* x x))))
* [exit]simplify:  Simplified to (* (+ (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* x 0.666667) 3.0) (* x x))) (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* x 0.666667) 3.0) (* x x))))
* [enter]simplify:  Simplifying (+ (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (142 enodes)
* * [misc]simplify:  iters left: 2 (311 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x)))
* [exit]simplify:  Simplified to (+ (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x)))
* * * * [misc]progress:  [ 45 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* -4.0 x) 1.0) (- (* (pow x 4) 0.041667) (* (- (* 0.666667 x) 3.0) (* x x)))))>
* [enter]simplify:  Simplifying (- (* (pow x 4) 0.041667) (* (- (* 0.666667 x) 3.0) (* x x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (97 enodes)
* * [misc]simplify:  iters left: 2 (208 enodes)
* * [misc]simplify:  iters left: 1 (252 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 4) 0.041667) (* (* x x) (- 3.0 (* 0.666667 x))))
* [exit]simplify:  Simplified to (+ (* (pow x 4) 0.041667) (* (* x x) (- 3.0 (* 0.666667 x))))
* * * * [misc]progress:  [ 46 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (- (* (- (* 0.666667 x) 3.0) (* x x)))))>
* [enter]simplify:  Simplifying (- (* (- (* 0.666667 x) 3.0) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (187 enodes)
* * [misc]simplify:  iters left: 1 (207 enodes)
* [exit]simplify:  Simplified to (* (* x x) (- 3.0 (* 0.666667 x)))
* [exit]simplify:  Simplified to (* (* x x) (- 3.0 (* 0.666667 x)))
* * * * [misc]progress:  [ 47 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (log (* (exp (+ (* -4.0 x) 1.0)) (exp (* (pow x 4) 0.041667)))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (* (exp (+ (* -4.0 x) 1.0)) (exp (* (pow x 4) 0.041667)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (pow x 4) 0.041667) (+ 1.0 (* -4.0 x))))
* [exit]simplify:  Simplified to (exp (+ (* (pow x 4) 0.041667) (+ 1.0 (* -4.0 x))))
* * * * [misc]progress:  [ 48 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (pow (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) 1) (* (- (* 0.666667 x) 3.0) (* x x))))>
* * * * [misc]progress:  [ 49 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (exp (log (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (log (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))))
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))))
* * * * [misc]progress:  [ 50 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (log (exp (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (exp (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))))
* [exit]simplify:  Simplified to (exp (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))))
* * * * [misc]progress:  [ 51 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (* (* (cbrt (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667))) (cbrt (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)))) (cbrt (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667))) (cbrt (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4)))) (cbrt (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4)))) (cbrt (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4)))))
* [enter]simplify:  Simplifying (cbrt (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))))
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))))
* * * * [misc]progress:  [ 52 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (cbrt (* (* (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667))) (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (* (* (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667))) (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) 3)
* * * * [misc]progress:  [ 53 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (* (sqrt (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667))) (sqrt (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))))
* [enter]simplify:  Simplifying (sqrt (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))))
* * * * [misc]progress:  [ 54 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (/ (+ (pow (+ (* -4.0 x) 1.0) 3) (pow (* (pow x 4) 0.041667) 3)) (+ (* (+ (* -4.0 x) 1.0) (+ (* -4.0 x) 1.0)) (- (* (* (pow x 4) 0.041667) (* (pow x 4) 0.041667)) (* (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667))))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (+ (pow (+ (* -4.0 x) 1.0) 3) (pow (* (pow x 4) 0.041667) 3))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (186 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ 1.0 (* -4.0 x)) 3) (pow (* (pow x 4) 0.041667) 3))
* [exit]simplify:  Simplified to (+ (pow (+ 1.0 (* -4.0 x)) 3) (pow (* (pow x 4) 0.041667) 3))
* [enter]simplify:  Simplifying (+ (* (+ (* -4.0 x) 1.0) (+ (* -4.0 x) 1.0)) (- (* (* (pow x 4) 0.041667) (* (pow x 4) 0.041667)) (* (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* * [misc]simplify:  iters left: 3 (379 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x 4) 0.041667) (- (* (pow x 4) 0.041667) (+ 1.0 (* -4.0 x)))) (* (+ 1.0 (* -4.0 x)) (+ 1.0 (* -4.0 x))))
* [exit]simplify:  Simplified to (+ (* (* (pow x 4) 0.041667) (- (* (pow x 4) 0.041667) (+ 1.0 (* -4.0 x)))) (* (+ 1.0 (* -4.0 x)) (+ 1.0 (* -4.0 x))))
* * * * [misc]progress:  [ 55 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (* 1 (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* * * * [misc]progress:  [ 56 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (/ (- (* (+ (* -4.0 x) 1.0) (+ (* -4.0 x) 1.0)) (* (* (pow x 4) 0.041667) (* (pow x 4) 0.041667))) (- (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (- (* (+ (* -4.0 x) 1.0) (+ (* -4.0 x) 1.0)) (* (* (pow x 4) 0.041667) (* (pow x 4) 0.041667)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (262 enodes)
* [exit]simplify:  Simplified to (* (- (+ 1.0 (* -4.0 x)) (* (pow x 4) 0.041667)) (+ (* (pow x 4) 0.041667) (+ 1.0 (* -4.0 x))))
* [exit]simplify:  Simplified to (* (- (+ 1.0 (* -4.0 x)) (* (pow x 4) 0.041667)) (+ (* (pow x 4) 0.041667) (+ 1.0 (* -4.0 x))))
* [enter]simplify:  Simplifying (- (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (48 enodes)
* [exit]simplify:  Simplified to (- (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4)))
* [exit]simplify:  Simplified to (- (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4)))
* * * * [misc]progress:  [ 57 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (* -4.0 x) (+ 1.0 (* (pow x 4) 0.041667))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (+ 1.0 (* (pow x 4) 0.041667))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* [exit]simplify:  Simplified to (+ 1.0 (* (pow x 4) 0.041667))
* [exit]simplify:  Simplified to (+ 1.0 (* (pow x 4) 0.041667))
* * * * [misc]progress:  [ 58 / 70 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ (* (pow x 4) 0.041667) (+ (* -4.0 x) 1.0)) (* (- (* 0.666667 x) 3.0) (* x x))))>
* * * * [misc]progress:  [ 59 / 70 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (- (* 0.666667 (pow x 3)) (* 3.0 (pow x 2)))))>
* [enter]simplify:  Simplifying (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (- (* 0.666667 (pow x 3)) (* 3.0 (pow x 2))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (250 enodes)
* [exit]simplify:  Simplified to (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x)))
* * * * [misc]progress:  [ 60 / 70 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (- (* 0.666667 (pow x 3)) (* 3.0 (pow x 2)))))>
* [enter]simplify:  Simplifying (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (- (* 0.666667 (pow x 3)) (* 3.0 (pow x 2))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (250 enodes)
* [exit]simplify:  Simplified to (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x)))
* * * * [misc]progress:  [ 61 / 70 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (- (* 0.666667 (pow x 3)) (* 3.0 (pow x 2)))))>
* [enter]simplify:  Simplifying (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (- (* 0.666667 (pow x 3)) (* 3.0 (pow x 2))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (250 enodes)
* [exit]simplify:  Simplified to (- (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x)))
* * * * [misc]progress:  [ 62 / 70 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (- (+ (+ (* -4.0 x) 1.0) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (176 enodes)
* * [misc]simplify:  iters left: 2 (436 enodes)
* [exit]simplify:  Simplified to (+ (* (- 3.0 (* 0.666667 x)) (* x x)) (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))))
* * * * [misc]progress:  [ 63 / 70 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (- (+ (+ (* -4.0 x) 1.0) (* 0.041667 (pow x 4))) (* (- (* 0.666667 x) 3.0) (* x x)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (176 enodes)
* * [misc]simplify:  iters left: 2 (436 enodes)
* [exit]simplify:  Simplified to (+ (* (- 3.0 (* 0.666667 x)) (* x x)) (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4))))
* * * * [misc]progress:  [ 64 / 70 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* 0.041667 (exp (* 4 (- (log -1) (log (/ -1 x))))))) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (- (+ (+ (* -4.0 x) 1.0) (* 0.041667 (exp (* 4 (- (log -1) (log (/ -1 x))))))) (* (- (* 0.666667 x) 3.0) (* x x)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (221 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (exp 4) (log x)) 0.041667) (* -4.0 x)) (- 1.0 (* (- (* 0.666667 x) 3.0) (* x x))))
* * * * [misc]progress:  [ 65 / 70 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 3.0 x)) (- 1.0 (* 4.0 x)))
* * * * [misc]progress:  [ 66 / 70 ] simplifiying candidate #<alt-event (Î» (x) (- (* 3.0 (pow x 2)) (+ (* 0.666667 (pow x 3)) (* 4.0 x))))>
* [enter]simplify:  Simplifying (- (* 3.0 (pow x 2)) (+ (* 0.666667 (pow x 3)) (* 4.0 x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (111 enodes)
* * [misc]simplify:  iters left: 2 (200 enodes)
* * [misc]simplify:  iters left: 1 (289 enodes)
* [exit]simplify:  Simplified to (* x (- (- (* 3.0 x) 4.0) (* (* x x) 0.666667)))
* * * * [misc]progress:  [ 67 / 70 ] simplifiying candidate #<alt-event (Î» (x) (- (* 3.0 (pow x 2)) (+ (* 0.666667 (pow x 3)) (* 4.0 x))))>
* [enter]simplify:  Simplifying (- (* 3.0 (pow x 2)) (+ (* 0.666667 (pow x 3)) (* 4.0 x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (111 enodes)
* * [misc]simplify:  iters left: 2 (200 enodes)
* * [misc]simplify:  iters left: 1 (289 enodes)
* [exit]simplify:  Simplified to (* x (- (- (* 3.0 x) 4.0) (* (* x x) 0.666667)))
* * * * [misc]progress:  [ 68 / 70 ] simplifiying candidate #<alt-event (Î» (x) (- (- (+ (* 0.041667 (pow x 4)) 1.0) (* 4.0 x)) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (- (- (+ (* 0.041667 (pow x 4)) 1.0) (* 4.0 x)) (* (- (* 0.666667 x) 3.0) (* x x)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (219 enodes)
* [exit]simplify:  Simplified to (+ (* (- 3.0 (* 0.666667 x)) (* x x)) (+ (* (pow x 4) 0.041667) (- 1.0 (* 4.0 x))))
* * * * [misc]progress:  [ 69 / 70 ] simplifiying candidate #<alt-event (Î» (x) (- (- (+ (* 0.041667 (pow x 4)) 1.0) (* 4.0 x)) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (- (- (+ (* 0.041667 (pow x 4)) 1.0) (* 4.0 x)) (* (- (* 0.666667 x) 3.0) (* x x)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (219 enodes)
* [exit]simplify:  Simplified to (+ (* (- 3.0 (* 0.666667 x)) (* x x)) (+ (* (pow x 4) 0.041667) (- 1.0 (* 4.0 x))))
* * * * [misc]progress:  [ 70 / 70 ] simplifiying candidate #<alt-event (Î» (x) (- (- (+ (* 0.041667 (exp (* 4 (- (log -1) (log (/ -1 x)))))) 1.0) (* 4.0 x)) (* (- (* 0.666667 x) 3.0) (* x x))))>
* [enter]simplify:  Simplifying (- (- (+ (* 0.041667 (exp (* 4 (- (log -1) (log (/ -1 x)))))) 1.0) (* 4.0 x)) (* (- (* 0.666667 x) 3.0) (* x x)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (264 enodes)
* [exit]simplify:  Simplified to (+ (- (* (pow (exp 4) (log x)) 0.041667) (* x 4.0)) (- 1.0 (* (- (* 0.666667 x) 3.0) (* x x))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (pow x 3) (+ (* 0.041667 x) -0.666667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (* 1 (- 0.666667)) into -0.666667
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (+ (* 0.041667 1) (* 0 0)) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (+ (* 1 0.041667) (* 0 (- 0.666667))) into 0.041667
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0.041667) (* 0 (- 0.666667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0.041667) (* 0 (- 0.666667))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.041667) (* 0 (- 0.666667)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.041667) (* 0 (- 0.666667))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.041667) (* 0 (- 0.666667)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.041667) (* 0 (- 0.666667))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 (pow x 4)) (* -0.666667 (pow x 3))) into (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (* (pow x -3) 0.041667) into (/ 0.041667 (pow x 3))
* [misc]backup-simplify:  Simplify (/ 0.041667 (pow x 3)) into (/ 0.041667 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) (- 0.666667)) (* 0 0.041667)) into (- (* 0.666667 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (- (* 0.666667 (/ 1 (pow x 3)))) into (- (* 0.666667 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 (- 0.666667)) (* 0 0.041667))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 0.041667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 0.041667))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 0.041667)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 0.041667))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 0.041667)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (* 0.666667 (/ 1 (pow (/ 1 x) 3)))) (* (/ 0.041667 (pow (/ 1 x) 3)) (/ 1 (/ 1 x)))) into (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (- 0.041667)) into (* -0.041667 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* -0.041667 (exp (* 3 (- (log -1) (log x))))) into (* -0.041667 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) (- 0.666667)) (* 0 (- 0.041667))) into (- (* 0.666667 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- (* 0.666667 (exp (* 3 (- (log -1) (log x)))))) into (- (* 0.666667 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.666667)) (* 0 (- 0.041667))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (* 0.666667 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (* (* -0.041667 (exp (* 3 (- (log -1) (log (/ 1 (- x))))))) (/ 1 (/ 1 (- x))))) into (- (* 0.041667 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 0.666667 (exp (* 3 (- (log -1) (log (/ -1 x)))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (+ -4.0 (* x 3.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ -4.0 (* x 3.0)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (+ -4.0 (* x 3.0)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (* 0 3.0) into 0
* [misc]backup-simplify:  Simplify (+ -4.0 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 3.0)) into 3.0
* [misc]backup-simplify:  Simplify (+ 0 3.0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 x) (- 4.0)) into (- (* 3.0 x) 4.0)
* [misc]approximate:  Taking taylor expansion of (+ -4.0 (* (/ 1 x) 3.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ -4.0 (* (/ 1 x) 3.0)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (+ -4.0 (* (/ 1 x) 3.0)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (* 1 3.0) into 3.0
* [misc]backup-simplify:  Simplify (+ 0 3.0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ -4.0 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- 4.0) (* 3.0 (/ 1 (/ 1 x)))) into (- (* 3.0 x) 4.0)
* [misc]approximate:  Taking taylor expansion of (+ -4.0 (* (/ 1 (- x)) 3.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ -4.0 (* (/ 1 (- x)) 3.0)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (+ -4.0 (* (/ 1 (- x)) 3.0)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (* -1 3.0) into -3.0
* [misc]backup-simplify:  Simplify (+ 0 -3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ -4.0 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- 4.0) (* (- 3.0) (/ 1 (/ 1 (- x))))) into (- (* 3.0 x) 4.0)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* x (+ -4.0 (* x 3.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* x (+ -4.0 (* x 3.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ -4.0 (* x 3.0)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* x (+ -4.0 (* x 3.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ -4.0 (* x 3.0)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (* 0 3.0) into 0
* [misc]backup-simplify:  Simplify (+ -4.0 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (* 0 (- 4.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 3.0)) into 3.0
* [misc]backup-simplify:  Simplify (+ 0 3.0) into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 3.0) (* 1 (- 4.0))) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 3.0) (* 0 (- 4.0)))) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 3.0) (* 0 (- 4.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 3.0) (* 0 (- 4.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 3.0) (* 0 (- 4.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 3.0) (* 0 (- 4.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 3.0) (* 0 (- 4.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 3.0) (* 0 (- 4.0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 (pow x 2)) (* (- 4.0) x)) into (- (* 3.0 (pow x 2)) (* 4.0 x))
* [misc]approximate:  Taking taylor expansion of (* (/ 1 x) (+ -4.0 (* (/ 1 x) 3.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (+ -4.0 (* (/ 1 x) 3.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ -4.0 (* (/ 1 x) 3.0)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (+ -4.0 (* (/ 1 x) 3.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ -4.0 (* (/ 1 x) 3.0)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (* 1 3.0) into 3.0
* [misc]backup-simplify:  Simplify (+ 0 3.0) into 3.0
* [misc]backup-simplify:  Simplify (* 1 3.0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ -4.0 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 (- 4.0)) (* 0 3.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 (- 4.0)) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 4.0)) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 4.0)) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 4.0)) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 4.0)) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 4.0)) (* 0 3.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 4.0) (/ 1 (/ 1 x))) (* 3.0 (pow (/ 1 (/ 1 x)) 2))) into (- (* 3.0 (pow x 2)) (* 4.0 x))
* [misc]approximate:  Taking taylor expansion of (* (/ 1 (- x)) (+ -4.0 (* (/ 1 (- x)) 3.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (+ -4.0 (* (/ 1 (- x)) 3.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ -4.0 (* (/ 1 (- x)) 3.0)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (+ -4.0 (* (/ 1 (- x)) 3.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ -4.0 (* (/ 1 (- x)) 3.0)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (* -1 3.0) into -3.0
* [misc]backup-simplify:  Simplify (+ 0 -3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (* -1 (- 3.0)) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ -4.0 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 (- 4.0)) (* 0 (- 3.0))) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 (- 4.0)) (* 0 (- 3.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 (- 4.0)) (* 0 (- 3.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 4.0)) (* 0 (- 3.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 4.0)) (* 0 (- 3.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 4.0)) (* 0 (- 3.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 4.0)) (* 0 (- 3.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.0 (/ 1 (/ 1 (- x)))) (* 3.0 (pow (/ 1 (/ 1 (- x))) 2))) into (- (* 3.0 (pow x 2)) (* 4.0 x))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (+ (* x (+ -4.0 (* x 3.0))) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (+ -4.0 (* x 3.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ -4.0 (* x 3.0)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (+ (* 0.041667 x) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 x) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (+ (* x (+ -4.0 (* x 3.0))) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (+ -4.0 (* x 3.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ -4.0 (* x 3.0)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* 0 3.0) into 0
* [misc]backup-simplify:  Simplify (+ -4.0 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (* 0 (- 4.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 3.0)) into 3.0
* [misc]backup-simplify:  Simplify (+ 0 3.0) into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 3.0) (* 1 (- 4.0))) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (- 4.0) 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 3.0) (* 0 (- 4.0)))) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (+ 0 3.0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (+ (* 3.0 (pow x 2)) (+ (* (- 4.0) x) 1.0)) into (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) (+ (* (/ 1 x) (+ -4.0 (* (/ 1 x) 3.0))) 1.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) (+ (* (/ 1 x) (+ -4.0 (* (/ 1 x) 3.0))) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (+ -4.0 (* (/ 1 x) 3.0))) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (+ -4.0 (* (/ 1 x) 3.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ -4.0 (* (/ 1 x) 3.0)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) (+ (* (/ 1 x) (+ -4.0 (* (/ 1 x) 3.0))) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (+ (* 0.041667 (/ 1 x)) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 x)) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (+ -4.0 (* (/ 1 x) 3.0))) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (+ -4.0 (* (/ 1 x) 3.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ -4.0 (* (/ 1 x) 3.0)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* 1 3.0) into 3.0
* [misc]backup-simplify:  Simplify (+ 0 3.0) into 3.0
* [misc]backup-simplify:  Simplify (* 1 3.0) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (+ 0 3.0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0.041667 0) into 0.041667
* [misc]backup-simplify:  Simplify (* (pow x -3) 0.041667) into (/ 0.041667 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ -4.0 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 (- 4.0)) (* 0 3.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (- 4.0) 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (/ 0.041667 (pow x 3)) (- 4.0)) into (- (* 0.041667 (/ 1 (pow x 3))) 4.0)
* [misc]backup-simplify:  Simplify (- (* 0.041667 (/ 1 (pow x 3))) 4.0) into (- (* 0.041667 (/ 1 (pow x 3))) 4.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) (- 0.666667)) (* 0 0.041667)) into (- (* 0.666667 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 (- 4.0)) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ (- (* 0.666667 (/ 1 (pow x 3)))) 1.0) into (- 1.0 (* 0.666667 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (- 1.0 (* 0.666667 (/ 1 (pow x 3)))) into (- 1.0 (* 0.666667 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (+ (- 1.0 (* 0.666667 (/ 1 (pow (/ 1 x) 3)))) (+ (* (- (* 0.041667 (/ 1 (pow (/ 1 x) 3))) 4.0) (/ 1 (/ 1 x))) (* 3.0 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 3.0 (pow x 2)) (+ (* 0.041667 (pow x 4)) 1.0)) (+ (* 0.666667 (pow x 3)) (* 4.0 x)))
* [misc]approximate:  Taking taylor expansion of (+ (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (+ (* (/ 1 (- x)) (+ -4.0 (* (/ 1 (- x)) 3.0))) 1.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (+ (* (/ 1 (- x)) (+ -4.0 (* (/ 1 (- x)) 3.0))) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (+ -4.0 (* (/ 1 (- x)) 3.0))) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (+ -4.0 (* (/ 1 (- x)) 3.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ -4.0 (* (/ 1 (- x)) 3.0)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) (+ (* (/ 1 (- x)) (+ -4.0 (* (/ 1 (- x)) 3.0))) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (+ (* 0.041667 (/ 1 (- x))) -0.666667)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* 0.041667 (/ 1 (- x))) -0.666667) in x
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (+ -4.0 (* (/ 1 (- x)) 3.0))) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (+ -4.0 (* (/ 1 (- x)) 3.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ -4.0 (* (/ 1 (- x)) 3.0)) in x
* [misc]taylor:  Taking taylor expansion of -4.0 in x
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* -1 3.0) into -3.0
* [misc]backup-simplify:  Simplify (+ 0 -3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (* -1 (- 3.0)) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (+ 0 3.0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ -0.041667 0) into (- 0.041667)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (- 0.041667)) into (* -0.041667 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ -4.0 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 (- 4.0)) (* 0 (- 3.0))) into 4.0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify (+ (* -0.041667 (exp (* 3 (- (log -1) (log x))))) 4.0) into (- 4.0 (* 0.041667 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 4.0 (* 0.041667 (exp (* 3 (- (log -1) (log x)))))) into (- 4.0 (* 0.041667 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 -0.666667) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) (- 0.666667)) (* 0 (- 0.041667))) into (- (* 0.666667 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 (- 4.0)) (* 0 (- 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ (- (* 0.666667 (exp (* 3 (- (log -1) (log x)))))) 1.0) into (- 1.0 (* 0.666667 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 1.0 (* 0.666667 (exp (* 3 (- (log -1) (log x)))))) into (- 1.0 (* 0.666667 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (- 1.0 (* 0.666667 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (+ (* (- 4.0 (* 0.041667 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (/ 1 (/ 1 (- x)))) (* 3.0 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 0.041667 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (+ 1.0 (* 3.0 (pow x 2)))) (+ (* 0.666667 (exp (* 3 (- (log -1) (log (/ -1 x)))))) (* 4.0 x)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (pow (* (pow x 3) (+ (* 0.041667 x) -0.666667)) 1) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* * * * [misc]progress:  [ 2 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (+ (* (log x) 3) (log (+ (* 0.041667 x) -0.666667)))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (log (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (+ (log (+ -0.666667 (* x 0.041667))) (* 3 (log x)))
* [exit]simplify:  Simplified to (+ (log (+ -0.666667 (* x 0.041667))) (* 3 (log x)))
* * * * [misc]progress:  [ 3 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (+ (log (pow x 3)) (log (+ (* 0.041667 x) -0.666667)))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (log (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* [exit]simplify:  Simplified to (+ (log (+ -0.666667 (* x 0.041667))) (* (log x) 3))
* [exit]simplify:  Simplified to (+ (log (+ -0.666667 (* x 0.041667))) (* (log x) 3))
* * * * [misc]progress:  [ 4 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (log (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (log (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (140 enodes)
* * [misc]simplify:  iters left: 1 (142 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (+ (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 5 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (exp (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (exp (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (141 enodes)
* * [misc]simplify:  iters left: 2 (199 enodes)
* * [misc]simplify:  iters left: 1 (206 enodes)
* [exit]simplify:  Simplified to (pow (exp (pow x 3)) (+ (* 0.041667 x) -0.666667))
* [exit]simplify:  Simplified to (pow (exp (pow x 3)) (+ (* 0.041667 x) -0.666667))
* * * * [misc]progress:  [ 6 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)) (+ (* 0.041667 x) -0.666667)))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))
* [exit]simplify:  Simplified to (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))
* * * * [misc]progress:  [ 7 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (100 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* [enter]simplify:  Simplifying (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 8 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (+ (* 0.041667 x) -0.666667)) 3)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (+ (* 0.041667 x) -0.666667)) 3)
* * * * [misc]progress:  [ 9 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 10 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 1 (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* * * * [misc]progress:  [ 11 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x 3) (* 0.041667 x)) (* (pow x 3) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (* (pow x 3) (* 0.041667 x))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (39 enodes)
* [exit]simplify:  Simplified to (* (* 0.041667 x) (pow x 3))
* [exit]simplify:  Simplified to (* (* 0.041667 x) (pow x 3))
* [enter]simplify:  Simplifying (* (pow x 3) -0.666667)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* -0.666667 x) (* x x))
* [exit]simplify:  Simplified to (* (* -0.666667 x) (* x x))
* * * * [misc]progress:  [ 12 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* 0.041667 x) (pow x 3)) (* -0.666667 (pow x 3))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (* (* 0.041667 x) (pow x 3))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (39 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* 0.041667 x))
* [exit]simplify:  Simplified to (* (pow x 3) (* 0.041667 x))
* [enter]simplify:  Simplifying (* -0.666667 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* -0.666667 x) (* x x))
* [exit]simplify:  Simplified to (* (* -0.666667 x) (* x x))
* * * * [misc]progress:  [ 13 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (* 0.041667 x) -0.666667))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (+ (* 0.041667 x) -0.666667)) (cbrt (+ (* 0.041667 x) -0.666667))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x))
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (* 0.041667 x) -0.666667))) (* (cbrt (+ (* 0.041667 x) -0.666667)) x))
* * * * [misc]progress:  [ 14 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) (sqrt (+ (* 0.041667 x) -0.666667))) (sqrt (+ (* 0.041667 x) -0.666667))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (* (pow x 3) (sqrt (+ (* 0.041667 x) -0.666667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* 0.041667 x) -0.666667)) (pow x 3))
* [exit]simplify:  Simplified to (* (sqrt (+ (* 0.041667 x) -0.666667)) (pow x 3))
* * * * [misc]progress:  [ 15 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow x 3) 1) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (* (pow x 3) 1)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 16 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* x x) (* x (+ (* 0.041667 x) -0.666667))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (* x (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* [exit]simplify:  Simplified to (* x (+ -0.666667 (* x 0.041667)))
* [exit]simplify:  Simplified to (* x (+ -0.666667 (* x 0.041667)))
* * * * [misc]progress:  [ 17 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (pow x 3)) (cbrt (pow x 3))) (* (cbrt (pow x 3)) (+ (* 0.041667 x) -0.666667))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (* (cbrt (pow x 3)) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* [exit]simplify:  Simplified to (* (+ -0.666667 (* x 0.041667)) x)
* [exit]simplify:  Simplified to (* (+ -0.666667 (* x 0.041667)) x)
* * * * [misc]progress:  [ 18 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* x (* (* x x) (+ (* 0.041667 x) -0.666667))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (* (* x x) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* [exit]simplify:  Simplified to (* (+ (* x 0.041667) -0.666667) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x 0.041667) -0.666667) (* x x))
* * * * [misc]progress:  [ 19 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (sqrt (pow x 3)) (* (sqrt (pow x 3)) (+ (* 0.041667 x) -0.666667))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (* (sqrt (pow x 3)) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow x 3)) (+ -0.666667 (* x 0.041667)))
* [exit]simplify:  Simplified to (* (sqrt (pow x 3)) (+ -0.666667 (* x 0.041667)))
* * * * [misc]progress:  [ 20 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 1 (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (* (pow x 3) (+ (* 0.041667 x) -0.666667))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (102 enodes)
* * [misc]simplify:  iters left: 1 (104 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (+ (* 0.041667 x) -0.666667))
* [exit]simplify:  Simplified to (* (pow x 3) (+ (* 0.041667 x) -0.666667))
* * * * [misc]progress:  [ 21 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (pow x 3) (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667)))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (* (pow x 3) (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (99 enodes)
* * [misc]simplify:  iters left: 3 (291 enodes)
* [exit]simplify:  Simplified to (* (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)) (pow x 3))
* [exit]simplify:  Simplified to (* (+ (pow (* 0.041667 x) 3) (pow -0.666667 3)) (pow x 3))
* * * * [misc]progress:  [ 22 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (* (pow x 3) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (- (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (* (pow x 3) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (164 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 0.041667 x) -0.666667) x) (* (* x x) (- (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (* (* (+ (* 0.041667 x) -0.666667) x) (* (* x x) (- (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 23 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (+ (* 0.041667 x) -0.666667) (pow x 3)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* * * * [misc]progress:  [ 24 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (pow (+ -4.0 (* x 3.0)) 1)) 1.0)))>
* * * * [misc]progress:  [ 25 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (exp (log (+ -4.0 (* x 3.0))))) 1.0)))>
* [enter]simplify:  Simplifying (log (+ -4.0 (* x 3.0)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (log (+ (* 3.0 x) -4.0))
* [exit]simplify:  Simplified to (log (+ (* 3.0 x) -4.0))
* * * * [misc]progress:  [ 26 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (log (exp (+ -4.0 (* x 3.0))))) 1.0)))>
* [enter]simplify:  Simplifying (exp (+ -4.0 (* x 3.0)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (exp (+ (* 3.0 x) -4.0))
* [exit]simplify:  Simplified to (exp (+ (* 3.0 x) -4.0))
* * * * [misc]progress:  [ 27 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (* (* (cbrt (+ -4.0 (* x 3.0))) (cbrt (+ -4.0 (* x 3.0)))) (cbrt (+ -4.0 (* x 3.0))))) 1.0)))>
* [enter]simplify:  Simplifying (* (cbrt (+ -4.0 (* x 3.0))) (cbrt (+ -4.0 (* x 3.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 3.0 x) -4.0)) (cbrt (+ (* 3.0 x) -4.0)))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 3.0 x) -4.0)) (cbrt (+ (* 3.0 x) -4.0)))
* [enter]simplify:  Simplifying (cbrt (+ -4.0 (* x 3.0)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* 3.0 x) -4.0))
* [exit]simplify:  Simplified to (cbrt (+ (* 3.0 x) -4.0))
* * * * [misc]progress:  [ 28 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (cbrt (* (* (+ -4.0 (* x 3.0)) (+ -4.0 (* x 3.0))) (+ -4.0 (* x 3.0))))) 1.0)))>
* [enter]simplify:  Simplifying (* (* (+ -4.0 (* x 3.0)) (+ -4.0 (* x 3.0))) (+ -4.0 (* x 3.0)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (315 enodes)
* [exit]simplify:  Simplified to (pow (+ (* 3.0 x) -4.0) 3)
* [exit]simplify:  Simplified to (pow (+ (* 3.0 x) -4.0) 3)
* * * * [misc]progress:  [ 29 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (* (sqrt (+ -4.0 (* x 3.0))) (sqrt (+ -4.0 (* x 3.0))))) 1.0)))>
* [enter]simplify:  Simplifying (sqrt (+ -4.0 (* x 3.0)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* 3.0 x) -4.0))
* [exit]simplify:  Simplified to (sqrt (+ (* 3.0 x) -4.0))
* [enter]simplify:  Simplifying (sqrt (+ -4.0 (* x 3.0)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* 3.0 x) -4.0))
* [exit]simplify:  Simplified to (sqrt (+ (* 3.0 x) -4.0))
* * * * [misc]progress:  [ 30 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (/ (+ (pow -4.0 3) (pow (* x 3.0) 3)) (+ (* -4.0 -4.0) (- (* (* x 3.0) (* x 3.0)) (* -4.0 (* x 3.0)))))) 1.0)))>
* [enter]simplify:  Simplifying (+ (pow -4.0 3) (pow (* x 3.0) 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (78 enodes)
* * [misc]simplify:  iters left: 1 (95 enodes)
* [exit]simplify:  Simplified to (+ (pow -4.0 3) (pow (* x 3.0) 3))
* [exit]simplify:  Simplified to (+ (pow -4.0 3) (pow (* x 3.0) 3))
* [enter]simplify:  Simplifying (+ (* -4.0 -4.0) (- (* (* x 3.0) (* x 3.0)) (* -4.0 (* x 3.0))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* x 3.0) -4.0) (* x 3.0)) (* -4.0 -4.0))
* [exit]simplify:  Simplified to (+ (* (- (* x 3.0) -4.0) (* x 3.0)) (* -4.0 -4.0))
* * * * [misc]progress:  [ 31 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (* 1 (+ -4.0 (* x 3.0)))) 1.0)))>
* * * * [misc]progress:  [ 32 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (/ (- (* -4.0 -4.0) (* (* x 3.0) (* x 3.0))) (- -4.0 (* x 3.0)))) 1.0)))>
* [enter]simplify:  Simplifying (- (* -4.0 -4.0) (* (* x 3.0) (* x 3.0)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (145 enodes)
* * [misc]simplify:  iters left: 1 (272 enodes)
* [exit]simplify:  Simplified to (* (+ (* x 3.0) -4.0) (- -4.0 (* x 3.0)))
* [exit]simplify:  Simplified to (* (+ (* x 3.0) -4.0) (- -4.0 (* x 3.0)))
* [enter]simplify:  Simplifying (- -4.0 (* x 3.0))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* [exit]simplify:  Simplified to (- -4.0 (* 3.0 x))
* [exit]simplify:  Simplified to (- -4.0 (* 3.0 x))
* * * * [misc]progress:  [ 33 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ (* x 3.0) -4.0)) 1.0)))>
* * * * [misc]progress:  [ 34 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (pow (* x (+ -4.0 (* x 3.0))) 1) 1.0)))>
* * * * [misc]progress:  [ 35 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (exp (log (* x (+ -4.0 (* x 3.0))))) 1.0)))>
* [enter]simplify:  Simplifying (log (* x (+ -4.0 (* x 3.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* [exit]simplify:  Simplified to (log (* x (+ (* x 3.0) -4.0)))
* [exit]simplify:  Simplified to (log (* x (+ (* x 3.0) -4.0)))
* * * * [misc]progress:  [ 36 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (log (exp (* x (+ -4.0 (* x 3.0))))) 1.0)))>
* [enter]simplify:  Simplifying (exp (* x (+ -4.0 (* x 3.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (+ (* x 3.0) -4.0))
* [exit]simplify:  Simplified to (pow (exp x) (+ (* x 3.0) -4.0))
* * * * [misc]progress:  [ 37 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* (cbrt (* x (+ -4.0 (* x 3.0)))) (cbrt (* x (+ -4.0 (* x 3.0))))) (cbrt (* x (+ -4.0 (* x 3.0))))) 1.0)))>
* [enter]simplify:  Simplifying (* (cbrt (* x (+ -4.0 (* x 3.0)))) (cbrt (* x (+ -4.0 (* x 3.0)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (+ (* x 3.0) -4.0))) (cbrt (* x (+ (* x 3.0) -4.0))))
* [exit]simplify:  Simplified to (* (cbrt (* x (+ (* x 3.0) -4.0))) (cbrt (* x (+ (* x 3.0) -4.0))))
* [enter]simplify:  Simplifying (cbrt (* x (+ -4.0 (* x 3.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (+ (* x 3.0) -4.0)))
* [exit]simplify:  Simplified to (cbrt (* x (+ (* x 3.0) -4.0)))
* * * * [misc]progress:  [ 38 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (cbrt (* (* (* x (+ -4.0 (* x 3.0))) (* x (+ -4.0 (* x 3.0)))) (* x (+ -4.0 (* x 3.0))))) 1.0)))>
* [enter]simplify:  Simplifying (* (* (* x (+ -4.0 (* x 3.0))) (* x (+ -4.0 (* x 3.0)))) (* x (+ -4.0 (* x 3.0))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* [exit]simplify:  Simplified to (pow (* x (+ (* x 3.0) -4.0)) 3)
* [exit]simplify:  Simplified to (pow (* x (+ (* x 3.0) -4.0)) 3)
* * * * [misc]progress:  [ 39 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (sqrt (* x (+ -4.0 (* x 3.0)))) (sqrt (* x (+ -4.0 (* x 3.0))))) 1.0)))>
* [enter]simplify:  Simplifying (sqrt (* x (+ -4.0 (* x 3.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (+ (* x 3.0) -4.0)))
* [exit]simplify:  Simplified to (sqrt (* x (+ (* x 3.0) -4.0)))
* [enter]simplify:  Simplifying (sqrt (* x (+ -4.0 (* x 3.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (+ (* x 3.0) -4.0)))
* [exit]simplify:  Simplified to (sqrt (* x (+ (* x 3.0) -4.0)))
* * * * [misc]progress:  [ 40 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* 1 (* x (+ -4.0 (* x 3.0)))) 1.0)))>
* * * * [misc]progress:  [ 41 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ (* x -4.0) (* x (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (* x -4.0)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* x -4.0)
* [exit]simplify:  Simplified to (* x -4.0)
* [enter]simplify:  Simplifying (* x (* x 3.0))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* x (* x 3.0))
* [exit]simplify:  Simplified to (* x (* x 3.0))
* * * * [misc]progress:  [ 42 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (+ (* -4.0 x) (* (* x 3.0) x)) 1.0)))>
* [enter]simplify:  Simplifying (* -4.0 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* -4.0 x)
* [exit]simplify:  Simplified to (* -4.0 x)
* [enter]simplify:  Simplifying (* (* x 3.0) x)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (* x (* x 3.0))
* [exit]simplify:  Simplified to (* x (* x 3.0))
* * * * [misc]progress:  [ 43 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x (* (cbrt (+ -4.0 (* x 3.0))) (cbrt (+ -4.0 (* x 3.0))))) (cbrt (+ -4.0 (* x 3.0)))) 1.0)))>
* [enter]simplify:  Simplifying (* x (* (cbrt (+ -4.0 (* x 3.0))) (cbrt (+ -4.0 (* x 3.0)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* x (* (cbrt (+ (* x 3.0) -4.0)) (cbrt (+ (* x 3.0) -4.0))))
* [exit]simplify:  Simplified to (* x (* (cbrt (+ (* x 3.0) -4.0)) (cbrt (+ (* x 3.0) -4.0))))
* * * * [misc]progress:  [ 44 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x (sqrt (+ -4.0 (* x 3.0)))) (sqrt (+ -4.0 (* x 3.0)))) 1.0)))>
* [enter]simplify:  Simplifying (* x (sqrt (+ -4.0 (* x 3.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* x 3.0) -4.0)) x)
* [exit]simplify:  Simplified to (* (sqrt (+ (* x 3.0) -4.0)) x)
* * * * [misc]progress:  [ 45 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x 1) (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (* x 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 46 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (/ (* x (+ (pow -4.0 3) (pow (* x 3.0) 3))) (+ (* -4.0 -4.0) (- (* (* x 3.0) (* x 3.0)) (* -4.0 (* x 3.0))))) 1.0)))>
* [enter]simplify:  Simplifying (* x (+ (pow -4.0 3) (pow (* x 3.0) 3)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (138 enodes)
* * [misc]simplify:  iters left: 2 (195 enodes)
* * [misc]simplify:  iters left: 1 (199 enodes)
* [exit]simplify:  Simplified to (+ (* (* x -4.0) (* -4.0 -4.0)) (* (* (* x 3.0) (* x 3.0)) (* (* x x) 3.0)))
* [exit]simplify:  Simplified to (+ (* (* x -4.0) (* -4.0 -4.0)) (* (* (* x 3.0) (* x 3.0)) (* (* x x) 3.0)))
* * * * [misc]progress:  [ 47 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (/ (* x (- (* -4.0 -4.0) (* (* x 3.0) (* x 3.0)))) (- -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (* x (- (* -4.0 -4.0) (* (* x 3.0) (* x 3.0))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (134 enodes)
* * [misc]simplify:  iters left: 2 (326 enodes)
* [exit]simplify:  Simplified to (- (* x (* -4.0 -4.0)) (* (pow x 3) (* 3.0 3.0)))
* [exit]simplify:  Simplified to (- (* x (* -4.0 -4.0)) (* (pow x 3) (* 3.0 3.0)))
* * * * [misc]progress:  [ 48 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (+ -4.0 (* x 3.0)) x) 1.0)))>
* * * * [misc]progress:  [ 49 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (exp (+ (* x (+ -4.0 (* x 3.0))) 1.0)))))>
* [enter]simplify:  Simplifying (* (exp (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (exp (+ (* x (+ -4.0 (* x 3.0))) 1.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (311 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ (* 3.0 (* x x)) (+ (* -4.0 x) 1.0)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* [exit]simplify:  Simplified to (exp (+ (+ (* 3.0 (* x x)) (+ (* -4.0 x) 1.0)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))))
* * * * [misc]progress:  [ 50 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)) 1))>
* * * * [misc]progress:  [ 51 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))))>
* [enter]simplify:  Simplifying (log (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (232 enodes)
* * [misc]simplify:  iters left: 2 (459 enodes)
* [exit]simplify:  Simplified to (log (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (* 3.0 x)) (+ 1.0 (* x -4.0)))))
* [exit]simplify:  Simplified to (log (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (* 3.0 x)) (+ 1.0 (* x -4.0)))))
* * * * [misc]progress:  [ 52 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))))>
* [enter]simplify:  Simplifying (exp (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (339 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (* 3.0 x)) (+ (* x -4.0) 1.0))))
* [exit]simplify:  Simplified to (exp (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (* 3.0 x)) (+ (* x -4.0) 1.0))))
* * * * [misc]progress:  [ 53 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0))) (cbrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))) (cbrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0))) (cbrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (237 enodes)
* * [misc]simplify:  iters left: 2 (460 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (+ (* x -4.0) 1.0) (* (* x x) 3.0)) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (+ (+ (* x -4.0) 1.0) (* (* x x) 3.0)) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (+ (* x -4.0) 1.0) (* (* x x) 3.0)) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))) (cbrt (+ (+ (+ (* x -4.0) 1.0) (* (* x x) 3.0)) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))))
* [enter]simplify:  Simplifying (cbrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (232 enodes)
* * [misc]simplify:  iters left: 2 (459 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (* 3.0 x)) (+ 1.0 (* x -4.0)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (* 3.0 x)) (+ 1.0 (* x -4.0)))))
* * * * [misc]progress:  [ 54 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0))) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))))>
* [enter]simplify:  Simplifying (* (* (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0))) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (252 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0)))) 3)
* [exit]simplify:  Simplified to (pow (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* (* x x) 3.0) (+ 1.0 (* x -4.0)))) 3)
* * * * [misc]progress:  [ 55 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0))) (sqrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))))>
* [enter]simplify:  Simplifying (sqrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (232 enodes)
* * [misc]simplify:  iters left: 2 (459 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (* 3.0 x)) (+ 1.0 (* x -4.0)))))
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (* 3.0 x)) (+ 1.0 (* x -4.0)))))
* [enter]simplify:  Simplifying (sqrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (232 enodes)
* * [misc]simplify:  iters left: 2 (459 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (* 3.0 x)) (+ 1.0 (* x -4.0)))))
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (* 3.0 x)) (+ 1.0 (* x -4.0)))))
* * * * [misc]progress:  [ 56 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (* (pow x 3) (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (+ (* (* x (+ -4.0 (* x 3.0))) (* x (+ -4.0 (* x 3.0)))) (- (* 1.0 1.0) (* (* x (+ -4.0 (* x 3.0))) 1.0)))) (* (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))) (+ (pow (* x (+ -4.0 (* x 3.0))) 3) (pow 1.0 3)))) (* (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))) (+ (* (* x (+ -4.0 (* x 3.0))) (* x (+ -4.0 (* x 3.0)))) (- (* 1.0 1.0) (* (* x (+ -4.0 (* x 3.0))) 1.0))))))>
* [enter]simplify:  Simplifying (+ (* (* (pow x 3) (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (+ (* (* x (+ -4.0 (* x 3.0))) (* x (+ -4.0 (* x 3.0)))) (- (* 1.0 1.0) (* (* x (+ -4.0 (* x 3.0))) 1.0)))) (* (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))) (+ (pow (* x (+ -4.0 (* x 3.0))) 3) (pow 1.0 3))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (111 enodes)
* * [misc]simplify:  iters left: 4 (475 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (- -0.666667 (* 0.041667 x)) -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ (pow 1.0 3) (pow (* (+ (* x 3.0) -4.0) x) 3))) (* (+ (* (* (+ (* x 3.0) -4.0) x) (* (+ (* x 3.0) -4.0) x)) (- (* 1.0 1.0) (* (+ (* x 3.0) -4.0) (* 1.0 x)))) (+ (* (* (* 0.041667 x) (pow x 3)) (* (* 0.041667 x) (* 0.041667 x))) (* (pow -0.666667 3) (pow x 3)))))
* [exit]simplify:  Simplified to (+ (* (+ (* (- -0.666667 (* 0.041667 x)) -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ (pow 1.0 3) (pow (* (+ (* x 3.0) -4.0) x) 3))) (* (+ (* (* (+ (* x 3.0) -4.0) x) (* (+ (* x 3.0) -4.0) x)) (- (* 1.0 1.0) (* (+ (* x 3.0) -4.0) (* 1.0 x)))) (+ (* (* (* 0.041667 x) (pow x 3)) (* (* 0.041667 x) (* 0.041667 x))) (* (pow -0.666667 3) (pow x 3)))))
* [enter]simplify:  Simplifying (* (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))) (+ (* (* x (+ -4.0 (* x 3.0))) (* x (+ -4.0 (* x 3.0)))) (- (* 1.0 1.0) (* (* x (+ -4.0 (* x 3.0))) 1.0))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (230 enodes)
* [exit]simplify:  Simplified to (* (+ (- (* 1.0 1.0) (* (+ (* 3.0 x) -4.0) (* x 1.0))) (* (* (+ (* 3.0 x) -4.0) x) (* (+ (* 3.0 x) -4.0) x))) (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667)))
* [exit]simplify:  Simplified to (* (+ (- (* 1.0 1.0) (* (+ (* 3.0 x) -4.0) (* x 1.0))) (* (* (+ (* 3.0 x) -4.0) x) (* (+ (* 3.0 x) -4.0) x))) (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667)))
* * * * [misc]progress:  [ 57 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (* (pow x 3) (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (- (* x (+ -4.0 (* x 3.0))) 1.0)) (* (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))) (- (* (* x (+ -4.0 (* x 3.0))) (* x (+ -4.0 (* x 3.0)))) (* 1.0 1.0)))) (* (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))) (- (* x (+ -4.0 (* x 3.0))) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (* (pow x 3) (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (- (* x (+ -4.0 (* x 3.0))) 1.0)) (* (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))) (- (* (* x (+ -4.0 (* x 3.0))) (* x (+ -4.0 (* x 3.0)))) (* 1.0 1.0))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (299 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ (* 3.0 (* x x)) (- (* x -4.0) 1.0)) (* x x)) (+ (* (* (* 0.041667 x) (* 0.041667 x)) (* x (* 0.041667 x))) (* (* x -0.666667) (* -0.666667 -0.666667)))) (* (* (+ (* 3.0 (* x x)) (- (* x -4.0) 1.0)) (+ (* 3.0 (* x x)) (+ (* x -4.0) 1.0))) (+ (* -0.666667 (- -0.666667 (* 0.041667 x))) (* (* 0.041667 x) (* 0.041667 x)))))
* [exit]simplify:  Simplified to (+ (* (* (+ (* 3.0 (* x x)) (- (* x -4.0) 1.0)) (* x x)) (+ (* (* (* 0.041667 x) (* 0.041667 x)) (* x (* 0.041667 x))) (* (* x -0.666667) (* -0.666667 -0.666667)))) (* (* (+ (* 3.0 (* x x)) (- (* x -4.0) 1.0)) (+ (* 3.0 (* x x)) (+ (* x -4.0) 1.0))) (+ (* -0.666667 (- -0.666667 (* 0.041667 x))) (* (* 0.041667 x) (* 0.041667 x)))))
* [enter]simplify:  Simplifying (* (+ (* (* 0.041667 x) (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) -0.666667))) (- (* x (+ -4.0 (* x 3.0))) 1.0))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (295 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667)) (+ (* (* x x) 3.0) (- (* -4.0 x) 1.0)))
* [exit]simplify:  Simplified to (* (+ (* (* 0.041667 x) (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) -0.666667)) (+ (* (* x x) 3.0) (- (* -4.0 x) 1.0)))
* * * * [misc]progress:  [ 58 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (* (pow x 3) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (+ (* (* x (+ -4.0 (* x 3.0))) (* x (+ -4.0 (* x 3.0)))) (- (* 1.0 1.0) (* (* x (+ -4.0 (* x 3.0))) 1.0)))) (* (- (* 0.041667 x) -0.666667) (+ (pow (* x (+ -4.0 (* x 3.0))) 3) (pow 1.0 3)))) (* (- (* 0.041667 x) -0.666667) (+ (* (* x (+ -4.0 (* x 3.0))) (* x (+ -4.0 (* x 3.0)))) (- (* 1.0 1.0) (* (* x (+ -4.0 (* x 3.0))) 1.0))))))>
* [enter]simplify:  Simplifying (+ (* (* (pow x 3) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (+ (* (* x (+ -4.0 (* x 3.0))) (* x (+ -4.0 (* x 3.0)))) (- (* 1.0 1.0) (* (* x (+ -4.0 (* x 3.0))) 1.0)))) (* (- (* 0.041667 x) -0.666667) (+ (pow (* x (+ -4.0 (* x 3.0))) 3) (pow 1.0 3))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (353 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (- (* 0.041667 x) -0.666667) (pow x 3)) (pow (+ (* x 3.0) -4.0) 3)) (* (- (* 0.041667 x) -0.666667) (pow 1.0 3))) (* (* (* (- (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)) (pow x 3)) (+ (* (* (+ (* x 3.0) -4.0) x) (* (+ (* x 3.0) -4.0) x)) (* (- (- 1.0 (* x -4.0)) (* 3.0 (* x x))) 1.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (- (* 0.041667 x) -0.666667) (pow x 3)) (pow (+ (* x 3.0) -4.0) 3)) (* (- (* 0.041667 x) -0.666667) (pow 1.0 3))) (* (* (* (- (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)) (pow x 3)) (+ (* (* (+ (* x 3.0) -4.0) x) (* (+ (* x 3.0) -4.0) x)) (* (- (- 1.0 (* x -4.0)) (* 3.0 (* x x))) 1.0))))
* [enter]simplify:  Simplifying (* (- (* 0.041667 x) -0.666667) (+ (* (* x (+ -4.0 (* x 3.0))) (* x (+ -4.0 (* x 3.0)))) (- (* 1.0 1.0) (* (* x (+ -4.0 (* x 3.0))) 1.0))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (178 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (+ -4.0 (* 3.0 x))) (* (+ -4.0 (* 3.0 x)) (- (* 0.041667 x) -0.666667))) (* (* 1.0 (- (* 0.041667 x) -0.666667)) (- (- 1.0 (* -4.0 x)) (* 3.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (+ -4.0 (* 3.0 x))) (* (+ -4.0 (* 3.0 x)) (- (* 0.041667 x) -0.666667))) (* (* 1.0 (- (* 0.041667 x) -0.666667)) (- (- 1.0 (* -4.0 x)) (* 3.0 (* x x)))))
* * * * [misc]progress:  [ 59 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (* (pow x 3) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (- (* x (+ -4.0 (* x 3.0))) 1.0)) (* (- (* 0.041667 x) -0.666667) (- (* (* x (+ -4.0 (* x 3.0))) (* x (+ -4.0 (* x 3.0)))) (* 1.0 1.0)))) (* (- (* 0.041667 x) -0.666667) (- (* x (+ -4.0 (* x 3.0))) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (* (pow x 3) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 -0.666667))) (- (* x (+ -4.0 (* x 3.0))) 1.0)) (* (- (* 0.041667 x) -0.666667) (- (* (* x (+ -4.0 (* x 3.0))) (* x (+ -4.0 (* x 3.0)))) (* 1.0 1.0))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (206 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ (* 3.0 (* x x)) (- (* x -4.0) 1.0)) x) (* (* (* x x) (- (* 0.041667 x) -0.666667)) (+ (* 0.041667 x) -0.666667))) (* (* (+ (* 3.0 (* x x)) (+ (* x -4.0) 1.0)) (+ (* 3.0 (* x x)) (- (* x -4.0) 1.0))) (- (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (+ (* (* (+ (* 3.0 (* x x)) (- (* x -4.0) 1.0)) x) (* (* (* x x) (- (* 0.041667 x) -0.666667)) (+ (* 0.041667 x) -0.666667))) (* (* (+ (* 3.0 (* x x)) (+ (* x -4.0) 1.0)) (+ (* 3.0 (* x x)) (- (* x -4.0) 1.0))) (- (* 0.041667 x) -0.666667)))
* [enter]simplify:  Simplifying (* (- (* 0.041667 x) -0.666667) (- (* x (+ -4.0 (* x 3.0))) 1.0))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (155 enodes)
* [exit]simplify:  Simplified to (* (- (* (* 3.0 x) x) (- 1.0 (* -4.0 x))) (- (* 0.041667 x) -0.666667))
* [exit]simplify:  Simplified to (* (- (* (* 3.0 x) x) (- 1.0 (* -4.0 x))) (- (* 0.041667 x) -0.666667))
* * * * [misc]progress:  [ 60 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (* (pow x 3) (+ (* 0.041667 x) -0.666667)) 3) (pow (+ (* x (+ -4.0 (* x 3.0))) 1.0) 3)) (+ (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (- (* (+ (* x (+ -4.0 (* x 3.0))) 1.0) (+ (* x (+ -4.0 (* x 3.0))) 1.0)) (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0))))))>
* [enter]simplify:  Simplifying (+ (pow (* (pow x 3) (+ (* 0.041667 x) -0.666667)) 3) (pow (+ (* x (+ -4.0 (* x 3.0))) 1.0) 3))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* 3.0 (* x x)) (+ (* -4.0 x) 1.0)) 3) (pow (* (pow x 3) (+ (* 0.041667 x) -0.666667)) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* 3.0 (* x x)) (+ (* -4.0 x) 1.0)) 3) (pow (* (pow x 3) (+ (* 0.041667 x) -0.666667)) 3))
* [enter]simplify:  Simplifying (+ (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (- (* (+ (* x (+ -4.0 (* x 3.0))) 1.0) (+ (* x (+ -4.0 (* x 3.0))) 1.0)) (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (68 enodes)
* * [misc]simplify:  iters left: 4 (332 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ (* 0.041667 x) -0.666667) (* x x)) (* (* (* x x) (* x x)) (+ (* 0.041667 x) -0.666667))) (* (+ (+ (* (* x x) 3.0) (+ (* -4.0 x) 1.0)) (* (+ (* 0.041667 x) -0.666667) (* (* x x) (- x)))) (+ (* (* x x) 3.0) (+ (* -4.0 x) 1.0))))
* [exit]simplify:  Simplified to (+ (* (* (+ (* 0.041667 x) -0.666667) (* x x)) (* (* (* x x) (* x x)) (+ (* 0.041667 x) -0.666667))) (* (+ (+ (* (* x x) 3.0) (+ (* -4.0 x) 1.0)) (* (+ (* 0.041667 x) -0.666667) (* (* x x) (- x)))) (+ (* (* x x) 3.0) (+ (* -4.0 x) 1.0))))
* * * * [misc]progress:  [ 61 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0))))>
* * * * [misc]progress:  [ 62 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (* (+ (* x (+ -4.0 (* x 3.0))) 1.0) (+ (* x (+ -4.0 (* x 3.0))) 1.0))) (- (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0))))>
* [enter]simplify:  Simplifying (- (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* (pow x 3) (+ (* 0.041667 x) -0.666667))) (* (+ (* x (+ -4.0 (* x 3.0))) 1.0) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (212 enodes)
* [exit]simplify:  Simplified to (- (* (* (+ (* 0.041667 x) -0.666667) (* (* x x) (* x x))) (* (+ (* 0.041667 x) -0.666667) (* x x))) (* (+ (* 3.0 (* x x)) (+ 1.0 (* -4.0 x))) (+ (* 3.0 (* x x)) (+ 1.0 (* -4.0 x)))))
* [exit]simplify:  Simplified to (- (* (* (+ (* 0.041667 x) -0.666667) (* (* x x) (* x x))) (* (+ (* 0.041667 x) -0.666667) (* x x))) (* (+ (* 3.0 (* x x)) (+ 1.0 (* -4.0 x))) (+ (* 3.0 (* x x)) (+ 1.0 (* -4.0 x)))))
* [enter]simplify:  Simplifying (- (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (238 enodes)
* [exit]simplify:  Simplified to (- (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (* 3.0 x)) (+ 1.0 (* x -4.0))))
* [exit]simplify:  Simplified to (- (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (* 3.0 x)) (+ 1.0 (* x -4.0))))
* * * * [misc]progress:  [ 63 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* x (+ -4.0 (* x 3.0)))) 1.0))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (* x (+ -4.0 (* x 3.0))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (182 enodes)
* * [misc]simplify:  iters left: 2 (341 enodes)
* [exit]simplify:  Simplified to (+ (* x (+ -4.0 (* 3.0 x))) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (+ (* x (+ -4.0 (* 3.0 x))) (* (pow x 3) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 64 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (pow x 3) (* 0.041667 x)) (+ (* (pow x 3) -0.666667) (+ (* x (+ -4.0 (* x 3.0))) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) -0.666667) (+ (* x (+ -4.0 (* x 3.0))) 1.0))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (167 enodes)
* * [misc]simplify:  iters left: 1 (244 enodes)
* [exit]simplify:  Simplified to (+ (+ (* -4.0 x) 1.0) (* (+ 3.0 (* -0.666667 x)) (* x x)))
* [exit]simplify:  Simplified to (+ (+ (* -4.0 x) 1.0) (* (+ 3.0 (* -0.666667 x)) (* x x)))
* * * * [misc]progress:  [ 65 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* 0.041667 x) (pow x 3)) (+ (* -0.666667 (pow x 3)) (+ (* x (+ -4.0 (* x 3.0))) 1.0))))>
* [enter]simplify:  Simplifying (+ (* -0.666667 (pow x 3)) (+ (* x (+ -4.0 (* x 3.0))) 1.0))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (167 enodes)
* * [misc]simplify:  iters left: 1 (244 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 3.0 (* -0.666667 x))) (+ (* -4.0 x) 1.0))
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 3.0 (* -0.666667 x))) (+ (* -4.0 x) 1.0))
* * * * [misc]progress:  [ 66 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x (+ -4.0 (* x 3.0))) 1.0) (* (pow x 3) (+ (* 0.041667 x) -0.666667))))>
* * * * [misc]progress:  [ 67 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (+ (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3))) (+ (* x (+ -4.0 (* x 3.0))) 1.0))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (230 enodes)
* [exit]simplify:  Simplified to (+ (- (* (pow x 4) 0.041667) (* (* 0.666667 x) (* x x))) (+ (* (* x x) 3.0) (+ 1.0 (* -4.0 x))))
* * * * [misc]progress:  [ 68 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (+ (- (* 0.041667 (pow x 4)) (* 0.666667 (pow x 3))) (+ (* x (+ -4.0 (* x 3.0))) 1.0))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (230 enodes)
* [exit]simplify:  Simplified to (+ (- (* (pow x 4) 0.041667) (* (* 0.666667 x) (* x x))) (+ (* (* x x) 3.0) (+ 1.0 (* -4.0 x))))
* * * * [misc]progress:  [ 69 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (* 0.041667 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 0.666667 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>
* [enter]simplify:  Simplifying (+ (- (* 0.041667 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 0.666667 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (+ (* x (+ -4.0 (* x 3.0))) 1.0))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (280 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ 1.0 (* -4.0 x)) (* x (* 3.0 x))) (* (pow x 3) (- (* 0.041667 x) 0.666667)))
* * * * [misc]progress:  [ 70 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (- (* 3.0 x) 4.0)) 1.0)))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (- (* 3.0 x) 4.0)) 1.0))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (205 enodes)
* * [misc]simplify:  iters left: 2 (419 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (- 1.0 (* x 4.0)) (* (* x 3.0) x)))
* * * * [misc]progress:  [ 71 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (- (* 3.0 x) 4.0)) 1.0)))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (- (* 3.0 x) 4.0)) 1.0))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (205 enodes)
* * [misc]simplify:  iters left: 2 (419 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (- 1.0 (* x 4.0)) (* (* x 3.0) x)))
* * * * [misc]progress:  [ 72 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (- (* 3.0 x) 4.0)) 1.0)))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (- (* 3.0 x) 4.0)) 1.0))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (205 enodes)
* * [misc]simplify:  iters left: 2 (419 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (- 1.0 (* x 4.0)) (* (* x 3.0) x)))
* * * * [misc]progress:  [ 73 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (- (* 3.0 (pow x 2)) (* 4.0 x)) 1.0)))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (- (* 3.0 (pow x 2)) (* 4.0 x)) 1.0))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* * [misc]simplify:  iters left: 3 (311 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (* (* x 3.0) x) (- (* 4.0 x) 1.0)))
* * * * [misc]progress:  [ 74 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (- (* 3.0 (pow x 2)) (* 4.0 x)) 1.0)))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (- (* 3.0 (pow x 2)) (* 4.0 x)) 1.0))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* * [misc]simplify:  iters left: 3 (311 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (* (* x 3.0) x) (- (* 4.0 x) 1.0)))
* * * * [misc]progress:  [ 75 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (- (* 3.0 (pow x 2)) (* 4.0 x)) 1.0)))>
* [enter]simplify:  Simplifying (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (- (* 3.0 (pow x 2)) (* 4.0 x)) 1.0))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* * [misc]simplify:  iters left: 3 (311 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (- (* (* x 3.0) x) (- (* 4.0 x) 1.0)))
* * * * [misc]progress:  [ 76 / 78 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 3.0 (pow x 2)) 1.0) (* 4.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 3.0 x)) (- 1.0 (* 4.0 x)))
* * * * [misc]progress:  [ 77 / 78 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 3.0 (pow x 2)) (+ (* 0.041667 (pow x 4)) 1.0)) (+ (* 0.666667 (pow x 3)) (* 4.0 x))))>
* [enter]simplify:  Simplifying (- (+ (* 3.0 (pow x 2)) (+ (* 0.041667 (pow x 4)) 1.0)) (+ (* 0.666667 (pow x 3)) (* 4.0 x)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (252 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 0.041667 (pow x 4)) (- 1.0 (* 4.0 x))) (* (* x x) (- 3.0 (* 0.666667 x))))
* * * * [misc]progress:  [ 78 / 78 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.041667 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (+ 1.0 (* 3.0 (pow x 2)))) (+ (* 0.666667 (exp (* 3 (- (log -1) (log (/ -1 x)))))) (* 4.0 x))))>
* [enter]simplify:  Simplifying (- (+ (* 0.041667 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (+ 1.0 (* 3.0 (pow x 2)))) (+ (* 0.666667 (exp (* 3 (- (log -1) (log (/ -1 x)))))) (* 4.0 x)))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (280 enodes)
* [exit]simplify:  Simplified to (+ (+ (- 1.0 (* x 4.0)) (* (* x 3.0) x)) (* (pow x 3) (- (* 0.041667 x) 0.666667)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 1 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ -0.666667 0) into (- 0.666667)
* [misc]backup-simplify:  Simplify (* (- 0.666667) (pow x 9)) into (* -0.666667 (pow x 9))
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ -0.666667 0) into (- 0.666667)
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ -0.666667 0) into (- 0.666667)
* [misc]backup-simplify:  Simplify (* (- 0.666667) (- 0.666667)) into 0.444444888889
* [misc]backup-simplify:  Simplify (* (* -0.666667 (pow x 9)) 0.444444888889) into (* -0.29629674074096296 (pow x 9))
* [misc]backup-simplify:  Simplify (log (* -0.29629674074096296 (pow x 9))) into (log (* -0.29629674074096296 (pow x 9)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* -0.29629674074096296 (pow x 9)))) into (* 1/3 (log (* -0.29629674074096296 (pow x 9))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* -0.29629674074096296 (pow x 9))))) into (pow (* -0.29629674074096296 (pow x 9)) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ -0.666667 0) into (- 0.666667)
* [misc]backup-simplify:  Simplify (* (- 0.666667) (pow x 9)) into (* -0.666667 (pow x 9))
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ -0.666667 0) into (- 0.666667)
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ -0.666667 0) into (- 0.666667)
* [misc]backup-simplify:  Simplify (* (- 0.666667) (- 0.666667)) into 0.444444888889
* [misc]backup-simplify:  Simplify (* (* -0.666667 (pow x 9)) 0.444444888889) into (* -0.29629674074096296 (pow x 9))
* [misc]backup-simplify:  Simplify (log (* -0.29629674074096296 (pow x 9))) into (log (* -0.29629674074096296 (pow x 9)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* -0.29629674074096296 (pow x 9)))) into (* 1/3 (log (* -0.29629674074096296 (pow x 9))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* -0.29629674074096296 (pow x 9))))) into (pow (* -0.29629674074096296 (pow x 9)) 1/3)
* [misc]backup-simplify:  Simplify (pow (* -0.29629674074096296 (pow x 9)) 1/3) into (pow (* -0.29629674074096296 (pow x 9)) 1/3)
* [misc]backup-simplify:  Simplify (+ (* 0.041667 1) (* 0 0)) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0 0.041667) into 0.041667
* [misc]backup-simplify:  Simplify (+ (* 0.041667 1) (* 0 0)) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0 0.041667) into 0.041667
* [misc]backup-simplify:  Simplify (+ (* (- 0.666667) 0.041667) (* 0.041667 (- 0.666667))) into (- 0.055556027778000006)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 1) (* 0 0)) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0 0.041667) into 0.041667
* [misc]backup-simplify:  Simplify (+ (* (- 0.666667) 0) (* 0.041667 (pow x 9))) into (* 0.041667 (pow x 9))
* [misc]backup-simplify:  Simplify (+ (* (* -0.666667 (pow x 9)) (- 0.055556027778000006)) (* (* 0.041667 (pow x 9)) 0.444444888889)) into (* 0.055556055556013895 (pow x 9))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* 0.055556055556013895 (pow x 9))) 1)) (pow (* -0.29629674074096296 (pow x 9)) 1)))) 1) into -0.1875014062492969
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.1875014062492969) (* 0 (log (* -0.29629674074096296 (pow x 9))))) into (- 0.06250046874976563)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* -0.29629674074096296 (pow x 9))))) (+ (* (/ (pow (- 0.06250046874976563) 1) 1)))) into (* -0.06250046874976563 (* (pow -0.29629674074096296 1/3) (pow x 3)))
* [misc]backup-simplify:  Simplify (* -0.06250046874976563 (* (pow -0.29629674074096296 1/3) (pow x 3))) into (* -0.06250046874976563 (* (pow -0.29629674074096296 1/3) (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.666667) 0) (+ (* 0.041667 0.041667) (* 0 (- 0.666667)))) into 0.0017361388890000003
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.666667) 0) (+ (* 0.041667 0) (* 0 (pow x 9)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* -0.666667 (pow x 9)) 0.0017361388890000003) (+ (* (* 0.041667 (pow x 9)) (- 0.055556027778000006)) (* 0 0.444444888889))) into (- (* 0.00347227951413889 (pow x 9)))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* 0.055556055556013895 (pow x 9))) 2)) (pow (* -0.29629674074096296 (pow x 9)) 2))) (* 1 (/ (* 1 (pow (* 2 (- (* 0.00347227951413889 (pow x 9)))) 1)) (pow (* -0.29629674074096296 (pow x 9)) 1)))) 2) into (* 1/2 (- 0.023437851563642583 (* 0.0030864753089429025 (/ 1 (pow -0.29629674074096296 2)))))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 0.023437851563642583 (* 0.0030864753089429025 (/ 1 (pow -0.29629674074096296 2)))))) (+ (* 0 -0.1875014062492969) (* 0 (log (* -0.29629674074096296 (pow x 9)))))) into (- 0.0039063085939404305 (* 0.0005144125514904837 (/ 1 (pow -0.29629674074096296 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* -0.29629674074096296 (pow x 9))))) (+ (* (/ (pow (- 0.06250046874976563) 2) 2)) (* (/ (pow (- 0.0039063085939404305 (* 0.0005144125514904837 (/ 1 (pow -0.29629674074096296 2)))) 1) 1)))) into (* (pow -0.29629674074096296 1/3) (* (pow x 3) (- 0.005859462890910645 (* 0.0005144125514904837 (/ 1 (pow -0.29629674074096296 2))))))
* [misc]backup-simplify:  Simplify (* (pow -0.29629674074096296 1/3) (* (pow x 3) (- 0.005859462890910645 (* 0.0005144125514904837 (/ 1 (pow -0.29629674074096296 2)))))) into (* (pow -0.29629674074096296 1/3) (* (pow x 3) (- 0.005859462890910645 (* 0.0005144125514904837 (/ 1 (pow -0.29629674074096296 2))))))
* [misc]backup-simplify:  Simplify (+ (* (* (pow -0.29629674074096296 1/3) (* (pow x 3) (- 0.005859462890910645 (* 0.0005144125514904837 (/ 1 (pow -0.29629674074096296 2)))))) (pow x 2)) (+ (* (* -0.06250046874976563 (* (pow -0.29629674074096296 1/3) (pow x 3))) x) (pow (* -0.29629674074096296 (pow x 9)) 1/3))) into (- (+ (* 0.005859462890910645 (* (pow -0.29629674074096296 1/3) (pow x 5))) (pow (* -0.29629674074096296 (pow x 9)) 1/3)) (+ (* 0.0005144125514904837 (* (pow (/ 1 (pow -0.29629674074096296 5)) 1/3) (pow x 5))) (* 0.06250046874976563 (* (pow -0.29629674074096296 1/3) (pow x 4)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (+ -0.666667 (* 0.041667 (/ 1 x))) (pow (pow (/ 1 x) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 x))) (+ -0.666667 (* 0.041667 (/ 1 x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (+ -0.666667 (* 0.041667 (/ 1 x))) (pow (pow (/ 1 x) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 x))) (+ -0.666667 (* 0.041667 (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (+ -0.666667 (* 0.041667 (/ 1 x))) (pow (pow (/ 1 x) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 x))) (+ -0.666667 (* 0.041667 (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (+ -0.666667 (* 0.041667 (/ 1 x))) (pow (pow (/ 1 x) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 x))) (+ -0.666667 (* 0.041667 (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (+ -0.666667 (* 0.041667 (/ 1 x))) (pow (pow (/ 1 x) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 x))) (+ -0.666667 (* 0.041667 (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (+ -0.666667 (* 0.041667 (/ 1 x))) (pow (pow (/ 1 x) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 x))) (+ -0.666667 (* 0.041667 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (+ -0.666667 (* 0.041667 (/ 1 x))) (pow (pow (/ 1 x) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 x))) (+ -0.666667 (* 0.041667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 (/ 1 x))) (pow (pow (/ 1 x) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 (/ 1 x))) (+ -0.666667 (* 0.041667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0 0.041667) into 0.041667
* [misc]backup-simplify:  Simplify (* 0.041667 (pow (pow x -3) 3)) into (/ 0.041667 (pow x 9))
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0 0.041667) into 0.041667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0 0.041667) into 0.041667
* [misc]backup-simplify:  Simplify (* 0.041667 0.041667) into 0.0017361388890000003
* [misc]backup-simplify:  Simplify (* (/ 0.041667 (pow x 9)) 0.0017361388890000003) into (/ 7.233969908796301e-05 (pow x 9))
* [misc]backup-simplify:  Simplify (log (/ 7.233969908796301e-05 (pow x 9))) into (log (/ 7.233969908796301e-05 (pow x 9)))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (/ 7.233969908796301e-05 (pow x 9)))) into (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x)))) into (* 1/3 (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x))))) into (exp (* 1/3 (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (+ -0.666667 (* 0.041667 (/ 1 x))) (pow (pow (/ 1 x) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 x))) (+ -0.666667 (* 0.041667 (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (+ -0.666667 (* 0.041667 (/ 1 x))) (pow (pow (/ 1 x) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 x))) (+ -0.666667 (* 0.041667 (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (+ -0.666667 (* 0.041667 (/ 1 x))) (pow (pow (/ 1 x) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 x))) (+ -0.666667 (* 0.041667 (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (+ -0.666667 (* 0.041667 (/ 1 x))) (pow (pow (/ 1 x) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 x))) (+ -0.666667 (* 0.041667 (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (+ -0.666667 (* 0.041667 (/ 1 x))) (pow (pow (/ 1 x) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 x))) (+ -0.666667 (* 0.041667 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (+ -0.666667 (* 0.041667 (/ 1 x))) (pow (pow (/ 1 x) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 x))) (+ -0.666667 (* 0.041667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 (/ 1 x))) (pow (pow (/ 1 x) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 (/ 1 x))) (+ -0.666667 (* 0.041667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0 0.041667) into 0.041667
* [misc]backup-simplify:  Simplify (* 0.041667 (pow (pow x -3) 3)) into (/ 0.041667 (pow x 9))
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0 0.041667) into 0.041667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0 0.041667) into 0.041667
* [misc]backup-simplify:  Simplify (* 0.041667 0.041667) into 0.0017361388890000003
* [misc]backup-simplify:  Simplify (* (/ 0.041667 (pow x 9)) 0.0017361388890000003) into (/ 7.233969908796301e-05 (pow x 9))
* [misc]backup-simplify:  Simplify (log (/ 7.233969908796301e-05 (pow x 9))) into (log (/ 7.233969908796301e-05 (pow x 9)))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (/ 7.233969908796301e-05 (pow x 9)))) into (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x)))) into (* 1/3 (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x))))) into (exp (* 1/3 (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x))))) into (exp (* 1/3 (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ -0.666667 0) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ -0.666667 0) into (- 0.666667)
* [misc]backup-simplify:  Simplify (+ (* 0.041667 (- 0.666667)) (* (- 0.666667) 0.041667)) into (- 0.055556027778000006)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ -0.666667 0) into (- 0.666667)
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* (- 0.666667) (pow (pow x -3) 3))) into (- (* 0.666667 (/ 1 (pow x 9))))
* [misc]backup-simplify:  Simplify (+ (* (/ 0.041667 (pow x 9)) (- 0.055556027778000006)) (* (- (* 0.666667 (/ 1 (pow x 9)))) 0.0017361388890000003)) into (- (* 0.00347227951413889 (/ 1 (pow x 9))))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 0.00347227951413889 (/ 1 (pow x 9))))) 1)) (pow (/ 7.233969908796301e-05 (pow x 9)) 1)))) 1) into -47.99964000287998
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (/ 7.233969908796301e-05 (pow x 9)))) into (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -47.99964000287998) (* 0 (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x))))) into (- 15.999880000959992)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x))))) (+ (* (/ (pow (- 15.999880000959992) 1) 1)))) into (* -15.999880000959992 (exp (* 1/3 (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -15.999880000959992 (exp (* 1/3 (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x)))))) into (* -15.999880000959992 (exp (* 1/3 (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* (- 0.666667) (- 0.666667)) (* 0 0.041667))) into 0.444444888889
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* (- 0.666667) 0) (* 0 (pow (pow x -3) 3)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 0.041667 (pow x 9)) 0.444444888889) (+ (* (- (* 0.666667 (/ 1 (pow x 9)))) (- 0.055556027778000006)) (* 0 0.0017361388890000003))) into (* 0.055556055556013895 (/ 1 (pow x 9)))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 0.00347227951413889 (/ 1 (pow x 9))))) 2)) (pow (/ 7.233969908796301e-05 (pow x 9)) 2))) (* 1 (/ (* 1 (pow (* 2 (* 0.055556055556013895 (/ 1 (pow x 9)))) 1)) (pow (/ 7.233969908796301e-05 (pow x 9)) 1)))) 2) into (* 1/2 (- 1535.976960270717 (* 1.2056725024308605e-05 (/ 1 (pow 7.233969908796301e-05 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (/ 7.233969908796301e-05 (pow x 9)))) into (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 1535.976960270717 (* 1.2056725024308605e-05 (/ 1 (pow 7.233969908796301e-05 2)))))) (+ (* 0 -47.99964000287998) (* 0 (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x)))))) into (- 255.9961600451195 (* 2.0094541707181005e-06 (/ 1 (pow 7.233969908796301e-05 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x))))) (+ (* (/ (pow (- 15.999880000959992) 2) 2)) (* (/ (pow (- 255.9961600451195 (* 2.0094541707181005e-06 (/ 1 (pow 7.233969908796301e-05 2)))) 1) 1)))) into (* (- 383.99424006767924 (* 2.0094541707181005e-06 (/ 1 (pow 7.233969908796301e-05 2)))) (exp (* 1/3 (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* (- 383.99424006767924 (* 2.0094541707181005e-06 (/ 1 (pow 7.233969908796301e-05 2)))) (exp (* 1/3 (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x)))))) into (* (- 383.99424006767924 (* 2.0094541707181005e-06 (/ 1 (pow 7.233969908796301e-05 2)))) (exp (* 1/3 (- (log (/ 7.233969908796301e-05 (pow x 9))) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 383.99424006767924 (* 2.0094541707181005e-06 (/ 1 (pow 7.233969908796301e-05 2)))) (exp (* 1/3 (- (log (/ 7.233969908796301e-05 (pow (/ 1 x) 9))) (* 3 (log (/ 1 x))))))) (pow (/ 1 x) 2)) (+ (* (* -15.999880000959992 (exp (* 1/3 (- (log (/ 7.233969908796301e-05 (pow (/ 1 x) 9))) (* 3 (log (/ 1 x))))))) (/ 1 x)) (exp (* 1/3 (- (log (/ 7.233969908796301e-05 (pow (/ 1 x) 9))) (* 3 (log (/ 1 x)))))))) into (- (+ (exp (* 1/3 (- (log (* 7.233969908796301e-05 (pow x 9))) (* 3 (log (/ 1 x)))))) (* 383.99424006767924 (/ (exp (* 1/3 (- (log (* 7.233969908796301e-05 (pow x 9))) (* 3 (log (/ 1 x)))))) (pow x 2)))) (+ (* 15.999880000959992 (/ (exp (* 1/3 (- (log (* 7.233969908796301e-05 (pow x 9))) (* 3 (log (/ 1 x)))))) x)) (* 2.0094541707181005e-06 (/ (exp (* 1/3 (- (log (* 7.233969908796301e-05 (pow x 9))) (* 3 (log (/ 1 x)))))) (* (pow 7.233969908796301e-05 2) (pow x 2))))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (pow (pow (/ 1 (- x)) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (+ -0.666667 (* 0.041667 (/ 1 (- x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (pow (pow (/ 1 (- x)) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (+ -0.666667 (* 0.041667 (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (pow (pow (/ 1 (- x)) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (+ -0.666667 (* 0.041667 (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (pow (pow (/ 1 (- x)) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (+ -0.666667 (* 0.041667 (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (pow (pow (/ 1 (- x)) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (+ -0.666667 (* 0.041667 (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (pow (pow (/ 1 (- x)) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (+ -0.666667 (* 0.041667 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (pow (pow (/ 1 (- x)) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (+ -0.666667 (* 0.041667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (pow (pow (/ 1 (- x)) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (+ -0.666667 (* 0.041667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ 0 -0.041667) into (- 0.041667)
* [misc]backup-simplify:  Simplify (* (- 0.041667) (exp (* 9 (- (log -1) (log x))))) into (* -0.041667 (exp (* 9 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ 0 -0.041667) into (- 0.041667)
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ 0 -0.041667) into (- 0.041667)
* [misc]backup-simplify:  Simplify (* (- 0.041667) (- 0.041667)) into 0.0017361388890000003
* [misc]backup-simplify:  Simplify (* (* -0.041667 (exp (* 9 (- (log -1) (log x))))) 0.0017361388890000003) into (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) into (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x))))))) into (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x)))) into (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x))))) into (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (pow (pow (/ 1 (- x)) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (+ -0.666667 (* 0.041667 (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (pow (pow (/ 1 (- x)) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (+ -0.666667 (* 0.041667 (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (pow (pow (/ 1 (- x)) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (+ -0.666667 (* 0.041667 (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (pow (pow (/ 1 (- x)) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (+ -0.666667 (* 0.041667 (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (pow (pow (/ 1 (- x)) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (+ -0.666667 (* 0.041667 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (pow (pow (/ 1 (- x)) 3) 3)) (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (+ -0.666667 (* 0.041667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (pow (pow (/ 1 (- x)) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (+ -0.666667 (* 0.041667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ 0 -0.041667) into (- 0.041667)
* [misc]backup-simplify:  Simplify (* (- 0.041667) (exp (* 9 (- (log -1) (log x))))) into (* -0.041667 (exp (* 9 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ 0 -0.041667) into (- 0.041667)
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ 0 -0.041667) into (- 0.041667)
* [misc]backup-simplify:  Simplify (* (- 0.041667) (- 0.041667)) into 0.0017361388890000003
* [misc]backup-simplify:  Simplify (* (* -0.041667 (exp (* 9 (- (log -1) (log x))))) 0.0017361388890000003) into (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) into (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x))))))) into (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x)))) into (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x))))) into (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x))))) into (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ -0.666667 0) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ -0.666667 0) into (- 0.666667)
* [misc]backup-simplify:  Simplify (+ (* (- 0.041667) (- 0.666667)) (* (- 0.666667) (- 0.041667))) into 0.055556027778000006
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ -0.666667 0) into (- 0.666667)
* [misc]backup-simplify:  Simplify (+ (* (- 0.041667) 0) (* (- 0.666667) (exp (* 9 (- (log -1) (log x)))))) into (- (* 0.666667 (exp (* 9 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* -0.041667 (exp (* 9 (- (log -1) (log x))))) 0.055556027778000006) (* (- (* 0.666667 (exp (* 9 (- (log -1) (log x)))))) 0.0017361388890000003)) into (- (* 0.00347227951413889 (exp (* 9 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 0.00347227951413889 (exp (* 9 (- (log -1) (log x))))))) 1)) (pow (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x))))) 1)))) 1) into 47.99964000287998
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x))))))) into (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 47.99964000287998) (* 0 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x))))) into 15.999880000959992
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x))))) (+ (* (/ (pow 15.999880000959992 1) 1)))) into (* 15.999880000959992 (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* 15.999880000959992 (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x)))))) into (* 15.999880000959992 (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.041667) 0) (+ (* (- 0.666667) (- 0.666667)) (* 0 (- 0.041667)))) into 0.444444888889
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.041667) 0) (+ (* (- 0.666667) 0) (* 0 (exp (* 9 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* -0.041667 (exp (* 9 (- (log -1) (log x))))) 0.444444888889) (+ (* (- (* 0.666667 (exp (* 9 (- (log -1) (log x)))))) 0.055556027778000006) (* 0 0.0017361388890000003))) into (- (* 0.055556055556013895 (exp (* 9 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 0.00347227951413889 (exp (* 9 (- (log -1) (log x))))))) 2)) (pow (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (- (* 0.055556055556013895 (exp (* 9 (- (log -1) (log x))))))) 1)) (pow (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x))))) 1)))) 2) into (* 1/2 (- 1535.976960270717 (* 1.2056725024308605e-05 (/ 1 (pow -7.233969908796301e-05 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x))))))) into (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 1535.976960270717 (* 1.2056725024308605e-05 (/ 1 (pow -7.233969908796301e-05 2)))))) (+ (* 0 47.99964000287998) (* 0 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x)))))) into (- 255.9961600451195 (* 2.0094541707181005e-06 (/ 1 (pow -7.233969908796301e-05 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x))))) (+ (* (/ (pow 15.999880000959992 2) 2)) (* (/ (pow (- 255.9961600451195 (* 2.0094541707181005e-06 (/ 1 (pow -7.233969908796301e-05 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x))))) (- 383.99424006767924 (* 2.0094541707181005e-06 (/ 1 (pow -7.233969908796301e-05 2)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x))))) (- 383.99424006767924 (* 2.0094541707181005e-06 (/ 1 (pow -7.233969908796301e-05 2))))) into (* (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log x)))))) (* 3 (log x))))) (- 383.99424006767924 (* 2.0094541707181005e-06 (/ 1 (pow -7.233969908796301e-05 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log (/ 1 (- x)))))))) (* 3 (log (/ 1 (- x))))))) (- 383.99424006767924 (* 2.0094541707181005e-06 (/ 1 (pow -7.233969908796301e-05 2))))) (pow (/ 1 (- x)) 2)) (+ (* (* 15.999880000959992 (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log (/ 1 (- x)))))))) (* 3 (log (/ 1 (- x)))))))) (/ 1 (- x))) (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log (/ 1 (- x)))))))) (* 3 (log (/ 1 (- x))))))))) into (- (+ (* 383.99424006767924 (/ (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log (/ -1 x))))))) (* 3 (log (/ -1 x)))))) (pow x 2))) (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log (/ -1 x))))))) (* 3 (log (/ -1 x))))))) (+ (* 15.999880000959992 (/ (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log (/ -1 x))))))) (* 3 (log (/ -1 x)))))) x)) (* 2.0094541707181005e-06 (/ (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log (/ -1 x))))))) (* 3 (log (/ -1 x)))))) (* (pow x 2) (pow -7.233969908796301e-05 2))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* x 3.0) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x 3.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x 3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 3.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 3.0)) into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 3.0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 1) (* 0 0))) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow x 2)) into (* 3.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 3.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 3.0) into 3.0
* [misc]backup-simplify:  Simplify (* 3.0 1) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow (/ 1 (/ 1 x)) 2)) into (* 3.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 3.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.0 in x
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 3.0) into -3.0
* [misc]backup-simplify:  Simplify (* -3.0 -1) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 3.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 3.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* 3.0 (pow x 2))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 1 2)
* [misc]approximate:  Taking taylor expansion of (pow (pow x 3) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]backup-simplify:  Simplify (pow x 9) into (pow x 9)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 9) into (pow x 9)
* [misc]approximate:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]backup-simplify:  Simplify (pow (pow x -3) 3) into (pow (pow x -3) 3)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow x -3) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow x -3) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow x -3) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow x -3) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow x -3) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow x -3) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow x -3) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow x -3) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow x -3) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow x -3) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x -3) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow x -3) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow x -3) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow x -3) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (pow (/ 1 x) -3) 3) into (pow (pow (/ 1 x) -3) 3)
* [misc]approximate:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (* 3 (- (log -1) (log x)))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) into (exp (* 9 (- (log -1) (log (/ -1 x)))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 x) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ -0.666667 0) into (- 0.666667)
* [misc]backup-simplify:  Simplify (* 0.041667 0) into 0
* [misc]backup-simplify:  Simplify (+ -0.666667 0) into (- 0.666667)
* [misc]backup-simplify:  Simplify (* (- 0.666667) (- 0.666667)) into 0.444444888889
* [misc]backup-simplify:  Simplify 0.444444888889 into 0.444444888889
* [misc]backup-simplify:  Simplify (+ (* 0.041667 1) (* 0 0)) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0 0.041667) into 0.041667
* [misc]backup-simplify:  Simplify (+ (* 0.041667 1) (* 0 0)) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0 0.041667) into 0.041667
* [misc]backup-simplify:  Simplify (+ (* (- 0.666667) 0.041667) (* 0.041667 (- 0.666667))) into (- 0.055556027778000006)
* [misc]backup-simplify:  Simplify (- 0.055556027778000006) into (- 0.055556027778000006)
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.666667) 0) (+ (* 0.041667 0.041667) (* 0 (- 0.666667)))) into 0.0017361388890000003
* [misc]backup-simplify:  Simplify 0.0017361388890000003 into 0.0017361388890000003
* [misc]backup-simplify:  Simplify (+ (* 0.0017361388890000003 (pow x 2)) (+ (* (- 0.055556027778000006) x) 0.444444888889)) into (- (+ (* 0.0017361388890000003 (pow x 2)) 0.444444888889) (* 0.055556027778000006 x))
* [misc]approximate:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 (/ 1 x))) (+ -0.666667 (* 0.041667 (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 (/ 1 x))) (+ -0.666667 (* 0.041667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 (/ 1 x))) (+ -0.666667 (* 0.041667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0 0.041667) into 0.041667
* [misc]backup-simplify:  Simplify (* 0.041667 1) into 0.041667
* [misc]backup-simplify:  Simplify (+ 0 0.041667) into 0.041667
* [misc]backup-simplify:  Simplify (* 0.041667 0.041667) into 0.0017361388890000003
* [misc]backup-simplify:  Simplify 0.0017361388890000003 into 0.0017361388890000003
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ -0.666667 0) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ -0.666667 0) into (- 0.666667)
* [misc]backup-simplify:  Simplify (+ (* 0.041667 (- 0.666667)) (* (- 0.666667) 0.041667)) into (- 0.055556027778000006)
* [misc]backup-simplify:  Simplify (- 0.055556027778000006) into (- 0.055556027778000006)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* (- 0.666667) (- 0.666667)) (* 0 0.041667))) into 0.444444888889
* [misc]backup-simplify:  Simplify 0.444444888889 into 0.444444888889
* [misc]backup-simplify:  Simplify (+ 0.444444888889 (+ (* (- 0.055556027778000006) (/ 1 (/ 1 x))) (* 0.0017361388890000003 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 0.0017361388890000003 (pow x 2)) 0.444444888889) (* 0.055556027778000006 x))
* [misc]approximate:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (+ -0.666667 (* 0.041667 (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (+ -0.666667 (* 0.041667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (+ -0.666667 (* 0.041667 (/ 1 (- x)))) (+ -0.666667 (* 0.041667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ -0.666667 (* 0.041667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.666667 in x
* [misc]backup-simplify:  Simplify -0.666667 into -0.666667
* [misc]taylor:  Taking taylor expansion of (* 0.041667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.041667 in x
* [misc]backup-simplify:  Simplify 0.041667 into 0.041667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ 0 -0.041667) into (- 0.041667)
* [misc]backup-simplify:  Simplify (* 0.041667 -1) into -0.041667
* [misc]backup-simplify:  Simplify (+ 0 -0.041667) into (- 0.041667)
* [misc]backup-simplify:  Simplify (* (- 0.041667) (- 0.041667)) into 0.0017361388890000003
* [misc]backup-simplify:  Simplify 0.0017361388890000003 into 0.0017361388890000003
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ -0.666667 0) into (- 0.666667)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ -0.666667 0) into (- 0.666667)
* [misc]backup-simplify:  Simplify (+ (* (- 0.041667) (- 0.666667)) (* (- 0.666667) (- 0.041667))) into 0.055556027778000006
* [misc]backup-simplify:  Simplify 0.055556027778000006 into 0.055556027778000006
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.041667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.041667) 0) (+ (* (- 0.666667) (- 0.666667)) (* 0 (- 0.041667)))) into 0.444444888889
* [misc]backup-simplify:  Simplify 0.444444888889 into 0.444444888889
* [misc]backup-simplify:  Simplify (+ 0.444444888889 (+ (* 0.055556027778000006 (/ 1 (/ 1 (- x)))) (* 0.0017361388890000003 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 0.0017361388890000003 (pow x 2)) 0.444444888889) (* 0.055556027778000006 x))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (pow (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))) 1/3) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 2 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (pow (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) 1) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 3 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (log (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (log (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))))
* [exit]simplify:  Simplified to (log (cbrt (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))))
* * * * [misc]progress:  [ 4 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (exp (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))))
* [exit]simplify:  Simplified to (exp (cbrt (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))))
* * * * [misc]progress:  [ 5 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (cbrt (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3))) (cbrt (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (196 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)))
* [exit]simplify:  Simplified to (cbrt (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)))
* [enter]simplify:  Simplifying (cbrt (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (138 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))
* [exit]simplify:  Simplified to (cbrt (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))
* * * * [misc]progress:  [ 6 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))))) (cbrt (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (185 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* [exit]simplify:  Simplified to (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 7 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x)))))) (cbrt (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (- -0.666667 (* 0.041667 x)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (- -0.666667 (* 0.041667 x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667))) (- -0.666667 (* 0.041667 x))) (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667))) (- -0.666667 (* 0.041667 x))) (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))))
* * * * [misc]progress:  [ 8 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))))) (cbrt (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (* (- -0.666667 (* 0.041667 x)) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (240 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (* (- -0.666667 (* 0.041667 x)) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- -0.666667 (* 0.041667 x)) (* (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667))) (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667))))))
* [exit]simplify:  Simplified to (cbrt (* (- -0.666667 (* 0.041667 x)) (* (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667))) (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667))))))
* * * * [misc]progress:  [ 9 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x)))))) (cbrt (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (* (- -0.666667 (* 0.041667 x)) (- -0.666667 (* 0.041667 x)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (* (- -0.666667 (* 0.041667 x)) (- -0.666667 (* 0.041667 x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (390 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- -0.666667 (* 0.041667 x)) (- -0.666667 (* 0.041667 x))) (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (cbrt (* (* (- -0.666667 (* 0.041667 x)) (- -0.666667 (* 0.041667 x))) (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))))
* * * * [misc]progress:  [ 10 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))))) (cbrt (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (209 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))) (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))) (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (383 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667))) (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667))) (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))))
* * * * [misc]progress:  [ 11 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x)))))) (cbrt (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (- -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (* (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) (* (- -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (* (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) (* (- -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (- -0.666667 (* 0.041667 x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- -0.666667 (* 0.041667 x)) -0.666667) (- -0.666667 (* 0.041667 x))) (* (- -0.666667 (* 0.041667 x)) (* (* 0.041667 x) (* 0.041667 x)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- -0.666667 (* 0.041667 x)) -0.666667) (- -0.666667 (* 0.041667 x))) (* (- -0.666667 (* 0.041667 x)) (* (* 0.041667 x) (* 0.041667 x)))))
* * * * [misc]progress:  [ 12 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ -0.666667 (* 0.041667 x))))) (cbrt (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ -0.666667 (* 0.041667 x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3))) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3))) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (383 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667))) (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667))) (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))))
* * * * [misc]progress:  [ 13 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ -0.666667 (* 0.041667 x))))) (cbrt (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (- -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ -0.666667 (* 0.041667 x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (228 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) (* (- -0.666667 (* 0.041667 x)) (pow (pow x 3) 3))) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) (* (- -0.666667 (* 0.041667 x)) (pow (pow x 3) 3))) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (- -0.666667 (* 0.041667 x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- -0.666667 (* 0.041667 x)) -0.666667) (- -0.666667 (* 0.041667 x))) (* (- -0.666667 (* 0.041667 x)) (* (* 0.041667 x) (* 0.041667 x)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- -0.666667 (* 0.041667 x)) -0.666667) (- -0.666667 (* 0.041667 x))) (* (- -0.666667 (* 0.041667 x)) (* (* 0.041667 x) (* 0.041667 x)))))
* * * * [misc]progress:  [ 14 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (pow (pow x 3) 3)) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))))) (cbrt (* (- -0.666667 (* 0.041667 x)) (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (pow (pow x 3) 3)) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (223 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x)))) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x)))) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3))))
* [enter]simplify:  Simplifying (cbrt (* (- -0.666667 (* 0.041667 x)) (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* -0.666667 -0.666667) (* (- (* x 0.041667) -0.666667) (* x 0.041667))) (+ (* -0.666667 -0.666667) (* (- (* x 0.041667) -0.666667) (* x 0.041667)))) (- -0.666667 (* x 0.041667))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* -0.666667 -0.666667) (* (- (* x 0.041667) -0.666667) (* x 0.041667))) (+ (* -0.666667 -0.666667) (* (- (* x 0.041667) -0.666667) (* x 0.041667)))) (- -0.666667 (* x 0.041667))))
* * * * [misc]progress:  [ 15 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (pow (pow x 3) 3)) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x)))))) (cbrt (* (- -0.666667 (* 0.041667 x)) (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (- -0.666667 (* 0.041667 x)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (pow (pow x 3) 3)) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (180 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))) (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x)))) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))) (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x)))) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3))))
* [enter]simplify:  Simplifying (cbrt (* (- -0.666667 (* 0.041667 x)) (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (- -0.666667 (* 0.041667 x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (99 enodes)
* * [misc]simplify:  iters left: 3 (382 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* -0.666667 (- -0.666667 (* x 0.041667))) (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667)))) (* (* (* x 0.041667) (* x 0.041667)) (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667))))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* -0.666667 (- -0.666667 (* x 0.041667))) (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667)))) (* (* (* x 0.041667) (* x 0.041667)) (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667))))))
* * * * [misc]progress:  [ 16 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))))) (cbrt (* (- -0.666667 (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (244 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))) (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))) (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))))))
* [enter]simplify:  Simplifying (cbrt (* (- -0.666667 (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (* x 0.041667) (* x 0.041667)) (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667)))) (* (* -0.666667 (- -0.666667 (* x 0.041667))) (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667))))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (* x 0.041667) (* x 0.041667)) (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667)))) (* (* -0.666667 (- -0.666667 (* x 0.041667))) (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667))))))
* * * * [misc]progress:  [ 17 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x)))))) (cbrt (* (- -0.666667 (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) (- -0.666667 (* 0.041667 x)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))) (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x)))) (* (- -0.666667 (* 0.041667 x)) (* (pow (pow x 3) 3) (+ (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))) (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x)))) (* (- -0.666667 (* 0.041667 x)) (* (pow (pow x 3) 3) (+ (* 0.041667 x) -0.666667)))))
* [enter]simplify:  Simplifying (cbrt (* (- -0.666667 (* 0.041667 x)) (* (- -0.666667 (* 0.041667 x)) (- -0.666667 (* 0.041667 x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (121 enodes)
* * [misc]simplify:  iters left: 2 (497 enodes)
* [exit]simplify:  Simplified to (- -0.666667 (* x 0.041667))
* [exit]simplify:  Simplified to (- -0.666667 (* x 0.041667))
* * * * [misc]progress:  [ 18 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))))) (cbrt (* (- -0.666667 (* 0.041667 x)) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (241 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (* (* (pow x 3) (pow x 3)) (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (pow (* 0.041667 x) 3) (pow -0.666667 3))) (* (* (pow x 3) (pow x 3)) (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))))))
* [enter]simplify:  Simplifying (cbrt (* (- -0.666667 (* 0.041667 x)) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (391 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667))) -0.666667) (* (* (* x 0.041667) (* x 0.041667)) (- -0.666667 (* x 0.041667)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667))) -0.666667) (* (* (* x 0.041667) (* x 0.041667)) (- -0.666667 (* x 0.041667)))))
* * * * [misc]progress:  [ 19 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x)))))) (cbrt (* (- -0.666667 (* 0.041667 x)) (- -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))) (* (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))) (* (+ (* 0.041667 x) -0.666667) (pow (pow x 3) 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))) (* (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))) (* (+ (* 0.041667 x) -0.666667) (pow (pow x 3) 3)))))
* [enter]simplify:  Simplifying (cbrt (* (- -0.666667 (* 0.041667 x)) (- -0.666667 (* 0.041667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (163 enodes)
* * [misc]simplify:  iters left: 1 (366 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667))))
* [exit]simplify:  Simplified to (cbrt (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667))))
* * * * [misc]progress:  [ 20 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (pow (pow x 3) 3)) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ -0.666667 (* 0.041667 x))))) (cbrt (* (- -0.666667 (* 0.041667 x)) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (pow (pow x 3) 3)) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ -0.666667 (* 0.041667 x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (229 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (- -0.666667 (* 0.041667 x))) (+ (* 0.041667 x) -0.666667)) (* (* (* (pow x 3) (pow x 3)) (+ (* 0.041667 x) -0.666667)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (- -0.666667 (* 0.041667 x))) (+ (* 0.041667 x) -0.666667)) (* (* (* (pow x 3) (pow x 3)) (+ (* 0.041667 x) -0.666667)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))))
* [enter]simplify:  Simplifying (cbrt (* (- -0.666667 (* 0.041667 x)) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (391 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667))) -0.666667) (* (* (* x 0.041667) (* x 0.041667)) (- -0.666667 (* x 0.041667)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667))) -0.666667) (* (* (* x 0.041667) (* x 0.041667)) (- -0.666667 (* x 0.041667)))))
* * * * [misc]progress:  [ 21 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ -0.666667 (* 0.041667 x))))) (cbrt (* (- -0.666667 (* 0.041667 x)) (- -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ -0.666667 (* 0.041667 x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (200 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* 0.041667 x) -0.666667) (pow (pow x 3) 3)) (* (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))) (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* 0.041667 x) -0.666667) (pow (pow x 3) 3)) (* (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))) (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))))))
* [enter]simplify:  Simplifying (cbrt (* (- -0.666667 (* 0.041667 x)) (- -0.666667 (* 0.041667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (163 enodes)
* * [misc]simplify:  iters left: 1 (366 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667))))
* [exit]simplify:  Simplified to (cbrt (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667))))
* * * * [misc]progress:  [ 22 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))))) (cbrt (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (pow -0.666667 3) (pow (* x 0.041667) 3)) (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (+ (pow -0.666667 3) (pow (* x 0.041667) 3)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (pow -0.666667 3) (pow (* x 0.041667) 3)) (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (+ (pow -0.666667 3) (pow (* x 0.041667) 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (383 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667))) (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667))) (+ (* -0.666667 -0.666667) (* (* 0.041667 x) (- (* 0.041667 x) -0.666667)))))
* * * * [misc]progress:  [ 23 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x)))))) (cbrt (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (- -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (180 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (pow -0.666667 3) (pow (* x 0.041667) 3)) (* (* (- -0.666667 (* x 0.041667)) (+ (* x 0.041667) -0.666667)) (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (pow -0.666667 3) (pow (* x 0.041667) 3)) (* (* (- -0.666667 (* x 0.041667)) (+ (* x 0.041667) -0.666667)) (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (- -0.666667 (* 0.041667 x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- -0.666667 (* 0.041667 x)) -0.666667) (- -0.666667 (* 0.041667 x))) (* (- -0.666667 (* 0.041667 x)) (* (* 0.041667 x) (* 0.041667 x)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- -0.666667 (* 0.041667 x)) -0.666667) (- -0.666667 (* 0.041667 x))) (* (- -0.666667 (* 0.041667 x)) (* (* 0.041667 x) (* 0.041667 x)))))
* * * * [misc]progress:  [ 24 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))))) (cbrt (* (- -0.666667 (* 0.041667 x)) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (244 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x 0.041667) -0.666667) (* (pow x 3) (pow x 3))) (* (pow x 3) (+ (* x 0.041667) -0.666667))) (* (+ (pow (* x 0.041667) 3) (pow -0.666667 3)) (- -0.666667 (* x 0.041667)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x 0.041667) -0.666667) (* (pow x 3) (pow x 3))) (* (pow x 3) (+ (* x 0.041667) -0.666667))) (* (+ (pow (* x 0.041667) 3) (pow -0.666667 3)) (- -0.666667 (* x 0.041667)))))
* [enter]simplify:  Simplifying (cbrt (* (- -0.666667 (* 0.041667 x)) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (391 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667))) -0.666667) (* (* (* x 0.041667) (* x 0.041667)) (- -0.666667 (* x 0.041667)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667))) -0.666667) (* (* (* x 0.041667) (* x 0.041667)) (- -0.666667 (* x 0.041667)))))
* * * * [misc]progress:  [ 25 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x)))))) (cbrt (* (- -0.666667 (* 0.041667 x)) (- -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x 0.041667) -0.666667) (* (pow x 3) (pow x 3))) (* (pow x 3) (+ (* x 0.041667) -0.666667))) (* (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667))) (+ (* x 0.041667) -0.666667))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x 0.041667) -0.666667) (* (pow x 3) (pow x 3))) (* (pow x 3) (+ (* x 0.041667) -0.666667))) (* (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667))) (+ (* x 0.041667) -0.666667))))
* [enter]simplify:  Simplifying (cbrt (* (- -0.666667 (* 0.041667 x)) (- -0.666667 (* 0.041667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (163 enodes)
* * [misc]simplify:  iters left: 1 (366 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667))))
* [exit]simplify:  Simplified to (cbrt (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667))))
* * * * [misc]progress:  [ 26 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))))) (cbrt (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (209 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (pow x 3) (+ (* x 0.041667) -0.666667)) (* (* (* (pow x 3) (pow x 3)) (+ (* x 0.041667) -0.666667)) (+ (pow -0.666667 3) (pow (* x 0.041667) 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (pow x 3) (+ (* x 0.041667) -0.666667)) (* (* (* (pow x 3) (pow x 3)) (+ (* x 0.041667) -0.666667)) (+ (pow -0.666667 3) (pow (* x 0.041667) 3)))))
* [enter]simplify:  Simplifying (cbrt (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* 0.041667 x) -0.666667) (* 0.041667 x)) (* -0.666667 -0.666667)))
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* 0.041667 x) -0.666667) (* 0.041667 x)) (* -0.666667 -0.666667)))
* * * * [misc]progress:  [ 27 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x)))))) (cbrt (- -0.666667 (* 0.041667 x)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (+ (* x 0.041667) -0.666667)) (* (* (pow x 3) (pow x 3)) (+ (* x 0.041667) -0.666667))) (* (+ (* x 0.041667) -0.666667) (- -0.666667 (* x 0.041667)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (+ (* x 0.041667) -0.666667)) (* (* (pow x 3) (pow x 3)) (+ (* x 0.041667) -0.666667))) (* (+ (* x 0.041667) -0.666667) (- -0.666667 (* x 0.041667)))))
* [enter]simplify:  Simplifying (cbrt (- -0.666667 (* 0.041667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (- -0.666667 (* x 0.041667)))
* [exit]simplify:  Simplified to (cbrt (- -0.666667 (* x 0.041667)))
* * * * [misc]progress:  [ 28 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ -0.666667 (* 0.041667 x))))) (cbrt (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ -0.666667 (* 0.041667 x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (197 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (pow x 3) (+ (* x 0.041667) -0.666667)) (* (* (* (pow x 3) (pow x 3)) (+ (* x 0.041667) -0.666667)) (+ (pow -0.666667 3) (pow (* x 0.041667) 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (pow x 3) (+ (* x 0.041667) -0.666667)) (* (* (* (pow x 3) (pow x 3)) (+ (* x 0.041667) -0.666667)) (+ (pow -0.666667 3) (pow (* x 0.041667) 3)))))
* [enter]simplify:  Simplifying (cbrt (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* 0.041667 x) -0.666667) (* 0.041667 x)) (* -0.666667 -0.666667)))
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* 0.041667 x) -0.666667) (* 0.041667 x)) (* -0.666667 -0.666667)))
* * * * [misc]progress:  [ 29 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ -0.666667 (* 0.041667 x))))) (cbrt (- -0.666667 (* 0.041667 x)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ -0.666667 (* 0.041667 x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (196 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (- -0.666667 (* x 0.041667)))) (* (* (pow x 3) (pow x 3)) (+ (* x 0.041667) -0.666667))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (- -0.666667 (* x 0.041667)))) (* (* (pow x 3) (pow x 3)) (+ (* x 0.041667) -0.666667))))
* [enter]simplify:  Simplifying (cbrt (- -0.666667 (* 0.041667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (- -0.666667 (* x 0.041667)))
* [exit]simplify:  Simplified to (cbrt (- -0.666667 (* x 0.041667)))
* * * * [misc]progress:  [ 30 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (cbrt (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (180 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow (pow x 3) 3) (* (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))))
* [exit]simplify:  Simplified to (cbrt (* (pow (pow x 3) 3) (* (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))))
* [enter]simplify:  Simplifying (cbrt (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* 0.041667 x) -0.666667) (* 0.041667 x)) (* -0.666667 -0.666667)))
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* 0.041667 x) -0.666667) (* 0.041667 x)) (* -0.666667 -0.666667)))
* * * * [misc]progress:  [ 31 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (cbrt (* (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (cbrt (- -0.666667 (* 0.041667 x)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (178 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))) (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667))) (pow (pow x 3) 3)))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))) (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667))) (pow (pow x 3) 3)))
* [enter]simplify:  Simplifying (cbrt (- -0.666667 (* 0.041667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (- -0.666667 (* x 0.041667)))
* [exit]simplify:  Simplified to (cbrt (- -0.666667 (* x 0.041667)))
* * * * [misc]progress:  [ 32 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))))) (cbrt (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))))) (cbrt (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))))) (cbrt (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667))))) (cbrt (cbrt (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667))))) (cbrt (cbrt (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667))))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))))
* * * * [misc]progress:  [ 33 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))))) (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))))) (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* [exit]simplify:  Simplified to (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))
* [exit]simplify:  Simplified to (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))
* * * * [misc]progress:  [ 34 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (sqrt (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))))) (sqrt (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))))
* * * * [misc]progress:  [ 35 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 1 (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 36 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (pow (* (* x 3.0) x) 1) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 37 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (exp (log (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* [exit]simplify:  Simplified to (log (* x (* x 3.0)))
* [exit]simplify:  Simplified to (log (* x (* x 3.0)))
* * * * [misc]progress:  [ 38 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (log (exp (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* [exit]simplify:  Simplified to (exp (* x (* x 3.0)))
* [exit]simplify:  Simplified to (exp (* x (* x 3.0)))
* * * * [misc]progress:  [ 39 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* (cbrt (* (* x 3.0) x)) (cbrt (* (* x 3.0) x))) (cbrt (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x 3.0) x)) (cbrt (* (* x 3.0) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 3.0))) (cbrt (* x (* x 3.0))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 3.0))) (cbrt (* x (* x 3.0))))
* [enter]simplify:  Simplifying (cbrt (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (* x 3.0)))
* [exit]simplify:  Simplified to (cbrt (* x (* x 3.0)))
* * * * [misc]progress:  [ 40 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (cbrt (* (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x 3.0) x) (* (* x 3.0) x)) (* (* x 3.0) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (335 enodes)
* [exit]simplify:  Simplified to (pow (* x (* x 3.0)) 3)
* [exit]simplify:  Simplified to (pow (* x (* x 3.0)) 3)
* * * * [misc]progress:  [ 41 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (sqrt (* (* x 3.0) x)) (sqrt (* (* x 3.0) x))) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* [enter]simplify:  Simplifying (sqrt (* (* x 3.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x 3.0)))
* * * * [misc]progress:  [ 42 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* 1 (* (* x 3.0) x)) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 43 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* x (* 3.0 x)) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* 3.0 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 3.0 x)
* [exit]simplify:  Simplified to (* 3.0 x)
* * * * [misc]progress:  [ 44 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* x (* x 3.0)) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 45 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (exp (* (* (log x) 3) 3))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (log x) 3) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (* (* 3 3) (log x))
* [exit]simplify:  Simplified to (* (* 3 3) (log x))
* * * * [misc]progress:  [ 46 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (exp (* (log (pow x 3)) 3))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (pow x 3)) 3)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (26 enodes)
* [exit]simplify:  Simplified to (* (log x) (* 3 3))
* [exit]simplify:  Simplified to (* (log x) (* 3 3))
* * * * [misc]progress:  [ 47 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (exp (* (log (pow x 3)) 3))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (pow x 3)) 3)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (26 enodes)
* [exit]simplify:  Simplified to (* (log x) (* 3 3))
* [exit]simplify:  Simplified to (* (log x) (* 3 3))
* * * * [misc]progress:  [ 48 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow x (* 3 3))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* 3 3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* 3 3)
* [exit]simplify:  Simplified to (* 3 3)
* * * * [misc]progress:  [ 49 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (* (pow (* x x) 3) (pow x 3))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 50 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (* (pow (* (cbrt (pow x 3)) (cbrt (pow x 3))) 3) (pow (cbrt (pow x 3)) 3))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (pow x 3)) (cbrt (pow x 3))) 3)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (82 enodes)
* * [misc]simplify:  iters left: 1 (162 enodes)
* [exit]simplify:  Simplified to (pow (* x x) 3)
* [exit]simplify:  Simplified to (pow (* x x) 3)
* [enter]simplify:  Simplifying (pow (cbrt (pow x 3)) 3)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 51 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (* (pow x 3) (pow (* x x) 3))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 52 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (* (pow (sqrt (pow x 3)) 3) (pow (sqrt (pow x 3)) 3))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (pow (sqrt (pow x 3)) 3)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [enter]simplify:  Simplifying (pow (sqrt (pow x 3)) 3)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 53 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (* (pow 1 3) (pow (pow x 3) 3))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (pow 1 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow x 3) 3)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 54 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (* (* (pow x 3) (pow x 3)) (pow x 3))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 55 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow (pow x 3) 3) 1)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 56 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (exp (log (pow (pow x 3) 3)))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (log (pow (pow x 3) 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (41 enodes)
* [exit]simplify:  Simplified to (* (* 3 3) (log x))
* [exit]simplify:  Simplified to (* (* 3 3) (log x))
* * * * [misc]progress:  [ 57 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (log (exp (pow (pow x 3) 3)))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (pow (pow x 3) 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (exp (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (exp (pow (pow x 3) 3))
* * * * [misc]progress:  [ 58 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (* (* (cbrt (pow (pow x 3) 3)) (cbrt (pow (pow x 3) 3))) (cbrt (pow (pow x 3) 3)))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (pow x 3) 3)) (cbrt (pow (pow x 3) 3)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (76 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [enter]simplify:  Simplifying (cbrt (pow (pow x 3) 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 59 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (cbrt (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (pow (pow x 3) 3)))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (pow (pow x 3) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (207 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow x 3) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (pow x 3) 3) 3)
* * * * [misc]progress:  [ 60 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (* (pow (* x x) 3) (pow x 3))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 61 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (* (pow (* (cbrt (pow x 3)) (cbrt (pow x 3))) 3) (pow (cbrt (pow x 3)) 3))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (pow x 3)) (cbrt (pow x 3))) 3)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (82 enodes)
* * [misc]simplify:  iters left: 1 (162 enodes)
* [exit]simplify:  Simplified to (pow (* x x) 3)
* [exit]simplify:  Simplified to (pow (* x x) 3)
* [enter]simplify:  Simplifying (pow (cbrt (pow x 3)) 3)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 62 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (* (pow x 3) (pow (* x x) 3))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 63 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (* (pow (sqrt (pow x 3)) 3) (pow (sqrt (pow x 3)) 3))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (pow (sqrt (pow x 3)) 3)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [enter]simplify:  Simplifying (pow (sqrt (pow x 3)) 3)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 64 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (* (pow 1 3) (pow (pow x 3) 3))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (pow 1 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow x 3) 3)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 65 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 66 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (* (* (pow x 3) (pow x 3)) (pow x 3))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 67 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (* (sqrt (pow (pow x 3) 3)) (sqrt (pow (pow x 3) 3)))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (pow (pow x 3) 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (sqrt (pow (pow x 3) 3))
* [enter]simplify:  Simplifying (sqrt (pow (pow x 3) 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (sqrt (pow (pow x 3) 3))
* * * * [misc]progress:  [ 68 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (* 1 (pow (pow x 3) 3))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 69 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (pow (+ -0.666667 (* 0.041667 x)) (+ 1 1)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 70 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (pow (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) 1))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667))
* [exit]simplify:  Simplified to (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667))
* * * * [misc]progress:  [ 71 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (pow (+ -0.666667 (* 0.041667 x)) 2))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 72 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (pow (+ -0.666667 (* 0.041667 x)) (+ 1 1)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 73 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (pow (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) 1))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 74 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (exp (+ (log (+ -0.666667 (* 0.041667 x))) (log (+ -0.666667 (* 0.041667 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (log (+ -0.666667 (* 0.041667 x))) (log (+ -0.666667 (* 0.041667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x 0.041667) -0.666667)) (log (+ (* x 0.041667) -0.666667)))
* [exit]simplify:  Simplified to (+ (log (+ (* x 0.041667) -0.666667)) (log (+ (* x 0.041667) -0.666667)))
* * * * [misc]progress:  [ 75 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (exp (log (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (91 enodes)
* * [misc]simplify:  iters left: 2 (136 enodes)
* * [misc]simplify:  iters left: 1 (194 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x 0.041667) -0.666667)) (log (+ (* x 0.041667) -0.666667)))
* [exit]simplify:  Simplified to (+ (log (+ (* x 0.041667) -0.666667)) (log (+ (* x 0.041667) -0.666667)))
* * * * [misc]progress:  [ 76 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (log (exp (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (134 enodes)
* * [misc]simplify:  iters left: 2 (275 enodes)
* * [misc]simplify:  iters left: 1 (463 enodes)
* [exit]simplify:  Simplified to (exp (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))
* [exit]simplify:  Simplified to (exp (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))
* * * * [misc]progress:  [ 77 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (cbrt (* (* (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) (+ -0.666667 (* 0.041667 x))) (* (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) (+ -0.666667 (* 0.041667 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) (+ -0.666667 (* 0.041667 x))) (* (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) (+ -0.666667 (* 0.041667 x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (pow (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)) 3)
* [exit]simplify:  Simplified to (pow (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)) 3)
* * * * [misc]progress:  [ 78 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (* (cbrt (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))) (cbrt (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (cbrt (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))) (cbrt (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (139 enodes)
* * [misc]simplify:  iters left: 1 (203 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667))) (cbrt (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667))) (cbrt (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667))))
* [enter]simplify:  Simplifying (cbrt (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (138 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))
* [exit]simplify:  Simplified to (cbrt (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))
* * * * [misc]progress:  [ 79 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (cbrt (* (* (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* x 0.041667) -0.666667) 3) (pow (+ (* x 0.041667) -0.666667) 3))
* [exit]simplify:  Simplified to (* (pow (+ (* x 0.041667) -0.666667) 3) (pow (+ (* x 0.041667) -0.666667) 3))
* * * * [misc]progress:  [ 80 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (sqrt (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))) (sqrt (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (139 enodes)
* * [misc]simplify:  iters left: 1 (203 enodes)
* [exit]simplify:  Simplified to (fabs (+ (* x 0.041667) -0.666667))
* [exit]simplify:  Simplified to (fabs (+ (* x 0.041667) -0.666667))
* [enter]simplify:  Simplifying (sqrt (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (139 enodes)
* * [misc]simplify:  iters left: 1 (203 enodes)
* [exit]simplify:  Simplified to (fabs (+ (* x 0.041667) -0.666667))
* [exit]simplify:  Simplified to (fabs (+ (* x 0.041667) -0.666667))
* * * * [misc]progress:  [ 81 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (/ (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))) (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (83 enodes)
* * [misc]simplify:  iters left: 3 (323 enodes)
* [exit]simplify:  Simplified to (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))
* [exit]simplify:  Simplified to (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))
* [enter]simplify:  Simplifying (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (382 enodes)
* [exit]simplify:  Simplified to (* (+ (* -0.666667 -0.666667) (* (- (* 0.041667 x) -0.666667) (* 0.041667 x))) (+ (* -0.666667 -0.666667) (* (- (* 0.041667 x) -0.666667) (* 0.041667 x))))
* [exit]simplify:  Simplified to (* (+ (* -0.666667 -0.666667) (* (- (* 0.041667 x) -0.666667) (* 0.041667 x))) (+ (* -0.666667 -0.666667) (* (- (* 0.041667 x) -0.666667) (* 0.041667 x))))
* * * * [misc]progress:  [ 82 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (/ (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x)))) (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (- -0.666667 (* 0.041667 x)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (289 enodes)
* [exit]simplify:  Simplified to (* (* (+ -0.666667 (* 0.041667 x)) (- -0.666667 (* 0.041667 x))) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))
* [exit]simplify:  Simplified to (* (* (+ -0.666667 (* 0.041667 x)) (- -0.666667 (* 0.041667 x))) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))
* [enter]simplify:  Simplifying (* (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))) (- -0.666667 (* 0.041667 x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (233 enodes)
* [exit]simplify:  Simplified to (* (+ (* -0.666667 -0.666667) (* (- (* 0.041667 x) -0.666667) (* 0.041667 x))) (- -0.666667 (* 0.041667 x)))
* [exit]simplify:  Simplified to (* (+ (* -0.666667 -0.666667) (* (- (* 0.041667 x) -0.666667) (* 0.041667 x))) (- -0.666667 (* 0.041667 x)))
* * * * [misc]progress:  [ 83 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (/ (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))) (* (- -0.666667 (* 0.041667 x)) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* [exit]simplify:  Simplified to (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))))
* [exit]simplify:  Simplified to (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))))
* [enter]simplify:  Simplifying (* (- -0.666667 (* 0.041667 x)) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (390 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667))) -0.666667) (* (* (* x 0.041667) (* x 0.041667)) (- -0.666667 (* x 0.041667))))
* [exit]simplify:  Simplified to (+ (* (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667))) -0.666667) (* (* (* x 0.041667) (* x 0.041667)) (- -0.666667 (* x 0.041667))))
* * * * [misc]progress:  [ 84 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (/ (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x)))) (* (- -0.666667 (* 0.041667 x)) (- -0.666667 (* 0.041667 x)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (179 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))) (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))))
* [exit]simplify:  Simplified to (* (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))) (* (+ (* 0.041667 x) -0.666667) (- -0.666667 (* 0.041667 x))))
* [enter]simplify:  Simplifying (* (- -0.666667 (* 0.041667 x)) (- -0.666667 (* 0.041667 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (162 enodes)
* * [misc]simplify:  iters left: 1 (362 enodes)
* [exit]simplify:  Simplified to (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667)))
* [exit]simplify:  Simplified to (* (- -0.666667 (* x 0.041667)) (- -0.666667 (* x 0.041667)))
* * * * [misc]progress:  [ 85 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* 1 (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 86 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (+ (* (+ -0.666667 (* 0.041667 x)) -0.666667) (* (+ -0.666667 (* 0.041667 x)) (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (+ -0.666667 (* 0.041667 x)) -0.666667)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* -0.666667 (+ (* x 0.041667) -0.666667))
* [exit]simplify:  Simplified to (* -0.666667 (+ (* x 0.041667) -0.666667))
* [enter]simplify:  Simplifying (* (+ -0.666667 (* 0.041667 x)) (* 0.041667 x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (75 enodes)
* * [misc]simplify:  iters left: 1 (77 enodes)
* [exit]simplify:  Simplified to (* (* x 0.041667) (+ (* x 0.041667) -0.666667))
* [exit]simplify:  Simplified to (* (* x 0.041667) (+ (* x 0.041667) -0.666667))
* * * * [misc]progress:  [ 87 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (+ (* -0.666667 (+ -0.666667 (* 0.041667 x))) (* (* 0.041667 x) (+ -0.666667 (* 0.041667 x)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* -0.666667 (+ -0.666667 (* 0.041667 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* [exit]simplify:  Simplified to (* -0.666667 (+ (* x 0.041667) -0.666667))
* [exit]simplify:  Simplified to (* -0.666667 (+ (* x 0.041667) -0.666667))
* [enter]simplify:  Simplifying (* (* 0.041667 x) (+ -0.666667 (* 0.041667 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* * [misc]simplify:  iters left: 2 (99 enodes)
* [exit]simplify:  Simplified to (* (+ -0.666667 (* 0.041667 x)) (* 0.041667 x))
* [exit]simplify:  Simplified to (* (+ -0.666667 (* 0.041667 x)) (* 0.041667 x))
* * * * [misc]progress:  [ 88 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (* (+ -0.666667 (* 0.041667 x)) (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x))))) (cbrt (+ -0.666667 (* 0.041667 x)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (+ -0.666667 (* 0.041667 x)) (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (55 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* x 0.041667) -0.666667)) (+ (* x 0.041667) -0.666667)) (cbrt (+ (* x 0.041667) -0.666667)))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* x 0.041667) -0.666667)) (+ (* x 0.041667) -0.666667)) (cbrt (+ (* x 0.041667) -0.666667)))
* * * * [misc]progress:  [ 89 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (* (+ -0.666667 (* 0.041667 x)) (sqrt (+ -0.666667 (* 0.041667 x)))) (sqrt (+ -0.666667 (* 0.041667 x)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (+ -0.666667 (* 0.041667 x)) (sqrt (+ -0.666667 (* 0.041667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* x 0.041667) -0.666667)) (+ (* x 0.041667) -0.666667))
* [exit]simplify:  Simplified to (* (sqrt (+ (* x 0.041667) -0.666667)) (+ (* x 0.041667) -0.666667))
* * * * [misc]progress:  [ 90 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (* (+ -0.666667 (* 0.041667 x)) 1) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (+ -0.666667 (* 0.041667 x)) 1)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (31 enodes)
* [exit]simplify:  Simplified to (+ (* x 0.041667) -0.666667)
* [exit]simplify:  Simplified to (+ (* x 0.041667) -0.666667)
* * * * [misc]progress:  [ 91 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (* (cbrt (+ -0.666667 (* 0.041667 x))) (cbrt (+ -0.666667 (* 0.041667 x)))) (* (cbrt (+ -0.666667 (* 0.041667 x))) (+ -0.666667 (* 0.041667 x)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (+ -0.666667 (* 0.041667 x))) (+ -0.666667 (* 0.041667 x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* x 0.041667) -0.666667)) (+ (* x 0.041667) -0.666667))
* [exit]simplify:  Simplified to (* (cbrt (+ (* x 0.041667) -0.666667)) (+ (* x 0.041667) -0.666667))
* * * * [misc]progress:  [ 92 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (sqrt (+ -0.666667 (* 0.041667 x))) (* (sqrt (+ -0.666667 (* 0.041667 x))) (+ -0.666667 (* 0.041667 x)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (sqrt (+ -0.666667 (* 0.041667 x))) (+ -0.666667 (* 0.041667 x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* x 0.041667) -0.666667)) (+ (* x 0.041667) -0.666667))
* [exit]simplify:  Simplified to (* (sqrt (+ (* x 0.041667) -0.666667)) (+ (* x 0.041667) -0.666667))
* * * * [misc]progress:  [ 93 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* 1 (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667))
* [exit]simplify:  Simplified to (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667))
* * * * [misc]progress:  [ 94 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (/ (* (+ -0.666667 (* 0.041667 x)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3))) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (+ -0.666667 (* 0.041667 x)) (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (349 enodes)
* [exit]simplify:  Simplified to (* (+ (pow (* x 0.041667) 3) (pow -0.666667 3)) (+ (* x 0.041667) -0.666667))
* [exit]simplify:  Simplified to (* (+ (pow (* x 0.041667) 3) (pow -0.666667 3)) (+ (* x 0.041667) -0.666667))
* * * * [misc]progress:  [ 95 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (/ (* (+ -0.666667 (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x)))) (- -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (+ -0.666667 (* 0.041667 x)) (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (184 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)) (- -0.666667 (* x 0.041667)))
* [exit]simplify:  Simplified to (* (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)) (- -0.666667 (* x 0.041667)))
* * * * [misc]progress:  [ 96 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (/ (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ -0.666667 (* 0.041667 x))) (+ (* -0.666667 -0.666667) (- (* (* 0.041667 x) (* 0.041667 x)) (* -0.666667 (* 0.041667 x))))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ -0.666667 (* 0.041667 x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (288 enodes)
* [exit]simplify:  Simplified to (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ -0.666667 (* 0.041667 x)))
* [exit]simplify:  Simplified to (* (+ (pow -0.666667 3) (pow (* 0.041667 x) 3)) (+ -0.666667 (* 0.041667 x)))
* * * * [misc]progress:  [ 97 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (/ (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ -0.666667 (* 0.041667 x))) (- -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (* (- (* -0.666667 -0.666667) (* (* 0.041667 x) (* 0.041667 x))) (+ -0.666667 (* 0.041667 x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (307 enodes)
* [exit]simplify:  Simplified to (* (- -0.666667 (* 0.041667 x)) (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)))
* [exit]simplify:  Simplified to (* (- -0.666667 (* 0.041667 x)) (* (+ (* 0.041667 x) -0.666667) (+ (* 0.041667 x) -0.666667)))
* * * * [misc]progress:  [ 98 / 110 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* * * * [misc]progress:  [ 99 / 110 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (+ (* 0.005859462890910645 (* (pow -0.29629674074096296 1/3) (pow x 5))) (pow (* -0.29629674074096296 (pow x 9)) 1/3)) (+ (* 0.0005144125514904837 (* (pow (/ 1 (pow -0.29629674074096296 5)) 1/3) (pow x 5))) (* 0.06250046874976563 (* (pow -0.29629674074096296 1/3) (pow x 4))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (- (+ (* 0.005859462890910645 (* (pow -0.29629674074096296 1/3) (pow x 5))) (pow (* -0.29629674074096296 (pow x 9)) 1/3)) (+ (* 0.0005144125514904837 (* (pow (/ 1 (pow -0.29629674074096296 5)) 1/3) (pow x 5))) (* 0.06250046874976563 (* (pow -0.29629674074096296 1/3) (pow x 4))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (178 enodes)
* [exit]simplify:  Simplified to (- (+ (+ (+ (* 3.0 (* x x)) (+ (* x -4.0) 1.0)) (cbrt (* (pow x 9) -0.29629674074096296))) (* (* (cbrt -0.29629674074096296) (pow x 5)) 0.005859462890910645)) (+ (* (pow x 4) (* 0.06250046874976563 (cbrt -0.29629674074096296))) (* (cbrt (/ 1 (pow -0.29629674074096296 5))) (* 0.0005144125514904837 (pow x 5)))))
* * * * [misc]progress:  [ 100 / 110 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (+ (exp (* 1/3 (- (log (* 7.233969908796301e-05 (pow x 9))) (* 3 (log (/ 1 x)))))) (* 383.99424006767924 (/ (exp (* 1/3 (- (log (* 7.233969908796301e-05 (pow x 9))) (* 3 (log (/ 1 x)))))) (pow x 2)))) (+ (* 15.999880000959992 (/ (exp (* 1/3 (- (log (* 7.233969908796301e-05 (pow x 9))) (* 3 (log (/ 1 x)))))) x)) (* 2.0094541707181005e-06 (/ (exp (* 1/3 (- (log (* 7.233969908796301e-05 (pow x 9))) (* 3 (log (/ 1 x)))))) (* (pow 7.233969908796301e-05 2) (pow x 2)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (- (+ (exp (* 1/3 (- (log (* 7.233969908796301e-05 (pow x 9))) (* 3 (log (/ 1 x)))))) (* 383.99424006767924 (/ (exp (* 1/3 (- (log (* 7.233969908796301e-05 (pow x 9))) (* 3 (log (/ 1 x)))))) (pow x 2)))) (+ (* 15.999880000959992 (/ (exp (* 1/3 (- (log (* 7.233969908796301e-05 (pow x 9))) (* 3 (log (/ 1 x)))))) x)) (* 2.0094541707181005e-06 (/ (exp (* 1/3 (- (log (* 7.233969908796301e-05 (pow x 9))) (* 3 (log (/ 1 x)))))) (* (pow 7.233969908796301e-05 2) (pow x 2)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (235 enodes)
* [exit]simplify:  Simplified to (- (+ (+ (+ (+ (* -4.0 x) 1.0) (* x (* x 3.0))) (pow (exp 1/3) (+ (+ (log 7.233969908796301e-05) (* 9 (log x))) (* (log x) 3)))) (* (/ 383.99424006767924 (* x x)) (pow (exp 1/3) (+ (+ (log 7.233969908796301e-05) (* 9 (log x))) (* (log x) 3))))) (+ (* (/ 15.999880000959992 x) (pow (exp 1/3) (+ (+ (log 7.233969908796301e-05) (* 9 (log x))) (* (log x) 3)))) (* (/ 2.0094541707181005e-06 (* (* 7.233969908796301e-05 7.233969908796301e-05) (* x x))) (pow (exp 1/3) (+ (+ (log 7.233969908796301e-05) (* 9 (log x))) (* (log x) 3))))))
* * * * [misc]progress:  [ 101 / 110 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (+ (* 383.99424006767924 (/ (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log (/ -1 x))))))) (* 3 (log (/ -1 x)))))) (pow x 2))) (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log (/ -1 x))))))) (* 3 (log (/ -1 x))))))) (+ (* 15.999880000959992 (/ (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log (/ -1 x))))))) (* 3 (log (/ -1 x)))))) x)) (* 2.0094541707181005e-06 (/ (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log (/ -1 x))))))) (* 3 (log (/ -1 x)))))) (* (pow x 2) (pow -7.233969908796301e-05 2)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (- (+ (* 383.99424006767924 (/ (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log (/ -1 x))))))) (* 3 (log (/ -1 x)))))) (pow x 2))) (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log (/ -1 x))))))) (* 3 (log (/ -1 x))))))) (+ (* 15.999880000959992 (/ (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log (/ -1 x))))))) (* 3 (log (/ -1 x)))))) x)) (* 2.0094541707181005e-06 (/ (exp (* 1/3 (- (log (* -7.233969908796301e-05 (exp (* 9 (- (log -1) (log (/ -1 x))))))) (* 3 (log (/ -1 x)))))) (* (pow x 2) (pow -7.233969908796301e-05 2)))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (94 enodes)
* * [misc]simplify:  iters left: 4 (245 enodes)
* [exit]simplify:  Simplified to (- (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (pow (exp 1/3) (+ (- (* (+ 0 (log x)) 9) (* 3 (log (/ -1 x)))) (log -7.233969908796301e-05)))) (* (/ 383.99424006767924 (* x x)) (pow (exp 1/3) (+ (- (* (+ 0 (log x)) 9) (* 3 (log (/ -1 x)))) (log -7.233969908796301e-05))))) (+ (* (/ 15.999880000959992 x) (pow (exp 1/3) (+ (- (* (+ 0 (log x)) 9) (* 3 (log (/ -1 x)))) (log -7.233969908796301e-05)))) (* (/ 2.0094541707181005e-06 (* (* x x) (* -7.233969908796301e-05 -7.233969908796301e-05))) (pow (exp 1/3) (+ (- (* (+ 0 (log x)) 9) (* 3 (log (/ -1 x)))) (log -7.233969908796301e-05))))))
* * * * [misc]progress:  [ 102 / 110 ] simplifiying candidate #<alt-event (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (187 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))) (+ (* x (* x 3.0)) (+ 1.0 (* -4.0 x))))
* * * * [misc]progress:  [ 103 / 110 ] simplifiying candidate #<alt-event (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (187 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))) (+ (* x (* x 3.0)) (+ 1.0 (* -4.0 x))))
* * * * [misc]progress:  [ 104 / 110 ] simplifiying candidate #<alt-event (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* 3.0 (pow x 2)) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (187 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))) (+ (* x (* x 3.0)) (+ 1.0 (* -4.0 x))))
* * * * [misc]progress:  [ 105 / 110 ] simplifiying candidate #<alt-event (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow x 9)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow x 9)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (* (pow x 9) (+ (* x 0.041667) -0.666667)) (* (+ (* x 0.041667) -0.666667) (+ (* x 0.041667) -0.666667)))) (+ (* (* x x) 3.0) (+ 1.0 (* -4.0 x))))
* * * * [misc]progress:  [ 106 / 110 ] simplifiying candidate #<alt-event (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow (/ 1 x) -3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow (/ 1 x) -3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ 1.0 (* -4.0 x)) (* (* x x) 3.0)) (cbrt (* (pow (+ (* x 0.041667) -0.666667) 3) (pow (pow (/ 1 x) -3) 3))))
* * * * [misc]progress:  [ 107 / 110 ] simplifiying candidate #<alt-event (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (exp (* 9 (- (log -1) (log (/ -1 x)))))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (exp (* 9 (- (log -1) (log (/ -1 x)))))) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (pow (+ (* x 0.041667) -0.666667) 3) (pow (exp 9) (+ 0 (log x))))) (+ (* (* x x) 3.0) (+ (* -4.0 x) 1.0)))
* * * * [misc]progress:  [ 108 / 110 ] simplifiying candidate #<alt-event (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (- (+ (* 0.0017361388890000003 (pow x 2)) 0.444444888889) (* 0.055556027778000006 x)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (- (+ (* 0.0017361388890000003 (pow x 2)) 0.444444888889) (* 0.055556027778000006 x)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (173 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (+ (* (* x x) 0.0017361388890000003) (- 0.444444888889 (* 0.055556027778000006 x))) (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)))) (+ (* (* 3.0 x) x) (+ 1.0 (* -4.0 x))))
* * * * [misc]progress:  [ 109 / 110 ] simplifiying candidate #<alt-event (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (- (+ (* 0.0017361388890000003 (pow x 2)) 0.444444888889) (* 0.055556027778000006 x)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (- (+ (* 0.0017361388890000003 (pow x 2)) 0.444444888889) (* 0.055556027778000006 x)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (173 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (+ (* (* x x) 0.0017361388890000003) (- 0.444444888889 (* 0.055556027778000006 x))) (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)))) (+ (* (* 3.0 x) x) (+ 1.0 (* -4.0 x))))
* * * * [misc]progress:  [ 110 / 110 ] simplifiying candidate #<alt-event (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (- (+ (* 0.0017361388890000003 (pow x 2)) 0.444444888889) (* 0.055556027778000006 x)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (- (+ (* 0.0017361388890000003 (pow x 2)) 0.444444888889) (* 0.055556027778000006 x)))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0)))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (173 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (+ (* (* x x) 0.0017361388890000003) (- 0.444444888889 (* 0.055556027778000006 x))) (* (pow (pow x 3) 3) (+ (* x 0.041667) -0.666667)))) (+ (* (* 3.0 x) x) (+ 1.0 (* -4.0 x))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))))> #<alt-delta (Î» (x) (+ (cbrt (* (* (+ -0.666667 (* 0.041667 x)) (pow (pow x 3) 3)) (* (+ -0.666667 (* 0.041667 x)) (+ -0.666667 (* 0.041667 x))))) (+ (* (* x 3.0) x) (+ (* x -4.0) 1.0))))> #<alt-delta (Î» (x) (+ (* (pow x 3) (+ (* 0.041667 x) -0.666667)) (+ (* x (+ -4.0 (* x 3.0))) 1.0)))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ (+ (+ 1.0 (* -4.0 x)) (* 3.0 (* x x))) (* -0.666667 (* (* x x) x))) (* 0.041667 (* (* (* x x) x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (- (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667)) (* (- (* 0.666667 x) 3.0) (* x x))))>)
* [enter]simplify:  Simplifying (+ (+ (* -4.0 x) 1.0) (* (pow x 4) 0.041667))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4)))
* [exit]simplify:  Simplified to (+ (+ 1.0 (* -4.0 x)) (* 0.041667 (pow x 4)))
* [enter]simplify:  Simplifying (* (- (* 0.666667 x) 3.0) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (* x x) (- (* 0.666667 x) 3.0))
* [exit]simplify:  Simplified to (* (* x x) (- (* 0.666667 x) 3.0))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
