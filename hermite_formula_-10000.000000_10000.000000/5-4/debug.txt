* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ 12.0 (* -48.0 (* x x))) (* 16.0 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* * [misc]simplify:  iters left: 1 (110 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x -48.0) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (- 48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 48.0) (pow x 2)) into (* -48.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -48.0 (pow (/ 1 (/ 1 x)) 2)) into (* -48.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -48.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* -48.0 (pow x 2))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x 4)) into (* 16.0 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (/ 16.0 (pow x 3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (/ 16.0 (pow (/ 1 x) 3)) (/ 1 (/ 1 x))) into (* 16.0 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (* -16.0 (exp (* 3 (- (log -1) (log (/ 1 (- x))))))) (/ 1 (/ 1 (- x)))) into (* 16.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Taking taylor expansion of 12.0 in x
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Taking taylor expansion of 12.0 in x
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (- 48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 16.0 0) into 16.0
* [misc]backup-simplify:  Simplify (+ 0 16.0) into 16.0
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]backup-simplify:  Simplify (+ (* 16.0 (pow x 4)) (+ (* (- 48.0) (pow x 2)) 12.0)) into (- (+ (* 16.0 (pow x 4)) 12.0) (* 48.0 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ 12.0 (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 12.0 (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 12.0 in x
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ 12.0 (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 12.0 in x
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (- 48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (/ 16.0 (pow x 3)) 0) into (* 16.0 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ 0 (* 16.0 (/ 1 (pow x 3)))) into (* 16.0 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (* 16.0 (/ 1 (pow x 3))) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]backup-simplify:  Simplify (+ 12.0 (+ (* (/ 16.0 (pow (/ 1 x) 3)) (/ 1 (/ 1 x))) (* (- 48.0) (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 16.0 (pow x 4)) 12.0) (* 48.0 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ 12.0 (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 12.0 (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 12.0 in x
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ 12.0 (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 12.0 in x
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (- 48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 (exp (* 3 (- (log -1) (log x))))) 0) into (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ 0 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) into (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- (* 16.0 (exp (* 3 (- (log -1) (log x)))))) into (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]backup-simplify:  Simplify (+ 12.0 (+ (* (- (* 16.0 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (/ 1 (/ 1 (- x)))) (* (- 48.0) (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 16.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) 12.0) (* 48.0 (pow x 2)))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (pow x 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (pow (/ 1 x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (pow x -3) into (pow x -3)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -3) into (pow (/ 1 x) -3)
* [misc]approximate:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) into (exp (* 3 (- (log -1) (log (/ -1 x)))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (pow (* (* x -48.0) x) 1))))>
* * * * [misc]progress:  [ 2 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (exp (log (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (log (* (* x -48.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* [exit]simplify:  Simplified to (log (* x (* x -48.0)))
* [exit]simplify:  Simplified to (log (* x (* x -48.0)))
* * * * [misc]progress:  [ 3 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (log (exp (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (exp (* (* x -48.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* [exit]simplify:  Simplified to (exp (* x (* x -48.0)))
* [exit]simplify:  Simplified to (exp (* x (* x -48.0)))
* * * * [misc]progress:  [ 4 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* (cbrt (* (* x -48.0) x)) (cbrt (* (* x -48.0) x))) (cbrt (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x -48.0) x)) (cbrt (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -48.0))) (cbrt (* x (* x -48.0))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -48.0))) (cbrt (* x (* x -48.0))))
* [enter]simplify:  Simplifying (cbrt (* (* x -48.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (* x -48.0)))
* [exit]simplify:  Simplified to (cbrt (* x (* x -48.0)))
* * * * [misc]progress:  [ 5 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (cbrt (* (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* x -48.0) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (335 enodes)
* [exit]simplify:  Simplified to (pow (* x (* x -48.0)) 3)
* [exit]simplify:  Simplified to (pow (* x (* x -48.0)) 3)
* * * * [misc]progress:  [ 6 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (sqrt (* (* x -48.0) x)) (sqrt (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x -48.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x -48.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x -48.0)))
* [enter]simplify:  Simplifying (sqrt (* (* x -48.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x -48.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x -48.0)))
* * * * [misc]progress:  [ 7 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* 1 (* (* x -48.0) x)))))>
* * * * [misc]progress:  [ 8 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* -48.0 x)))))>
* [enter]simplify:  Simplifying (* -48.0 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* -48.0 x)
* [exit]simplify:  Simplified to (* -48.0 x)
* * * * [misc]progress:  [ 9 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))>
* * * * [misc]progress:  [ 10 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (pow (* (* x 16.0) (pow x 3)) 1) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 11 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (exp (+ (log (* x 16.0)) (* (log x) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ (log (* x 16.0)) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x 16.0)))
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x 16.0)))
* * * * [misc]progress:  [ 12 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (exp (+ (log (* x 16.0)) (log (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ (log (* x 16.0)) (log (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* * [misc]simplify:  iters left: 1 (56 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (* x 16.0)))
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (* x 16.0)))
* * * * [misc]progress:  [ 13 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (exp (log (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (log (* (* x 16.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x 16.0)))
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x 16.0)))
* * * * [misc]progress:  [ 14 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (log (exp (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (exp (* (* x 16.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* * [misc]simplify:  iters left: 1 (48 enodes)
* [exit]simplify:  Simplified to (exp (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (exp (* (pow x 3) (* x 16.0)))
* * * * [misc]progress:  [ 15 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (* (* x 16.0) (* x 16.0)) (* x 16.0)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* (* (* x 16.0) (* x 16.0)) (* x 16.0)) (* (* (pow x 3) (pow x 3)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (378 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* x 16.0) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* x 16.0) 3))
* * * * [misc]progress:  [ 16 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (cbrt (* (* x 16.0) (pow x 3))) (cbrt (* (* x 16.0) (pow x 3)))) (cbrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x 16.0) (pow x 3))) (cbrt (* (* x 16.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x 16.0))) (cbrt (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x 16.0))) (cbrt (* (pow x 3) (* x 16.0))))
* [enter]simplify:  Simplifying (cbrt (* (* x 16.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x 16.0)))
* * * * [misc]progress:  [ 17 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* x 16.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (287 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* x 16.0)) 3)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* x 16.0)) 3)
* * * * [misc]progress:  [ 18 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (sqrt (* (* x 16.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 16.0)))
* [enter]simplify:  Simplifying (sqrt (* (* x 16.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 16.0)))
* * * * [misc]progress:  [ 19 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* 1 (* (* x 16.0) (pow x 3))) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 20 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (* x 16.0) (* x x)) x) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* x 16.0) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x 16.0) (* x x))
* [exit]simplify:  Simplified to (* (* x 16.0) (* x x))
* * * * [misc]progress:  [ 21 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (* x 16.0) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* x 16.0) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (* (* x 16.0) (* x x))
* [exit]simplify:  Simplified to (* (* x 16.0) (* x x))
* * * * [misc]progress:  [ 22 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (* x 16.0) x) (* x x)) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* x 16.0) x)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (* x (* x 16.0))
* [exit]simplify:  Simplified to (* x (* x 16.0))
* * * * [misc]progress:  [ 23 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (* x 16.0) (sqrt (pow x 3))) (sqrt (pow x 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* x 16.0) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (* x 16.0) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (* x 16.0) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 24 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (* x 16.0) 1) (pow x 3)) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* x 16.0) 1)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (19 enodes)
* [exit]simplify:  Simplified to (* x 16.0)
* [exit]simplify:  Simplified to (* x 16.0)
* * * * [misc]progress:  [ 25 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* x (* 16.0 (pow x 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* 16.0 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* 16.0 x) (* x x))
* [exit]simplify:  Simplified to (* (* 16.0 x) (* x x))
* * * * [misc]progress:  [ 26 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 27 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) 1))>
* * * * [misc]progress:  [ 28 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (log (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (124 enodes)
* [exit]simplify:  Simplified to (log (+ (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3))) 12.0))
* [exit]simplify:  Simplified to (log (+ (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3))) 12.0))
* * * * [misc]progress:  [ 29 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (exp (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (161 enodes)
* * [misc]simplify:  iters left: 1 (191 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 16.0) (* (* x x) (* x x))) (* (pow (exp x) (* -48.0 x)) (exp 12.0)))
* [exit]simplify:  Simplified to (* (pow (exp 16.0) (* (* x x) (* x x))) (* (pow (exp x) (* -48.0 x)) (exp 12.0)))
* * * * [misc]progress:  [ 30 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (89 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (124 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3))) 12.0))
* [exit]simplify:  Simplified to (cbrt (+ (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3))) 12.0))
* * * * [misc]progress:  [ 31 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (* (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)
* * * * [misc]progress:  [ 32 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (sqrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (sqrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (124 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3))) 12.0))
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3))) 12.0))
* [enter]simplify:  Simplifying (sqrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (124 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3))) 12.0))
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3))) 12.0))
* * * * [misc]progress:  [ 33 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 12.0 3) (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 3)) (+ (* 12.0 12.0) (- (* (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))>
* [enter]simplify:  Simplifying (+ (pow 12.0 3) (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 3))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (266 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0))) 3) (pow 12.0 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0))) 3) (pow 12.0 3))
* [enter]simplify:  Simplifying (+ (* 12.0 12.0) (- (* (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* [exit]simplify:  Simplified to (- (* (+ (* (* -48.0 x) x) (* (pow x 3) (* x 16.0))) (+ (* (* -48.0 x) x) (* (pow x 3) (* x 16.0)))) (+ (* (* 12.0 16.0) (* (* x x) (* x x))) (- (* (* -48.0 x) (* 12.0 x)) (* 12.0 12.0))))
* [exit]simplify:  Simplified to (- (* (+ (* (* -48.0 x) x) (* (pow x 3) (* x 16.0))) (+ (* (* -48.0 x) x) (* (pow x 3) (* x 16.0)))) (+ (* (* 12.0 16.0) (* (* x x) (* x x))) (- (* (* -48.0 x) (* 12.0 x)) (* 12.0 12.0))))
* * * * [misc]progress:  [ 34 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))>
* * * * [misc]progress:  [ 35 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* 12.0 12.0) (* (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (- 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))>
* [enter]simplify:  Simplifying (- (* 12.0 12.0) (* (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (495 enodes)
* [exit]simplify:  Simplified to (- (* 12.0 12.0) (* (+ (* (* -48.0 x) x) (* (pow x 3) (* x 16.0))) (+ (* (* -48.0 x) x) (* (pow x 3) (* x 16.0)))))
* [exit]simplify:  Simplified to (- (* 12.0 12.0) (* (+ (* (* -48.0 x) x) (* (pow x 3) (* x 16.0))) (+ (* (* -48.0 x) x) (* (pow x 3) (* x 16.0)))))
* [enter]simplify:  Simplifying (- 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (124 enodes)
* * [misc]simplify:  iters left: 2 (220 enodes)
* * [misc]simplify:  iters left: 1 (326 enodes)
* [exit]simplify:  Simplified to (+ (- 12.0 (* (* x x) -48.0)) (* (* (* x x) (* x x)) (- 16.0)))
* [exit]simplify:  Simplified to (+ (- 12.0 (* (* x x) -48.0)) (* (* (* x x) (* x x)) (- 16.0)))
* * * * [misc]progress:  [ 36 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 12.0 (* (* x 16.0) (pow x 3))) (* (* x -48.0) x)))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* x 16.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (+ (* (* 16.0 x) (pow x 3)) 12.0)
* [exit]simplify:  Simplified to (+ (* (* 16.0 x) (pow x 3)) 12.0)
* * * * [misc]progress:  [ 37 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 12.0))>
* * * * [misc]progress:  [ 38 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (exp (* (log x) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (log x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (5 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 39 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (* (* x x) x)) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 40 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow (pow x 3) 1)) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 41 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (exp (log (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (log (pow x 3))
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 42 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (log (exp (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (exp (pow x 3))
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (7 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 43 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (* (* (cbrt (pow x 3)) (cbrt (pow x 3))) (cbrt (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (cbrt (pow x 3)) (cbrt (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (pow x 3))
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 44 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (cbrt (* (* (pow x 3) (pow x 3)) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 45 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (* x (* x x))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 46 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (* (sqrt (pow x 3)) (sqrt (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (sqrt (pow x 3))
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow x 3))
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 47 / 59 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (* 1 (pow x 3))) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 48 / 59 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* -48.0 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* -48.0 (pow x 2))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (188 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (+ (* (* 16.0 x) (pow x 3)) (* x (* -48.0 x))))
* * * * [misc]progress:  [ 49 / 59 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* -48.0 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* -48.0 (pow x 2))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (188 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (+ (* (* 16.0 x) (pow x 3)) (* x (* -48.0 x))))
* * * * [misc]progress:  [ 50 / 59 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* -48.0 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* -48.0 (pow x 2))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (188 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (+ (* (* 16.0 x) (pow x 3)) (* x (* -48.0 x))))
* * * * [misc]progress:  [ 51 / 59 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* 16.0 (pow x 4)) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* 16.0 (pow x 4)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (+ (+ 12.0 (* 16.0 (pow x 4))) (* (* x -48.0) x))
* * * * [misc]progress:  [ 52 / 59 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* 16.0 (pow x 4)) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* 16.0 (pow x 4)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (+ (+ 12.0 (* 16.0 (pow x 4))) (* (* x -48.0) x))
* * * * [misc]progress:  [ 53 / 59 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* 16.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* 16.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (274 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (* 16.0 x)) (+ (* -48.0 (* x x)) 12.0))
* * * * [misc]progress:  [ 54 / 59 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 16.0 (pow x 4)) 12.0) (* 48.0 (pow x 2))))>
* [enter]simplify:  Simplifying (- (+ (* 16.0 (pow x 4)) 12.0) (* 48.0 (pow x 2)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (69 enodes)
* [exit]simplify:  Simplified to (+ (- 12.0 (* x (* 48.0 x))) (* (pow x 4) 16.0))
* * * * [misc]progress:  [ 55 / 59 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 16.0 (pow x 4)) 12.0) (* 48.0 (pow x 2))))>
* [enter]simplify:  Simplifying (- (+ (* 16.0 (pow x 4)) 12.0) (* 48.0 (pow x 2)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (69 enodes)
* [exit]simplify:  Simplified to (+ (- 12.0 (* x (* 48.0 x))) (* (pow x 4) 16.0))
* * * * [misc]progress:  [ 56 / 59 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 16.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) 12.0) (* 48.0 (pow x 2))))>
* [enter]simplify:  Simplifying (- (+ (* 16.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) 12.0) (* 48.0 (pow x 2)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (131 enodes)
* * [misc]simplify:  iters left: 2 (360 enodes)
* [exit]simplify:  Simplified to (- (- 12.0 (* x (* 48.0 x))) (* (* (* x x) (* x x)) (- 16.0)))
* * * * [misc]progress:  [ 57 / 59 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (70 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (80 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3))) 12.0)
* * * * [misc]progress:  [ 58 / 59 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow (/ 1 x) -3)) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* (* x 16.0) (pow (/ 1 x) -3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* [exit]simplify:  Simplified to (+ (* (* 16.0 x) (pow (/ 1 x) -3)) (+ 12.0 (* (* -48.0 x) x)))
* * * * [misc]progress:  [ 59 / 59 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* (* x 16.0) (exp (* 3 (- (log -1) (log (/ -1 x)))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* (* x 16.0) (exp (* 3 (- (log -1) (log (/ -1 x)))))) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (268 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (* 16.0 x)) (+ (* -48.0 (* x x)) 12.0))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 1 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (pow x 3) 3) (pow (* x 16.0) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow x 3) 3) (pow (* x 16.0) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (* x 16.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x 16.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x 16.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x 16.0)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (log 16.0) into (log 16.0)
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 16.0)) into (+ (log x) (log 16.0))
* [misc]backup-simplify:  Simplify (* 3 (+ (log x) (log 16.0))) into (* 3 (+ (log x) (log 16.0)))
* [misc]backup-simplify:  Simplify (exp (* 3 (+ (log x) (log 16.0)))) into (exp (* 3 (+ (log x) (log 16.0))))
* [misc]backup-simplify:  Simplify (* (pow x 9) (exp (* 3 (+ (log x) (log 16.0))))) into (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))
* [misc]backup-simplify:  Simplify (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))) into (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)))) into (* 1/3 (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))))) into (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (pow x 3) 3) (pow (* x 16.0) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow x 3) 3) (pow (* x 16.0) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (* x 16.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x 16.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x 16.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x 16.0)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (log 16.0) into (log 16.0)
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 16.0)) into (+ (log x) (log 16.0))
* [misc]backup-simplify:  Simplify (* 3 (+ (log x) (log 16.0))) into (* 3 (+ (log x) (log 16.0)))
* [misc]backup-simplify:  Simplify (exp (* 3 (+ (log x) (log 16.0)))) into (exp (* 3 (+ (log x) (log 16.0))))
* [misc]backup-simplify:  Simplify (* (pow x 9) (exp (* 3 (+ (log x) (log 16.0))))) into (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))
* [misc]backup-simplify:  Simplify (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))) into (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)))) into (* 1/3 (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))))) into (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 1/3)
* [misc]backup-simplify:  Simplify (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 1/3) into (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 1/3)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 16.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 16.0)) into (+ (log x) (log 16.0))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (+ (log x) (log 16.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log x) (log 16.0)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (* 0 (exp (* 3 (+ (log x) (log 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 16.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 16.0 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 16.0)) into (+ (log x) (log 16.0))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (+ (log x) (log 16.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log x) (log 16.0)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (* 0 (exp (* 3 (+ (log x) (log 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 16.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 16.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 16.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 16.0)) into (+ (log x) (log 16.0))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log x) (log 16.0)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (+ (log x) (log 16.0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 16.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 16.0 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 16.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 16.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 16.0 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 16.0)) into (+ (log x) (log 16.0))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log x) (log 16.0)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (+ (log x) (log 16.0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 16.0 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 16.0 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 16.0 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 16.0 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 16.0 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 16.0 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 16.0 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 16.0)) into (+ (log x) (log 16.0))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log 16.0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log x) (log 16.0)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (+ (log x) (log 16.0)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 16.0 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 16.0 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 16.0 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 16.0 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 16.0 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 16.0 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 16.0 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 16.0 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 16.0 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 16.0 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 16.0 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 16.0)) into (+ (log x) (log 16.0))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log 16.0))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log x) (log 16.0)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (+ (log x) (log 16.0))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 1/3) into (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 1/3)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (pow (/ 1 x) 3) 3) (pow (* (/ 1 x) 16.0) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (pow (/ 1 x) 3) 3) (pow (* (/ 1 x) 16.0) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (pow (/ 1 x) 3) 3) (pow (* (/ 1 x) 16.0) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (pow (/ 1 x) 3) 3) (pow (* (/ 1 x) 16.0) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (pow (/ 1 x) 3) 3) (pow (* (/ 1 x) 16.0) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (/ 1 x) 3) 3) (pow (* (/ 1 x) 16.0) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 x) 3) 3) (pow (* (/ 1 x) 16.0) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) 16.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) 16.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) 16.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) 16.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (log 16.0) into (log 16.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 16.0)) into (- (log 16.0) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log 16.0) (log x))) into (* 3 (- (log 16.0) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 16.0) (log x)))) into (exp (* 3 (- (log 16.0) (log x))))
* [misc]backup-simplify:  Simplify (* (pow (pow x -3) 3) (exp (* 3 (- (log 16.0) (log x))))) into (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9))
* [misc]backup-simplify:  Simplify (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9))) into (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)))) into (* 1/3 (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9))))) into (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (pow (/ 1 x) 3) 3) (pow (* (/ 1 x) 16.0) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (pow (/ 1 x) 3) 3) (pow (* (/ 1 x) 16.0) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (pow (/ 1 x) 3) 3) (pow (* (/ 1 x) 16.0) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (pow (/ 1 x) 3) 3) (pow (* (/ 1 x) 16.0) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (/ 1 x) 3) 3) (pow (* (/ 1 x) 16.0) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 x) 3) 3) (pow (* (/ 1 x) 16.0) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) 16.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) 16.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) 16.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) 16.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (log 16.0) into (log 16.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 16.0)) into (- (log 16.0) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log 16.0) (log x))) into (* 3 (- (log 16.0) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 16.0) (log x)))) into (exp (* 3 (- (log 16.0) (log x))))
* [misc]backup-simplify:  Simplify (* (pow (pow x -3) 3) (exp (* 3 (- (log 16.0) (log x))))) into (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9))
* [misc]backup-simplify:  Simplify (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9))) into (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)))) into (* 1/3 (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9))))) into (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 1/3)
* [misc]backup-simplify:  Simplify (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 1/3) into (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 1/3)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 16.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 16.0)) into (- (log 16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log 16.0) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 16.0) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (* 0 (exp (* 3 (- (log 16.0) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 16.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 16.0 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 16.0)) into (- (log 16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log 16.0) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 16.0) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log 16.0) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 16.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 16.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 16.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 16.0)) into (- (log 16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 16.0) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 16.0) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log 16.0) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 16.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 16.0 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 16.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 16.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 16.0 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 16.0)) into (- (log 16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 16.0) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 16.0) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log 16.0) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 16.0 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 16.0 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 16.0 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 16.0 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 16.0 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 16.0 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 16.0 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 16.0)) into (- (log 16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 16.0) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 16.0) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow x -3) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow x -3) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow x -3) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow x -3) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow x -3) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log 16.0) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 16.0 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 16.0 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 16.0 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 16.0 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 16.0 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 16.0 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 16.0 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 16.0 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 16.0 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 16.0 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 16.0 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 16.0)) into (- (log 16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 16.0) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 16.0) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow x -3) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow x -3) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow x -3) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow x -3) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow x -3) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x -3) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow x -3) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow x -3) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow x -3) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log 16.0) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ (exp (* 3 (- (log 16.0) (log (/ 1 x))))) (pow (/ 1 x) 9)) 1/3) into (pow (* (exp (* 3 (- (log 16.0) (log (/ 1 x))))) (pow x 9)) 1/3)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (pow (/ 1 (- x)) 3) 3) (pow (* (/ 1 (- x)) 16.0) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (pow (/ 1 (- x)) 3) 3) (pow (* (/ 1 (- x)) 16.0) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (pow (/ 1 (- x)) 3) 3) (pow (* (/ 1 (- x)) 16.0) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (pow (/ 1 (- x)) 3) 3) (pow (* (/ 1 (- x)) 16.0) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (pow (/ 1 (- x)) 3) 3) (pow (* (/ 1 (- x)) 16.0) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (/ 1 (- x)) 3) 3) (pow (* (/ 1 (- x)) 16.0) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 (- x)) 3) 3) (pow (* (/ 1 (- x)) 16.0) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) 16.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) 16.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) 16.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) 16.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (log -16.0) into (log -16.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -16.0)) into (- (log -16.0) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -16.0) (log x))) into (* 3 (- (log -16.0) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -16.0) (log x)))) into (exp (* 3 (- (log -16.0) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) into (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x)))))
* [misc]backup-simplify:  Simplify (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x)))))) into (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))))) into (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x)))))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x)))))))) into (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (pow (/ 1 (- x)) 3) 3) (pow (* (/ 1 (- x)) 16.0) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (pow (/ 1 (- x)) 3) 3) (pow (* (/ 1 (- x)) 16.0) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (pow (/ 1 (- x)) 3) 3) (pow (* (/ 1 (- x)) 16.0) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (pow (/ 1 (- x)) 3) 3) (pow (* (/ 1 (- x)) 16.0) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (/ 1 (- x)) 3) 3) (pow (* (/ 1 (- x)) 16.0) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 (- x)) 3) 3) (pow (* (/ 1 (- x)) 16.0) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) 16.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) 16.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) 16.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) 16.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (log -16.0) into (log -16.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -16.0)) into (- (log -16.0) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -16.0) (log x))) into (* 3 (- (log -16.0) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -16.0) (log x)))) into (exp (* 3 (- (log -16.0) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) into (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x)))))
* [misc]backup-simplify:  Simplify (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x)))))) into (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))))) into (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x)))))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x)))))))) into (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 1/3)
* [misc]backup-simplify:  Simplify (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 1/3) into (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 1/3)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -16.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -16.0)) into (- (log -16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -16.0) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -16.0) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -16.0) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x)))))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -16.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -16.0 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -16.0)) into (- (log -16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -16.0) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -16.0) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -16.0) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x)))))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -16.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -16.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -16.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -16.0)) into (- (log -16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -16.0) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -16.0) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -16.0) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x)))))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -16.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -16.0 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -16.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -16.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -16.0 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -16.0)) into (- (log -16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -16.0) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -16.0) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -16.0) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x)))))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -16.0 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -16.0 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -16.0 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -16.0 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -16.0 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -16.0 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -16.0 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -16.0)) into (- (log -16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -16.0) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -16.0) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -16.0) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x)))))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -16.0 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -16.0 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -16.0 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -16.0 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -16.0 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -16.0 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -16.0 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -16.0 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -16.0 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -16.0 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -16.0 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -16.0)) into (- (log -16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -16.0) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -16.0) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (* 3 (- (log -1) (log x)))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -16.0) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x)))))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (* (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) (exp (* 3 (- (log -16.0) (log (/ 1 (- x))))))) 1/3) into (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (exp (* 3 (- (log -16.0) (log (/ -1 x)))))) 1/3)
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x -48.0) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (- 48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 48.0) (pow x 2)) into (* -48.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -48.0 (pow (/ 1 (/ 1 x)) 2)) into (* -48.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -48.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* -48.0 (pow x 2))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (pow x 3) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]backup-simplify:  Simplify (pow x 9) into (pow x 9)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 9) into (pow x 9)
* [misc]approximate:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]backup-simplify:  Simplify (pow (pow x -3) 3) into (pow (pow x -3) 3)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow x -3) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow x -3) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow x -3) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow x -3) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow x -3) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow x -3) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow x -3) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow x -3) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow x -3) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow x -3) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x -3) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow x -3) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow x -3) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow x -3) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (pow (/ 1 x) -3) 3) into (pow (pow (/ 1 x) -3) 3)
* [misc]approximate:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (* 3 (- (log -1) (log x)))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) into (exp (* 9 (- (log -1) (log (/ -1 x)))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (pow (pow x 3) 3) (pow (* x 16.0) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (pow x 3) 3) (pow (* x 16.0) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (* x 16.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x 16.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x 16.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x 16.0)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (log 16.0) into (log 16.0)
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 16.0)) into (+ (log x) (log 16.0))
* [misc]backup-simplify:  Simplify (* 3 (+ (log x) (log 16.0))) into (* 3 (+ (log x) (log 16.0)))
* [misc]backup-simplify:  Simplify (exp (* 3 (+ (log x) (log 16.0)))) into (exp (* 3 (+ (log x) (log 16.0))))
* [misc]taylor:  Taking taylor expansion of (* (pow (pow x 3) 3) (pow (* x 16.0) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (* x 16.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x 16.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x 16.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x 16.0)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (log 16.0) into (log 16.0)
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 16.0)) into (+ (log x) (log 16.0))
* [misc]backup-simplify:  Simplify (* 3 (+ (log x) (log 16.0))) into (* 3 (+ (log x) (log 16.0)))
* [misc]backup-simplify:  Simplify (exp (* 3 (+ (log x) (log 16.0)))) into (exp (* 3 (+ (log x) (log 16.0))))
* [misc]backup-simplify:  Simplify (* (pow x 9) (exp (* 3 (+ (log x) (log 16.0))))) into (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) into (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 16.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 16.0)) into (+ (log x) (log 16.0))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (+ (log x) (log 16.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log x) (log 16.0)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (* 0 (exp (* 3 (+ (log x) (log 16.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 16.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 16.0 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 16.0)) into (+ (log x) (log 16.0))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (+ (log x) (log 16.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log x) (log 16.0)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (* 0 (exp (* 3 (+ (log x) (log 16.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 16.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 16.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 16.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 16.0)) into (+ (log x) (log 16.0))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log x) (log 16.0)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (+ (log x) (log 16.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 16.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 16.0 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 16.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 16.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 16.0 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 16.0)) into (+ (log x) (log 16.0))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log x) (log 16.0)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (+ (log x) (log 16.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 16.0 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 16.0 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 16.0 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 16.0 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 16.0 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 16.0 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 16.0 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 16.0)) into (+ (log x) (log 16.0))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log 16.0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log x) (log 16.0)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (+ (log x) (log 16.0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 16.0 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 16.0 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 16.0 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 16.0 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 16.0 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 16.0 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 16.0 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 16.0 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 16.0 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 16.0 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 16.0 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 16.0)) into (+ (log x) (log 16.0))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log 16.0))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log x) (log 16.0)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (+ (log x) (log 16.0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) into (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))
* [misc]approximate:  Taking taylor expansion of (* (pow (pow (/ 1 x) 3) 3) (pow (* (/ 1 x) 16.0) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 x) 3) 3) (pow (* (/ 1 x) 16.0) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) 16.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) 16.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) 16.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) 16.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (log 16.0) into (log 16.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 16.0)) into (- (log 16.0) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log 16.0) (log x))) into (* 3 (- (log 16.0) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 16.0) (log x)))) into (exp (* 3 (- (log 16.0) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 x) 3) 3) (pow (* (/ 1 x) 16.0) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) 16.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) 16.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) 16.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) 16.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (log 16.0) into (log 16.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 16.0)) into (- (log 16.0) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log 16.0) (log x))) into (* 3 (- (log 16.0) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 16.0) (log x)))) into (exp (* 3 (- (log 16.0) (log x))))
* [misc]backup-simplify:  Simplify (* (pow (pow x -3) 3) (exp (* 3 (- (log 16.0) (log x))))) into (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9))
* [misc]backup-simplify:  Simplify (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9)) into (/ (exp (* 3 (- (log 16.0) (log x)))) (pow x 9))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 16.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 16.0)) into (- (log 16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log 16.0) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 16.0) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (* 0 (exp (* 3 (- (log 16.0) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 16.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 16.0 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 16.0)) into (- (log 16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log 16.0) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 16.0) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log 16.0) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 16.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 16.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 16.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 16.0)) into (- (log 16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 16.0) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 16.0) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log 16.0) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 16.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 16.0 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 16.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 16.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 16.0 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 16.0)) into (- (log 16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 16.0) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 16.0) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log 16.0) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 16.0 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 16.0 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 16.0 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 16.0 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 16.0 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 16.0 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 16.0 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 16.0)) into (- (log 16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 16.0) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 16.0) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow x -3) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow x -3) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow x -3) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow x -3) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow x -3) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log 16.0) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 16.0 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 16.0 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 16.0 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 16.0 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 16.0 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 16.0 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 16.0 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 16.0 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 16.0 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 16.0 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 16.0 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 16.0)) into (- (log 16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 16.0) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 16.0) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow x -3) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow x -3) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow x -3) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow x -3) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow x -3) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x -3) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow x -3) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow x -3) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow x -3) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log 16.0) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (exp (* 3 (- (log 16.0) (log (/ 1 x))))) (pow (/ 1 x) 9)) into (* (exp (* 3 (- (log 16.0) (log (/ 1 x))))) (pow x 9))
* [misc]approximate:  Taking taylor expansion of (* (pow (pow (/ 1 (- x)) 3) 3) (pow (* (/ 1 (- x)) 16.0) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 (- x)) 3) 3) (pow (* (/ 1 (- x)) 16.0) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) 16.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) 16.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) 16.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) 16.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (log -16.0) into (log -16.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -16.0)) into (- (log -16.0) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -16.0) (log x))) into (* 3 (- (log -16.0) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -16.0) (log x)))) into (exp (* 3 (- (log -16.0) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 (- x)) 3) 3) (pow (* (/ 1 (- x)) 16.0) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) 16.0) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) 16.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) 16.0))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) 16.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (log -16.0) into (log -16.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -16.0)) into (- (log -16.0) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -16.0) (log x))) into (* 3 (- (log -16.0) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -16.0) (log x)))) into (exp (* 3 (- (log -16.0) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) into (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x))))) into (* (exp (* 9 (- (log -1) (log x)))) (exp (* 3 (- (log -16.0) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -16.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -16.0)) into (- (log -16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -16.0) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -16.0) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -16.0) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -16.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -16.0 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -16.0)) into (- (log -16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -16.0) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -16.0) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -16.0) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -16.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -16.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -16.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -16.0)) into (- (log -16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -16.0) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -16.0) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -16.0) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -16.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -16.0 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -16.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -16.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -16.0 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -16.0)) into (- (log -16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -16.0) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -16.0) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -16.0) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -16.0 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -16.0 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -16.0 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -16.0 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -16.0 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -16.0 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -16.0 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -16.0)) into (- (log -16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -16.0) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -16.0) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -16.0) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -16.0 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -16.0 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -16.0 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -16.0 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -16.0 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -16.0 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -16.0 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -16.0 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -16.0 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -16.0 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -16.0 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -16.0)) into (- (log -16.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -16.0) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -16.0) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (* 3 (- (log -1) (log x)))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -16.0) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) (exp (* 3 (- (log -16.0) (log (/ 1 (- x))))))) into (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (exp (* 3 (- (log -16.0) (log (/ -1 x))))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (pow (* (pow (pow x 3) 3) (pow (* x 16.0) 3)) 1/3) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 2 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (pow (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) 1) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 3 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (exp (log (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (log (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (360 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))
* [exit]simplify:  Simplified to (log (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))
* * * * [misc]progress:  [ 4 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (log (exp (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (360 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))
* [exit]simplify:  Simplified to (exp (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))
* * * * [misc]progress:  [ 5 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (cbrt (pow (pow x 3) 3)) (cbrt (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (cbrt (pow (pow x 3) 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (cbrt (pow (* x 16.0) 3))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (76 enodes)
* [exit]simplify:  Simplified to (* x 16.0)
* [exit]simplify:  Simplified to (* x 16.0)
* * * * [misc]progress:  [ 6 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (cbrt (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))) (cbrt (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))) (cbrt (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))) (cbrt (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (372 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))) (cbrt (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))) (cbrt (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (360 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))
* * * * [misc]progress:  [ 7 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))) (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))) (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (350 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* x 16.0) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* x 16.0) 3))
* * * * [misc]progress:  [ 8 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 9 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))) (sqrt (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (360 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (360 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))
* * * * [misc]progress:  [ 10 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* 1 (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 11 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (pow (* (* x -48.0) x) 1))))>
* * * * [misc]progress:  [ 12 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (exp (log (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (log (* (* x -48.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* [exit]simplify:  Simplified to (log (* x (* x -48.0)))
* [exit]simplify:  Simplified to (log (* x (* x -48.0)))
* * * * [misc]progress:  [ 13 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (log (exp (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (exp (* (* x -48.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* [exit]simplify:  Simplified to (exp (* x (* x -48.0)))
* [exit]simplify:  Simplified to (exp (* x (* x -48.0)))
* * * * [misc]progress:  [ 14 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (* (* (cbrt (* (* x -48.0) x)) (cbrt (* (* x -48.0) x))) (cbrt (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x -48.0) x)) (cbrt (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -48.0))) (cbrt (* x (* x -48.0))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -48.0))) (cbrt (* x (* x -48.0))))
* [enter]simplify:  Simplifying (cbrt (* (* x -48.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (* x -48.0)))
* [exit]simplify:  Simplified to (cbrt (* x (* x -48.0)))
* * * * [misc]progress:  [ 15 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (cbrt (* (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* x -48.0) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (335 enodes)
* [exit]simplify:  Simplified to (pow (* x (* x -48.0)) 3)
* [exit]simplify:  Simplified to (pow (* x (* x -48.0)) 3)
* * * * [misc]progress:  [ 16 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (* (sqrt (* (* x -48.0) x)) (sqrt (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x -48.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x -48.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x -48.0)))
* [enter]simplify:  Simplifying (sqrt (* (* x -48.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x -48.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x -48.0)))
* * * * [misc]progress:  [ 17 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (* 1 (* (* x -48.0) x)))))>
* * * * [misc]progress:  [ 18 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (* x (* -48.0 x)))))>
* [enter]simplify:  Simplifying (* -48.0 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* -48.0 x)
* [exit]simplify:  Simplified to (* -48.0 x)
* * * * [misc]progress:  [ 19 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (* x (* x -48.0)))))>
* * * * [misc]progress:  [ 20 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (exp (* (* (log x) 3) 3)) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* (log x) 3) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (* (* 3 3) (log x))
* [exit]simplify:  Simplified to (* (* 3 3) (log x))
* * * * [misc]progress:  [ 21 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (exp (* (log (pow x 3)) 3)) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (log (pow x 3)) 3)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (26 enodes)
* [exit]simplify:  Simplified to (* (log x) (* 3 3))
* [exit]simplify:  Simplified to (* (log x) (* 3 3))
* * * * [misc]progress:  [ 22 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (exp (* (log (pow x 3)) 3)) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (log (pow x 3)) 3)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (26 enodes)
* [exit]simplify:  Simplified to (* (log x) (* 3 3))
* [exit]simplify:  Simplified to (* (log x) (* 3 3))
* * * * [misc]progress:  [ 23 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow x (* 3 3)) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* 3 3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* 3 3)
* [exit]simplify:  Simplified to (* 3 3)
* * * * [misc]progress:  [ 24 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (pow (* x x) 3) (pow x 3)) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 25 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (pow (* (cbrt (pow x 3)) (cbrt (pow x 3))) 3) (pow (cbrt (pow x 3)) 3)) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (pow x 3)) (cbrt (pow x 3))) 3)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (82 enodes)
* * [misc]simplify:  iters left: 1 (162 enodes)
* [exit]simplify:  Simplified to (pow (* x x) 3)
* [exit]simplify:  Simplified to (pow (* x x) 3)
* [enter]simplify:  Simplifying (pow (cbrt (pow x 3)) 3)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 26 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (pow x 3) (pow (* x x) 3)) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 27 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (pow (sqrt (pow x 3)) 3) (pow (sqrt (pow x 3)) 3)) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (pow (sqrt (pow x 3)) 3)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [enter]simplify:  Simplifying (pow (sqrt (pow x 3)) 3)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 28 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (pow 1 3) (pow (pow x 3) 3)) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (pow 1 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow x 3) 3)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 29 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow x 3) (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 30 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow (pow (pow x 3) 3) 1) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 31 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (exp (log (pow (pow x 3) 3))) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (log (pow (pow x 3) 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (41 enodes)
* [exit]simplify:  Simplified to (* (* 3 3) (log x))
* [exit]simplify:  Simplified to (* (* 3 3) (log x))
* * * * [misc]progress:  [ 32 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (log (exp (pow (pow x 3) 3))) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (exp (pow (pow x 3) 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (exp (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (exp (pow (pow x 3) 3))
* * * * [misc]progress:  [ 33 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (* (cbrt (pow (pow x 3) 3)) (cbrt (pow (pow x 3) 3))) (cbrt (pow (pow x 3) 3))) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (pow x 3) 3)) (cbrt (pow (pow x 3) 3)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (76 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [enter]simplify:  Simplifying (cbrt (pow (pow x 3) 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 34 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (cbrt (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (pow (pow x 3) 3))) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (pow (pow x 3) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (207 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow x 3) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (pow x 3) 3) 3)
* * * * [misc]progress:  [ 35 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (pow (* x x) 3) (pow x 3)) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 36 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (pow (* (cbrt (pow x 3)) (cbrt (pow x 3))) 3) (pow (cbrt (pow x 3)) 3)) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (pow x 3)) (cbrt (pow x 3))) 3)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (82 enodes)
* * [misc]simplify:  iters left: 1 (162 enodes)
* [exit]simplify:  Simplified to (pow (* x x) 3)
* [exit]simplify:  Simplified to (pow (* x x) 3)
* [enter]simplify:  Simplifying (pow (cbrt (pow x 3)) 3)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 37 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (pow x 3) (pow (* x x) 3)) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 38 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (pow (sqrt (pow x 3)) 3) (pow (sqrt (pow x 3)) 3)) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (pow (sqrt (pow x 3)) 3)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [enter]simplify:  Simplifying (pow (sqrt (pow x 3)) 3)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 39 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (pow 1 3) (pow (pow x 3) 3)) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (pow 1 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow x 3) 3)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 40 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow x 3) (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 41 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 42 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (sqrt (pow (pow x 3) 3)) (sqrt (pow (pow x 3) 3))) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (sqrt (pow (pow x 3) 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (sqrt (pow (pow x 3) 3))
* [enter]simplify:  Simplifying (sqrt (pow (pow x 3) 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (sqrt (pow (pow x 3) 3))
* * * * [misc]progress:  [ 43 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* 1 (pow (pow x 3) 3)) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 44 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (pow (* (pow x 3) (* x 16.0)) 3)) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* x 16.0))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (31 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (* (* 16.0 x) (pow x 3))
* [exit]simplify:  Simplified to (* (* 16.0 x) (pow x 3))
* * * * [misc]progress:  [ 45 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (pow (* (pow (pow x 3) 3) (pow (* x 16.0) 3)) 1)) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 46 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (exp (+ (* (* (log x) 3) 3) (* (log (* x 16.0)) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ (* (* (log x) 3) 3) (* (log (* x 16.0)) 3))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* * [misc]simplify:  iters left: 1 (103 enodes)
* [exit]simplify:  Simplified to (* 3 (+ (* 3 (log x)) (log (* 16.0 x))))
* [exit]simplify:  Simplified to (* 3 (+ (* 3 (log x)) (log (* 16.0 x))))
* * * * [misc]progress:  [ 47 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (exp (+ (* (* (log x) 3) 3) (* (log (* x 16.0)) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ (* (* (log x) 3) 3) (* (log (* x 16.0)) 3))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* * [misc]simplify:  iters left: 1 (103 enodes)
* [exit]simplify:  Simplified to (* 3 (+ (* 3 (log x)) (log (* 16.0 x))))
* [exit]simplify:  Simplified to (* 3 (+ (* 3 (log x)) (log (* 16.0 x))))
* * * * [misc]progress:  [ 48 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (exp (+ (* (* (log x) 3) 3) (log (pow (* x 16.0) 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ (* (* (log x) 3) 3) (log (pow (* x 16.0) 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (170 enodes)
* * [misc]simplify:  iters left: 2 (407 enodes)
* [exit]simplify:  Simplified to (* (+ (log (* 16.0 x)) (* 3 (log x))) 3)
* [exit]simplify:  Simplified to (* (+ (log (* 16.0 x)) (* 3 (log x))) 3)
* * * * [misc]progress:  [ 49 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (exp (+ (* (log (pow x 3)) 3) (* (log (* x 16.0)) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ (* (log (pow x 3)) 3) (* (log (* x 16.0)) 3))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (174 enodes)
* * [misc]simplify:  iters left: 1 (311 enodes)
* [exit]simplify:  Simplified to (* (+ (* (log x) 3) (+ (log 16.0) (log x))) 3)
* [exit]simplify:  Simplified to (* (+ (* (log x) 3) (+ (log 16.0) (log x))) 3)
* * * * [misc]progress:  [ 50 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (exp (+ (* (log (pow x 3)) 3) (* (log (* x 16.0)) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ (* (log (pow x 3)) 3) (* (log (* x 16.0)) 3))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (174 enodes)
* * [misc]simplify:  iters left: 1 (311 enodes)
* [exit]simplify:  Simplified to (* (+ (* (log x) 3) (+ (log 16.0) (log x))) 3)
* [exit]simplify:  Simplified to (* (+ (* (log x) 3) (+ (log 16.0) (log x))) 3)
* * * * [misc]progress:  [ 51 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (exp (+ (* (log (pow x 3)) 3) (log (pow (* x 16.0) 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ (* (log (pow x 3)) 3) (log (pow (* x 16.0) 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (189 enodes)
* * [misc]simplify:  iters left: 2 (427 enodes)
* [exit]simplify:  Simplified to (* (+ (log (* 16.0 x)) (* (log x) 3)) 3)
* [exit]simplify:  Simplified to (* (+ (log (* 16.0 x)) (* (log x) 3)) 3)
* * * * [misc]progress:  [ 52 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (exp (+ (* (log (pow x 3)) 3) (* (log (* x 16.0)) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ (* (log (pow x 3)) 3) (* (log (* x 16.0)) 3))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (174 enodes)
* * [misc]simplify:  iters left: 1 (311 enodes)
* [exit]simplify:  Simplified to (* (+ (* (log x) 3) (+ (log 16.0) (log x))) 3)
* [exit]simplify:  Simplified to (* (+ (* (log x) 3) (+ (log 16.0) (log x))) 3)
* * * * [misc]progress:  [ 53 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (exp (+ (* (log (pow x 3)) 3) (* (log (* x 16.0)) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ (* (log (pow x 3)) 3) (* (log (* x 16.0)) 3))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (174 enodes)
* * [misc]simplify:  iters left: 1 (311 enodes)
* [exit]simplify:  Simplified to (* (+ (* (log x) 3) (+ (log 16.0) (log x))) 3)
* [exit]simplify:  Simplified to (* (+ (* (log x) 3) (+ (log 16.0) (log x))) 3)
* * * * [misc]progress:  [ 54 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (exp (+ (* (log (pow x 3)) 3) (log (pow (* x 16.0) 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ (* (log (pow x 3)) 3) (log (pow (* x 16.0) 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (189 enodes)
* * [misc]simplify:  iters left: 2 (427 enodes)
* [exit]simplify:  Simplified to (* (+ (log (* 16.0 x)) (* (log x) 3)) 3)
* [exit]simplify:  Simplified to (* (+ (log (* 16.0 x)) (* (log x) 3)) 3)
* * * * [misc]progress:  [ 55 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (exp (+ (log (pow (pow x 3) 3)) (* (log (* x 16.0)) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ (log (pow (pow x 3) 3)) (* (log (* x 16.0)) 3))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (166 enodes)
* * [misc]simplify:  iters left: 2 (348 enodes)
* [exit]simplify:  Simplified to (* (+ (* (log x) 3) (log (* 16.0 x))) 3)
* [exit]simplify:  Simplified to (* (+ (* (log x) 3) (log (* 16.0 x))) 3)
* * * * [misc]progress:  [ 56 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (exp (+ (log (pow (pow x 3) 3)) (* (log (* x 16.0)) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ (log (pow (pow x 3) 3)) (* (log (* x 16.0)) 3))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (166 enodes)
* * [misc]simplify:  iters left: 2 (348 enodes)
* [exit]simplify:  Simplified to (* (+ (* (log x) 3) (log (* 16.0 x))) 3)
* [exit]simplify:  Simplified to (* (+ (* (log x) 3) (log (* 16.0 x))) 3)
* * * * [misc]progress:  [ 57 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (exp (+ (log (pow (pow x 3) 3)) (log (pow (* x 16.0) 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ (log (pow (pow x 3) 3)) (log (pow (* x 16.0) 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (279 enodes)
* [exit]simplify:  Simplified to (* 3 (+ (log (* 16.0 x)) (* 3 (log x))))
* [exit]simplify:  Simplified to (* 3 (+ (log (* 16.0 x)) (* 3 (log x))))
* * * * [misc]progress:  [ 58 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (exp (log (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (log (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (448 enodes)
* [exit]simplify:  Simplified to (* 3 (+ (* 3 (log x)) (log (* x 16.0))))
* [exit]simplify:  Simplified to (* 3 (+ (* 3 (log x)) (log (* x 16.0))))
* * * * [misc]progress:  [ 59 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (log (exp (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (exp (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (371 enodes)
* [exit]simplify:  Simplified to (exp (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))
* [exit]simplify:  Simplified to (exp (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))
* * * * [misc]progress:  [ 60 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (pow (pow x 3) 3)) (* (* (pow (* x 16.0) 3) (pow (* x 16.0) 3)) (pow (* x 16.0) 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (pow (pow x 3) 3)) (* (* (pow (* x 16.0) 3) (pow (* x 16.0) 3)) (pow (* x 16.0) 3)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (* x 16.0) 3) 3) (pow (pow (pow x 3) 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow (* x 16.0) 3) 3) (pow (pow (pow x 3) 3) 3))
* * * * [misc]progress:  [ 61 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))) (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (360 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))
* [enter]simplify:  Simplifying (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (343 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))
* [exit]simplify:  Simplified to (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))
* * * * [misc]progress:  [ 62 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (cbrt (* (* (* (pow (pow x 3) 3) (pow (* x 16.0) 3)) (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* (* (pow (pow x 3) 3) (pow (* x 16.0) 3)) (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (134 enodes)
* [exit]simplify:  Simplified to (pow (* (pow (pow x 3) 3) (pow (* x 16.0) 3)) 3)
* [exit]simplify:  Simplified to (pow (* (pow (pow x 3) 3) (pow (* x 16.0) 3)) 3)
* * * * [misc]progress:  [ 63 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (sqrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (sqrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (sqrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (343 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))
* [exit]simplify:  Simplified to (sqrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))
* [enter]simplify:  Simplifying (sqrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (343 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))
* [exit]simplify:  Simplified to (sqrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))
* * * * [misc]progress:  [ 64 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* 1 (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 65 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (pow (pow x 3) 3) (pow x 3)) (pow 16.0 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow (pow x 3) 3) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* * [misc]simplify:  iters left: 1 (111 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 66 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (pow (pow x 3) 3) (* (* x 16.0) (* x 16.0))) (* x 16.0))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow (pow x 3) 3) (* (* x 16.0) (* x 16.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (* (* x 16.0) (* x 16.0)))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (* (* x 16.0) (* x 16.0)))
* * * * [misc]progress:  [ 67 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (pow (pow x 3) 3) (* (cbrt (pow (* x 16.0) 3)) (cbrt (pow (* x 16.0) 3)))) (cbrt (pow (* x 16.0) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow (pow x 3) 3) (* (cbrt (pow (* x 16.0) 3)) (cbrt (pow (* x 16.0) 3))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (* (* (* x 16.0) (* x 16.0)) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (* (* x 16.0) (* x 16.0)) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 68 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (pow (pow x 3) 3) (pow x 3)) (pow 16.0 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow (pow x 3) 3) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* * [misc]simplify:  iters left: 1 (111 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 69 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (pow (pow x 3) 3) (* x 16.0)) (* (* x 16.0) (* x 16.0)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow (pow x 3) 3) (* x 16.0))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* * [misc]simplify:  iters left: 1 (174 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) 16.0) (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (* (* (* x x) 16.0) (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 70 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (pow (pow x 3) 3) (sqrt (pow (* x 16.0) 3))) (sqrt (pow (* x 16.0) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow (pow x 3) 3) (sqrt (pow (* x 16.0) 3)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (187 enodes)
* * [misc]simplify:  iters left: 2 (315 enodes)
* * [misc]simplify:  iters left: 1 (375 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (sqrt (pow (* x 16.0) 3)))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (sqrt (pow (* x 16.0) 3)))
* * * * [misc]progress:  [ 71 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (pow (pow x 3) 3) 1) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow (pow x 3) 3) 1)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* * [misc]simplify:  iters left: 1 (100 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 72 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow (* x x) 3) (* (pow x 3) (pow (* x 16.0) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow x 3) (pow (* x 16.0) 3))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (59 enodes)
* * [misc]simplify:  iters left: 2 (213 enodes)
* * [misc]simplify:  iters left: 1 (422 enodes)
* [exit]simplify:  Simplified to (pow (* 16.0 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* 16.0 (* x x)) 3)
* * * * [misc]progress:  [ 73 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow (* (cbrt (pow x 3)) (cbrt (pow x 3))) 3) (* (pow (cbrt (pow x 3)) 3) (pow (* x 16.0) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow (cbrt (pow x 3)) 3) (pow (* x 16.0) 3))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (74 enodes)
* * [misc]simplify:  iters left: 2 (274 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* (* x x) (pow 16.0 3)))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* (* x x) (pow 16.0 3)))
* * * * [misc]progress:  [ 74 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow x 3) (* (pow (* x x) 3) (pow (* x 16.0) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow (* x x) 3) (pow (* x 16.0) 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (72 enodes)
* * [misc]simplify:  iters left: 2 (292 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 1 3)) (* (* 16.0 16.0) (* x 16.0)))
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 1 3)) (* (* 16.0 16.0) (* x 16.0)))
* * * * [misc]progress:  [ 75 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow (sqrt (pow x 3)) 3) (* (pow (sqrt (pow x 3)) 3) (pow (* x 16.0) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow (sqrt (pow x 3)) 3) (pow (* x 16.0) 3))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (58 enodes)
* * [misc]simplify:  iters left: 2 (179 enodes)
* [exit]simplify:  Simplified to (* (* (* 16.0 x) (* 16.0 x)) (* (* (pow x 3) (* 16.0 x)) (sqrt (pow x 3))))
* [exit]simplify:  Simplified to (* (* (* 16.0 x) (* 16.0 x)) (* (* (pow x 3) (* 16.0 x)) (sqrt (pow x 3))))
* * * * [misc]progress:  [ 76 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow 1 3) (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow (pow x 3) 3) (pow (* x 16.0) 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (345 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* x 16.0) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* x 16.0) 3))
* * * * [misc]progress:  [ 77 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow (* x 16.0) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow x 3) (pow (* x 16.0) 3))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (59 enodes)
* * [misc]simplify:  iters left: 2 (213 enodes)
* * [misc]simplify:  iters left: 1 (422 enodes)
* [exit]simplify:  Simplified to (pow (* 16.0 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* 16.0 (* x x)) 3)
* * * * [misc]progress:  [ 78 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (cbrt (pow (pow x 3) 3)) (cbrt (pow (pow x 3) 3))) (* (cbrt (pow (pow x 3) 3)) (pow (* x 16.0) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (pow x 3) 3)) (pow (* x 16.0) 3))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (257 enodes)
* * [misc]simplify:  iters left: 1 (398 enodes)
* [exit]simplify:  Simplified to (pow (* x (* 16.0 x)) 3)
* [exit]simplify:  Simplified to (pow (* x (* 16.0 x)) 3)
* * * * [misc]progress:  [ 79 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow (* x x) 3) (* (pow x 3) (pow (* x 16.0) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow x 3) (pow (* x 16.0) 3))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (59 enodes)
* * [misc]simplify:  iters left: 2 (213 enodes)
* * [misc]simplify:  iters left: 1 (422 enodes)
* [exit]simplify:  Simplified to (pow (* 16.0 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* 16.0 (* x x)) 3)
* * * * [misc]progress:  [ 80 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow (* (cbrt (pow x 3)) (cbrt (pow x 3))) 3) (* (pow (cbrt (pow x 3)) 3) (pow (* x 16.0) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow (cbrt (pow x 3)) 3) (pow (* x 16.0) 3))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (74 enodes)
* * [misc]simplify:  iters left: 2 (274 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* (* x x) (pow 16.0 3)))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* (* x x) (pow 16.0 3)))
* * * * [misc]progress:  [ 81 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow x 3) (* (pow (* x x) 3) (pow (* x 16.0) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow (* x x) 3) (pow (* x 16.0) 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (72 enodes)
* * [misc]simplify:  iters left: 2 (292 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 1 3)) (* (* 16.0 16.0) (* x 16.0)))
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 1 3)) (* (* 16.0 16.0) (* x 16.0)))
* * * * [misc]progress:  [ 82 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow (sqrt (pow x 3)) 3) (* (pow (sqrt (pow x 3)) 3) (pow (* x 16.0) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow (sqrt (pow x 3)) 3) (pow (* x 16.0) 3))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (58 enodes)
* * [misc]simplify:  iters left: 2 (179 enodes)
* [exit]simplify:  Simplified to (* (* (* 16.0 x) (* 16.0 x)) (* (* (pow x 3) (* 16.0 x)) (sqrt (pow x 3))))
* [exit]simplify:  Simplified to (* (* (* 16.0 x) (* 16.0 x)) (* (* (pow x 3) (* 16.0 x)) (sqrt (pow x 3))))
* * * * [misc]progress:  [ 83 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow 1 3) (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow (pow x 3) 3) (pow (* x 16.0) 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (345 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* x 16.0) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* x 16.0) 3))
* * * * [misc]progress:  [ 84 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow x 3) (* (* (pow x 3) (pow x 3)) (pow (* x 16.0) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) (pow (* x 16.0) 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (79 enodes)
* * [misc]simplify:  iters left: 2 (324 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (pow (* x 16.0) 3))
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (pow (* x 16.0) 3))
* * * * [misc]progress:  [ 85 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (sqrt (pow (pow x 3) 3)) (* (sqrt (pow (pow x 3) 3)) (pow (* x 16.0) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (sqrt (pow (pow x 3) 3)) (pow (* x 16.0) 3))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (77 enodes)
* * [misc]simplify:  iters left: 2 (199 enodes)
* * [misc]simplify:  iters left: 1 (362 enodes)
* [exit]simplify:  Simplified to (* (pow (* 16.0 x) 3) (sqrt (pow (pow x 3) 3)))
* [exit]simplify:  Simplified to (* (pow (* 16.0 x) 3) (sqrt (pow (pow x 3) 3)))
* * * * [misc]progress:  [ 86 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* 1 (* (pow (pow x 3) 3) (pow (* x 16.0) 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (pow (pow x 3) 3) (pow (* x 16.0) 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (345 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* x 16.0) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* x 16.0) 3))
* * * * [misc]progress:  [ 87 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow (* x 16.0) 3) (pow (pow x 3) 3))) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 88 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 1/3) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (pow (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9)) 1/3) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (121 enodes)
* * [misc]simplify:  iters left: 1 (222 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -48.0 x) x) 12.0) (cbrt (* (* (* 16.0 x) (* 16.0 x)) (* (* 16.0 x) (pow x 9)))))
* * * * [misc]progress:  [ 89 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (pow (* (exp (* 3 (- (log 16.0) (log (/ 1 x))))) (pow x 9)) 1/3) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (pow (* (exp (* 3 (- (log 16.0) (log (/ 1 x))))) (pow x 9)) 1/3) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (93 enodes)
* * [misc]simplify:  iters left: 2 (203 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (* (* 16.0 x) (pow x 9)) (* (* 16.0 x) (* 16.0 x)))) (+ (* -48.0 (* x x)) 12.0))
* * * * [misc]progress:  [ 90 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (exp (* 3 (- (log -16.0) (log (/ -1 x)))))) 1/3) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (exp (* 3 (- (log -16.0) (log (/ -1 x)))))) 1/3) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (146 enodes)
* * [misc]simplify:  iters left: 2 (348 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (/ (* (pow -16.0 3) (pow x 9)) (pow (/ -1 x) 3))) (+ 12.0 (* (* x x) -48.0)))
* * * * [misc]progress:  [ 91 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (* -48.0 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (* -48.0 (pow x 2))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (110 enodes)
* * [misc]simplify:  iters left: 3 (356 enodes)
* [exit]simplify:  Simplified to (+ (+ 12.0 (* (* x x) -48.0)) (cbrt (* (pow (* 16.0 x) 3) (pow (pow x 3) 3))))
* * * * [misc]progress:  [ 92 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (* -48.0 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (* -48.0 (pow x 2))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (110 enodes)
* * [misc]simplify:  iters left: 3 (356 enodes)
* [exit]simplify:  Simplified to (+ (+ 12.0 (* (* x x) -48.0)) (cbrt (* (pow (* 16.0 x) 3) (pow (pow x 3) 3))))
* * * * [misc]progress:  [ 93 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (* -48.0 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (* -48.0 (pow x 2))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (110 enodes)
* * [misc]simplify:  iters left: 3 (356 enodes)
* [exit]simplify:  Simplified to (+ (+ 12.0 (* (* x x) -48.0)) (cbrt (* (pow (* 16.0 x) 3) (pow (pow x 3) 3))))
* * * * [misc]progress:  [ 94 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (cbrt (* (pow x 9) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (cbrt (* (pow x 9) (pow (* x 16.0) 3))) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (150 enodes)
* * [misc]simplify:  iters left: 2 (346 enodes)
* * [misc]simplify:  iters left: 1 (472 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (* (pow x 9) (* x 16.0)) (* (* x 16.0) (* x 16.0)))) (+ (* x (* -48.0 x)) 12.0))
* * * * [misc]progress:  [ 95 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (cbrt (* (pow (pow (/ 1 x) -3) 3) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (cbrt (* (pow (pow (/ 1 x) -3) 3) (pow (* x 16.0) 3))) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (259 enodes)
* [exit]simplify:  Simplified to (+ (+ (* -48.0 (* x x)) 12.0) (cbrt (* (* (pow (/ 1 x) -3) (pow (/ 1 x) -3)) (* (pow (* 16.0 x) 3) (pow (/ 1 x) -3)))))
* * * * [misc]progress:  [ 96 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (cbrt (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (cbrt (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (pow (* x 16.0) 3))) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (214 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (pow (* 16.0 x) 3) (pow (exp 9) (log x)))) (+ (* x (* -48.0 x)) 12.0))
* * * * [misc]progress:  [ 97 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (cbrt (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (cbrt (* (exp (* 3 (+ (log x) (log 16.0)))) (pow x 9))) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (74 enodes)
* * [misc]simplify:  iters left: 2 (119 enodes)
* * [misc]simplify:  iters left: 1 (226 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (* (pow x 9) (* 16.0 x)) (* (* 16.0 x) (* 16.0 x)))) (+ (* (* -48.0 x) x) 12.0))
* * * * [misc]progress:  [ 98 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (cbrt (* (exp (* 3 (- (log 16.0) (log (/ 1 x))))) (pow x 9))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (cbrt (* (exp (* 3 (- (log 16.0) (log (/ 1 x))))) (pow x 9))) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (202 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (* (* 16.0 x) (* 16.0 x)) (* (* 16.0 x) (pow x 9)))) (+ 12.0 (* x (* -48.0 x))))
* * * * [misc]progress:  [ 99 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (cbrt (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (exp (* 3 (- (log -16.0) (log (/ -1 x))))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (cbrt (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (exp (* 3 (- (log -16.0) (log (/ -1 x))))))) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (143 enodes)
* * [misc]simplify:  iters left: 2 (348 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -48.0 x) x) 12.0) (cbrt (/ (* (pow x 9) (pow -16.0 3)) (pow (/ -1 x) 3))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 1 1 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 1 1 1)
* [misc]approximate:  Taking taylor expansion of (* x (* -48.0 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* x (* -48.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -48.0 x) in x
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x (* -48.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -48.0 x) in x
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -48.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 1) (* 0 0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 48.0)) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 48.0)) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (- 48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 48.0)) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 48.0)) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 48.0)) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 48.0)) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 48.0)) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 48.0)) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 48.0) (pow x 2)) into (* -48.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (/ 1 x) (* -48.0 (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* -48.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -48.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* -48.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -48.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -48.0 (pow (/ 1 (/ 1 x)) 2)) into (* -48.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -48.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -48.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -48.0 -1) into 48.0
* [misc]backup-simplify:  Simplify (* -1 48.0) into -48.0
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 48.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 48.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 48.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 48.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 48.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 48.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -48.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* -48.0 (pow x 2))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* (* 16.0 x) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* 16.0 x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* 16.0 x) in x
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* 16.0 x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* 16.0 x) in x
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 16.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 1) (* 0 0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x 4)) into (* 16.0 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* 16.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* 16.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 16.0 1) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (/ 16.0 (pow x 3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (/ 16.0 (pow (/ 1 x) 3)) (/ 1 (/ 1 x))) into (* 16.0 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* 16.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* 16.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 16.0 -1) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (* -16.0 (exp (* 3 (- (log -1) (log (/ 1 (- x))))))) (/ 1 (/ 1 (- x)))) into (* 16.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* -48.0 x)) 12.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* -48.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -48.0 x) in x
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 12.0 in x
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]taylor:  Taking taylor expansion of (* (* 16.0 x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* 16.0 x) in x
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* -48.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 12.0) into 12.0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (log 12.0) into (log 12.0)
* [misc]backup-simplify:  Simplify (* 3 (log 12.0)) into (* 3 (log 12.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 12.0))) into (pow 12.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* -48.0 x)) 12.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* -48.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -48.0 x) in x
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 12.0 in x
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]taylor:  Taking taylor expansion of (* (* 16.0 x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* 16.0 x) in x
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* -48.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 12.0) into 12.0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (log 12.0) into (log 12.0)
* [misc]backup-simplify:  Simplify (* 3 (log 12.0)) into (* 3 (log 12.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 12.0))) into (pow 12.0 3)
* [misc]backup-simplify:  Simplify (pow 12.0 3) into (pow 12.0 3)
* [misc]backup-simplify:  Simplify (+ (* -48.0 1) (* 0 0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 48.0)) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 12.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log 12.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 12.0))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 48.0)) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (- 48.0) 0) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (- 48.0) 0) into (- 48.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 12.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 48.0)) 1)) (pow 12.0 1)))) 2) into -4.0
* [misc]backup-simplify:  Simplify (+ (* 3 -4.0) (+ (* 0 0) (* 0 (log 12.0)))) into (- 12.0)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 12.0))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 12.0) 1) 1)))) into (* -12.0 (pow 12.0 3))
* [misc]backup-simplify:  Simplify (* -12.0 (pow 12.0 3)) into (* -12.0 (pow 12.0 3))
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 48.0)) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 16.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 12.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 48.0)) 1)) (pow 12.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 12.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -4.0) (+ (* 0 0) (* 0 (log 12.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 12.0))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 12.0) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 48.0)) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 1) (* 0 0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (+ 0 16.0) into 16.0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 12.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 48.0)) 1)) (pow 12.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 48.0)) 2)) (pow 12.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 12.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 16.0) 1)) (pow 12.0 1)))) 24) into (* 1/24 (- 32.0 (* 27648.0 (/ 1 (pow 12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* 3 (* 1/24 (- 32.0 (* 27648.0 (/ 1 (pow 12.0 2)))))) (+ (* 0 0) (+ (* 0 -4.0) (+ (* 0 0) (* 0 (log 12.0)))))) into (- 4.0 (* 3456.0 (/ 1 (pow 12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 12.0))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 12.0) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 12.0) 2) 2)) (* (/ (pow (- 4.0 (* 3456.0 (/ 1 (pow 12.0 2)))) 1) 1)))) into (* (pow 12.0 3) (- 76.0 (* 3456.0 (/ 1 (pow 12.0 2)))))
* [misc]backup-simplify:  Simplify (* (pow 12.0 3) (- 76.0 (* 3456.0 (/ 1 (pow 12.0 2))))) into (* (pow 12.0 3) (- 76.0 (* 3456.0 (/ 1 (pow 12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (pow 12.0 3) (- 76.0 (* 3456.0 (/ 1 (pow 12.0 2))))) (pow x 4)) (+ (* (* -12.0 (pow 12.0 3)) (pow x 2)) (pow 12.0 3))) into (- (+ (* 131328.0 (pow x 4)) 1728.0) (+ (* 20736.0 (pow x 2)) (* 5971968.0 (/ (pow x 4) (pow 12.0 2)))))
* [misc]approximate:  Taking taylor expansion of (pow (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* -48.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -48.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 12.0 in x
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]taylor:  Taking taylor expansion of (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* 16.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (+ -48.0 0) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (- 48.0) 0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 48.0)) (* 2 (log x)))) into (* 3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (pow (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* -48.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -48.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 12.0 in x
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]taylor:  Taking taylor expansion of (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* 16.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (+ -48.0 0) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (- 48.0) 0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 48.0)) (* 2 (log x)))) into (* 3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 16.0 1) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (+ 0 (/ 16.0 (pow x 3))) into (* 16.0 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 1)) (pow (- 48.0) 1)))) 1) into (/ -0.3333333333333333 (pow x 3))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (- (* 1.0 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 1.0 (/ 1 (pow x 3)))) 1) 1)))) into (* -1.0 (/ (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))
* [misc]backup-simplify:  Simplify (* -1.0 (/ (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3))) into (* -1.0 (/ (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 12.0) into 12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 48.0) 1)))) 2) into (* -1/2 (+ 0.5 (* 256.0 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (* -1/2 (+ 0.5 (* 256.0 (/ 1 (* (pow -48.0 2) (pow x 6))))))) (+ (* 0 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (+ 0.75 (* 384.0 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 1.0 (/ 1 (pow x 3)))) 2) 2)) (* (/ (pow (- (+ 0.75 (* 384.0 (/ 1 (* (pow -48.0 2) (pow x 6)))))) 1) 1)))) into (* (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.5 (/ 1 (pow x 6))) (+ 0.75 (* 384.0 (/ 1 (* (pow -48.0 2) (pow x 6)))))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.5 (/ 1 (pow x 6))) (+ 0.75 (* 384.0 (/ 1 (* (pow -48.0 2) (pow x 6))))))) into (* (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.5 (/ 1 (pow x 6))) (+ 0.75 (* 384.0 (/ 1 (* (pow -48.0 2) (pow x 6)))))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (- (* 0.5 (/ 1 (pow (/ 1 x) 6))) (+ 0.75 (* 384.0 (/ 1 (* (pow -48.0 2) (pow (/ 1 x) 6))))))) (pow (/ 1 x) 2)) (+ (* (* -1.0 (/ (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 3))) (/ 1 x)) (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))))) into (- (+ (* 0.5 (* (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.75 (/ (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (+ (* 1.0 (* (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 384.0 (/ (* (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2))))))
* [misc]approximate:  Taking taylor expansion of (pow (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -48.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 12.0 in x
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]taylor:  Taking taylor expansion of (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* 16.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -48.0 -1) into 48.0
* [misc]backup-simplify:  Simplify (* -1 48.0) into -48.0
* [misc]backup-simplify:  Simplify (+ -48.0 0) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (- 48.0) 0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 48.0)) (* 2 (log x)))) into (* 3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (pow (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -48.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 12.0 in x
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]taylor:  Taking taylor expansion of (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* 16.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -48.0 -1) into 48.0
* [misc]backup-simplify:  Simplify (* -1 48.0) into -48.0
* [misc]backup-simplify:  Simplify (+ -48.0 0) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (- 48.0) 0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 48.0)) (* 2 (log x)))) into (* 3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 48.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 16.0 -1) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ 0 (* -16.0 (exp (* 3 (- (log -1) (log x)))))) into (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 1)) (pow (- 48.0) 1)))) 1) into (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (* 1.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 1.0 (exp (* 3 (- (log -1) (log x))))) 1) 1)))) into (* 1.0 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log (- 48.0)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (* 1.0 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))))) into (* 1.0 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log (- 48.0)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 48.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 12.0) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 48.0) 1)))) 2) into (* -1/2 (+ 0.5 (* 256.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (* -1/2 (+ 0.5 (* 256.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))))) (+ (* 0 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (+ 0.75 (* 384.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 1.0 (exp (* 3 (- (log -1) (log x))))) 2) 2)) (* (/ (pow (- (+ 0.75 (* 384.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2))))) 1) 1)))) into (* (- (* 0.5 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (+ 0.75 (* 384.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2))))) (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* (- (* 0.5 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (+ 0.75 (* 384.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2))))) (exp (* 3 (- (log (- 48.0)) (* 2 (log x)))))) into (* (- (* 0.5 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (+ 0.75 (* 384.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2))))) (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- (* 0.5 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2)) (+ 0.75 (* 384.0 (/ (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow -48.0 2))))) (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x)))))))) (pow (/ 1 (- x)) 2)) (+ (* (* 1.0 (* (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))))) (/ 1 (- x))) (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))))) into (- (+ (* 0.5 (/ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ -1 x))))))) (pow x 2))) (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ -1 x))))))) (+ (* 0.75 (/ (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow x 2))) (+ (* 1.0 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ -1 x))))))) x)) (* 384.0 (/ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ -1 x))))))) (* (pow -48.0 2) (pow x 2)))))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)) in x
* [misc]taylor:  Rewrote expression to (pow (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* -48.0 x)) 12.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* -48.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -48.0 x) in x
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 12.0 in x
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]taylor:  Taking taylor expansion of (* (* 16.0 x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* 16.0 x) in x
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* -48.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 12.0) into 12.0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (log 12.0) into (log 12.0)
* [misc]backup-simplify:  Simplify (* 3 (log 12.0)) into (* 3 (log 12.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 12.0))) into (pow 12.0 3)
* [misc]backup-simplify:  Simplify (log (pow 12.0 3)) into (log (pow 12.0 3))
* [misc]backup-simplify:  Simplify (* 1/3 (log (pow 12.0 3))) into (* 1/3 (log (pow 12.0 3)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (pow 12.0 3)))) into (pow (pow 12.0 3) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)) in x
* [misc]taylor:  Rewrote expression to (pow (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* -48.0 x)) 12.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* -48.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -48.0 x) in x
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 12.0 in x
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]taylor:  Taking taylor expansion of (* (* 16.0 x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* 16.0 x) in x
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* -48.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 12.0) into 12.0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (log 12.0) into (log 12.0)
* [misc]backup-simplify:  Simplify (* 3 (log 12.0)) into (* 3 (log 12.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 12.0))) into (pow 12.0 3)
* [misc]backup-simplify:  Simplify (log (pow 12.0 3)) into (log (pow 12.0 3))
* [misc]backup-simplify:  Simplify (* 1/3 (log (pow 12.0 3))) into (* 1/3 (log (pow 12.0 3)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (pow 12.0 3)))) into (pow (pow 12.0 3) 1/3)
* [misc]backup-simplify:  Simplify (pow (pow 12.0 3) 1/3) into (pow (pow 12.0 3) 1/3)
* [misc]backup-simplify:  Simplify (+ (* -48.0 1) (* 0 0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 48.0)) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 12.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log 12.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 12.0))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow 12.0 3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (pow 12.0 3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow 12.0 3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 48.0)) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (- 48.0) 0) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (- 48.0) 0) into (- 48.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 12.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 48.0)) 1)) (pow 12.0 1)))) 2) into -4.0
* [misc]backup-simplify:  Simplify (+ (* 3 -4.0) (+ (* 0 0) (* 0 (log 12.0)))) into (- 12.0)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 12.0))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 12.0) 1) 1)))) into (* -12.0 (pow 12.0 3))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow 12.0 3) 2))) (* 1 (/ (* 1 (pow (* 2 (* -12.0 (pow 12.0 3))) 1)) (pow (pow 12.0 3) 1)))) 2) into -12.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -12.0) (+ (* 0 0) (* 0 (log (pow 12.0 3))))) into (- 4.0)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow 12.0 3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 4.0) 1) 1)))) into (* -4.0 12.0)
* [misc]backup-simplify:  Simplify (* -4.0 12.0) into -48.0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 48.0)) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 16.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 12.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 48.0)) 1)) (pow 12.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 12.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -4.0) (+ (* 0 0) (* 0 (log 12.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 12.0))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 12.0) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow 12.0 3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -12.0 (pow 12.0 3))) 1)) (pow (pow 12.0 3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow 12.0 3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -12.0) (+ (* 0 0) (* 0 (log (pow 12.0 3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow 12.0 3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 4.0) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 48.0)) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 1) (* 0 0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (+ 0 16.0) into 16.0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 12.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 48.0)) 1)) (pow 12.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 48.0)) 2)) (pow 12.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 12.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 16.0) 1)) (pow 12.0 1)))) 24) into (* 1/24 (- 32.0 (* 27648.0 (/ 1 (pow 12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* 3 (* 1/24 (- 32.0 (* 27648.0 (/ 1 (pow 12.0 2)))))) (+ (* 0 0) (+ (* 0 -4.0) (+ (* 0 0) (* 0 (log 12.0)))))) into (- 4.0 (* 3456.0 (/ 1 (pow 12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 12.0))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 12.0) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 12.0) 2) 2)) (* (/ (pow (- 4.0 (* 3456.0 (/ 1 (pow 12.0 2)))) 1) 1)))) into (* (pow 12.0 3) (- 76.0 (* 3456.0 (/ 1 (pow 12.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow 12.0 3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -12.0 (pow 12.0 3))) 1)) (pow (pow 12.0 3) 3))) (* -3 (/ (* 1 (pow (* 2 (* -12.0 (pow 12.0 3))) 2)) (pow (pow 12.0 3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow 12.0 3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (pow 12.0 3) (- 76.0 (* 3456.0 (/ 1 (pow 12.0 2)))))) 1)) (pow (pow 12.0 3) 1)))) 24) into (* 1/24 (- 96.0 (* 82944.0 (/ 1 (pow 12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/24 (- 96.0 (* 82944.0 (/ 1 (pow 12.0 2)))))) (+ (* 0 0) (+ (* 0 -12.0) (+ (* 0 0) (* 0 (log (pow 12.0 3))))))) into (- 1.3333333333333333 (* 1152.0 (/ 1 (pow 12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow 12.0 3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 4.0) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 4.0) 2) 2)) (* (/ (pow (- 1.3333333333333333 (* 1152.0 (/ 1 (pow 12.0 2)))) 1) 1)))) into (* 12.0 (- 9.333333333333334 (* 1152.0 (/ 1 (pow 12.0 2)))))
* [misc]backup-simplify:  Simplify (* 12.0 (- 9.333333333333334 (* 1152.0 (/ 1 (pow 12.0 2))))) into (* 12.0 (- 9.333333333333334 (* 1152.0 (/ 1 (pow 12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* 12.0 (- 9.333333333333334 (* 1152.0 (/ 1 (pow 12.0 2))))) (pow x 4)) (+ (* -48.0 (pow x 2)) (pow (pow 12.0 3) 1/3))) into (- (+ (pow (pow 12.0 3) 1/3) (* 112.0 (pow x 4))) (+ (* 48.0 (pow x 2)) (* 13824.0 (/ (pow x 4) (pow 12.0 2)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (pow (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))) 3)) in x
* [misc]taylor:  Rewrote expression to (pow (pow (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))) 3) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))) 3))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* -48.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -48.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 12.0 in x
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]taylor:  Taking taylor expansion of (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* 16.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (+ -48.0 0) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (- 48.0) 0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 48.0)) (* 2 (log x)))) into (* 3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log (- 48.0)) (* 2 (log x)))))) into (* 3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 3 (- (log (- 48.0)) (* 2 (log x))))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (exp (- (log (- 48.0)) (* 2 (log x)))) into (exp (- (log (- 48.0)) (* 2 (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))) 3)) in x
* [misc]taylor:  Rewrote expression to (pow (pow (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))) 3) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))) 3))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* -48.0 (/ 1 x))) 12.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* -48.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -48.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 12.0 in x
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]taylor:  Taking taylor expansion of (* (* 16.0 (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* 16.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (+ -48.0 0) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (- 48.0) 0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 48.0)) (* 2 (log x)))) into (* 3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log (- 48.0)) (* 2 (log x)))))) into (* 3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 3 (- (log (- 48.0)) (* 2 (log x))))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (exp (- (log (- 48.0)) (* 2 (log x)))) into (exp (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (- (log (- 48.0)) (* 2 (log x)))) into (exp (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 16.0 1) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (+ 0 (/ 16.0 (pow x 3))) into (* 16.0 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 1)) (pow (- 48.0) 1)))) 1) into (/ -0.3333333333333333 (pow x 3))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (- (* 1.0 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 1.0 (/ 1 (pow x 3)))) 1) 1)))) into (* -1.0 (/ (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* -1.0 (/ (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))) 1)) (pow (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) 1)))) 1) into (/ -1.0 (pow x 3))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.0 (pow x 3))) (* 0 (* 3 (- (log (- 48.0)) (* 2 (log x)))))) into (- (* 0.3333333333333333 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (- (log (- 48.0)) (* 2 (log x)))) (+ (* (/ (pow (- (* 0.3333333333333333 (/ 1 (pow x 3)))) 1) 1)))) into (* -0.3333333333333333 (/ (exp (- (log (- 48.0)) (* 2 (log x)))) (pow x 3)))
* [misc]backup-simplify:  Simplify (* -0.3333333333333333 (/ (exp (- (log (- 48.0)) (* 2 (log x)))) (pow x 3))) into (* -0.3333333333333333 (/ (exp (- (log (- 48.0)) (* 2 (log x)))) (pow x 3)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 12.0) into 12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 48.0) 1)))) 2) into (* -1/2 (+ 0.5 (* 256.0 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (* -1/2 (+ 0.5 (* 256.0 (/ 1 (* (pow -48.0 2) (pow x 6))))))) (+ (* 0 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (+ 0.75 (* 384.0 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 1.0 (/ 1 (pow x 3)))) 2) 2)) (* (/ (pow (- (+ 0.75 (* 384.0 (/ 1 (* (pow -48.0 2) (pow x 6)))))) 1) 1)))) into (* (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.5 (/ 1 (pow x 6))) (+ 0.75 (* 384.0 (/ 1 (* (pow -48.0 2) (pow x 6)))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* -1.0 (/ (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))) 2)) (pow (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.5 (/ 1 (pow x 6))) (+ 0.75 (* 384.0 (/ 1 (* (pow -48.0 2) (pow x 6)))))))) 1)) (pow (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) 1)))) 2) into (* -1/2 (+ 1.5 (* 768.0 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* -1/2 (+ 1.5 (* 768.0 (/ 1 (* (pow -48.0 2) (pow x 6))))))) (+ (* 0 (/ -1.0 (pow x 3))) (* 0 (* 3 (- (log (- 48.0)) (* 2 (log x))))))) into (- (+ 0.25 (* 128.0 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (* (exp (- (log (- 48.0)) (* 2 (log x)))) (+ (* (/ (pow (- (* 0.3333333333333333 (/ 1 (pow x 3)))) 2) 2)) (* (/ (pow (- (+ 0.25 (* 128.0 (/ 1 (* (pow -48.0 2) (pow x 6)))))) 1) 1)))) into (* (- (* 0.05555555555555555 (/ 1 (pow x 6))) (+ 0.25 (* 128.0 (/ 1 (* (pow -48.0 2) (pow x 6)))))) (exp (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* (- (* 0.05555555555555555 (/ 1 (pow x 6))) (+ 0.25 (* 128.0 (/ 1 (* (pow -48.0 2) (pow x 6)))))) (exp (- (log (- 48.0)) (* 2 (log x))))) into (* (- (* 0.05555555555555555 (/ 1 (pow x 6))) (+ 0.25 (* 128.0 (/ 1 (* (pow -48.0 2) (pow x 6)))))) (exp (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (* (- (* 0.05555555555555555 (/ 1 (pow (/ 1 x) 6))) (+ 0.25 (* 128.0 (/ 1 (* (pow -48.0 2) (pow (/ 1 x) 6)))))) (exp (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 2)) (+ (* (* -0.3333333333333333 (/ (exp (- (log (- 48.0)) (* 2 (log (/ 1 x))))) (pow (/ 1 x) 3))) (/ 1 x)) (exp (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) into (- (+ (exp (- (log (- 48.0)) (* 2 (log (/ 1 x))))) (* 0.05555555555555555 (* (exp (- (log (- 48.0)) (* 2 (log (/ 1 x))))) (pow x 4)))) (+ (* 0.3333333333333333 (* (exp (- (log (- 48.0)) (* 2 (log (/ 1 x))))) (pow x 2))) (+ (* 128.0 (/ (* (exp (- (log (- 48.0)) (* 2 (log (/ 1 x))))) (pow x 4)) (pow -48.0 2))) (* 0.25 (/ (exp (- (log (- 48.0)) (* 2 (log (/ 1 x))))) (pow x 2))))))
* [misc]approximate:  Taking taylor expansion of (cbrt (pow (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))) 3)) in x
* [misc]taylor:  Rewrote expression to (pow (pow (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))) 3) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))) 3))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -48.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 12.0 in x
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]taylor:  Taking taylor expansion of (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* 16.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -48.0 -1) into 48.0
* [misc]backup-simplify:  Simplify (* -1 48.0) into -48.0
* [misc]backup-simplify:  Simplify (+ -48.0 0) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (- 48.0) 0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 48.0)) (* 2 (log x)))) into (* 3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log (- 48.0)) (* 2 (log x)))))) into (* 3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 3 (- (log (- 48.0)) (* 2 (log x))))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (exp (- (log (- 48.0)) (* 2 (log x)))) into (exp (- (log (- 48.0)) (* 2 (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))) 3)) in x
* [misc]taylor:  Rewrote expression to (pow (pow (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))) 3) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))) 3))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) 12.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* -48.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -48.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 12.0 in x
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]taylor:  Taking taylor expansion of (* (* 16.0 (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* 16.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -48.0 -1) into 48.0
* [misc]backup-simplify:  Simplify (* -1 48.0) into -48.0
* [misc]backup-simplify:  Simplify (+ -48.0 0) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (- 48.0) 0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 48.0)) (* 2 (log x)))) into (* 3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log (- 48.0)) (* 2 (log x)))))) into (* 3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 3 (- (log (- 48.0)) (* 2 (log x))))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (exp (- (log (- 48.0)) (* 2 (log x)))) into (exp (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (- (log (- 48.0)) (* 2 (log x)))) into (exp (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 48.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 16.0 -1) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ 0 (* -16.0 (exp (* 3 (- (log -1) (log x)))))) into (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 1)) (pow (- 48.0) 1)))) 1) into (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (* 1.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 1.0 (exp (* 3 (- (log -1) (log x))))) 1) 1)))) into (* 1.0 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log (- 48.0)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* 1.0 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log (- 48.0)) (* 2 (log x)))))))) 1)) (pow (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) 1)))) 1) into (* 1.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1.0 (exp (* 3 (- (log -1) (log x)))))) (* 0 (* 3 (- (log (- 48.0)) (* 2 (log x)))))) into (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (- (log (- 48.0)) (* 2 (log x)))) (+ (* (/ (pow (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x))))) 1) 1)))) into (* 0.3333333333333333 (* (exp (* 3 (- (log -1) (log x)))) (exp (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* 0.3333333333333333 (* (exp (* 3 (- (log -1) (log x)))) (exp (- (log (- 48.0)) (* 2 (log x)))))) into (* 0.3333333333333333 (* (exp (* 3 (- (log -1) (log x)))) (exp (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 48.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 12.0) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 48.0) 1)))) 2) into (* -1/2 (+ 0.5 (* 256.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (* -1/2 (+ 0.5 (* 256.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))))) (+ (* 0 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (+ 0.75 (* 384.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 1.0 (exp (* 3 (- (log -1) (log x))))) 2) 2)) (* (/ (pow (- (+ 0.75 (* 384.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2))))) 1) 1)))) into (* (- (* 0.5 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (+ 0.75 (* 384.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2))))) (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* 1.0 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log (- 48.0)) (* 2 (log x)))))))) 2)) (pow (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* (- (* 0.5 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (+ 0.75 (* 384.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2))))) (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))))) 1)) (pow (exp (* 3 (- (log (- 48.0)) (* 2 (log x))))) 1)))) 2) into (* -1/2 (+ 1.5 (* 768.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* -1/2 (+ 1.5 (* 768.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))))) (+ (* 0 (* 1.0 (exp (* 3 (- (log -1) (log x)))))) (* 0 (* 3 (- (log (- 48.0)) (* 2 (log x))))))) into (- (+ 0.25 (* 128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))))
* [misc]backup-simplify:  Simplify (* (exp (- (log (- 48.0)) (* 2 (log x)))) (+ (* (/ (pow (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x))))) 2) 2)) (* (/ (pow (- (+ 0.25 (* 128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2))))) 1) 1)))) into (* (- (* 0.05555555555555555 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (+ 0.25 (* 128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2))))) (exp (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* (- (* 0.05555555555555555 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (+ 0.25 (* 128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2))))) (exp (- (log (- 48.0)) (* 2 (log x))))) into (* (- (* 0.05555555555555555 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (+ 0.25 (* 128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2))))) (exp (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (* (- (* 0.05555555555555555 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2)) (+ 0.25 (* 128.0 (/ (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow -48.0 2))))) (exp (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))) (pow (/ 1 (- x)) 2)) (+ (* (* 0.3333333333333333 (* (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (exp (- (log (- 48.0)) (* 2 (log (/ 1 (- x)))))))) (/ 1 (- x))) (exp (- (log (- 48.0)) (* 2 (log (/ 1 (- x)))))))) into (- (+ (* 0.05555555555555555 (/ (* (exp (- (log (- 48.0)) (* 2 (log (/ -1 x))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2))) (exp (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (+ (* 128.0 (/ (* (exp (- (log (- 48.0)) (* 2 (log (/ -1 x))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (+ (* 0.3333333333333333 (/ (* (exp (- (log (- 48.0)) (* 2 (log (/ -1 x))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x)) (* 0.25 (/ (exp (- (log (- 48.0)) (* 2 (log (/ -1 x))))) (pow x 2))))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (pow (* x (* -48.0 x)) 1) 12.0) (* (* 16.0 x) (pow x 3))) 3)))>
* * * * [misc]progress:  [ 2 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (exp (log (* x (* -48.0 x)))) 12.0) (* (* 16.0 x) (pow x 3))) 3)))>
* [enter]simplify:  Simplifying (log (* x (* -48.0 x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* [exit]simplify:  Simplified to (log (* x (* x -48.0)))
* [exit]simplify:  Simplified to (log (* x (* x -48.0)))
* * * * [misc]progress:  [ 3 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (log (exp (* x (* -48.0 x)))) 12.0) (* (* 16.0 x) (pow x 3))) 3)))>
* [enter]simplify:  Simplifying (exp (* x (* -48.0 x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (* x -48.0))
* [exit]simplify:  Simplified to (pow (exp x) (* x -48.0))
* * * * [misc]progress:  [ 4 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* (* (cbrt (* x (* -48.0 x))) (cbrt (* x (* -48.0 x)))) (cbrt (* x (* -48.0 x)))) 12.0) (* (* 16.0 x) (pow x 3))) 3)))>
* [enter]simplify:  Simplifying (* (cbrt (* x (* -48.0 x))) (cbrt (* x (* -48.0 x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -48.0))) (cbrt (* x (* x -48.0))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -48.0))) (cbrt (* x (* x -48.0))))
* [enter]simplify:  Simplifying (cbrt (* x (* -48.0 x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (* x -48.0)))
* [exit]simplify:  Simplified to (cbrt (* x (* x -48.0)))
* * * * [misc]progress:  [ 5 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (cbrt (* (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* x (* -48.0 x)))) 12.0) (* (* 16.0 x) (pow x 3))) 3)))>
* [enter]simplify:  Simplifying (* (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* x (* -48.0 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (222 enodes)
* * [misc]simplify:  iters left: 1 (355 enodes)
* [exit]simplify:  Simplified to (pow (* x (* x -48.0)) 3)
* [exit]simplify:  Simplified to (pow (* x (* x -48.0)) 3)
* * * * [misc]progress:  [ 6 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* (sqrt (* x (* -48.0 x))) (sqrt (* x (* -48.0 x)))) 12.0) (* (* 16.0 x) (pow x 3))) 3)))>
* [enter]simplify:  Simplifying (sqrt (* x (* -48.0 x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x -48.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x -48.0)))
* [enter]simplify:  Simplifying (sqrt (* x (* -48.0 x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x -48.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x -48.0)))
* * * * [misc]progress:  [ 7 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* 1 (* x (* -48.0 x))) 12.0) (* (* 16.0 x) (pow x 3))) 3)))>
* * * * [misc]progress:  [ 8 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* (* x -48.0) x) 12.0) (* (* 16.0 x) (pow x 3))) 3)))>
* [enter]simplify:  Simplifying (* x -48.0)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* x -48.0)
* [exit]simplify:  Simplified to (* x -48.0)
* * * * [misc]progress:  [ 9 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* (* -48.0 x) x) 12.0) (* (* 16.0 x) (pow x 3))) 3)))>
* * * * [misc]progress:  [ 10 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (pow (* (* 16.0 x) (pow x 3)) 1)) 3)))>
* * * * [misc]progress:  [ 11 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (exp (+ (log (* 16.0 x)) (* (log x) 3)))) 3)))>
* [enter]simplify:  Simplifying (+ (log (* 16.0 x)) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* 16.0 x)))
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* 16.0 x)))
* * * * [misc]progress:  [ 12 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (exp (+ (log (* 16.0 x)) (log (pow x 3))))) 3)))>
* [enter]simplify:  Simplifying (+ (log (* 16.0 x)) (log (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* * [misc]simplify:  iters left: 1 (54 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (* 16.0 x)))
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (* 16.0 x)))
* * * * [misc]progress:  [ 13 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (exp (log (* (* 16.0 x) (pow x 3))))) 3)))>
* [enter]simplify:  Simplifying (log (* (* 16.0 x) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (84 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (* 16.0 x)))
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (* 16.0 x)))
* * * * [misc]progress:  [ 14 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (log (exp (* (* 16.0 x) (pow x 3))))) 3)))>
* [enter]simplify:  Simplifying (exp (* (* 16.0 x) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* * [misc]simplify:  iters left: 1 (48 enodes)
* [exit]simplify:  Simplified to (exp (* (pow x 3) (* 16.0 x)))
* [exit]simplify:  Simplified to (exp (* (pow x 3) (* 16.0 x)))
* * * * [misc]progress:  [ 15 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (cbrt (* (* (* (* 16.0 x) (* 16.0 x)) (* 16.0 x)) (* (* (pow x 3) (pow x 3)) (pow x 3))))) 3)))>
* [enter]simplify:  Simplifying (* (* (* (* 16.0 x) (* 16.0 x)) (* 16.0 x)) (* (* (pow x 3) (pow x 3)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (370 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* 16.0 x) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* 16.0 x) 3))
* * * * [misc]progress:  [ 16 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* (cbrt (* (* 16.0 x) (pow x 3))) (cbrt (* (* 16.0 x) (pow x 3)))) (cbrt (* (* 16.0 x) (pow x 3))))) 3)))>
* [enter]simplify:  Simplifying (* (cbrt (* (* 16.0 x) (pow x 3))) (cbrt (* (* 16.0 x) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* 16.0 x))) (cbrt (* (pow x 3) (* 16.0 x))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* 16.0 x))) (cbrt (* (pow x 3) (* 16.0 x))))
* [enter]simplify:  Simplifying (cbrt (* (* 16.0 x) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (38 enodes)
* * [misc]simplify:  iters left: 1 (41 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* 16.0 x)))
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* 16.0 x)))
* * * * [misc]progress:  [ 17 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (cbrt (* (* (* (* 16.0 x) (pow x 3)) (* (* 16.0 x) (pow x 3))) (* (* 16.0 x) (pow x 3))))) 3)))>
* [enter]simplify:  Simplifying (* (* (* (* 16.0 x) (pow x 3)) (* (* 16.0 x) (pow x 3))) (* (* 16.0 x) (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (77 enodes)
* * [misc]simplify:  iters left: 3 (288 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* 16.0 x)) 3)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* 16.0 x)) 3)
* * * * [misc]progress:  [ 18 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (sqrt (* (* 16.0 x) (pow x 3))) (sqrt (* (* 16.0 x) (pow x 3))))) 3)))>
* [enter]simplify:  Simplifying (sqrt (* (* 16.0 x) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (38 enodes)
* * [misc]simplify:  iters left: 1 (41 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* 16.0 x)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* 16.0 x)))
* [enter]simplify:  Simplifying (sqrt (* (* 16.0 x) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (38 enodes)
* * [misc]simplify:  iters left: 1 (41 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* 16.0 x)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* 16.0 x)))
* * * * [misc]progress:  [ 19 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* 1 (* (* 16.0 x) (pow x 3)))) 3)))>
* * * * [misc]progress:  [ 20 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* (* 16.0 x) (* x x)) x)) 3)))>
* [enter]simplify:  Simplifying (* (* 16.0 x) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* [exit]simplify:  Simplified to (* (* 16.0 x) (* x x))
* [exit]simplify:  Simplified to (* (* 16.0 x) (* x x))
* * * * [misc]progress:  [ 21 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* (* 16.0 x) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3)))) 3)))>
* [enter]simplify:  Simplifying (* (* 16.0 x) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (63 enodes)
* * [misc]simplify:  iters left: 1 (78 enodes)
* [exit]simplify:  Simplified to (* (* 16.0 x) (* x x))
* [exit]simplify:  Simplified to (* (* 16.0 x) (* x x))
* * * * [misc]progress:  [ 22 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* (* 16.0 x) x) (* x x))) 3)))>
* [enter]simplify:  Simplifying (* (* 16.0 x) x)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* 16.0 (* x x))
* [exit]simplify:  Simplified to (* 16.0 (* x x))
* * * * [misc]progress:  [ 23 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* (* 16.0 x) (sqrt (pow x 3))) (sqrt (pow x 3)))) 3)))>
* [enter]simplify:  Simplifying (* (* 16.0 x) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (* 16.0 x) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (* 16.0 x) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 24 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* (* 16.0 x) 1) (pow x 3))) 3)))>
* [enter]simplify:  Simplifying (* (* 16.0 x) 1)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (19 enodes)
* [exit]simplify:  Simplified to (* 16.0 x)
* [exit]simplify:  Simplified to (* 16.0 x)
* * * * [misc]progress:  [ 25 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* 16.0 (* x (pow x 3)))) 3)))>
* [enter]simplify:  Simplifying (* x (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 26 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (pow x 3) (* 16.0 x))) 3)))>
* * * * [misc]progress:  [ 27 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (exp (* (log (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3))))>
* [enter]simplify:  Simplifying (* (log (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3)
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (125 enodes)
* * [misc]simplify:  iters left: 1 (159 enodes)
* [exit]simplify:  Simplified to (* 3 (log (+ (* x (* x -48.0)) (+ 12.0 (* (* x 16.0) (pow x 3))))))
* [exit]simplify:  Simplified to (* 3 (log (+ (* x (* x -48.0)) (+ 12.0 (* (* x 16.0) (pow x 3))))))
* * * * [misc]progress:  [ 28 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (exp (* (log (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3))))>
* [enter]simplify:  Simplifying (* (log (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3)
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (125 enodes)
* * [misc]simplify:  iters left: 1 (159 enodes)
* [exit]simplify:  Simplified to (* 3 (log (+ (* x (* x -48.0)) (+ 12.0 (* (* x 16.0) (pow x 3))))))
* [exit]simplify:  Simplified to (* 3 (log (+ (* x (* x -48.0)) (+ 12.0 (* (* x 16.0) (pow x 3))))))
* * * * [misc]progress:  [ 29 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) (* 1 3))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 30 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (pow (* (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))) 3) (pow (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))) 3)
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (151 enodes)
* [exit]simplify:  Simplified to (* (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* [exit]simplify:  Simplified to (* (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* [enter]simplify:  Simplifying (pow (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3)
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (86 enodes)
* * [misc]simplify:  iters left: 2 (130 enodes)
* * [misc]simplify:  iters left: 1 (164 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0))))
* [exit]simplify:  Simplified to (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0))))
* * * * [misc]progress:  [ 31 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (pow (sqrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3) (pow (sqrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3))))>
* [enter]simplify:  Simplifying (pow (sqrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3)
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (230 enodes)
* * [misc]simplify:  iters left: 1 (471 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ 12.0 (+ (* x (* x -48.0)) (* (* x 16.0) (pow x 3))))) (+ 12.0 (+ (* x (* x -48.0)) (* (* x 16.0) (pow x 3)))))
* [exit]simplify:  Simplified to (* (sqrt (+ 12.0 (+ (* x (* x -48.0)) (* (* x 16.0) (pow x 3))))) (+ 12.0 (+ (* x (* x -48.0)) (* (* x 16.0) (pow x 3)))))
* [enter]simplify:  Simplifying (pow (sqrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3)
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (230 enodes)
* * [misc]simplify:  iters left: 1 (471 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ 12.0 (+ (* x (* x -48.0)) (* (* x 16.0) (pow x 3))))) (+ 12.0 (+ (* x (* x -48.0)) (* (* x 16.0) (pow x 3)))))
* [exit]simplify:  Simplified to (* (sqrt (+ 12.0 (+ (* x (* x -48.0)) (* (* x 16.0) (pow x 3))))) (+ 12.0 (+ (* x (* x -48.0)) (* (* x 16.0) (pow x 3)))))
* * * * [misc]progress:  [ 32 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (pow 1 3) (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))))>
* [enter]simplify:  Simplifying (pow 1 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (453 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))) 3)
* * * * [misc]progress:  [ 33 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))) (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))))
* [exit]simplify:  Simplified to (* (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))) (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))))
* * * * [misc]progress:  [ 34 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (pow (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3) 1)))>
* * * * [misc]progress:  [ 35 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (exp (log (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))))>
* [enter]simplify:  Simplifying (log (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (463 enodes)
* [exit]simplify:  Simplified to (* (log (+ (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0))) 12.0)) 3)
* [exit]simplify:  Simplified to (* (log (+ (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0))) 12.0)) 3)
* * * * [misc]progress:  [ 36 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (log (exp (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))))>
* [enter]simplify:  Simplifying (exp (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (489 enodes)
* [exit]simplify:  Simplified to (exp (pow (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))) 3))
* [exit]simplify:  Simplified to (exp (pow (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))) 3))
* * * * [misc]progress:  [ 37 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (304 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))) (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))))
* [exit]simplify:  Simplified to (* (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))) (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))))
* [enter]simplify:  Simplifying (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))
* [exit]simplify:  Simplified to (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))
* * * * [misc]progress:  [ 38 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (cbrt (* (* (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3) (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)) (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))))>
* [enter]simplify:  Simplifying (* (* (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3) (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)) (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* [exit]simplify:  Simplified to (pow (pow (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))) 3) 3)
* * * * [misc]progress:  [ 39 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (pow (* (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))) 3) (pow (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))) 3)
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (151 enodes)
* [exit]simplify:  Simplified to (* (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* [exit]simplify:  Simplified to (* (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* [enter]simplify:  Simplifying (pow (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3)
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (86 enodes)
* * [misc]simplify:  iters left: 2 (130 enodes)
* * [misc]simplify:  iters left: 1 (164 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0))))
* [exit]simplify:  Simplified to (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0))))
* * * * [misc]progress:  [ 40 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (pow (sqrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3) (pow (sqrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3))))>
* [enter]simplify:  Simplifying (pow (sqrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3)
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (230 enodes)
* * [misc]simplify:  iters left: 1 (471 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ 12.0 (+ (* x (* x -48.0)) (* (* x 16.0) (pow x 3))))) (+ 12.0 (+ (* x (* x -48.0)) (* (* x 16.0) (pow x 3)))))
* [exit]simplify:  Simplified to (* (sqrt (+ 12.0 (+ (* x (* x -48.0)) (* (* x 16.0) (pow x 3))))) (+ 12.0 (+ (* x (* x -48.0)) (* (* x 16.0) (pow x 3)))))
* [enter]simplify:  Simplifying (pow (sqrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3)
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (230 enodes)
* * [misc]simplify:  iters left: 1 (471 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ 12.0 (+ (* x (* x -48.0)) (* (* x 16.0) (pow x 3))))) (+ 12.0 (+ (* x (* x -48.0)) (* (* x 16.0) (pow x 3)))))
* [exit]simplify:  Simplified to (* (sqrt (+ 12.0 (+ (* x (* x -48.0)) (* (* x 16.0) (pow x 3))))) (+ 12.0 (+ (* x (* x -48.0)) (* (* x 16.0) (pow x 3)))))
* * * * [misc]progress:  [ 41 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (pow 1 3) (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))))>
* [enter]simplify:  Simplifying (pow 1 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (453 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))) 3)
* * * * [misc]progress:  [ 42 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (/ (pow (+ (pow (+ (* x (* -48.0 x)) 12.0) 3) (pow (* (* 16.0 x) (pow x 3)) 3)) 3) (pow (+ (* (+ (* x (* -48.0 x)) 12.0) (+ (* x (* -48.0 x)) 12.0)) (- (* (* (* 16.0 x) (pow x 3)) (* (* 16.0 x) (pow x 3))) (* (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))) 3))))>
* [enter]simplify:  Simplifying (pow (+ (pow (+ (* x (* -48.0 x)) 12.0) 3) (pow (* (* 16.0 x) (pow x 3)) 3)) 3)
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* [exit]simplify:  Simplified to (pow (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (+ (* x (* x -48.0)) 12.0) 3)) 3)
* [exit]simplify:  Simplified to (pow (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (+ (* x (* x -48.0)) 12.0) 3)) 3)
* [enter]simplify:  Simplifying (pow (+ (* (+ (* x (* -48.0 x)) 12.0) (+ (* x (* -48.0 x)) 12.0)) (- (* (* (* 16.0 x) (pow x 3)) (* (* 16.0 x) (pow x 3))) (* (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))) 3)
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* (pow x 3) (* 16.0 x)) (- (* (pow x 3) (* 16.0 x)) (+ (* x (* x -48.0)) 12.0))) (* (+ (* x (* x -48.0)) 12.0) (+ (* x (* x -48.0)) 12.0))) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* (pow x 3) (* 16.0 x)) (- (* (pow x 3) (* 16.0 x)) (+ (* x (* x -48.0)) 12.0))) (* (+ (* x (* x -48.0)) 12.0) (+ (* x (* x -48.0)) 12.0))) 3)
* * * * [misc]progress:  [ 43 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (/ (pow (- (* (+ (* x (* -48.0 x)) 12.0) (+ (* x (* -48.0 x)) 12.0)) (* (* (* 16.0 x) (pow x 3)) (* (* 16.0 x) (pow x 3)))) 3) (pow (- (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))))>
* [enter]simplify:  Simplifying (pow (- (* (+ (* x (* -48.0 x)) 12.0) (+ (* x (* -48.0 x)) 12.0)) (* (* (* 16.0 x) (pow x 3)) (* (* 16.0 x) (pow x 3)))) 3)
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (158 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (+ (* x (* x -48.0)) 12.0) (+ (* x (* x -48.0)) 12.0)) (* (* (* (* 16.0 x) 16.0) (* (* x x) (* x x))) (* (- x) (* x x)))) 3)
* [exit]simplify:  Simplified to (pow (+ (* (+ (* x (* x -48.0)) 12.0) (+ (* x (* x -48.0)) 12.0)) (* (* (* (* 16.0 x) 16.0) (* (* x x) (* x x))) (* (- x) (* x x)))) 3)
* [enter]simplify:  Simplifying (pow (- (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (473 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* (* x x) (* x x)) (- 16.0)) (+ (* x (* x -48.0)) 12.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* (* x x) (* x x)) (- 16.0)) (+ (* x (* x -48.0)) 12.0)) 3)
* * * * [misc]progress:  [ 44 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) (* (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))) (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))))
* [exit]simplify:  Simplified to (* (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))) (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))))
* * * * [misc]progress:  [ 45 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))))>
* * * * [misc]progress:  [ 46 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (sqrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)) (sqrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))))>
* [enter]simplify:  Simplifying (sqrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (454 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))) 3))
* [exit]simplify:  Simplified to (sqrt (pow (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))) 3))
* [enter]simplify:  Simplifying (sqrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (454 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))) 3))
* [exit]simplify:  Simplified to (sqrt (pow (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))) 3))
* * * * [misc]progress:  [ 47 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* 1 (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))))>
* * * * [misc]progress:  [ 48 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (pow (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3) 1/3))>
* * * * [misc]progress:  [ 49 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)) 1))>
* * * * [misc]progress:  [ 50 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))))>
* [enter]simplify:  Simplifying (log (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (496 enodes)
* [exit]simplify:  Simplified to (log (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* [exit]simplify:  Simplified to (log (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* * * * [misc]progress:  [ 51 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))))>
* [enter]simplify:  Simplifying (exp (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 16.0) (* (* x x) (* x x))) (* (exp 12.0) (pow (exp -48.0) (* x x))))
* [exit]simplify:  Simplified to (* (pow (exp 16.0) (* (* x x) (* x x))) (* (exp 12.0) (pow (exp -48.0) (* x x))))
* * * * [misc]progress:  [ 52 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (pow (* (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))) 3)) (cbrt (pow (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3))))>
* [enter]simplify:  Simplifying (cbrt (pow (* (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))) 3))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (486 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))) (cbrt (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))) (cbrt (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (pow (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (147 enodes)
* * [misc]simplify:  iters left: 1 (235 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ (* x (* x -48.0)) (* (* x 16.0) (pow x 3))) 12.0))
* [exit]simplify:  Simplified to (cbrt (+ (+ (* x (* x -48.0)) (* (* x 16.0) (pow x 3))) 12.0))
* * * * [misc]progress:  [ 53 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (pow (sqrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3)) (cbrt (pow (sqrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3))))>
* [enter]simplify:  Simplifying (cbrt (pow (sqrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (230 enodes)
* * [misc]simplify:  iters left: 1 (455 enodes)
* [exit]simplify:  Simplified to (sqrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* [exit]simplify:  Simplified to (sqrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* [enter]simplify:  Simplifying (cbrt (pow (sqrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (230 enodes)
* * [misc]simplify:  iters left: 1 (455 enodes)
* [exit]simplify:  Simplified to (sqrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* [exit]simplify:  Simplified to (sqrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* * * * [misc]progress:  [ 54 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (pow 1 3)) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))))>
* [enter]simplify:  Simplifying (cbrt (pow 1 3))
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (8 enodes)
* [exit]simplify:  Simplified to (cbrt 1)
* [exit]simplify:  Simplified to (cbrt 1)
* [enter]simplify:  Simplifying (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))
* [exit]simplify:  Simplified to (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))
* * * * [misc]progress:  [ 55 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (* (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))) (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))))>
* [enter]simplify:  Simplifying (cbrt (* (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))) (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))) (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (125 enodes)
* * [misc]simplify:  iters left: 1 (159 enodes)
* [exit]simplify:  Simplified to (cbrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* [exit]simplify:  Simplified to (cbrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* * * * [misc]progress:  [ 56 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (* (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))) (cbrt (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))))>
* [enter]simplify:  Simplifying (cbrt (* (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (290 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0))))))
* [exit]simplify:  Simplified to (cbrt (* (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0))))))
* [enter]simplify:  Simplifying (cbrt (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (496 enodes)
* [exit]simplify:  Simplified to (cbrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* [exit]simplify:  Simplified to (cbrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* * * * [misc]progress:  [ 57 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (pow (* (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))) 3)) (cbrt (pow (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3))))>
* [enter]simplify:  Simplifying (cbrt (pow (* (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))) 3))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (486 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))) (cbrt (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))) (cbrt (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (pow (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (147 enodes)
* * [misc]simplify:  iters left: 1 (235 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ (* x (* x -48.0)) (* (* x 16.0) (pow x 3))) 12.0))
* [exit]simplify:  Simplified to (cbrt (+ (+ (* x (* x -48.0)) (* (* x 16.0) (pow x 3))) 12.0))
* * * * [misc]progress:  [ 58 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (pow (sqrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3)) (cbrt (pow (sqrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3))))>
* [enter]simplify:  Simplifying (cbrt (pow (sqrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (230 enodes)
* * [misc]simplify:  iters left: 1 (455 enodes)
* [exit]simplify:  Simplified to (sqrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* [exit]simplify:  Simplified to (sqrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* [enter]simplify:  Simplifying (cbrt (pow (sqrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) 3))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (230 enodes)
* * [misc]simplify:  iters left: 1 (455 enodes)
* [exit]simplify:  Simplified to (sqrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* [exit]simplify:  Simplified to (sqrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* * * * [misc]progress:  [ 59 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (pow 1 3)) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))))>
* [enter]simplify:  Simplifying (cbrt (pow 1 3))
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (8 enodes)
* [exit]simplify:  Simplified to (cbrt 1)
* [exit]simplify:  Simplified to (cbrt 1)
* [enter]simplify:  Simplifying (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))
* [exit]simplify:  Simplified to (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))
* * * * [misc]progress:  [ 60 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))) (cbrt (* (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))))))>
* [enter]simplify:  Simplifying (cbrt (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (125 enodes)
* * [misc]simplify:  iters left: 1 (159 enodes)
* [exit]simplify:  Simplified to (cbrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* [exit]simplify:  Simplified to (cbrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))) (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3))) (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))))
* * * * [misc]progress:  [ 61 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (sqrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))) (cbrt (sqrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))))>
* [enter]simplify:  Simplifying (cbrt (sqrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (461 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (pow (+ (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0))) 12.0) 3)))
* [exit]simplify:  Simplified to (cbrt (sqrt (pow (+ (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0))) 12.0) 3)))
* [enter]simplify:  Simplifying (cbrt (sqrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (461 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (pow (+ (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0))) 12.0) 3)))
* [exit]simplify:  Simplified to (cbrt (sqrt (pow (+ (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0))) 12.0) 3)))
* * * * [misc]progress:  [ 62 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt 1) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))))>
* [enter]simplify:  Simplifying (cbrt 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (cbrt 1)
* [exit]simplify:  Simplified to (cbrt 1)
* [enter]simplify:  Simplifying (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))
* [exit]simplify:  Simplified to (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))
* * * * [misc]progress:  [ 63 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (/ (cbrt (pow (+ (pow (+ (* x (* -48.0 x)) 12.0) 3) (pow (* (* 16.0 x) (pow x 3)) 3)) 3)) (cbrt (pow (+ (* (+ (* x (* -48.0 x)) 12.0) (+ (* x (* -48.0 x)) 12.0)) (- (* (* (* 16.0 x) (pow x 3)) (* (* 16.0 x) (pow x 3))) (* (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))) 3))))>
* [enter]simplify:  Simplifying (cbrt (pow (+ (pow (+ (* x (* -48.0 x)) 12.0) 3) (pow (* (* 16.0 x) (pow x 3)) 3)) 3))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (134 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (+ (* x (* x -48.0)) 12.0) 3))
* [exit]simplify:  Simplified to (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (+ (* x (* x -48.0)) 12.0) 3))
* [enter]simplify:  Simplifying (cbrt (pow (+ (* (+ (* x (* -48.0 x)) 12.0) (+ (* x (* -48.0 x)) 12.0)) (- (* (* (* 16.0 x) (pow x 3)) (* (* 16.0 x) (pow x 3))) (* (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))) 3))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (- (+ (* (+ (* x (* x -48.0)) 12.0) (+ (* x (* x -48.0)) 12.0)) (* (* (pow x 3) (* 16.0 x)) (* (pow x 3) (* 16.0 x)))) (* (* (pow x 3) (* 16.0 x)) (+ (* x (* x -48.0)) 12.0)))
* [exit]simplify:  Simplified to (- (+ (* (+ (* x (* x -48.0)) 12.0) (+ (* x (* x -48.0)) 12.0)) (* (* (pow x 3) (* 16.0 x)) (* (pow x 3) (* 16.0 x)))) (* (* (pow x 3) (* 16.0 x)) (+ (* x (* x -48.0)) 12.0)))
* * * * [misc]progress:  [ 64 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (/ (cbrt (pow (- (* (+ (* x (* -48.0 x)) 12.0) (+ (* x (* -48.0 x)) 12.0)) (* (* (* 16.0 x) (pow x 3)) (* (* 16.0 x) (pow x 3)))) 3)) (cbrt (pow (- (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))))>
* [enter]simplify:  Simplifying (cbrt (pow (- (* (+ (* x (* -48.0 x)) 12.0) (+ (* x (* -48.0 x)) 12.0)) (* (* (* 16.0 x) (pow x 3)) (* (* 16.0 x) (pow x 3)))) 3))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (* x x) (* x x)) (* 16.0 16.0)) (* x (* (* x x) (- x)))) (* (+ (* x (* x -48.0)) 12.0) (+ (* x (* x -48.0)) 12.0)))
* [exit]simplify:  Simplified to (+ (* (* (* (* x x) (* x x)) (* 16.0 16.0)) (* x (* (* x x) (- x)))) (* (+ (* x (* x -48.0)) 12.0) (+ (* x (* x -48.0)) 12.0)))
* [enter]simplify:  Simplifying (cbrt (pow (- (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (- 16.0)) (+ (* x (* x -48.0)) 12.0))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (- 16.0)) (+ (* x (* x -48.0)) 12.0))
* * * * [misc]progress:  [ 65 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))) (cbrt (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))) (cbrt (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))) (cbrt (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (493 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))) (cbrt (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))) (cbrt (+ (+ (* x (* x -48.0)) 12.0) (* (* x 16.0) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (496 enodes)
* [exit]simplify:  Simplified to (cbrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* [exit]simplify:  Simplified to (cbrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* * * * [misc]progress:  [ 66 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))))>
* [enter]simplify:  Simplifying (* (* (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (440 enodes)
* [exit]simplify:  Simplified to (pow (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))) 3)
* [exit]simplify:  Simplified to (pow (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))) 3)
* * * * [misc]progress:  [ 67 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))))>
* * * * [misc]progress:  [ 68 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))) (sqrt (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (496 enodes)
* [exit]simplify:  Simplified to (sqrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* [exit]simplify:  Simplified to (sqrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* [enter]simplify:  Simplifying (sqrt (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (496 enodes)
* [exit]simplify:  Simplified to (sqrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* [exit]simplify:  Simplified to (sqrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))
* * * * [misc]progress:  [ 69 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3))))>
* * * * [misc]progress:  [ 70 / 81 ] simplifiying candidate #<alt-event (Î» (x) (cbrt (pow (+ (+ (* -48.0 (pow x 2)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))>
* [enter]simplify:  Simplifying (cbrt (pow (+ (+ (* -48.0 (pow x 2)) 12.0) (* (* 16.0 x) (pow x 3))) 3))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (489 enodes)
* [exit]simplify:  Simplified to (+ (* x (* -48.0 x)) (+ (* (pow x 3) (* 16.0 x)) 12.0))
* * * * [misc]progress:  [ 71 / 81 ] simplifiying candidate #<alt-event (Î» (x) (cbrt (pow (+ (+ (* -48.0 (pow x 2)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))>
* [enter]simplify:  Simplifying (cbrt (pow (+ (+ (* -48.0 (pow x 2)) 12.0) (* (* 16.0 x) (pow x 3))) 3))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (489 enodes)
* [exit]simplify:  Simplified to (+ (* x (* -48.0 x)) (+ (* (pow x 3) (* 16.0 x)) 12.0))
* * * * [misc]progress:  [ 72 / 81 ] simplifiying candidate #<alt-event (Î» (x) (cbrt (pow (+ (+ (* -48.0 (pow x 2)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))>
* [enter]simplify:  Simplifying (cbrt (pow (+ (+ (* -48.0 (pow x 2)) 12.0) (* (* 16.0 x) (pow x 3))) 3))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (489 enodes)
* [exit]simplify:  Simplified to (+ (* x (* -48.0 x)) (+ (* (pow x 3) (* 16.0 x)) 12.0))
* * * * [misc]progress:  [ 73 / 81 ] simplifiying candidate #<alt-event (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* 16.0 (pow x 4))) 3)))>
* [enter]simplify:  Simplifying (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* 16.0 (pow x 4))) 3))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (393 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x -48.0)) (* (pow x 4) 16.0)) 12.0)
* * * * [misc]progress:  [ 74 / 81 ] simplifiying candidate #<alt-event (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* 16.0 (pow x 4))) 3)))>
* [enter]simplify:  Simplifying (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* 16.0 (pow x 4))) 3))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (393 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x -48.0)) (* (pow x 4) 16.0)) 12.0)
* * * * [misc]progress:  [ 75 / 81 ] simplifiying candidate #<alt-event (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* 16.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))) 3)))>
* [enter]simplify:  Simplifying (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* 16.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))) 3))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (488 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (+ (* (pow x 3) (* x 16.0)) (* x (* x -48.0))))
* * * * [misc]progress:  [ 76 / 81 ] simplifiying candidate #<alt-event (Î» (x) (cbrt (- (+ (* 131328.0 (pow x 4)) 1728.0) (+ (* 20736.0 (pow x 2)) (* 5971968.0 (/ (pow x 4) (pow 12.0 2)))))))>
* [enter]simplify:  Simplifying (cbrt (- (+ (* 131328.0 (pow x 4)) 1728.0) (+ (* 20736.0 (pow x 2)) (* 5971968.0 (/ (pow x 4) (pow 12.0 2))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (153 enodes)
* * [misc]simplify:  iters left: 2 (262 enodes)
* * [misc]simplify:  iters left: 1 (364 enodes)
* [exit]simplify:  Simplified to (cbrt (- (- 1728.0 (* (* 20736.0 x) x)) (* (- (/ 5971968.0 (* 12.0 12.0)) 131328.0) (pow x 4))))
* * * * [misc]progress:  [ 77 / 81 ] simplifiying candidate #<alt-event (Î» (x) (cbrt (- (+ (* 0.5 (* (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.75 (/ (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (+ (* 1.0 (* (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 384.0 (/ (* (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2))))))))>
* [enter]simplify:  Simplifying (cbrt (- (+ (* 0.5 (* (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.75 (/ (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (+ (* 1.0 (* (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 384.0 (/ (* (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2)))))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (187 enodes)
* * [misc]simplify:  iters left: 3 (467 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (- (* (pow (* (- 48.0) (* x x)) 3) (- (* (pow x 4) 0.5) (* (* x 1.0) x))) (/ (pow (* (- 48.0) (* x x)) 3) (/ (/ (* -48.0 -48.0) (pow x 4)) 384.0))) (+ (* (/ (- 0.75) (* x x)) (pow (* (- 48.0) (* x x)) 3)) (pow (* (- 48.0) (* x x)) 3))))
* * * * [misc]progress:  [ 78 / 81 ] simplifiying candidate #<alt-event (Î» (x) (cbrt (- (+ (* 0.5 (/ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ -1 x))))))) (pow x 2))) (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ -1 x))))))) (+ (* 0.75 (/ (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow x 2))) (+ (* 1.0 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ -1 x))))))) x)) (* 384.0 (/ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ -1 x))))))) (* (pow -48.0 2) (pow x 2)))))))))>
* [enter]simplify:  Simplifying (cbrt (- (+ (* 0.5 (/ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ -1 x))))))) (pow x 2))) (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ -1 x))))))) (+ (* 0.75 (/ (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow x 2))) (+ (* 1.0 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ -1 x))))))) x)) (* 384.0 (/ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (exp (* 3 (- (log (- 48.0)) (* 2 (log (/ -1 x))))))) (* (pow -48.0 2) (pow x 2))))))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (94 enodes)
* * [misc]simplify:  iters left: 4 (278 enodes)
* [exit]simplify:  Simplified to (cbrt (- (+ (* (/ 0.5 (* x x)) (exp (+ (+ (* (* 3 (- 2)) (log (/ -1 x))) (* (log (- 48.0)) 3)) (* (+ 0 (log x)) (+ 3 3))))) (exp (+ (* (* 3 (- 2)) (log (/ -1 x))) (* (log (- 48.0)) 3)))) (+ (+ (* (/ 1.0 x) (pow (exp 3) (- (+ (+ 0 (log x)) (log (- 48.0))) (* 2 (log (/ -1 x)))))) (* (/ 0.75 (* x x)) (exp (+ (* (* 3 (- 2)) (log (/ -1 x))) (* (log (- 48.0)) 3))))) (* (/ 384.0 (* (* x x) (* -48.0 -48.0))) (exp (+ (+ (* (* 3 (- 2)) (log (/ -1 x))) (* (log (- 48.0)) 3)) (* (+ 0 (log x)) (+ 3 3))))))))
* * * * [misc]progress:  [ 79 / 81 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (pow (pow 12.0 3) 1/3) (* 112.0 (pow x 4))) (+ (* 48.0 (pow x 2)) (* 13824.0 (/ (pow x 4) (pow 12.0 2))))))>
* [enter]simplify:  Simplifying (- (+ (pow (pow 12.0 3) 1/3) (* 112.0 (pow x 4))) (+ (* 48.0 (pow x 2)) (* 13824.0 (/ (pow x 4) (pow 12.0 2)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (176 enodes)
* * [misc]simplify:  iters left: 2 (321 enodes)
* * [misc]simplify:  iters left: 1 (495 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 4) (- 112.0 (/ 13824.0 (* 12.0 12.0)))) (- 12.0 (* 48.0 (* x x))))
* * * * [misc]progress:  [ 80 / 81 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (exp (- (log (- 48.0)) (* 2 (log (/ 1 x))))) (* 0.05555555555555555 (* (exp (- (log (- 48.0)) (* 2 (log (/ 1 x))))) (pow x 4)))) (+ (* 0.3333333333333333 (* (exp (- (log (- 48.0)) (* 2 (log (/ 1 x))))) (pow x 2))) (+ (* 128.0 (/ (* (exp (- (log (- 48.0)) (* 2 (log (/ 1 x))))) (pow x 4)) (pow -48.0 2))) (* 0.25 (/ (exp (- (log (- 48.0)) (* 2 (log (/ 1 x))))) (pow x 2)))))))>
* [enter]simplify:  Simplifying (- (+ (exp (- (log (- 48.0)) (* 2 (log (/ 1 x))))) (* 0.05555555555555555 (* (exp (- (log (- 48.0)) (* 2 (log (/ 1 x))))) (pow x 4)))) (+ (* 0.3333333333333333 (* (exp (- (log (- 48.0)) (* 2 (log (/ 1 x))))) (pow x 2))) (+ (* 128.0 (/ (* (exp (- (log (- 48.0)) (* 2 (log (/ 1 x))))) (pow x 4)) (pow -48.0 2))) (* 0.25 (/ (exp (- (log (- 48.0)) (* 2 (log (/ 1 x))))) (pow x 2))))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (73 enodes)
* * [misc]simplify:  iters left: 4 (202 enodes)
* [exit]simplify:  Simplified to (- (- (* (/ (- 48.0) (* (/ 1 x) (/ 1 x))) (- (* 0.05555555555555555 (pow x 4)) (* (* 0.3333333333333333 x) x))) (* (/ 128.0 (* -48.0 -48.0)) (* (/ (- 48.0) (/ 1 x)) (/ (pow x 4) (/ 1 x))))) (- (* 0.25 (/ (/ (- 48.0) (* x x)) (* (/ 1 x) (/ 1 x)))) (/ (- 48.0) (* (/ 1 x) (/ 1 x)))))
* * * * [misc]progress:  [ 81 / 81 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.05555555555555555 (/ (* (exp (- (log (- 48.0)) (* 2 (log (/ -1 x))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2))) (exp (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (+ (* 128.0 (/ (* (exp (- (log (- 48.0)) (* 2 (log (/ -1 x))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (+ (* 0.3333333333333333 (/ (* (exp (- (log (- 48.0)) (* 2 (log (/ -1 x))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x)) (* 0.25 (/ (exp (- (log (- 48.0)) (* 2 (log (/ -1 x))))) (pow x 2)))))))>
* [enter]simplify:  Simplifying (- (+ (* 0.05555555555555555 (/ (* (exp (- (log (- 48.0)) (* 2 (log (/ -1 x))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2))) (exp (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (+ (* 128.0 (/ (* (exp (- (log (- 48.0)) (* 2 (log (/ -1 x))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (+ (* 0.3333333333333333 (/ (* (exp (- (log (- 48.0)) (* 2 (log (/ -1 x))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x)) (* 0.25 (/ (exp (- (log (- 48.0)) (* 2 (log (/ -1 x))))) (pow x 2))))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (94 enodes)
* * [misc]simplify:  iters left: 4 (307 enodes)
* [exit]simplify:  Simplified to (- (- (- (/ (- 48.0) (* (/ -1 x) (/ -1 x))) (* (/ 0.25 (* x x)) (/ (- 48.0) (* (/ -1 x) (/ -1 x))))) (* (/ (/ (* 0.3333333333333333 (- 48.0)) (* (/ -1 x) (/ -1 x))) x) (pow (exp 3) (+ 0 (log x))))) (- (* (/ (/ (* (- 48.0) 128.0) (* (/ -1 x) (/ -1 x))) (* (* -48.0 -48.0) (* x x))) (exp (* (+ 0 (log x)) (+ 3 3)))) (* (* 0.05555555555555555 (/ (/ (- 48.0) (* x x)) (* (/ -1 x) (/ -1 x)))) (exp (* (+ 0 (log x)) (+ 3 3))))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (sqrt (* (* x 16.0) (pow x 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* x 16.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (sqrt 16.0) into (sqrt 16.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ 0 (* 2 (sqrt 16.0))) into 0
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* x 16.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (sqrt 16.0) into (sqrt 16.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ 0 (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify (sqrt 16.0) into (sqrt 16.0)
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow 0 2) (+)) (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* 0 0)))) (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow 0 2) (+ (* 2 (* 0 0)))) (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* 0 0)) (* 2 (* 0 0)))) (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow 0 2) (+ (* 2 (* 0 0)) (* 2 (* 0 0)))) (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (sqrt 16.0) (pow x 2)) into (* (sqrt 16.0) (pow x 2))
* [misc]approximate:  Taking taylor expansion of (sqrt (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (/ 16.0 (pow x 3)) (* 2 (sqrt 0))) into (/ +nan.0 (pow x 3))
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (/ 16.0 (pow x 3)) (* 2 (sqrt 0))) into (/ +nan.0 (pow x 3))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ +nan.0 (pow x 3)) into (/ +nan.0 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ +nan.0 (pow x 3)) 2) (+)) (* 2 0)) into (/ +nan.0 (pow x 6))
* [misc]backup-simplify:  Simplify (/ +nan.0 (pow x 6)) into (/ +nan.0 (pow x 6))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ +nan.0 (pow x 3)) (/ +nan.0 (pow x 6)))))) (* 2 0)) into (/ +nan.0 (pow x 9))
* [misc]backup-simplify:  Simplify (/ +nan.0 (pow x 9)) into (/ +nan.0 (pow x 9))
* [misc]backup-simplify:  Simplify (+ (* (/ +nan.0 (pow (/ 1 x) 9)) (pow (/ 1 x) 2)) (+ (* (/ +nan.0 (pow (/ 1 x) 6)) (/ 1 x)) (/ +nan.0 (pow (/ 1 x) 3)))) into (- (+ (* +nan.0 (pow x 3)) (- (+ (* +nan.0 (pow x 5)) (- (* +nan.0 (pow x 7)))))))
* [misc]approximate:  Taking taylor expansion of (sqrt (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (* -16.0 (exp (* 3 (- (log -1) (log x))))) (* 2 (sqrt 0))) into (* +nan.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (* -16.0 (exp (* 3 (- (log -1) (log x))))) (* 2 (sqrt 0))) into (* +nan.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* +nan.0 (exp (* 3 (- (log -1) (log x))))) into (* +nan.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (* +nan.0 (exp (* 3 (- (log -1) (log x))))) 2) (+)) (* 2 0)) into (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)) into (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (* +nan.0 (exp (* 3 (- (log -1) (log x))))) (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))) (* 2 0)) into (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)) into (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (+ (* (* +nan.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3)) (pow (/ 1 (- x)) 2)) (+ (* (* +nan.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2)) (/ 1 (- x))) (* +nan.0 (exp (* 3 (- (log -1) (log (/ 1 (- x))))))))) into (- (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) x)) (- (+ (* +nan.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))) (- (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 2))))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (sqrt (* (* x 16.0) (pow x 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* x 16.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (sqrt 16.0) into (sqrt 16.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ 0 (* 2 (sqrt 16.0))) into 0
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* x 16.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (sqrt 16.0) into (sqrt 16.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ 0 (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify (sqrt 16.0) into (sqrt 16.0)
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow 0 2) (+)) (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* 0 0)))) (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow 0 2) (+ (* 2 (* 0 0)))) (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* 0 0)) (* 2 (* 0 0)))) (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow 0 2) (+ (* 2 (* 0 0)) (* 2 (* 0 0)))) (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (sqrt 16.0) (pow x 2)) into (* (sqrt 16.0) (pow x 2))
* [misc]approximate:  Taking taylor expansion of (sqrt (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (/ 16.0 (pow x 3)) (* 2 (sqrt 0))) into (/ +nan.0 (pow x 3))
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (/ 16.0 (pow x 3)) (* 2 (sqrt 0))) into (/ +nan.0 (pow x 3))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ +nan.0 (pow x 3)) into (/ +nan.0 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ +nan.0 (pow x 3)) 2) (+)) (* 2 0)) into (/ +nan.0 (pow x 6))
* [misc]backup-simplify:  Simplify (/ +nan.0 (pow x 6)) into (/ +nan.0 (pow x 6))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ +nan.0 (pow x 3)) (/ +nan.0 (pow x 6)))))) (* 2 0)) into (/ +nan.0 (pow x 9))
* [misc]backup-simplify:  Simplify (/ +nan.0 (pow x 9)) into (/ +nan.0 (pow x 9))
* [misc]backup-simplify:  Simplify (+ (* (/ +nan.0 (pow (/ 1 x) 9)) (pow (/ 1 x) 2)) (+ (* (/ +nan.0 (pow (/ 1 x) 6)) (/ 1 x)) (/ +nan.0 (pow (/ 1 x) 3)))) into (- (+ (* +nan.0 (pow x 3)) (- (+ (* +nan.0 (pow x 5)) (- (* +nan.0 (pow x 7)))))))
* [misc]approximate:  Taking taylor expansion of (sqrt (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (* -16.0 (exp (* 3 (- (log -1) (log x))))) (* 2 (sqrt 0))) into (* +nan.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (* -16.0 (exp (* 3 (- (log -1) (log x))))) (* 2 (sqrt 0))) into (* +nan.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* +nan.0 (exp (* 3 (- (log -1) (log x))))) into (* +nan.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (* +nan.0 (exp (* 3 (- (log -1) (log x))))) 2) (+)) (* 2 0)) into (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)) into (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (* +nan.0 (exp (* 3 (- (log -1) (log x))))) (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))) (* 2 0)) into (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)) into (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (+ (* (* +nan.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3)) (pow (/ 1 (- x)) 2)) (+ (* (* +nan.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2)) (/ 1 (- x))) (* +nan.0 (exp (* 3 (- (log -1) (log (/ 1 (- x))))))))) into (- (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) x)) (- (+ (* +nan.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))) (- (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 2))))))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* x 16.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (sqrt 16.0) into (sqrt 16.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ 0 (* 2 (sqrt 16.0))) into 0
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* x 16.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (sqrt 16.0) into (sqrt 16.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ 0 (* 2 (sqrt 16.0))) into 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* x 16.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (sqrt 16.0) into (sqrt 16.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ 0 (* 2 (sqrt 16.0))) into 0
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* x 16.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (sqrt 16.0) into (sqrt 16.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ 0 (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify (* (sqrt 16.0) (sqrt 16.0)) into (pow (sqrt 16.0) 2)
* [misc]backup-simplify:  Simplify (pow (sqrt 16.0) 2) into (pow (sqrt 16.0) 2)
* [misc]backup-simplify:  Simplify (+ (* (sqrt 16.0) 0) (* 0 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow 0 2) (+)) (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow 0 2) (+)) (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 16.0) 0) (+ (* 0 0) (* 0 (sqrt 16.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* 0 0)))) (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* 0 0)))) (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 16.0) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (sqrt 16.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow 0 2) (+ (* 2 (* 0 0)))) (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow 0 2) (+ (* 2 (* 0 0)))) (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 16.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (sqrt 16.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* 0 0)) (* 2 (* 0 0)))) (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* 0 0)) (* 2 (* 0 0)))) (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 16.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (sqrt 16.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow 0 2) (+ (* 2 (* 0 0)) (* 2 (* 0 0)))) (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow 0 2) (+ (* 2 (* 0 0)) (* 2 (* 0 0)))) (* 2 (sqrt 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 16.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (sqrt 16.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (pow (sqrt 16.0) 2) (pow x 4)) into (* (pow (sqrt 16.0) 2) (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* (sqrt (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3))) (sqrt (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3))) (sqrt (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (/ 16.0 (pow x 3)) (* 2 (sqrt 0))) into (/ +nan.0 (pow x 3))
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (/ 16.0 (pow x 3)) (* 2 (sqrt 0))) into (/ +nan.0 (pow x 3))
* [misc]taylor:  Taking taylor expansion of (* (sqrt (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3))) (sqrt (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (/ 16.0 (pow x 3)) (* 2 (sqrt 0))) into (/ +nan.0 (pow x 3))
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (/ 16.0 (pow x 3)) (* 2 (sqrt 0))) into (/ +nan.0 (pow x 3))
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 (/ +nan.0 (pow x 3))) (* (/ +nan.0 (pow x 3)) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ +nan.0 (pow x 3)) 2) (+)) (* 2 0)) into (/ +nan.0 (pow x 6))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ +nan.0 (pow x 3)) 2) (+)) (* 2 0)) into (/ +nan.0 (pow x 6))
* [misc]backup-simplify:  Simplify (+ (* 0 (/ +nan.0 (pow x 6))) (+ (* (/ +nan.0 (pow x 3)) (/ +nan.0 (pow x 3))) (* (/ +nan.0 (pow x 6)) 0))) into (- (* +nan.0 (/ 1 (pow x 6))))
* [misc]backup-simplify:  Simplify (- (* +nan.0 (/ 1 (pow x 6)))) into (- (* +nan.0 (/ 1 (pow x 6))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ +nan.0 (pow x 3)) (/ +nan.0 (pow x 6)))))) (* 2 0)) into (/ +nan.0 (pow x 9))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ +nan.0 (pow x 3)) (/ +nan.0 (pow x 6)))))) (* 2 0)) into (/ +nan.0 (pow x 9))
* [misc]backup-simplify:  Simplify (+ (* 0 (/ +nan.0 (pow x 9))) (+ (* (/ +nan.0 (pow x 3)) (/ +nan.0 (pow x 6))) (+ (* (/ +nan.0 (pow x 6)) (/ +nan.0 (pow x 3))) (* (/ +nan.0 (pow x 9)) 0)))) into (- (* +nan.0 (/ 1 (pow x 9))))
* [misc]backup-simplify:  Simplify (- (* +nan.0 (/ 1 (pow x 9)))) into (- (* +nan.0 (/ 1 (pow x 9))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ +nan.0 (pow x 6)) 2) (+ (* 2 (* (/ +nan.0 (pow x 3)) (/ +nan.0 (pow x 9)))))) (* 2 0)) into (/ +nan.0 (pow x 12))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ +nan.0 (pow x 6)) 2) (+ (* 2 (* (/ +nan.0 (pow x 3)) (/ +nan.0 (pow x 9)))))) (* 2 0)) into (/ +nan.0 (pow x 12))
* [misc]backup-simplify:  Simplify (+ (* 0 (/ +nan.0 (pow x 12))) (+ (* (/ +nan.0 (pow x 3)) (/ +nan.0 (pow x 9))) (+ (* (/ +nan.0 (pow x 6)) (/ +nan.0 (pow x 6))) (+ (* (/ +nan.0 (pow x 9)) (/ +nan.0 (pow x 3))) (* (/ +nan.0 (pow x 12)) 0))))) into (- (* +nan.0 (/ 1 (pow x 12))))
* [misc]backup-simplify:  Simplify (- (* +nan.0 (/ 1 (pow x 12)))) into (- (* +nan.0 (/ 1 (pow x 12))))
* [misc]backup-simplify:  Simplify (+ (* (- (* +nan.0 (/ 1 (pow (/ 1 x) 12)))) (pow (/ 1 x) 2)) (+ (* (- (* +nan.0 (/ 1 (pow (/ 1 x) 9)))) (/ 1 x)) (- (* +nan.0 (/ 1 (pow (/ 1 x) 6)))))) into (- (+ (* +nan.0 (pow x 10)) (- (+ (* +nan.0 (pow x 6)) (- (* +nan.0 (pow x 8)))))))
* [misc]approximate:  Taking taylor expansion of (* (sqrt (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3))) (sqrt (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3))) (sqrt (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (* -16.0 (exp (* 3 (- (log -1) (log x))))) (* 2 (sqrt 0))) into (* +nan.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (* -16.0 (exp (* 3 (- (log -1) (log x))))) (* 2 (sqrt 0))) into (* +nan.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (sqrt (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3))) (sqrt (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (* -16.0 (exp (* 3 (- (log -1) (log x))))) (* 2 (sqrt 0))) into (* +nan.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (* -16.0 (exp (* 3 (- (log -1) (log x))))) (* 2 (sqrt 0))) into (* +nan.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 (* +nan.0 (exp (* 3 (- (log -1) (log x)))))) (* (* +nan.0 (exp (* 3 (- (log -1) (log x))))) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (* +nan.0 (exp (* 3 (- (log -1) (log x))))) 2) (+)) (* 2 0)) into (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (* +nan.0 (exp (* 3 (- (log -1) (log x))))) 2) (+)) (* 2 0)) into (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (+ (* 0 (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (+ (* (* +nan.0 (exp (* 3 (- (log -1) (log x))))) (* +nan.0 (exp (* 3 (- (log -1) (log x)))))) (* (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 0))) into (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2))) into (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (* +nan.0 (exp (* 3 (- (log -1) (log x))))) (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))) (* 2 0)) into (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (* +nan.0 (exp (* 3 (- (log -1) (log x))))) (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))) (* 2 0)) into (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (+ (* 0 (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))) (+ (* (* +nan.0 (exp (* 3 (- (log -1) (log x))))) (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (+ (* (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* +nan.0 (exp (* 3 (- (log -1) (log x)))))) (* (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)) 0)))) into (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))) into (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 2) (+ (* 2 (* (* +nan.0 (exp (* 3 (- (log -1) (log x))))) (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))))) (* 2 0)) into (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 4))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 2) (+ (* 2 (* (* +nan.0 (exp (* 3 (- (log -1) (log x))))) (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))))) (* 2 0)) into (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 4))
* [misc]backup-simplify:  Simplify (+ (* 0 (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 4))) (+ (* (* +nan.0 (exp (* 3 (- (log -1) (log x))))) (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))) (+ (* (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 2))) (+ (* (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)) (* +nan.0 (exp (* 3 (- (log -1) (log x)))))) (* (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 4)) 0))))) into (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 4)))
* [misc]backup-simplify:  Simplify (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 4))) into (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log x)))) 4)))
* [misc]backup-simplify:  Simplify (+ (* (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 4))) (pow (/ 1 (- x)) 2)) (+ (* (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3))) (/ 1 (- x))) (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2))))) into (- (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 4) (pow x 2))) (- (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) x)) (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)))))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x -48.0) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (- 48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 48.0) (pow x 2)) into (* -48.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -48.0 (pow (/ 1 (/ 1 x)) 2)) into (* -48.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -48.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* -48.0 (pow x 2))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (pow (* (* x 16.0) (pow x 3)) 1/2)) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 2 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (pow (sqrt (* (* x 16.0) (pow x 3))) 1)) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 3 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (exp (log (sqrt (* (* x 16.0) (pow x 3)))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (log (sqrt (* (* x 16.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (log (sqrt (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (log (sqrt (* (pow x 3) (* x 16.0))))
* * * * [misc]progress:  [ 4 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (log (exp (sqrt (* (* x 16.0) (pow x 3)))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (exp (sqrt (* (* x 16.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (exp (sqrt (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (exp (sqrt (* (pow x 3) (* x 16.0))))
* * * * [misc]progress:  [ 5 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (* (* (cbrt (sqrt (* (* x 16.0) (pow x 3)))) (cbrt (sqrt (* (* x 16.0) (pow x 3))))) (cbrt (sqrt (* (* x 16.0) (pow x 3)))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (* (* x 16.0) (pow x 3)))) (cbrt (sqrt (* (* x 16.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (* (pow x 3) (* x 16.0)))) (cbrt (sqrt (* (pow x 3) (* x 16.0)))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (* (pow x 3) (* x 16.0)))) (cbrt (sqrt (* (pow x 3) (* x 16.0)))))
* [enter]simplify:  Simplifying (cbrt (sqrt (* (* x 16.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (cbrt (sqrt (* (pow x 3) (* x 16.0))))
* * * * [misc]progress:  [ 6 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (cbrt (* (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (sqrt (* (* x 16.0) (pow x 3)))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (sqrt (* (* x 16.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (123 enodes)
* * [misc]simplify:  iters left: 1 (138 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (* x 16.0)) (sqrt (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (* (* (pow x 3) (* x 16.0)) (sqrt (* (pow x 3) (* x 16.0))))
* * * * [misc]progress:  [ 7 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (* (sqrt (* x 16.0)) (sqrt (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (sqrt (* x 16.0))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (5 enodes)
* [exit]simplify:  Simplified to (sqrt (* x 16.0))
* [exit]simplify:  Simplified to (sqrt (* x 16.0))
* [enter]simplify:  Simplifying (sqrt (pow x 3))
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 8 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (* (sqrt (sqrt (* (* x 16.0) (pow x 3)))) (sqrt (sqrt (* (* x 16.0) (pow x 3)))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (sqrt (sqrt (* (* x 16.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (* (pow x 3) (* x 16.0))))
* [enter]simplify:  Simplifying (sqrt (sqrt (* (* x 16.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (* (pow x 3) (* x 16.0))))
* * * * [misc]progress:  [ 9 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (* 1 (sqrt (* (* x 16.0) (pow x 3))))) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 10 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (pow (* (* x 16.0) (pow x 3)) 1/2) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 11 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (pow (sqrt (* (* x 16.0) (pow x 3))) 1) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 12 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (exp (log (sqrt (* (* x 16.0) (pow x 3))))) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (log (sqrt (* (* x 16.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (log (sqrt (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (log (sqrt (* (pow x 3) (* x 16.0))))
* * * * [misc]progress:  [ 13 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (log (exp (sqrt (* (* x 16.0) (pow x 3))))) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (exp (sqrt (* (* x 16.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (exp (sqrt (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (exp (sqrt (* (pow x 3) (* x 16.0))))
* * * * [misc]progress:  [ 14 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (* (cbrt (sqrt (* (* x 16.0) (pow x 3)))) (cbrt (sqrt (* (* x 16.0) (pow x 3))))) (cbrt (sqrt (* (* x 16.0) (pow x 3))))) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (* (* x 16.0) (pow x 3)))) (cbrt (sqrt (* (* x 16.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (* (pow x 3) (* x 16.0)))) (cbrt (sqrt (* (pow x 3) (* x 16.0)))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (* (pow x 3) (* x 16.0)))) (cbrt (sqrt (* (pow x 3) (* x 16.0)))))
* [enter]simplify:  Simplifying (cbrt (sqrt (* (* x 16.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (cbrt (sqrt (* (pow x 3) (* x 16.0))))
* * * * [misc]progress:  [ 15 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (cbrt (* (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (sqrt (* (* x 16.0) (pow x 3))))) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (sqrt (* (* x 16.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (123 enodes)
* * [misc]simplify:  iters left: 1 (138 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (* x 16.0)) (sqrt (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (* (* (pow x 3) (* x 16.0)) (sqrt (* (pow x 3) (* x 16.0))))
* * * * [misc]progress:  [ 16 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (sqrt (* x 16.0)) (sqrt (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (sqrt (* x 16.0))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (5 enodes)
* [exit]simplify:  Simplified to (sqrt (* x 16.0))
* [exit]simplify:  Simplified to (sqrt (* x 16.0))
* [enter]simplify:  Simplifying (sqrt (pow x 3))
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 17 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (sqrt (sqrt (* (* x 16.0) (pow x 3)))) (sqrt (sqrt (* (* x 16.0) (pow x 3))))) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (sqrt (sqrt (* (* x 16.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (* (pow x 3) (* x 16.0))))
* [enter]simplify:  Simplifying (sqrt (sqrt (* (* x 16.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (* (pow x 3) (* x 16.0))))
* * * * [misc]progress:  [ 18 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* 1 (sqrt (* (* x 16.0) (pow x 3)))) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 19 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (pow (* (* x 16.0) (pow x 3)) (+ 1/2 1/2)) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 1/2 1/2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/2 1/2)
* [exit]simplify:  Simplified to (+ 1/2 1/2)
* * * * [misc]progress:  [ 20 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (pow (sqrt (* (* x 16.0) (pow x 3))) (+ 1 1)) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 21 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (pow (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) 1/2) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (171 enodes)
* * [misc]simplify:  iters left: 2 (314 enodes)
* * [misc]simplify:  iters left: 1 (352 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (* x 16.0)) (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (* (* (pow x 3) (* x 16.0)) (* (pow x 3) (* x 16.0)))
* * * * [misc]progress:  [ 22 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (pow (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) 1) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x 16.0))
* [exit]simplify:  Simplified to (* (pow x 3) (* x 16.0))
* * * * [misc]progress:  [ 23 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (pow (sqrt (* (* x 16.0) (pow x 3))) 2) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 24 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (pow (sqrt (* (* x 16.0) (pow x 3))) (+ 1 1)) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 25 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (pow (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) 1) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 26 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (exp (+ (log (sqrt (* (* x 16.0) (pow x 3)))) (log (sqrt (* (* x 16.0) (pow x 3)))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ (log (sqrt (* (* x 16.0) (pow x 3)))) (log (sqrt (* (* x 16.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (+ (log (sqrt (* (pow x 3) (* x 16.0)))) (log (sqrt (* (pow x 3) (* x 16.0)))))
* [exit]simplify:  Simplified to (+ (log (sqrt (* (pow x 3) (* x 16.0)))) (log (sqrt (* (pow x 3) (* x 16.0)))))
* * * * [misc]progress:  [ 27 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (exp (log (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (log (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (log (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (log (* (pow x 3) (* x 16.0)))
* * * * [misc]progress:  [ 28 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (log (exp (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (exp (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (exp (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (exp (* (pow x 3) (* x 16.0)))
* * * * [misc]progress:  [ 29 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (sqrt (* (* x 16.0) (pow x 3)))) (* (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (sqrt (* (* x 16.0) (pow x 3)))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (sqrt (* (* x 16.0) (pow x 3)))) (* (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (sqrt (* (* x 16.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (177 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* x 16.0)) 3)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* x 16.0)) 3)
* * * * [misc]progress:  [ 30 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (cbrt (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3))))) (cbrt (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))))) (cbrt (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3))))) (cbrt (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3))))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (49 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x 16.0))) (cbrt (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x 16.0))) (cbrt (* (pow x 3) (* x 16.0))))
* [enter]simplify:  Simplifying (cbrt (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x 16.0)))
* * * * [misc]progress:  [ 31 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3))))) (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3))))) (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (265 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* x 16.0)) 3)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* x 16.0)) 3)
* * * * [misc]progress:  [ 32 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (sqrt (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (171 enodes)
* * [misc]simplify:  iters left: 2 (314 enodes)
* * [misc]simplify:  iters left: 1 (352 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (* x 16.0)) (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (* (* (pow x 3) (* x 16.0)) (* (pow x 3) (* x 16.0)))
* * * * [misc]progress:  [ 33 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3))))) (sqrt (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (sqrt (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 16.0)))
* [enter]simplify:  Simplifying (sqrt (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 16.0)))
* * * * [misc]progress:  [ 34 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 35 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* 1 (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3))))) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 36 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (sqrt (* (* x 16.0) (pow x 3))) (* (cbrt (sqrt (* (* x 16.0) (pow x 3)))) (cbrt (sqrt (* (* x 16.0) (pow x 3)))))) (cbrt (sqrt (* (* x 16.0) (pow x 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (sqrt (* (* x 16.0) (pow x 3))) (* (cbrt (sqrt (* (* x 16.0) (pow x 3)))) (cbrt (sqrt (* (* x 16.0) (pow x 3))))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (sqrt (* (pow x 3) (* x 16.0)))) (sqrt (* (pow x 3) (* x 16.0)))) (cbrt (sqrt (* (pow x 3) (* x 16.0)))))
* [exit]simplify:  Simplified to (* (* (cbrt (sqrt (* (pow x 3) (* x 16.0)))) (sqrt (* (pow x 3) (* x 16.0)))) (cbrt (sqrt (* (pow x 3) (* x 16.0)))))
* * * * [misc]progress:  [ 37 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* x 16.0))) (sqrt (pow x 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* x 16.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* x 16.0)) (sqrt (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (* (sqrt (* x 16.0)) (sqrt (* (pow x 3) (* x 16.0))))
* * * * [misc]progress:  [ 38 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (sqrt (* (* x 16.0) (pow x 3))))) (sqrt (sqrt (* (* x 16.0) (pow x 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (sqrt (* (* x 16.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (* (sqrt (sqrt (* (pow x 3) (* x 16.0)))) (sqrt (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (* (sqrt (sqrt (* (pow x 3) (* x 16.0)))) (sqrt (* (pow x 3) (* x 16.0))))
* * * * [misc]progress:  [ 39 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (sqrt (* (* x 16.0) (pow x 3))) 1) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (sqrt (* (* x 16.0) (pow x 3))) 1)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 16.0)))
* * * * [misc]progress:  [ 40 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (cbrt (sqrt (* (* x 16.0) (pow x 3)))) (cbrt (sqrt (* (* x 16.0) (pow x 3))))) (* (cbrt (sqrt (* (* x 16.0) (pow x 3)))) (sqrt (* (* x 16.0) (pow x 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (* (* x 16.0) (pow x 3)))) (sqrt (* (* x 16.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (* (pow x 3) (* x 16.0)))) (sqrt (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (* (pow x 3) (* x 16.0)))) (sqrt (* (pow x 3) (* x 16.0))))
* * * * [misc]progress:  [ 41 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* x 16.0)) (* (sqrt (pow x 3)) (sqrt (* (* x 16.0) (pow x 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (sqrt (pow x 3)) (sqrt (* (* x 16.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow x 3)) (sqrt (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (* (sqrt (pow x 3)) (sqrt (* (pow x 3) (* x 16.0))))
* * * * [misc]progress:  [ 42 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (sqrt (* (* x 16.0) (pow x 3)))) (* (sqrt (sqrt (* (* x 16.0) (pow x 3)))) (sqrt (* (* x 16.0) (pow x 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (sqrt (sqrt (* (* x 16.0) (pow x 3)))) (sqrt (* (* x 16.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (* (sqrt (sqrt (* (pow x 3) (* x 16.0)))) (sqrt (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (* (sqrt (sqrt (* (pow x 3) (* x 16.0)))) (sqrt (* (pow x 3) (* x 16.0))))
* * * * [misc]progress:  [ 43 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* 1 (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x 16.0))
* [exit]simplify:  Simplified to (* (pow x 3) (* x 16.0))
* * * * [misc]progress:  [ 44 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 45 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (pow (* (* x -48.0) x) 1))))>
* * * * [misc]progress:  [ 46 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (exp (log (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (log (* (* x -48.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* [exit]simplify:  Simplified to (log (* x (* x -48.0)))
* [exit]simplify:  Simplified to (log (* x (* x -48.0)))
* * * * [misc]progress:  [ 47 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (log (exp (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (exp (* (* x -48.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* [exit]simplify:  Simplified to (exp (* x (* x -48.0)))
* [exit]simplify:  Simplified to (exp (* x (* x -48.0)))
* * * * [misc]progress:  [ 48 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (* (* (cbrt (* (* x -48.0) x)) (cbrt (* (* x -48.0) x))) (cbrt (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x -48.0) x)) (cbrt (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -48.0))) (cbrt (* x (* x -48.0))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -48.0))) (cbrt (* x (* x -48.0))))
* [enter]simplify:  Simplifying (cbrt (* (* x -48.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (* x -48.0)))
* [exit]simplify:  Simplified to (cbrt (* x (* x -48.0)))
* * * * [misc]progress:  [ 49 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (cbrt (* (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* x -48.0) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (335 enodes)
* [exit]simplify:  Simplified to (pow (* x (* x -48.0)) 3)
* [exit]simplify:  Simplified to (pow (* x (* x -48.0)) 3)
* * * * [misc]progress:  [ 50 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (* (sqrt (* (* x -48.0) x)) (sqrt (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x -48.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x -48.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x -48.0)))
* [enter]simplify:  Simplifying (sqrt (* (* x -48.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x -48.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x -48.0)))
* * * * [misc]progress:  [ 51 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (* 1 (* (* x -48.0) x)))))>
* * * * [misc]progress:  [ 52 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (* x (* -48.0 x)))))>
* [enter]simplify:  Simplifying (* -48.0 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* -48.0 x)
* [exit]simplify:  Simplified to (* -48.0 x)
* * * * [misc]progress:  [ 53 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (* x (* x -48.0)))))>
* * * * [misc]progress:  [ 54 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (* (sqrt 16.0) (pow x 2))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (* (sqrt 16.0) (pow x 2))) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (124 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (sqrt 16.0)) (sqrt (* (* 16.0 x) (pow x 3)))) (+ (* -48.0 (* x x)) 12.0))
* * * * [misc]progress:  [ 55 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (- (+ (* +nan.0 (pow x 3)) (- (+ (* +nan.0 (pow x 5)) (- (* +nan.0 (pow x 7)))))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (- (+ (* +nan.0 (pow x 3)) (- (+ (* +nan.0 (pow x 5)) (- (* +nan.0 (pow x 7)))))))) (* (* x -48.0) x)))
* * * * [misc]progress:  [ 56 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (- (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) x)) (- (+ (* +nan.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))) (- (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 2))))))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (- (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) x)) (- (+ (* +nan.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))) (- (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 2))))))))) (* (* x -48.0) x)))
* * * * [misc]progress:  [ 57 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* (* (sqrt 16.0) (pow x 2)) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* (* (sqrt 16.0) (pow x 2)) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (111 enodes)
* * [misc]simplify:  iters left: 2 (150 enodes)
* * [misc]simplify:  iters left: 1 (176 enodes)
* [exit]simplify:  Simplified to (+ (* (sqrt (* (* x 16.0) (pow x 3))) (* (sqrt 16.0) (* x x))) (+ (* x (* x -48.0)) 12.0))
* * * * [misc]progress:  [ 58 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* (- (+ (* +nan.0 (pow x 3)) (- (+ (* +nan.0 (pow x 5)) (- (* +nan.0 (pow x 7))))))) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* (- (+ (* +nan.0 (pow x 3)) (- (+ (* +nan.0 (pow x 5)) (- (* +nan.0 (pow x 7))))))) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x)))
* * * * [misc]progress:  [ 59 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* (- (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) x)) (- (+ (* +nan.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))) (- (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 2)))))))) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* (- (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) x)) (- (+ (* +nan.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))) (- (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 2)))))))) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x)))
* * * * [misc]progress:  [ 60 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* (pow (sqrt 16.0) 2) (pow x 4)) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* (pow (sqrt 16.0) 2) (pow x 4)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (+ (+ 12.0 (* (* -48.0 x) x)) (* (pow x 4) 16.0))
* * * * [misc]progress:  [ 61 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (- (+ (* +nan.0 (pow x 10)) (- (+ (* +nan.0 (pow x 6)) (- (* +nan.0 (pow x 8))))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (- (+ (* +nan.0 (pow x 10)) (- (+ (* +nan.0 (pow x 6)) (- (* +nan.0 (pow x 8))))))) (* (* x -48.0) x)))
* * * * [misc]progress:  [ 62 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (- (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 4) (pow x 2))) (- (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) x)) (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))))))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (- (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 4) (pow x 2))) (- (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) x)) (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))))))) (* (* x -48.0) x)))
* * * * [misc]progress:  [ 63 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (* -48.0 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (* -48.0 (pow x 2))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (91 enodes)
* * [misc]simplify:  iters left: 2 (138 enodes)
* * [misc]simplify:  iters left: 1 (185 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) -48.0) (+ 12.0 (* (* 16.0 x) (pow x 3))))
* * * * [misc]progress:  [ 64 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (* -48.0 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (* -48.0 (pow x 2))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (91 enodes)
* * [misc]simplify:  iters left: 2 (138 enodes)
* * [misc]simplify:  iters left: 1 (185 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) -48.0) (+ 12.0 (* (* 16.0 x) (pow x 3))))
* * * * [misc]progress:  [ 65 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (* -48.0 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (* -48.0 (pow x 2))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (91 enodes)
* * [misc]simplify:  iters left: 2 (138 enodes)
* * [misc]simplify:  iters left: 1 (185 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) -48.0) (+ 12.0 (* (* 16.0 x) (pow x 3))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (cbrt (pow (+ (+ (* x (* -48.0 x)) 12.0) (* (* 16.0 x) (pow x 3))) 3)))> #<alt-delta (Î» (x) (* (sqrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (sqrt (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))> #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))> #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ 12.0 (* -48.0 (* x x))) (* 16.0 (* (* (* x x) x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (pow (pow x 3) 3) (pow (* x 16.0) 3))) (* (* x -48.0) x))))>)
* [enter]simplify:  Simplifying (pow (pow x 3) 3)
* * [misc]simplify:  iters left: 2 (4 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [enter]simplify:  Simplifying (pow (* x 16.0) 3)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow (* x 16.0) 3)
* [exit]simplify:  Simplified to (pow (* x 16.0) 3)
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
