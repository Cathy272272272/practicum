* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 2.0007974164906321e+37 (* -9.603827599155034e+38 (* x x))) (* 7.362934492685525e+39 (* (* (* x x) x) x))) (* -2.159794117854421e+40 (* (* (* (* (* x x) x) x) x) x))) (* 3.2396911767816312e+40 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))) (* -2.879725490472561e+40 (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x))) (* 1.6580237672417776e+40 (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x))) (* -6.559214903374066e+39 (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x))) (* 1.858444222622652e+39 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* -3.8869421649624096e+38 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* 6.137277102572225e+37 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* -7.439123760693607e+36 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* 7.00787020934905e+35 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* -5.175042616134682e+34 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* 3.0119295649461116e+33 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* -1.3847952022740743e+32 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* 5.025466459865592e+30 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* -1.4332881168957126e+29 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* 3.1850847042126946e+27 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* -5.436844445313277e+25 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* 6.970313391427278e+23 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* -6.476481664508504e+21 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* 4.107705072626958e+19 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* -1.5875188686481e+17 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* 281474976710656.0 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (121 enodes)
* * [misc]simplify:  iters left: 5 (354 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17))))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 1 2 1 1 1 1 2 1 1 2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1 2 1 1 1 1 2 1 2 2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 2 1 1 1 1 2 1 2 1 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 1 2 1 1 1 1 2 2 2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 1 2 1 1 1 1 2 1 1 2 1 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) 3.2396911767816312e+40) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) 3.2396911767816312e+40) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.2396911767816312e+40 in x
* [misc]backup-simplify:  Simplify 3.2396911767816312e+40 into 3.2396911767816312e+40
* [misc]taylor:  Taking taylor expansion of (* (* x x) 3.2396911767816312e+40) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3.2396911767816312e+40 in x
* [misc]backup-simplify:  Simplify 3.2396911767816312e+40 into 3.2396911767816312e+40
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 3.2396911767816312e+40) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 3.2396911767816312e+40)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 3.2396911767816312e+40))) into 3.2396911767816312e+40
* [misc]backup-simplify:  Simplify 3.2396911767816312e+40 into 3.2396911767816312e+40
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (* 0 3.2396911767816312e+40)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 3.2396911767816312e+40))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.2396911767816312e+40)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.2396911767816312e+40))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.2396911767816312e+40)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.2396911767816312e+40))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.2396911767816312e+40 (pow x 2)) into (* 3.2396911767816312e+40 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) 3.2396911767816312e+40) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) 3.2396911767816312e+40) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.2396911767816312e+40 in x
* [misc]backup-simplify:  Simplify 3.2396911767816312e+40 into 3.2396911767816312e+40
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) 3.2396911767816312e+40) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 3.2396911767816312e+40 in x
* [misc]backup-simplify:  Simplify 3.2396911767816312e+40 into 3.2396911767816312e+40
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 3.2396911767816312e+40) into 3.2396911767816312e+40
* [misc]backup-simplify:  Simplify 3.2396911767816312e+40 into 3.2396911767816312e+40
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 3.2396911767816312e+40)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 3.2396911767816312e+40))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.2396911767816312e+40)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.2396911767816312e+40))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.2396911767816312e+40)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.2396911767816312e+40))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.2396911767816312e+40 (pow (/ 1 (/ 1 x)) 2)) into (* 3.2396911767816312e+40 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) 3.2396911767816312e+40) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) 3.2396911767816312e+40) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.2396911767816312e+40 in x
* [misc]backup-simplify:  Simplify 3.2396911767816312e+40 into 3.2396911767816312e+40
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) 3.2396911767816312e+40) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 3.2396911767816312e+40 in x
* [misc]backup-simplify:  Simplify 3.2396911767816312e+40 into 3.2396911767816312e+40
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 3.2396911767816312e+40) into 3.2396911767816312e+40
* [misc]backup-simplify:  Simplify 3.2396911767816312e+40 into 3.2396911767816312e+40
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 3.2396911767816312e+40)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 3.2396911767816312e+40))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.2396911767816312e+40)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.2396911767816312e+40))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.2396911767816312e+40)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 3.2396911767816312e+40))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.2396911767816312e+40 (pow (/ 1 (/ 1 (- x))) 2)) into (* 3.2396911767816312e+40 (pow x 2))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1 2 1 1 1 1 2 1 2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) 1.6580237672417776e+40) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) 1.6580237672417776e+40) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1.6580237672417776e+40 in x
* [misc]backup-simplify:  Simplify 1.6580237672417776e+40 into 1.6580237672417776e+40
* [misc]taylor:  Taking taylor expansion of (* (* x x) 1.6580237672417776e+40) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1.6580237672417776e+40 in x
* [misc]backup-simplify:  Simplify 1.6580237672417776e+40 into 1.6580237672417776e+40
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 1.6580237672417776e+40) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 1.6580237672417776e+40)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 1.6580237672417776e+40))) into 1.6580237672417776e+40
* [misc]backup-simplify:  Simplify 1.6580237672417776e+40 into 1.6580237672417776e+40
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (* 0 1.6580237672417776e+40)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 1.6580237672417776e+40))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.6580237672417776e+40)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.6580237672417776e+40))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.6580237672417776e+40)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.6580237672417776e+40))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1.6580237672417776e+40 (pow x 2)) into (* 1.6580237672417776e+40 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) 1.6580237672417776e+40) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) 1.6580237672417776e+40) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 1.6580237672417776e+40 in x
* [misc]backup-simplify:  Simplify 1.6580237672417776e+40 into 1.6580237672417776e+40
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) 1.6580237672417776e+40) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 1.6580237672417776e+40 in x
* [misc]backup-simplify:  Simplify 1.6580237672417776e+40 into 1.6580237672417776e+40
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1.6580237672417776e+40) into 1.6580237672417776e+40
* [misc]backup-simplify:  Simplify 1.6580237672417776e+40 into 1.6580237672417776e+40
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1.6580237672417776e+40)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1.6580237672417776e+40))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.6580237672417776e+40)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.6580237672417776e+40))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.6580237672417776e+40)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.6580237672417776e+40))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1.6580237672417776e+40 (pow (/ 1 (/ 1 x)) 2)) into (* 1.6580237672417776e+40 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) 1.6580237672417776e+40) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) 1.6580237672417776e+40) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 1.6580237672417776e+40 in x
* [misc]backup-simplify:  Simplify 1.6580237672417776e+40 into 1.6580237672417776e+40
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) 1.6580237672417776e+40) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 1.6580237672417776e+40 in x
* [misc]backup-simplify:  Simplify 1.6580237672417776e+40 into 1.6580237672417776e+40
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1.6580237672417776e+40) into 1.6580237672417776e+40
* [misc]backup-simplify:  Simplify 1.6580237672417776e+40 into 1.6580237672417776e+40
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1.6580237672417776e+40)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1.6580237672417776e+40))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.6580237672417776e+40)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.6580237672417776e+40))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.6580237672417776e+40)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.6580237672417776e+40))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1.6580237672417776e+40 (pow (/ 1 (/ 1 (- x))) 2)) into (* 1.6580237672417776e+40 (pow x 2))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 2 1 1 1 1 2 1 2 1 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) -2.879725490472561e+40) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) -2.879725490472561e+40) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2.879725490472561e+40 in x
* [misc]backup-simplify:  Simplify -2.879725490472561e+40 into -2.879725490472561e+40
* [misc]taylor:  Taking taylor expansion of (* (* x x) -2.879725490472561e+40) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2.879725490472561e+40 in x
* [misc]backup-simplify:  Simplify -2.879725490472561e+40 into -2.879725490472561e+40
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -2.879725490472561e+40) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 -2.879725490472561e+40)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 -2.879725490472561e+40))) into (- 2.879725490472561e+40)
* [misc]backup-simplify:  Simplify (- 2.879725490472561e+40) into (- 2.879725490472561e+40)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (* 0 -2.879725490472561e+40)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -2.879725490472561e+40))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.879725490472561e+40)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.879725490472561e+40))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.879725490472561e+40)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.879725490472561e+40))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 2.879725490472561e+40) (pow x 2)) into (* -2.879725490472561e+40 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -2.879725490472561e+40) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -2.879725490472561e+40) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2.879725490472561e+40 in x
* [misc]backup-simplify:  Simplify -2.879725490472561e+40 into -2.879725490472561e+40
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -2.879725490472561e+40) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2.879725490472561e+40 in x
* [misc]backup-simplify:  Simplify -2.879725490472561e+40 into -2.879725490472561e+40
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -2.879725490472561e+40) into -2.879725490472561e+40
* [misc]backup-simplify:  Simplify -2.879725490472561e+40 into -2.879725490472561e+40
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -2.879725490472561e+40)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -2.879725490472561e+40))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.879725490472561e+40)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.879725490472561e+40))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.879725490472561e+40)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.879725490472561e+40))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -2.879725490472561e+40 (pow (/ 1 (/ 1 x)) 2)) into (* -2.879725490472561e+40 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -2.879725490472561e+40) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -2.879725490472561e+40) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2.879725490472561e+40 in x
* [misc]backup-simplify:  Simplify -2.879725490472561e+40 into -2.879725490472561e+40
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -2.879725490472561e+40) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2.879725490472561e+40 in x
* [misc]backup-simplify:  Simplify -2.879725490472561e+40 into -2.879725490472561e+40
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -2.879725490472561e+40) into -2.879725490472561e+40
* [misc]backup-simplify:  Simplify -2.879725490472561e+40 into -2.879725490472561e+40
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -2.879725490472561e+40)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -2.879725490472561e+40))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.879725490472561e+40)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.879725490472561e+40))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.879725490472561e+40)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.879725490472561e+40))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -2.879725490472561e+40 (pow (/ 1 (/ 1 (- x))) 2)) into (* -2.879725490472561e+40 (pow x 2))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 1 2 1 1 1 1 2 2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) -6.559214903374066e+39) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) -6.559214903374066e+39) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -6.559214903374066e+39 in x
* [misc]backup-simplify:  Simplify -6.559214903374066e+39 into -6.559214903374066e+39
* [misc]taylor:  Taking taylor expansion of (* (* x x) -6.559214903374066e+39) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -6.559214903374066e+39 in x
* [misc]backup-simplify:  Simplify -6.559214903374066e+39 into -6.559214903374066e+39
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -6.559214903374066e+39) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 -6.559214903374066e+39)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 -6.559214903374066e+39))) into (- 6.559214903374066e+39)
* [misc]backup-simplify:  Simplify (- 6.559214903374066e+39) into (- 6.559214903374066e+39)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (* 0 -6.559214903374066e+39)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -6.559214903374066e+39))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -6.559214903374066e+39)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -6.559214903374066e+39))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -6.559214903374066e+39)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -6.559214903374066e+39))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 6.559214903374066e+39) (pow x 2)) into (* -6.559214903374066e+39 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -6.559214903374066e+39) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -6.559214903374066e+39) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -6.559214903374066e+39 in x
* [misc]backup-simplify:  Simplify -6.559214903374066e+39 into -6.559214903374066e+39
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -6.559214903374066e+39) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -6.559214903374066e+39 in x
* [misc]backup-simplify:  Simplify -6.559214903374066e+39 into -6.559214903374066e+39
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -6.559214903374066e+39) into -6.559214903374066e+39
* [misc]backup-simplify:  Simplify -6.559214903374066e+39 into -6.559214903374066e+39
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -6.559214903374066e+39)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -6.559214903374066e+39))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -6.559214903374066e+39)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -6.559214903374066e+39))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -6.559214903374066e+39)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -6.559214903374066e+39))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -6.559214903374066e+39 (pow (/ 1 (/ 1 x)) 2)) into (* -6.559214903374066e+39 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -6.559214903374066e+39) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -6.559214903374066e+39) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -6.559214903374066e+39 in x
* [misc]backup-simplify:  Simplify -6.559214903374066e+39 into -6.559214903374066e+39
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -6.559214903374066e+39) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -6.559214903374066e+39 in x
* [misc]backup-simplify:  Simplify -6.559214903374066e+39 into -6.559214903374066e+39
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -6.559214903374066e+39) into -6.559214903374066e+39
* [misc]backup-simplify:  Simplify -6.559214903374066e+39 into -6.559214903374066e+39
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -6.559214903374066e+39)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -6.559214903374066e+39))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -6.559214903374066e+39)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -6.559214903374066e+39))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -6.559214903374066e+39)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -6.559214903374066e+39))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -6.559214903374066e+39 (pow (/ 1 (/ 1 (- x))) 2)) into (* -6.559214903374066e+39 (pow x 2))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (pow (* (* x x) 3.2396911767816312e+40) 1)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* * * * [misc]progress:  [ 2 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (exp (log (* (* x x) 3.2396911767816312e+40)))) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (log (* (* x x) 3.2396911767816312e+40))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* * [misc]simplify:  iters left: 1 (26 enodes)
* [exit]simplify:  Simplified to (log (* x (* x 3.2396911767816312e+40)))
* [exit]simplify:  Simplified to (log (* x (* x 3.2396911767816312e+40)))
* * * * [misc]progress:  [ 3 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (log (exp (* (* x x) 3.2396911767816312e+40)))) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (exp (* (* x x) 3.2396911767816312e+40))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* [exit]simplify:  Simplified to (exp (* (* x 3.2396911767816312e+40) x))
* [exit]simplify:  Simplified to (exp (* (* x 3.2396911767816312e+40) x))
* * * * [misc]progress:  [ 4 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* (cbrt (* (* x x) 3.2396911767816312e+40)) (cbrt (* (* x x) 3.2396911767816312e+40))) (cbrt (* (* x x) 3.2396911767816312e+40)))) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) 3.2396911767816312e+40)) (cbrt (* (* x x) 3.2396911767816312e+40)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 3.2396911767816312e+40))) (cbrt (* x (* x 3.2396911767816312e+40))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 3.2396911767816312e+40))) (cbrt (* x (* x 3.2396911767816312e+40))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) 3.2396911767816312e+40))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (* 3.2396911767816312e+40 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* 3.2396911767816312e+40 (* x x)))
* * * * [misc]progress:  [ 5 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (cbrt (* (* (* (* x x) 3.2396911767816312e+40) (* (* x x) 3.2396911767816312e+40)) (* (* x x) 3.2396911767816312e+40)))) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) 3.2396911767816312e+40) (* (* x x) 3.2396911767816312e+40)) (* (* x x) 3.2396911767816312e+40))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (266 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* 3.2396911767816312e+40 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* 3.2396911767816312e+40 (* x x)) 3)
* * * * [misc]progress:  [ 6 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (sqrt (* (* x x) 3.2396911767816312e+40)) (sqrt (* (* x x) 3.2396911767816312e+40)))) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) 3.2396911767816312e+40))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* 3.2396911767816312e+40 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 3.2396911767816312e+40 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (* x x) 3.2396911767816312e+40))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* 3.2396911767816312e+40 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 3.2396911767816312e+40 (* x x)))
* * * * [misc]progress:  [ 7 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* 1 (* (* x x) 3.2396911767816312e+40))) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* * * * [misc]progress:  [ 8 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* x (* x 3.2396911767816312e+40))) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (* x 3.2396911767816312e+40)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* x 3.2396911767816312e+40)
* [exit]simplify:  Simplified to (* x 3.2396911767816312e+40)
* * * * [misc]progress:  [ 9 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* 3.2396911767816312e+40 (* x x))) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* * * * [misc]progress:  [ 10 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (pow (* (* x x) 1.6580237672417776e+40) 1)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* * * * [misc]progress:  [ 11 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (exp (log (* (* x x) 1.6580237672417776e+40)))))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (log (* (* x x) 1.6580237672417776e+40))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* * [misc]simplify:  iters left: 1 (26 enodes)
* [exit]simplify:  Simplified to (log (* x (* x 1.6580237672417776e+40)))
* [exit]simplify:  Simplified to (log (* x (* x 1.6580237672417776e+40)))
* * * * [misc]progress:  [ 12 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (log (exp (* (* x x) 1.6580237672417776e+40)))))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (exp (* (* x x) 1.6580237672417776e+40))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* [exit]simplify:  Simplified to (exp (* (* x 1.6580237672417776e+40) x))
* [exit]simplify:  Simplified to (exp (* (* x 1.6580237672417776e+40) x))
* * * * [misc]progress:  [ 13 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* (cbrt (* (* x x) 1.6580237672417776e+40)) (cbrt (* (* x x) 1.6580237672417776e+40))) (cbrt (* (* x x) 1.6580237672417776e+40)))))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) 1.6580237672417776e+40)) (cbrt (* (* x x) 1.6580237672417776e+40)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 1.6580237672417776e+40))) (cbrt (* x (* x 1.6580237672417776e+40))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 1.6580237672417776e+40))) (cbrt (* x (* x 1.6580237672417776e+40))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) 1.6580237672417776e+40))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (* 1.6580237672417776e+40 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* 1.6580237672417776e+40 (* x x)))
* * * * [misc]progress:  [ 14 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (cbrt (* (* (* (* x x) 1.6580237672417776e+40) (* (* x x) 1.6580237672417776e+40)) (* (* x x) 1.6580237672417776e+40)))))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) 1.6580237672417776e+40) (* (* x x) 1.6580237672417776e+40)) (* (* x x) 1.6580237672417776e+40))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (266 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* 1.6580237672417776e+40 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* 1.6580237672417776e+40 (* x x)) 3)
* * * * [misc]progress:  [ 15 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (sqrt (* (* x x) 1.6580237672417776e+40)) (sqrt (* (* x x) 1.6580237672417776e+40)))))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) 1.6580237672417776e+40))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* 1.6580237672417776e+40 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 1.6580237672417776e+40 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (* x x) 1.6580237672417776e+40))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* 1.6580237672417776e+40 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 1.6580237672417776e+40 (* x x)))
* * * * [misc]progress:  [ 16 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* 1 (* (* x x) 1.6580237672417776e+40))))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* * * * [misc]progress:  [ 17 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* x (* x 1.6580237672417776e+40))))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (* x 1.6580237672417776e+40)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* x 1.6580237672417776e+40)
* [exit]simplify:  Simplified to (* x 1.6580237672417776e+40)
* * * * [misc]progress:  [ 18 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* 1.6580237672417776e+40 (* x x))))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* * * * [misc]progress:  [ 19 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) -2.879725490472561e+40) 1)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* * * * [misc]progress:  [ 20 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (exp (log (* (* x x) -2.879725490472561e+40)))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (log (* (* x x) -2.879725490472561e+40))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* * [misc]simplify:  iters left: 1 (26 enodes)
* [exit]simplify:  Simplified to (log (* x (* x -2.879725490472561e+40)))
* [exit]simplify:  Simplified to (log (* x (* x -2.879725490472561e+40)))
* * * * [misc]progress:  [ 21 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (log (exp (* (* x x) -2.879725490472561e+40)))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (exp (* (* x x) -2.879725490472561e+40))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* [exit]simplify:  Simplified to (exp (* (* x -2.879725490472561e+40) x))
* [exit]simplify:  Simplified to (exp (* (* x -2.879725490472561e+40) x))
* * * * [misc]progress:  [ 22 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (cbrt (* (* x x) -2.879725490472561e+40)) (cbrt (* (* x x) -2.879725490472561e+40))) (cbrt (* (* x x) -2.879725490472561e+40)))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) -2.879725490472561e+40)) (cbrt (* (* x x) -2.879725490472561e+40)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -2.879725490472561e+40))) (cbrt (* x (* x -2.879725490472561e+40))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -2.879725490472561e+40))) (cbrt (* x (* x -2.879725490472561e+40))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) -2.879725490472561e+40))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (* -2.879725490472561e+40 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* -2.879725490472561e+40 (* x x)))
* * * * [misc]progress:  [ 23 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (cbrt (* (* (* (* x x) -2.879725490472561e+40) (* (* x x) -2.879725490472561e+40)) (* (* x x) -2.879725490472561e+40)))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) -2.879725490472561e+40) (* (* x x) -2.879725490472561e+40)) (* (* x x) -2.879725490472561e+40))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (266 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* -2.879725490472561e+40 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* -2.879725490472561e+40 (* x x)) 3)
* * * * [misc]progress:  [ 24 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (sqrt (* (* x x) -2.879725490472561e+40)) (sqrt (* (* x x) -2.879725490472561e+40)))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) -2.879725490472561e+40))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* -2.879725490472561e+40 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* -2.879725490472561e+40 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (* x x) -2.879725490472561e+40))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* -2.879725490472561e+40 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* -2.879725490472561e+40 (* x x)))
* * * * [misc]progress:  [ 25 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 1 (* (* x x) -2.879725490472561e+40))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* * * * [misc]progress:  [ 26 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (* x -2.879725490472561e+40))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (* x -2.879725490472561e+40)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* x -2.879725490472561e+40)
* [exit]simplify:  Simplified to (* x -2.879725490472561e+40)
* * * * [misc]progress:  [ 27 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -2.879725490472561e+40 (* x x))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* * * * [misc]progress:  [ 28 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (pow (* (* x x) -6.559214903374066e+39) 1))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* * * * [misc]progress:  [ 29 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (exp (log (* (* x x) -6.559214903374066e+39))))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (log (* (* x x) -6.559214903374066e+39))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* * [misc]simplify:  iters left: 1 (26 enodes)
* [exit]simplify:  Simplified to (log (* x (* x -6.559214903374066e+39)))
* [exit]simplify:  Simplified to (log (* x (* x -6.559214903374066e+39)))
* * * * [misc]progress:  [ 30 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (log (exp (* (* x x) -6.559214903374066e+39))))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (exp (* (* x x) -6.559214903374066e+39))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* [exit]simplify:  Simplified to (exp (* (* x -6.559214903374066e+39) x))
* [exit]simplify:  Simplified to (exp (* (* x -6.559214903374066e+39) x))
* * * * [misc]progress:  [ 31 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (cbrt (* (* x x) -6.559214903374066e+39)) (cbrt (* (* x x) -6.559214903374066e+39))) (cbrt (* (* x x) -6.559214903374066e+39))))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) -6.559214903374066e+39)) (cbrt (* (* x x) -6.559214903374066e+39)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -6.559214903374066e+39))) (cbrt (* x (* x -6.559214903374066e+39))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -6.559214903374066e+39))) (cbrt (* x (* x -6.559214903374066e+39))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) -6.559214903374066e+39))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (* -6.559214903374066e+39 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* -6.559214903374066e+39 (* x x)))
* * * * [misc]progress:  [ 32 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (cbrt (* (* (* (* x x) -6.559214903374066e+39) (* (* x x) -6.559214903374066e+39)) (* (* x x) -6.559214903374066e+39))))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) -6.559214903374066e+39) (* (* x x) -6.559214903374066e+39)) (* (* x x) -6.559214903374066e+39))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (266 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* -6.559214903374066e+39 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* -6.559214903374066e+39 (* x x)) 3)
* * * * [misc]progress:  [ 33 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (sqrt (* (* x x) -6.559214903374066e+39)) (sqrt (* (* x x) -6.559214903374066e+39))))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) -6.559214903374066e+39))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* -6.559214903374066e+39 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* -6.559214903374066e+39 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (* x x) -6.559214903374066e+39))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* -6.559214903374066e+39 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* -6.559214903374066e+39 (* x x)))
* * * * [misc]progress:  [ 34 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* 1 (* (* x x) -6.559214903374066e+39)))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* * * * [misc]progress:  [ 35 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x (* x -6.559214903374066e+39)))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (* x -6.559214903374066e+39)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* x -6.559214903374066e+39)
* [exit]simplify:  Simplified to (* x -6.559214903374066e+39)
* * * * [misc]progress:  [ 36 / 48 ] simplifiying candidate #<alt-delta (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* -6.559214903374066e+39 (* x x)))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* * * * [misc]progress:  [ 37 / 48 ] simplifiying candidate #<alt-event (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* 3.2396911767816312e+40 (pow x 2))) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* 3.2396911767816312e+40 (pow x 2))) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17))))
* * [misc]simplify:  iters left: 6 (125 enodes)
* * [misc]simplify:  iters left: 5 (463 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x (* 281474976710656.0 x)) (* (* (* (* (pow (* x x) 3) (pow (* x x) 3)) (* (pow (* x x) 3) (pow (* x x) 3))) (* (pow (* x x) 3) (pow (* x x) 3))) (* (* (* x x) (* x x)) (pow (* x x) 3)))) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) -1.5875188686481e+17))))) (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* x x) (* (* x (* x 6.970313391427278e+23)) (* (* x x) (* x x))))) (* (* (* (pow (* x x) 3) (pow (* x x) 3)) (* (pow (* x x) 3) (pow (* x x) 3))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x -5.436844445313277e+25) x)))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* x x) 6.137277102572225e+37))) (+ (+ (+ (* (* (* (* x x) -3.8869421649624096e+38) (* (* x x) (* x x))) (* (pow (* x x) 3) (pow (* x x) 3))) (+ (+ (* (pow (* x x) 3) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* -2.159794117854421e+40 (* x x)))) (+ (+ (* (* x x) -9.603827599155034e+38) (* (pow x 3) (* x 7.362934492685525e+39))) 2.0007974164906321e+37))) (+ (+ (* (* (* (* x x) (* x x)) (* -6.559214903374066e+39 (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* 1.858444222622652e+39 x) x)) (* (* (* x x) (* x x)) (pow (* x x) 3)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* 1.6580237672417776e+40 (* x x)))) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) -2.879725490472561e+40)))))) (+ (+ (* (* (* (* x x) (* x x)) (* -7.439123760693607e+36 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* (* x x) (* x x)) (* x (* 7.00787020934905e+35 x)))))) (+ (* (* (* 3.0119295649461116e+33 (* x x)) (* (* x x) (* x x))) (* (* (pow (* x x) 3) (pow (* x x) 3)) (* (* (* x x) (* x x)) (pow (* x x) 3)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -5.175042616134682e+34 (* x x)))))))) (+ (+ (+ (* (* (* (pow (* x x) 3) (pow (* x x) 3)) (* (pow (* x x) 3) (pow (* x x) 3))) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* -1.4332881168957126e+29 (* x x))))) (* (* (* (pow (* x x) 3) (pow (* x x) 3)) (* (* (* x x) (* x x)) (pow (* x x) 3))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x (* x 3.1850847042126946e+27)) (* (* x x) (* x x)))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x -1.3847952022740743e+32) x) (* (* x x) (* x x))))) (* 5.025466459865592e+30 (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))))) (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21))) (* (* (* (* (pow (* x x) 3) (pow (* x x) 3)) (* (pow (* x x) 3) (pow (* x x) 3))) (pow (* x x) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* 4.107705072626958e+19 x) x))))))))
* * * * [misc]progress:  [ 38 / 48 ] simplifiying candidate #<alt-event (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* 3.2396911767816312e+40 (pow x 2))) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* 3.2396911767816312e+40 (pow x 2))) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17))))
* * [misc]simplify:  iters left: 6 (125 enodes)
* * [misc]simplify:  iters left: 5 (463 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x (* 281474976710656.0 x)) (* (* (* (* (pow (* x x) 3) (pow (* x x) 3)) (* (pow (* x x) 3) (pow (* x x) 3))) (* (pow (* x x) 3) (pow (* x x) 3))) (* (* (* x x) (* x x)) (pow (* x x) 3)))) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) -1.5875188686481e+17))))) (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* x x) (* (* x (* x 6.970313391427278e+23)) (* (* x x) (* x x))))) (* (* (* (pow (* x x) 3) (pow (* x x) 3)) (* (pow (* x x) 3) (pow (* x x) 3))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x -5.436844445313277e+25) x)))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* x x) 6.137277102572225e+37))) (+ (+ (+ (* (* (* (* x x) -3.8869421649624096e+38) (* (* x x) (* x x))) (* (pow (* x x) 3) (pow (* x x) 3))) (+ (+ (* (pow (* x x) 3) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* -2.159794117854421e+40 (* x x)))) (+ (+ (* (* x x) -9.603827599155034e+38) (* (pow x 3) (* x 7.362934492685525e+39))) 2.0007974164906321e+37))) (+ (+ (* (* (* (* x x) (* x x)) (* -6.559214903374066e+39 (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* 1.858444222622652e+39 x) x)) (* (* (* x x) (* x x)) (pow (* x x) 3)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* 1.6580237672417776e+40 (* x x)))) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) -2.879725490472561e+40)))))) (+ (+ (* (* (* (* x x) (* x x)) (* -7.439123760693607e+36 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* (* x x) (* x x)) (* x (* 7.00787020934905e+35 x)))))) (+ (* (* (* 3.0119295649461116e+33 (* x x)) (* (* x x) (* x x))) (* (* (pow (* x x) 3) (pow (* x x) 3)) (* (* (* x x) (* x x)) (pow (* x x) 3)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -5.175042616134682e+34 (* x x)))))))) (+ (+ (+ (* (* (* (pow (* x x) 3) (pow (* x x) 3)) (* (pow (* x x) 3) (pow (* x x) 3))) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* -1.4332881168957126e+29 (* x x))))) (* (* (* (pow (* x x) 3) (pow (* x x) 3)) (* (* (* x x) (* x x)) (pow (* x x) 3))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x (* x 3.1850847042126946e+27)) (* (* x x) (* x x)))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x -1.3847952022740743e+32) x) (* (* x x) (* x x))))) (* 5.025466459865592e+30 (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))))) (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21))) (* (* (* (* (pow (* x x) 3) (pow (* x x) 3)) (* (pow (* x x) 3) (pow (* x x) 3))) (pow (* x x) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* 4.107705072626958e+19 x) x))))))))
* * * * [misc]progress:  [ 39 / 48 ] simplifiying candidate #<alt-event (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* 3.2396911767816312e+40 (pow x 2))) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* 3.2396911767816312e+40 (pow x 2))) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17))))
* * [misc]simplify:  iters left: 6 (125 enodes)
* * [misc]simplify:  iters left: 5 (463 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x (* 281474976710656.0 x)) (* (* (* (* (pow (* x x) 3) (pow (* x x) 3)) (* (pow (* x x) 3) (pow (* x x) 3))) (* (pow (* x x) 3) (pow (* x x) 3))) (* (* (* x x) (* x x)) (pow (* x x) 3)))) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) -1.5875188686481e+17))))) (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* x x) (* (* x (* x 6.970313391427278e+23)) (* (* x x) (* x x))))) (* (* (* (pow (* x x) 3) (pow (* x x) 3)) (* (pow (* x x) 3) (pow (* x x) 3))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x -5.436844445313277e+25) x)))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* x x) 6.137277102572225e+37))) (+ (+ (+ (* (* (* (* x x) -3.8869421649624096e+38) (* (* x x) (* x x))) (* (pow (* x x) 3) (pow (* x x) 3))) (+ (+ (* (pow (* x x) 3) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* -2.159794117854421e+40 (* x x)))) (+ (+ (* (* x x) -9.603827599155034e+38) (* (pow x 3) (* x 7.362934492685525e+39))) 2.0007974164906321e+37))) (+ (+ (* (* (* (* x x) (* x x)) (* -6.559214903374066e+39 (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* 1.858444222622652e+39 x) x)) (* (* (* x x) (* x x)) (pow (* x x) 3)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* 1.6580237672417776e+40 (* x x)))) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) -2.879725490472561e+40)))))) (+ (+ (* (* (* (* x x) (* x x)) (* -7.439123760693607e+36 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* (* x x) (* x x)) (* x (* 7.00787020934905e+35 x)))))) (+ (* (* (* 3.0119295649461116e+33 (* x x)) (* (* x x) (* x x))) (* (* (pow (* x x) 3) (pow (* x x) 3)) (* (* (* x x) (* x x)) (pow (* x x) 3)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -5.175042616134682e+34 (* x x)))))))) (+ (+ (+ (* (* (* (pow (* x x) 3) (pow (* x x) 3)) (* (pow (* x x) 3) (pow (* x x) 3))) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* -1.4332881168957126e+29 (* x x))))) (* (* (* (pow (* x x) 3) (pow (* x x) 3)) (* (* (* x x) (* x x)) (pow (* x x) 3))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x (* x 3.1850847042126946e+27)) (* (* x x) (* x x)))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x -1.3847952022740743e+32) x) (* (* x x) (* x x))))) (* 5.025466459865592e+30 (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))))) (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21))) (* (* (* (* (pow (* x x) 3) (pow (* x x) 3)) (* (pow (* x x) 3) (pow (* x x) 3))) (pow (* x x) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* 4.107705072626958e+19 x) x))))))))
* * * * [misc]progress:  [ 40 / 48 ] simplifiying candidate #<alt-event (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* 1.6580237672417776e+40 (pow x 2))))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* 1.6580237672417776e+40 (pow x 2))))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17))))
* * [misc]simplify:  iters left: 6 (125 enodes)
* * [misc]simplify:  iters left: 5 (463 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) -7.439123760693607e+36)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* (* x x) (* x x)) (* (* 7.00787020934905e+35 x) x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* 6.137277102572225e+37 x) x)))) (+ (+ (* (pow (* (* x x) (* x x)) 3) (* (* -3.8869421649624096e+38 (* x x)) (* (* x x) (* x x)))) (+ (+ (+ (* (* -9.603827599155034e+38 x) x) (* (pow x 3) (* x 7.362934492685525e+39))) 2.0007974164906321e+37) (+ (* (* (* x x) -2.159794117854421e+40) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40))))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) -6.559214903374066e+39))) (* (pow (* (* x x) (* x x)) 3) (* (* x x) (* (* 1.858444222622652e+39 x) x)))) (+ (* (* (* x x) (* x x)) (* (* x (* x -2.879725490472561e+40)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* (* x x) 1.6580237672417776e+40))))))) (+ (+ (* (* (* 3.0119295649461116e+33 (* x x)) (* (* x x) (* x x))) (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (* (pow x 3) (pow x 3))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -5.175042616134682e+34 (* x x))))) (+ (+ (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (* -1.4332881168957126e+29 x)))) (* (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (* (pow x 3) (pow x 3)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) 3.1850847042126946e+27) (* (* x x) (* x x)))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x (* x -1.3847952022740743e+32)) (* (* x x) (* x x))))) (* (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (* (pow x 3) (pow x 3)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x 5.025466459865592e+30) x))))))) (+ (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* x x) (* (* (* x x) 6.970313391427278e+23) (* (* x x) (* x x))))) (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* x (* x -5.436844445313277e+25)))))) (+ (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* -6.476481664508504e+21 x) x))) (* (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* 4.107705072626958e+19 x) x)))) (+ (* (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) 281474976710656.0)))) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) -1.5875188686481e+17))))))))
* * * * [misc]progress:  [ 41 / 48 ] simplifiying candidate #<alt-event (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* 1.6580237672417776e+40 (pow x 2))))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* 1.6580237672417776e+40 (pow x 2))))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17))))
* * [misc]simplify:  iters left: 6 (125 enodes)
* * [misc]simplify:  iters left: 5 (463 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) -7.439123760693607e+36)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* (* x x) (* x x)) (* (* 7.00787020934905e+35 x) x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* 6.137277102572225e+37 x) x)))) (+ (+ (* (pow (* (* x x) (* x x)) 3) (* (* -3.8869421649624096e+38 (* x x)) (* (* x x) (* x x)))) (+ (+ (+ (* (* -9.603827599155034e+38 x) x) (* (pow x 3) (* x 7.362934492685525e+39))) 2.0007974164906321e+37) (+ (* (* (* x x) -2.159794117854421e+40) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40))))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) -6.559214903374066e+39))) (* (pow (* (* x x) (* x x)) 3) (* (* x x) (* (* 1.858444222622652e+39 x) x)))) (+ (* (* (* x x) (* x x)) (* (* x (* x -2.879725490472561e+40)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* (* x x) 1.6580237672417776e+40))))))) (+ (+ (* (* (* 3.0119295649461116e+33 (* x x)) (* (* x x) (* x x))) (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (* (pow x 3) (pow x 3))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -5.175042616134682e+34 (* x x))))) (+ (+ (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (* -1.4332881168957126e+29 x)))) (* (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (* (pow x 3) (pow x 3)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) 3.1850847042126946e+27) (* (* x x) (* x x)))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x (* x -1.3847952022740743e+32)) (* (* x x) (* x x))))) (* (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (* (pow x 3) (pow x 3)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x 5.025466459865592e+30) x))))))) (+ (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* x x) (* (* (* x x) 6.970313391427278e+23) (* (* x x) (* x x))))) (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* x (* x -5.436844445313277e+25)))))) (+ (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* -6.476481664508504e+21 x) x))) (* (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* 4.107705072626958e+19 x) x)))) (+ (* (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) 281474976710656.0)))) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) -1.5875188686481e+17))))))))
* * * * [misc]progress:  [ 42 / 48 ] simplifiying candidate #<alt-event (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* 1.6580237672417776e+40 (pow x 2))))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* 1.6580237672417776e+40 (pow x 2))))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17))))
* * [misc]simplify:  iters left: 6 (125 enodes)
* * [misc]simplify:  iters left: 5 (463 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) -7.439123760693607e+36)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* (* x x) (* x x)) (* (* 7.00787020934905e+35 x) x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* 6.137277102572225e+37 x) x)))) (+ (+ (* (pow (* (* x x) (* x x)) 3) (* (* -3.8869421649624096e+38 (* x x)) (* (* x x) (* x x)))) (+ (+ (+ (* (* -9.603827599155034e+38 x) x) (* (pow x 3) (* x 7.362934492685525e+39))) 2.0007974164906321e+37) (+ (* (* (* x x) -2.159794117854421e+40) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40))))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) -6.559214903374066e+39))) (* (pow (* (* x x) (* x x)) 3) (* (* x x) (* (* 1.858444222622652e+39 x) x)))) (+ (* (* (* x x) (* x x)) (* (* x (* x -2.879725490472561e+40)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* (* x x) 1.6580237672417776e+40))))))) (+ (+ (* (* (* 3.0119295649461116e+33 (* x x)) (* (* x x) (* x x))) (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (* (pow x 3) (pow x 3))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -5.175042616134682e+34 (* x x))))) (+ (+ (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (* -1.4332881168957126e+29 x)))) (* (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (* (pow x 3) (pow x 3)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) 3.1850847042126946e+27) (* (* x x) (* x x)))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x (* x -1.3847952022740743e+32)) (* (* x x) (* x x))))) (* (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (* (pow x 3) (pow x 3)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x 5.025466459865592e+30) x))))))) (+ (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* x x) (* (* (* x x) 6.970313391427278e+23) (* (* x x) (* x x))))) (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* x (* x -5.436844445313277e+25)))))) (+ (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* -6.476481664508504e+21 x) x))) (* (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* 4.107705072626958e+19 x) x)))) (+ (* (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) 281474976710656.0)))) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) -1.5875188686481e+17))))))))
* * * * [misc]progress:  [ 43 / 48 ] simplifiying candidate #<alt-event (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -2.879725490472561e+40 (pow x 2))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -2.879725490472561e+40 (pow x 2))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17))))
* * [misc]simplify:  iters left: 6 (125 enodes)
* * [misc]simplify:  iters left: 5 (463 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* (* (* (* x x) (* x x)) (pow (* x x) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* x (* 281474976710656.0 x))))) (* (* (* (* x x) (* x x)) (* (* x x) -1.5875188686481e+17)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (+ (* (* (* x x) (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x 6.970313391427278e+23) x) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* x (* x -5.436844445313277e+25))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)))))) (+ (+ (* (* (* (* (* x x) (* x x)) (pow (* x x) 3)) (* (* (* x x) (* x x)) (pow (* x x) 3))) 6.137277102572225e+37) (+ (+ (+ (* (pow (* (* x x) (* x x)) 3) (* (* (* x -3.8869421649624096e+38) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* -9.603827599155034e+38 x) x) (* (pow x 3) (* x 7.362934492685525e+39))) 2.0007974164906321e+37) (+ (* (* (* -2.159794117854421e+40 x) x) (* (* x x) (* x x))) (* (* (* 3.2396911767816312e+40 x) x) (pow (* x x) 3))))) (+ (+ (* (* (* (* x x) (* x x)) (* x (* x -6.559214903374066e+39))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (pow (* (* x x) (* x x)) 3) (* (* x x) (* (* 1.858444222622652e+39 x) x)))) (+ (* (pow (* (* x x) (* x x)) 3) 1.6580237672417776e+40) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* -2.879725490472561e+40 x) x)))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* -7.439123760693607e+36 (* x x)))) (* 7.00787020934905e+35 (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)))) (+ (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* x x) (* (* 3.0119295649461116e+33 x) x))) (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* x x) -5.175042616134682e+34)))))) (+ (+ (+ (* (* (* -1.4332881168957126e+29 (* x x)) (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (pow (* x x) 3))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x (* x 3.1850847042126946e+27)) (* (* x x) (* x x)))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x (* x -1.3847952022740743e+32)) (* (* x x) (* x x))))) (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* x x) (* (* (* x x) (* x x)) (* (* x 5.025466459865592e+30) x)))))) (+ (* -6.476481664508504e+21 (* (* (* x x) (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (* (* (* (* (* (* x x) (* x x)) (pow (* x x) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)))))))
* * * * [misc]progress:  [ 44 / 48 ] simplifiying candidate #<alt-event (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -2.879725490472561e+40 (pow x 2))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -2.879725490472561e+40 (pow x 2))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17))))
* * [misc]simplify:  iters left: 6 (125 enodes)
* * [misc]simplify:  iters left: 5 (463 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* (* (* (* x x) (* x x)) (pow (* x x) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* x (* 281474976710656.0 x))))) (* (* (* (* x x) (* x x)) (* (* x x) -1.5875188686481e+17)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (+ (* (* (* x x) (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x 6.970313391427278e+23) x) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* x (* x -5.436844445313277e+25))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)))))) (+ (+ (* (* (* (* (* x x) (* x x)) (pow (* x x) 3)) (* (* (* x x) (* x x)) (pow (* x x) 3))) 6.137277102572225e+37) (+ (+ (+ (* (pow (* (* x x) (* x x)) 3) (* (* (* x -3.8869421649624096e+38) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* -9.603827599155034e+38 x) x) (* (pow x 3) (* x 7.362934492685525e+39))) 2.0007974164906321e+37) (+ (* (* (* -2.159794117854421e+40 x) x) (* (* x x) (* x x))) (* (* (* 3.2396911767816312e+40 x) x) (pow (* x x) 3))))) (+ (+ (* (* (* (* x x) (* x x)) (* x (* x -6.559214903374066e+39))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (pow (* (* x x) (* x x)) 3) (* (* x x) (* (* 1.858444222622652e+39 x) x)))) (+ (* (pow (* (* x x) (* x x)) 3) 1.6580237672417776e+40) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* -2.879725490472561e+40 x) x)))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* -7.439123760693607e+36 (* x x)))) (* 7.00787020934905e+35 (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)))) (+ (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* x x) (* (* 3.0119295649461116e+33 x) x))) (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* x x) -5.175042616134682e+34)))))) (+ (+ (+ (* (* (* -1.4332881168957126e+29 (* x x)) (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (pow (* x x) 3))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x (* x 3.1850847042126946e+27)) (* (* x x) (* x x)))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x (* x -1.3847952022740743e+32)) (* (* x x) (* x x))))) (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* x x) (* (* (* x x) (* x x)) (* (* x 5.025466459865592e+30) x)))))) (+ (* -6.476481664508504e+21 (* (* (* x x) (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (* (* (* (* (* (* x x) (* x x)) (pow (* x x) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)))))))
* * * * [misc]progress:  [ 45 / 48 ] simplifiying candidate #<alt-event (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -2.879725490472561e+40 (pow x 2))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -2.879725490472561e+40 (pow x 2))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17))))
* * [misc]simplify:  iters left: 6 (125 enodes)
* * [misc]simplify:  iters left: 5 (463 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* (* (* (* x x) (* x x)) (pow (* x x) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* x (* 281474976710656.0 x))))) (* (* (* (* x x) (* x x)) (* (* x x) -1.5875188686481e+17)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (+ (* (* (* x x) (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x 6.970313391427278e+23) x) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* x (* x -5.436844445313277e+25))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)))))) (+ (+ (* (* (* (* (* x x) (* x x)) (pow (* x x) 3)) (* (* (* x x) (* x x)) (pow (* x x) 3))) 6.137277102572225e+37) (+ (+ (+ (* (pow (* (* x x) (* x x)) 3) (* (* (* x -3.8869421649624096e+38) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* -9.603827599155034e+38 x) x) (* (pow x 3) (* x 7.362934492685525e+39))) 2.0007974164906321e+37) (+ (* (* (* -2.159794117854421e+40 x) x) (* (* x x) (* x x))) (* (* (* 3.2396911767816312e+40 x) x) (pow (* x x) 3))))) (+ (+ (* (* (* (* x x) (* x x)) (* x (* x -6.559214903374066e+39))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (pow (* (* x x) (* x x)) 3) (* (* x x) (* (* 1.858444222622652e+39 x) x)))) (+ (* (pow (* (* x x) (* x x)) 3) 1.6580237672417776e+40) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* -2.879725490472561e+40 x) x)))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* -7.439123760693607e+36 (* x x)))) (* 7.00787020934905e+35 (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)))) (+ (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* x x) (* (* 3.0119295649461116e+33 x) x))) (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* x x) -5.175042616134682e+34)))))) (+ (+ (+ (* (* (* -1.4332881168957126e+29 (* x x)) (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (pow (* x x) 3))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x (* x 3.1850847042126946e+27)) (* (* x x) (* x x)))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x (* x -1.3847952022740743e+32)) (* (* x x) (* x x))))) (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* x x) (* (* (* x x) (* x x)) (* (* x 5.025466459865592e+30) x)))))) (+ (* -6.476481664508504e+21 (* (* (* x x) (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (* (* (* (* (* (* x x) (* x x)) (pow (* x x) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)))))))
* * * * [misc]progress:  [ 46 / 48 ] simplifiying candidate #<alt-event (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* -6.559214903374066e+39 (pow x 2)))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* -6.559214903374066e+39 (pow x 2)))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17))))
* * [misc]simplify:  iters left: 6 (125 enodes)
* * [misc]simplify:  iters left: 5 (463 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x -7.439123760693607e+36) x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* (* x x) (* x x)) (* (* x x) 7.00787020934905e+35))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* 6.137277102572225e+37 (* x x))))) (+ (+ (* (* (* -3.8869421649624096e+38 (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (+ (+ (+ (* (pow x 3) (* x 7.362934492685525e+39)) 2.0007974164906321e+37) (* (* -9.603827599155034e+38 x) x)) (+ (* (* x (* -2.159794117854421e+40 x)) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 3)) (* (* 3.2396911767816312e+40 x) x))))) (+ (+ (* (pow (* (* x x) (* x x)) 3) 1.6580237672417776e+40) (* (* (* x x) (* x x)) (* (* x (* x -2.879725490472561e+40)) (* (* x x) (* x x))))) (+ (* (* (* (* x 1.858444222622652e+39) x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* x (* x -6.559214903374066e+39))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))))) (+ (+ (* (* (* 3.0119295649461116e+33 (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (pow x 3) (pow x 3))) (pow (* (* x x) (* x x)) 3))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -5.175042616134682e+34) x)))) (+ (+ (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* -1.4332881168957126e+29 (* x x))))) (* (* (* (* (* x x) (* x x)) (* (pow x 3) (pow x 3))) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) 3.1850847042126946e+27) (* (* x x) (* x x)))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* -1.3847952022740743e+32 (* x x)) (* (* x x) (* x x))))) (* (* (* (* (* x x) (* x x)) (* (pow x 3) (pow x 3))) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 5.025466459865592e+30 (* x x)))))))) (+ (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* x x) (* (* (* x 6.970313391427278e+23) x) (* (* x x) (* x x))))) (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* -5.436844445313277e+25 (* x x)))))) (+ (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* -6.476481664508504e+21 x) x))) (* (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (* 4.107705072626958e+19 x))))) (+ (* (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* 281474976710656.0 x) x)))) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* -1.5875188686481e+17 (* x x)))))))))
* * * * [misc]progress:  [ 47 / 48 ] simplifiying candidate #<alt-event (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* -6.559214903374066e+39 (pow x 2)))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* -6.559214903374066e+39 (pow x 2)))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17))))
* * [misc]simplify:  iters left: 6 (125 enodes)
* * [misc]simplify:  iters left: 5 (463 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x -7.439123760693607e+36) x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* (* x x) (* x x)) (* (* x x) 7.00787020934905e+35))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* 6.137277102572225e+37 (* x x))))) (+ (+ (* (* (* -3.8869421649624096e+38 (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (+ (+ (+ (* (pow x 3) (* x 7.362934492685525e+39)) 2.0007974164906321e+37) (* (* -9.603827599155034e+38 x) x)) (+ (* (* x (* -2.159794117854421e+40 x)) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 3)) (* (* 3.2396911767816312e+40 x) x))))) (+ (+ (* (pow (* (* x x) (* x x)) 3) 1.6580237672417776e+40) (* (* (* x x) (* x x)) (* (* x (* x -2.879725490472561e+40)) (* (* x x) (* x x))))) (+ (* (* (* (* x 1.858444222622652e+39) x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* x (* x -6.559214903374066e+39))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))))) (+ (+ (* (* (* 3.0119295649461116e+33 (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (pow x 3) (pow x 3))) (pow (* (* x x) (* x x)) 3))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -5.175042616134682e+34) x)))) (+ (+ (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* -1.4332881168957126e+29 (* x x))))) (* (* (* (* (* x x) (* x x)) (* (pow x 3) (pow x 3))) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) 3.1850847042126946e+27) (* (* x x) (* x x)))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* -1.3847952022740743e+32 (* x x)) (* (* x x) (* x x))))) (* (* (* (* (* x x) (* x x)) (* (pow x 3) (pow x 3))) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 5.025466459865592e+30 (* x x)))))))) (+ (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* x x) (* (* (* x 6.970313391427278e+23) x) (* (* x x) (* x x))))) (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* -5.436844445313277e+25 (* x x)))))) (+ (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* -6.476481664508504e+21 x) x))) (* (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (* 4.107705072626958e+19 x))))) (+ (* (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* 281474976710656.0 x) x)))) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* -1.5875188686481e+17 (* x x)))))))))
* * * * [misc]progress:  [ 48 / 48 ] simplifiying candidate #<alt-event (λ (x) (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* -6.559214903374066e+39 (pow x 2)))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* -6.559214903374066e+39 (pow x 2)))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21)))) (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17))))
* * [misc]simplify:  iters left: 6 (125 enodes)
* * [misc]simplify:  iters left: 5 (463 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x -7.439123760693607e+36) x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* (* x x) (* x x)) (* (* x x) 7.00787020934905e+35))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* 6.137277102572225e+37 (* x x))))) (+ (+ (* (* (* -3.8869421649624096e+38 (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (+ (+ (+ (* (pow x 3) (* x 7.362934492685525e+39)) 2.0007974164906321e+37) (* (* -9.603827599155034e+38 x) x)) (+ (* (* x (* -2.159794117854421e+40 x)) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 3)) (* (* 3.2396911767816312e+40 x) x))))) (+ (+ (* (pow (* (* x x) (* x x)) 3) 1.6580237672417776e+40) (* (* (* x x) (* x x)) (* (* x (* x -2.879725490472561e+40)) (* (* x x) (* x x))))) (+ (* (* (* (* x 1.858444222622652e+39) x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* x (* x -6.559214903374066e+39))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))))) (+ (+ (* (* (* 3.0119295649461116e+33 (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (pow x 3) (pow x 3))) (pow (* (* x x) (* x x)) 3))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -5.175042616134682e+34) x)))) (+ (+ (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* -1.4332881168957126e+29 (* x x))))) (* (* (* (* (* x x) (* x x)) (* (pow x 3) (pow x 3))) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) 3.1850847042126946e+27) (* (* x x) (* x x)))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* -1.3847952022740743e+32 (* x x)) (* (* x x) (* x x))))) (* (* (* (* (* x x) (* x x)) (* (pow x 3) (pow x 3))) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 5.025466459865592e+30 (* x x)))))))) (+ (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* x x) (* (* (* x 6.970313391427278e+23) x) (* (* x x) (* x x))))) (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* -5.436844445313277e+25 (* x x)))))) (+ (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* -6.476481664508504e+21 x) x))) (* (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (* 4.107705072626958e+19 x))))) (+ (* (* (* (pow (* (* x x) (* x x)) 3) (pow (* (* x x) (* x x)) 3)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* 281474976710656.0 x) x)))) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* -1.5875188686481e+17 (* x x)))))))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.436844445313277e+25)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.970313391427278e+23))) (+ (+ (+ (+ (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.137277102572225e+37)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.8869421649624096e+38))) (+ (+ (+ (+ (* (* x -9.603827599155034e+38) x) (+ 2.0007974164906321e+37 (* (* 7.362934492685525e+39 x) (pow x 3)))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 3.2396911767816312e+40)) (* (* (* x x) (* x x)) (* (* x x) -2.159794117854421e+40)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.879725490472561e+40)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.6580237672417776e+40)))) (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.559214903374066e+39))))) (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -7.439123760693607e+36)))) (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.0119295649461116e+33)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -5.175042616134682e+34)))) (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.3847952022740743e+32)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))) (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 3.1850847042126946e+27)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.4332881168957126e+29))))) (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 4.107705072626958e+19)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -6.476481664508504e+21))))
* * [misc]simplify:  iters left: 6 (113 enodes)
* * [misc]simplify:  iters left: 5 (196 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* (* (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* 6.970313391427278e+23 (* x x))) (* (* (* x x) -5.436844445313277e+25) (* (* (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x))))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))))) (+ (+ (* (* (* x x) 3.1850847042126946e+27) (* (* (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x))))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* -1.4332881168957126e+29 (* x x)))) (+ (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x)))) (* -7.439123760693607e+36 (* x x)))) (+ (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* -6.559214903374066e+39 (* x x)) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* 1.6580237672417776e+40 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -2.879725490472561e+40 (* x x)))) (+ (+ (+ (* (pow x 3) (* x 7.362934492685525e+39)) 2.0007974164906321e+37) (* (* -9.603827599155034e+38 x) x)) (+ (* (* (* x x) -2.159794117854421e+40) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 3)) (* 3.2396911767816312e+40 (* x x))))))) (+ (* (* (* x x) -3.8869421649624096e+38) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x)))) (* (* (* x x) 6.137277102572225e+37) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))))))) (+ (* (* (* x x) -5.175042616134682e+34) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x)))))) (* (* 3.0119295649461116e+33 (* x x)) (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x)))))) (+ (* (* -1.3847952022740743e+32 (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x))))) (* (* x x) (* x x)))) (* (* (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))))) (+ (* (* (* (* x x) (* x x)) (* (* (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x))))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) -6.476481664508504e+21)) (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* 4.107705072626958e+19 (* x x)))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* (* (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* 6.970313391427278e+23 (* x x))) (* (* (* x x) -5.436844445313277e+25) (* (* (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x))))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))))) (+ (+ (* (* (* x x) 3.1850847042126946e+27) (* (* (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x))))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* -1.4332881168957126e+29 (* x x)))) (+ (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) 7.00787020934905e+35)) (* (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x)))) (* -7.439123760693607e+36 (* x x)))) (+ (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.858444222622652e+39)) (* (* -6.559214903374066e+39 (* x x)) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* 1.6580237672417776e+40 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -2.879725490472561e+40 (* x x)))) (+ (+ (+ (* (pow x 3) (* x 7.362934492685525e+39)) 2.0007974164906321e+37) (* (* -9.603827599155034e+38 x) x)) (+ (* (* (* x x) -2.159794117854421e+40) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 3)) (* 3.2396911767816312e+40 (* x x))))))) (+ (* (* (* x x) -3.8869421649624096e+38) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x)))) (* (* (* x x) 6.137277102572225e+37) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))))))) (+ (* (* (* x x) -5.175042616134682e+34) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x)))))) (* (* 3.0119295649461116e+33 (* x x)) (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x)))))) (+ (* (* -1.3847952022740743e+32 (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x))))) (* (* x x) (* x x)))) (* (* (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.025466459865592e+30)))))) (+ (* (* (* (* x x) (* x x)) (* (* (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x))))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) -6.476481664508504e+21)) (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* 4.107705072626958e+19 (* x x)))))
* [enter]simplify:  Simplifying (+ (* (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 281474976710656.0)) (* (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.5875188686481e+17)))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (* x x) (* x x)) (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* 281474976710656.0 (* x x))) (* (* -1.5875188686481e+17 (* x x)) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))))))))))
* [exit]simplify:  Simplified to (+ (* (* (* (* x x) (* x x)) (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* 281474976710656.0 (* x x))) (* (* -1.5875188686481e+17 (* x x)) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))))))))))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
