* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 2.3650087665373902e+33 (* -1.0406038572764516e+35 (* x x))) (* 7.284227000935161e+35 (* (* (* x x) x) x))) (* -1.9424605335827098e+36 (* (* (* (* (* x x) x) x) x) x))) (* 2.6361964384336774e+36 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))) (* -2.108957150746942e+36 (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x))) (* 1.0864324715969096e+36 (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x))) (* -3.820421878142979e+35 (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x))) (* 9.551054695357447e+34 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* -1.7479054344445e+34 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* 2.391870594503e+33 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* -2.485060357925195e+32 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* 1.9808452128389234e+31 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* -1.2189816694393375e+30 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* 5.804674616377797e+28 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* -2.135052732460799e+27 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* 6.026358519042578e+25 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* -1.2890606457845087e+24 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* 2.04612800918176e+22 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* -2.3284529265226285e+20 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* 1.7911176357866373e+18 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* -8321103999008768.0 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x))) (* 17592186044416.0 (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (111 enodes)
* * [misc]simplify:  iters left: 5 (324 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3))))))))))))))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 2 2 2 2 2 2 2 2 1 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 2 2 2 2 2 2 2 2 1 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 2 2 2 2 2 2 2 1 2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2 2 2 2 2 2 2 1 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 2 2 2 2 2 2 2 2 1 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) -1.9424605335827098e+36) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) -1.9424605335827098e+36) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -1.9424605335827098e+36 in x
* [misc]backup-simplify:  Simplify -1.9424605335827098e+36 into -1.9424605335827098e+36
* [misc]taylor:  Taking taylor expansion of (* (* x x) -1.9424605335827098e+36) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -1.9424605335827098e+36 in x
* [misc]backup-simplify:  Simplify -1.9424605335827098e+36 into -1.9424605335827098e+36
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -1.9424605335827098e+36) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 -1.9424605335827098e+36)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 -1.9424605335827098e+36))) into (- 1.9424605335827098e+36)
* [misc]backup-simplify:  Simplify (- 1.9424605335827098e+36) into (- 1.9424605335827098e+36)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (* 0 -1.9424605335827098e+36)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -1.9424605335827098e+36))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1.9424605335827098e+36)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1.9424605335827098e+36))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1.9424605335827098e+36)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1.9424605335827098e+36))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 1.9424605335827098e+36) (pow x 2)) into (* -1.9424605335827098e+36 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -1.9424605335827098e+36) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -1.9424605335827098e+36) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -1.9424605335827098e+36 in x
* [misc]backup-simplify:  Simplify -1.9424605335827098e+36 into -1.9424605335827098e+36
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -1.9424605335827098e+36) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -1.9424605335827098e+36 in x
* [misc]backup-simplify:  Simplify -1.9424605335827098e+36 into -1.9424605335827098e+36
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1.9424605335827098e+36) into -1.9424605335827098e+36
* [misc]backup-simplify:  Simplify -1.9424605335827098e+36 into -1.9424605335827098e+36
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1.9424605335827098e+36)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1.9424605335827098e+36))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1.9424605335827098e+36)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1.9424605335827098e+36))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1.9424605335827098e+36)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1.9424605335827098e+36))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1.9424605335827098e+36 (pow (/ 1 (/ 1 x)) 2)) into (* -1.9424605335827098e+36 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -1.9424605335827098e+36) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -1.9424605335827098e+36) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -1.9424605335827098e+36 in x
* [misc]backup-simplify:  Simplify -1.9424605335827098e+36 into -1.9424605335827098e+36
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -1.9424605335827098e+36) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -1.9424605335827098e+36 in x
* [misc]backup-simplify:  Simplify -1.9424605335827098e+36 into -1.9424605335827098e+36
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1.9424605335827098e+36) into -1.9424605335827098e+36
* [misc]backup-simplify:  Simplify -1.9424605335827098e+36 into -1.9424605335827098e+36
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1.9424605335827098e+36)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1.9424605335827098e+36))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1.9424605335827098e+36)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1.9424605335827098e+36))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1.9424605335827098e+36)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1.9424605335827098e+36))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1.9424605335827098e+36 (pow (/ 1 (/ 1 (- x))) 2)) into (* -1.9424605335827098e+36 (pow x 2))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 2 2 2 2 2 2 2 2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) 2.6361964384336774e+36) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) 2.6361964384336774e+36) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.6361964384336774e+36 in x
* [misc]backup-simplify:  Simplify 2.6361964384336774e+36 into 2.6361964384336774e+36
* [misc]taylor:  Taking taylor expansion of (* (* x x) 2.6361964384336774e+36) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.6361964384336774e+36 in x
* [misc]backup-simplify:  Simplify 2.6361964384336774e+36 into 2.6361964384336774e+36
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 2.6361964384336774e+36) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 2.6361964384336774e+36)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 2.6361964384336774e+36))) into 2.6361964384336774e+36
* [misc]backup-simplify:  Simplify 2.6361964384336774e+36 into 2.6361964384336774e+36
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (* 0 2.6361964384336774e+36)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 2.6361964384336774e+36))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.6361964384336774e+36)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.6361964384336774e+36))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.6361964384336774e+36)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.6361964384336774e+36))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 2.6361964384336774e+36 (pow x 2)) into (* 2.6361964384336774e+36 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) 2.6361964384336774e+36) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) 2.6361964384336774e+36) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.6361964384336774e+36 in x
* [misc]backup-simplify:  Simplify 2.6361964384336774e+36 into 2.6361964384336774e+36
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) 2.6361964384336774e+36) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.6361964384336774e+36 in x
* [misc]backup-simplify:  Simplify 2.6361964384336774e+36 into 2.6361964384336774e+36
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 2.6361964384336774e+36) into 2.6361964384336774e+36
* [misc]backup-simplify:  Simplify 2.6361964384336774e+36 into 2.6361964384336774e+36
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 2.6361964384336774e+36)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 2.6361964384336774e+36))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.6361964384336774e+36)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.6361964384336774e+36))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.6361964384336774e+36)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.6361964384336774e+36))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 2.6361964384336774e+36 (pow (/ 1 (/ 1 x)) 2)) into (* 2.6361964384336774e+36 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) 2.6361964384336774e+36) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) 2.6361964384336774e+36) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.6361964384336774e+36 in x
* [misc]backup-simplify:  Simplify 2.6361964384336774e+36 into 2.6361964384336774e+36
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) 2.6361964384336774e+36) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.6361964384336774e+36 in x
* [misc]backup-simplify:  Simplify 2.6361964384336774e+36 into 2.6361964384336774e+36
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 2.6361964384336774e+36) into 2.6361964384336774e+36
* [misc]backup-simplify:  Simplify 2.6361964384336774e+36 into 2.6361964384336774e+36
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 2.6361964384336774e+36)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 2.6361964384336774e+36))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.6361964384336774e+36)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.6361964384336774e+36))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.6361964384336774e+36)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.6361964384336774e+36))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 2.6361964384336774e+36 (pow (/ 1 (/ 1 (- x))) 2)) into (* 2.6361964384336774e+36 (pow x 2))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 2 2 2 2 2 2 2 1 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) 1.0864324715969096e+36) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) 1.0864324715969096e+36) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1.0864324715969096e+36 in x
* [misc]backup-simplify:  Simplify 1.0864324715969096e+36 into 1.0864324715969096e+36
* [misc]taylor:  Taking taylor expansion of (* (* x x) 1.0864324715969096e+36) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1.0864324715969096e+36 in x
* [misc]backup-simplify:  Simplify 1.0864324715969096e+36 into 1.0864324715969096e+36
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 1.0864324715969096e+36) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 1.0864324715969096e+36)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 1.0864324715969096e+36))) into 1.0864324715969096e+36
* [misc]backup-simplify:  Simplify 1.0864324715969096e+36 into 1.0864324715969096e+36
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (* 0 1.0864324715969096e+36)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 1.0864324715969096e+36))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.0864324715969096e+36)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.0864324715969096e+36))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.0864324715969096e+36)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.0864324715969096e+36))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1.0864324715969096e+36 (pow x 2)) into (* 1.0864324715969096e+36 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) 1.0864324715969096e+36) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) 1.0864324715969096e+36) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 1.0864324715969096e+36 in x
* [misc]backup-simplify:  Simplify 1.0864324715969096e+36 into 1.0864324715969096e+36
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) 1.0864324715969096e+36) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 1.0864324715969096e+36 in x
* [misc]backup-simplify:  Simplify 1.0864324715969096e+36 into 1.0864324715969096e+36
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1.0864324715969096e+36) into 1.0864324715969096e+36
* [misc]backup-simplify:  Simplify 1.0864324715969096e+36 into 1.0864324715969096e+36
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1.0864324715969096e+36)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1.0864324715969096e+36))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.0864324715969096e+36)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.0864324715969096e+36))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.0864324715969096e+36)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.0864324715969096e+36))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1.0864324715969096e+36 (pow (/ 1 (/ 1 x)) 2)) into (* 1.0864324715969096e+36 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) 1.0864324715969096e+36) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) 1.0864324715969096e+36) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 1.0864324715969096e+36 in x
* [misc]backup-simplify:  Simplify 1.0864324715969096e+36 into 1.0864324715969096e+36
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) 1.0864324715969096e+36) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 1.0864324715969096e+36 in x
* [misc]backup-simplify:  Simplify 1.0864324715969096e+36 into 1.0864324715969096e+36
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1.0864324715969096e+36) into 1.0864324715969096e+36
* [misc]backup-simplify:  Simplify 1.0864324715969096e+36 into 1.0864324715969096e+36
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1.0864324715969096e+36)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1.0864324715969096e+36))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.0864324715969096e+36)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.0864324715969096e+36))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.0864324715969096e+36)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1.0864324715969096e+36))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1.0864324715969096e+36 (pow (/ 1 (/ 1 (- x))) 2)) into (* 1.0864324715969096e+36 (pow x 2))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2 2 2 2 2 2 2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) -2.108957150746942e+36) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) -2.108957150746942e+36) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2.108957150746942e+36 in x
* [misc]backup-simplify:  Simplify -2.108957150746942e+36 into -2.108957150746942e+36
* [misc]taylor:  Taking taylor expansion of (* (* x x) -2.108957150746942e+36) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2.108957150746942e+36 in x
* [misc]backup-simplify:  Simplify -2.108957150746942e+36 into -2.108957150746942e+36
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -2.108957150746942e+36) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 -2.108957150746942e+36)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 -2.108957150746942e+36))) into (- 2.108957150746942e+36)
* [misc]backup-simplify:  Simplify (- 2.108957150746942e+36) into (- 2.108957150746942e+36)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (* 0 -2.108957150746942e+36)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -2.108957150746942e+36))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.108957150746942e+36)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.108957150746942e+36))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.108957150746942e+36)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.108957150746942e+36))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 2.108957150746942e+36) (pow x 2)) into (* -2.108957150746942e+36 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -2.108957150746942e+36) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -2.108957150746942e+36) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2.108957150746942e+36 in x
* [misc]backup-simplify:  Simplify -2.108957150746942e+36 into -2.108957150746942e+36
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -2.108957150746942e+36) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2.108957150746942e+36 in x
* [misc]backup-simplify:  Simplify -2.108957150746942e+36 into -2.108957150746942e+36
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -2.108957150746942e+36) into -2.108957150746942e+36
* [misc]backup-simplify:  Simplify -2.108957150746942e+36 into -2.108957150746942e+36
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -2.108957150746942e+36)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -2.108957150746942e+36))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.108957150746942e+36)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.108957150746942e+36))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.108957150746942e+36)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.108957150746942e+36))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -2.108957150746942e+36 (pow (/ 1 (/ 1 x)) 2)) into (* -2.108957150746942e+36 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -2.108957150746942e+36) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -2.108957150746942e+36) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2.108957150746942e+36 in x
* [misc]backup-simplify:  Simplify -2.108957150746942e+36 into -2.108957150746942e+36
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -2.108957150746942e+36) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2.108957150746942e+36 in x
* [misc]backup-simplify:  Simplify -2.108957150746942e+36 into -2.108957150746942e+36
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -2.108957150746942e+36) into -2.108957150746942e+36
* [misc]backup-simplify:  Simplify -2.108957150746942e+36 into -2.108957150746942e+36
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -2.108957150746942e+36)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -2.108957150746942e+36))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.108957150746942e+36)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.108957150746942e+36))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.108957150746942e+36)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.108957150746942e+36))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -2.108957150746942e+36 (pow (/ 1 (/ 1 (- x))) 2)) into (* -2.108957150746942e+36 (pow x 2))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (pow (* (* x x) -1.9424605335827098e+36) 1))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* * * * [misc]progress:  [ 2 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (exp (log (* (* x x) -1.9424605335827098e+36))))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (log (* (* x x) -1.9424605335827098e+36))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* * [misc]simplify:  iters left: 1 (26 enodes)
* [exit]simplify:  Simplified to (log (* x (* x -1.9424605335827098e+36)))
* [exit]simplify:  Simplified to (log (* x (* x -1.9424605335827098e+36)))
* * * * [misc]progress:  [ 3 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (log (exp (* (* x x) -1.9424605335827098e+36))))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (exp (* (* x x) -1.9424605335827098e+36))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* [exit]simplify:  Simplified to (exp (* (* x -1.9424605335827098e+36) x))
* [exit]simplify:  Simplified to (exp (* (* x -1.9424605335827098e+36) x))
* * * * [misc]progress:  [ 4 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* (cbrt (* (* x x) -1.9424605335827098e+36)) (cbrt (* (* x x) -1.9424605335827098e+36))) (cbrt (* (* x x) -1.9424605335827098e+36))))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) -1.9424605335827098e+36)) (cbrt (* (* x x) -1.9424605335827098e+36)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -1.9424605335827098e+36))) (cbrt (* x (* x -1.9424605335827098e+36))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -1.9424605335827098e+36))) (cbrt (* x (* x -1.9424605335827098e+36))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) -1.9424605335827098e+36))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (* -1.9424605335827098e+36 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* -1.9424605335827098e+36 (* x x)))
* * * * [misc]progress:  [ 5 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (cbrt (* (* (* (* x x) -1.9424605335827098e+36) (* (* x x) -1.9424605335827098e+36)) (* (* x x) -1.9424605335827098e+36))))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) -1.9424605335827098e+36) (* (* x x) -1.9424605335827098e+36)) (* (* x x) -1.9424605335827098e+36))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (266 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* -1.9424605335827098e+36 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* -1.9424605335827098e+36 (* x x)) 3)
* * * * [misc]progress:  [ 6 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (sqrt (* (* x x) -1.9424605335827098e+36)) (sqrt (* (* x x) -1.9424605335827098e+36))))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) -1.9424605335827098e+36))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* -1.9424605335827098e+36 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* -1.9424605335827098e+36 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (* x x) -1.9424605335827098e+36))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* -1.9424605335827098e+36 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* -1.9424605335827098e+36 (* x x)))
* * * * [misc]progress:  [ 7 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* 1 (* (* x x) -1.9424605335827098e+36)))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* * * * [misc]progress:  [ 8 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* x (* x -1.9424605335827098e+36)))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (* x -1.9424605335827098e+36)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* x -1.9424605335827098e+36)
* [exit]simplify:  Simplified to (* x -1.9424605335827098e+36)
* * * * [misc]progress:  [ 9 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* -1.9424605335827098e+36 (* x x)))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* * * * [misc]progress:  [ 10 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (pow (* (* x x) 2.6361964384336774e+36) 1)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* * * * [misc]progress:  [ 11 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (exp (log (* (* x x) 2.6361964384336774e+36)))) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (log (* (* x x) 2.6361964384336774e+36))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* * [misc]simplify:  iters left: 1 (26 enodes)
* [exit]simplify:  Simplified to (log (* x (* x 2.6361964384336774e+36)))
* [exit]simplify:  Simplified to (log (* x (* x 2.6361964384336774e+36)))
* * * * [misc]progress:  [ 12 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (log (exp (* (* x x) 2.6361964384336774e+36)))) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (exp (* (* x x) 2.6361964384336774e+36))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* [exit]simplify:  Simplified to (exp (* (* x 2.6361964384336774e+36) x))
* [exit]simplify:  Simplified to (exp (* (* x 2.6361964384336774e+36) x))
* * * * [misc]progress:  [ 13 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* (cbrt (* (* x x) 2.6361964384336774e+36)) (cbrt (* (* x x) 2.6361964384336774e+36))) (cbrt (* (* x x) 2.6361964384336774e+36)))) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) 2.6361964384336774e+36)) (cbrt (* (* x x) 2.6361964384336774e+36)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 2.6361964384336774e+36))) (cbrt (* x (* x 2.6361964384336774e+36))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 2.6361964384336774e+36))) (cbrt (* x (* x 2.6361964384336774e+36))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) 2.6361964384336774e+36))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (* 2.6361964384336774e+36 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* 2.6361964384336774e+36 (* x x)))
* * * * [misc]progress:  [ 14 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (cbrt (* (* (* (* x x) 2.6361964384336774e+36) (* (* x x) 2.6361964384336774e+36)) (* (* x x) 2.6361964384336774e+36)))) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) 2.6361964384336774e+36) (* (* x x) 2.6361964384336774e+36)) (* (* x x) 2.6361964384336774e+36))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (266 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* 2.6361964384336774e+36 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* 2.6361964384336774e+36 (* x x)) 3)
* * * * [misc]progress:  [ 15 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (sqrt (* (* x x) 2.6361964384336774e+36)) (sqrt (* (* x x) 2.6361964384336774e+36)))) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) 2.6361964384336774e+36))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* 2.6361964384336774e+36 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 2.6361964384336774e+36 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (* x x) 2.6361964384336774e+36))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* 2.6361964384336774e+36 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 2.6361964384336774e+36 (* x x)))
* * * * [misc]progress:  [ 16 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* 1 (* (* x x) 2.6361964384336774e+36))) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* * * * [misc]progress:  [ 17 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* x (* x 2.6361964384336774e+36))) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (* x 2.6361964384336774e+36)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* x 2.6361964384336774e+36)
* [exit]simplify:  Simplified to (* x 2.6361964384336774e+36)
* * * * [misc]progress:  [ 18 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* 2.6361964384336774e+36 (* x x))) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* * * * [misc]progress:  [ 19 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (pow (* (* x x) 1.0864324715969096e+36) 1))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* * * * [misc]progress:  [ 20 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (exp (log (* (* x x) 1.0864324715969096e+36))))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (log (* (* x x) 1.0864324715969096e+36))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* * [misc]simplify:  iters left: 1 (26 enodes)
* [exit]simplify:  Simplified to (log (* x (* x 1.0864324715969096e+36)))
* [exit]simplify:  Simplified to (log (* x (* x 1.0864324715969096e+36)))
* * * * [misc]progress:  [ 21 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (log (exp (* (* x x) 1.0864324715969096e+36))))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (exp (* (* x x) 1.0864324715969096e+36))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* [exit]simplify:  Simplified to (exp (* (* x 1.0864324715969096e+36) x))
* [exit]simplify:  Simplified to (exp (* (* x 1.0864324715969096e+36) x))
* * * * [misc]progress:  [ 22 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* (cbrt (* (* x x) 1.0864324715969096e+36)) (cbrt (* (* x x) 1.0864324715969096e+36))) (cbrt (* (* x x) 1.0864324715969096e+36))))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) 1.0864324715969096e+36)) (cbrt (* (* x x) 1.0864324715969096e+36)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 1.0864324715969096e+36))) (cbrt (* x (* x 1.0864324715969096e+36))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 1.0864324715969096e+36))) (cbrt (* x (* x 1.0864324715969096e+36))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) 1.0864324715969096e+36))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (* 1.0864324715969096e+36 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* 1.0864324715969096e+36 (* x x)))
* * * * [misc]progress:  [ 23 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (cbrt (* (* (* (* x x) 1.0864324715969096e+36) (* (* x x) 1.0864324715969096e+36)) (* (* x x) 1.0864324715969096e+36))))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) 1.0864324715969096e+36) (* (* x x) 1.0864324715969096e+36)) (* (* x x) 1.0864324715969096e+36))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (266 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* 1.0864324715969096e+36 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* 1.0864324715969096e+36 (* x x)) 3)
* * * * [misc]progress:  [ 24 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (sqrt (* (* x x) 1.0864324715969096e+36)) (sqrt (* (* x x) 1.0864324715969096e+36))))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) 1.0864324715969096e+36))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* 1.0864324715969096e+36 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 1.0864324715969096e+36 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (* x x) 1.0864324715969096e+36))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* 1.0864324715969096e+36 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 1.0864324715969096e+36 (* x x)))
* * * * [misc]progress:  [ 25 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* 1 (* (* x x) 1.0864324715969096e+36)))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* * * * [misc]progress:  [ 26 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* x (* x 1.0864324715969096e+36)))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (* x 1.0864324715969096e+36)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* x 1.0864324715969096e+36)
* [exit]simplify:  Simplified to (* x 1.0864324715969096e+36)
* * * * [misc]progress:  [ 27 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* 1.0864324715969096e+36 (* x x)))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* * * * [misc]progress:  [ 28 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) -2.108957150746942e+36) 1)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* * * * [misc]progress:  [ 29 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (exp (log (* (* x x) -2.108957150746942e+36)))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (log (* (* x x) -2.108957150746942e+36))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* * [misc]simplify:  iters left: 1 (26 enodes)
* [exit]simplify:  Simplified to (log (* x (* x -2.108957150746942e+36)))
* [exit]simplify:  Simplified to (log (* x (* x -2.108957150746942e+36)))
* * * * [misc]progress:  [ 30 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (log (exp (* (* x x) -2.108957150746942e+36)))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (exp (* (* x x) -2.108957150746942e+36))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* [exit]simplify:  Simplified to (exp (* (* x -2.108957150746942e+36) x))
* [exit]simplify:  Simplified to (exp (* (* x -2.108957150746942e+36) x))
* * * * [misc]progress:  [ 31 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (cbrt (* (* x x) -2.108957150746942e+36)) (cbrt (* (* x x) -2.108957150746942e+36))) (cbrt (* (* x x) -2.108957150746942e+36)))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) -2.108957150746942e+36)) (cbrt (* (* x x) -2.108957150746942e+36)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -2.108957150746942e+36))) (cbrt (* x (* x -2.108957150746942e+36))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -2.108957150746942e+36))) (cbrt (* x (* x -2.108957150746942e+36))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) -2.108957150746942e+36))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (* -2.108957150746942e+36 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* -2.108957150746942e+36 (* x x)))
* * * * [misc]progress:  [ 32 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (cbrt (* (* (* (* x x) -2.108957150746942e+36) (* (* x x) -2.108957150746942e+36)) (* (* x x) -2.108957150746942e+36)))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) -2.108957150746942e+36) (* (* x x) -2.108957150746942e+36)) (* (* x x) -2.108957150746942e+36))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (266 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* -2.108957150746942e+36 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* -2.108957150746942e+36 (* x x)) 3)
* * * * [misc]progress:  [ 33 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (sqrt (* (* x x) -2.108957150746942e+36)) (sqrt (* (* x x) -2.108957150746942e+36)))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) -2.108957150746942e+36))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* -2.108957150746942e+36 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* -2.108957150746942e+36 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (* x x) -2.108957150746942e+36))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* -2.108957150746942e+36 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* -2.108957150746942e+36 (* x x)))
* * * * [misc]progress:  [ 34 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 1 (* (* x x) -2.108957150746942e+36))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* * * * [misc]progress:  [ 35 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (* x -2.108957150746942e+36))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (* x -2.108957150746942e+36)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* x -2.108957150746942e+36)
* [exit]simplify:  Simplified to (* x -2.108957150746942e+36)
* * * * [misc]progress:  [ 36 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -2.108957150746942e+36 (* x x))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* * * * [misc]progress:  [ 37 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* -1.9424605335827098e+36 (pow x 2)))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* -1.9424605335827098e+36 (pow x 2)))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3))))))))))))))
* * [misc]simplify:  iters left: 6 (114 enodes)
* * [misc]simplify:  iters left: 5 (422 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* 17592186044416.0 x) x)) (* (* (* (pow (* (* x x) (* x x)) 3) (* (pow (* x x) 3) (* (* x x) (* x x)))) (* (pow (* x x) 3) (* (* x x) (* x x)))) (pow (* x x) 3))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* -8321103999008768.0 (* x x)) (* (* x x) (* x x)))))) (+ (+ (* (* (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x 1.7911176357866373e+18) x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) -2.3284529265226285e+20))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* x x) (* x x)) (* (* (* x x) -1.2890606457845087e+24) (* (* x x) (* x x))))) (* (* (* (pow (* (* x x) (* x x)) 3) (* (pow (* x x) 3) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* 2.04612800918176e+22 (* x x)) (* (* x x) (* x x))))))) (+ (+ (+ (* (* (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* x x) 6.026358519042578e+25) (* (* x x) (* x x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* x (* -2.135052732460799e+27 x)) (* (* x x) (* x x)))))) (+ (* (* (pow (* (* x x) (* x x)) 3) (* (pow (* x x) 3) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* x x) 5.804674616377797e+28))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))))) (+ (+ (+ (+ (* (* -2.108957150746942e+36 (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x (* x 1.0864324715969096e+36))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* x x) (* (* x x) 9.551054695357447e+34))) (* (* (* (* -3.820421878142979e+35 x) x) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (+ (+ (* -1.0406038572764516e+35 (* x x)) (+ (* (pow x 3) (* 7.284227000935161e+35 x)) 2.3650087665373902e+33)) (+ (* (* 2.6361964384336774e+36 (* x x)) (pow (* x x) 3)) (* (* x (* x -1.9424605335827098e+36)) (* (* x x) (* x x)))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* 1.9808452128389234e+31 (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* -2.485060357925195e+32 (* x x)) (* (* x x) (* x x)))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* x (* x -1.7479054344445e+34)) (* (* x x) (* x x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* x 2.391870594503e+33) x))))))))
* * * * [misc]progress:  [ 38 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* -1.9424605335827098e+36 (pow x 2)))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* -1.9424605335827098e+36 (pow x 2)))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3))))))))))))))
* * [misc]simplify:  iters left: 6 (114 enodes)
* * [misc]simplify:  iters left: 5 (422 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* 17592186044416.0 x) x)) (* (* (* (pow (* (* x x) (* x x)) 3) (* (pow (* x x) 3) (* (* x x) (* x x)))) (* (pow (* x x) 3) (* (* x x) (* x x)))) (pow (* x x) 3))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* -8321103999008768.0 (* x x)) (* (* x x) (* x x)))))) (+ (+ (* (* (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x 1.7911176357866373e+18) x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) -2.3284529265226285e+20))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* x x) (* x x)) (* (* (* x x) -1.2890606457845087e+24) (* (* x x) (* x x))))) (* (* (* (pow (* (* x x) (* x x)) 3) (* (pow (* x x) 3) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* 2.04612800918176e+22 (* x x)) (* (* x x) (* x x))))))) (+ (+ (+ (* (* (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* x x) 6.026358519042578e+25) (* (* x x) (* x x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* x (* -2.135052732460799e+27 x)) (* (* x x) (* x x)))))) (+ (* (* (pow (* (* x x) (* x x)) 3) (* (pow (* x x) 3) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* x x) 5.804674616377797e+28))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))))) (+ (+ (+ (+ (* (* -2.108957150746942e+36 (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x (* x 1.0864324715969096e+36))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* x x) (* (* x x) 9.551054695357447e+34))) (* (* (* (* -3.820421878142979e+35 x) x) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (+ (+ (* -1.0406038572764516e+35 (* x x)) (+ (* (pow x 3) (* 7.284227000935161e+35 x)) 2.3650087665373902e+33)) (+ (* (* 2.6361964384336774e+36 (* x x)) (pow (* x x) 3)) (* (* x (* x -1.9424605335827098e+36)) (* (* x x) (* x x)))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* 1.9808452128389234e+31 (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* -2.485060357925195e+32 (* x x)) (* (* x x) (* x x)))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* x (* x -1.7479054344445e+34)) (* (* x x) (* x x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* x 2.391870594503e+33) x))))))))
* * * * [misc]progress:  [ 39 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* -1.9424605335827098e+36 (pow x 2)))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* -1.9424605335827098e+36 (pow x 2)))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3))))))))))))))
* * [misc]simplify:  iters left: 6 (114 enodes)
* * [misc]simplify:  iters left: 5 (422 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* 17592186044416.0 x) x)) (* (* (* (pow (* (* x x) (* x x)) 3) (* (pow (* x x) 3) (* (* x x) (* x x)))) (* (pow (* x x) 3) (* (* x x) (* x x)))) (pow (* x x) 3))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* -8321103999008768.0 (* x x)) (* (* x x) (* x x)))))) (+ (+ (* (* (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x 1.7911176357866373e+18) x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) -2.3284529265226285e+20))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* x x) (* x x)) (* (* (* x x) -1.2890606457845087e+24) (* (* x x) (* x x))))) (* (* (* (pow (* (* x x) (* x x)) 3) (* (pow (* x x) 3) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* 2.04612800918176e+22 (* x x)) (* (* x x) (* x x))))))) (+ (+ (+ (* (* (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* x x) 6.026358519042578e+25) (* (* x x) (* x x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* x (* -2.135052732460799e+27 x)) (* (* x x) (* x x)))))) (+ (* (* (pow (* (* x x) (* x x)) 3) (* (pow (* x x) 3) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* x x) 5.804674616377797e+28))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))))) (+ (+ (+ (+ (* (* -2.108957150746942e+36 (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x (* x 1.0864324715969096e+36))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* x x) (* (* x x) 9.551054695357447e+34))) (* (* (* (* -3.820421878142979e+35 x) x) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (+ (+ (* -1.0406038572764516e+35 (* x x)) (+ (* (pow x 3) (* 7.284227000935161e+35 x)) 2.3650087665373902e+33)) (+ (* (* 2.6361964384336774e+36 (* x x)) (pow (* x x) 3)) (* (* x (* x -1.9424605335827098e+36)) (* (* x x) (* x x)))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* 1.9808452128389234e+31 (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* -2.485060357925195e+32 (* x x)) (* (* x x) (* x x)))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* x (* x -1.7479054344445e+34)) (* (* x x) (* x x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* x 2.391870594503e+33) x))))))))
* * * * [misc]progress:  [ 40 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* 2.6361964384336774e+36 (pow x 2))) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* 2.6361964384336774e+36 (pow x 2))) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3))))))))))))))
* * [misc]simplify:  iters left: 6 (114 enodes)
* * [misc]simplify:  iters left: 5 (422 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* x x) (* 17592186044416.0 (* x x)))) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* -8321103999008768.0 x) x) (* (* x x) (* x x)))))) (+ (* 1.7911176357866373e+18 (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x -2.3284529265226285e+20) x)))))) (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* -1.2890606457845087e+24 (* x x)) (* (* x x) (* x x)))) (* (* (* (pow (* (* x x) (* x x)) 3) (* (pow (* x x) 3) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* x 2.04612800918176e+22) x) (* (* x x) (* x x)))))) (+ (+ (+ (* (* (pow (* (* x x) (* x x)) 3) (* (pow (* x x) 3) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* (* 6.026358519042578e+25 x) x) (* (* x x) (* x x))))) (* (* (* (* -2.135052732460799e+27 x) x) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* x x) (* (* (* x x) (* x x)) (* (* 5.804674616377797e+28 x) x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (* x -1.2189816694393375e+30)))))) (+ (+ (+ (+ (* (* (* x x) -2.108957150746942e+36) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x (* x 1.0864324715969096e+36))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* x x) (* x (* 9.551054695357447e+34 x)))) (* (* (* (* -3.820421878142979e+35 x) x) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (+ (+ (* -1.0406038572764516e+35 (* x x)) (+ (* (pow x 3) (* 7.284227000935161e+35 x)) 2.3650087665373902e+33)) (+ (* (* 2.6361964384336774e+36 (* x x)) (pow (* x x) 3)) (* (* (* x -1.9424605335827098e+36) x) (* (* x x) (* x x)))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* 1.9808452128389234e+31 (* x x)) (* (* x x) (* x x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* -2.485060357925195e+32 (* x x)) (* (* x x) (* x x))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* -1.7479054344445e+34 (* x x)) (* (* x x) (* x x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* x x) 2.391870594503e+33))))))))
* * * * [misc]progress:  [ 41 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* 2.6361964384336774e+36 (pow x 2))) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* 2.6361964384336774e+36 (pow x 2))) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3))))))))))))))
* * [misc]simplify:  iters left: 6 (114 enodes)
* * [misc]simplify:  iters left: 5 (422 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* x x) (* 17592186044416.0 (* x x)))) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* -8321103999008768.0 x) x) (* (* x x) (* x x)))))) (+ (* 1.7911176357866373e+18 (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x -2.3284529265226285e+20) x)))))) (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* -1.2890606457845087e+24 (* x x)) (* (* x x) (* x x)))) (* (* (* (pow (* (* x x) (* x x)) 3) (* (pow (* x x) 3) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* x 2.04612800918176e+22) x) (* (* x x) (* x x)))))) (+ (+ (+ (* (* (pow (* (* x x) (* x x)) 3) (* (pow (* x x) 3) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* (* 6.026358519042578e+25 x) x) (* (* x x) (* x x))))) (* (* (* (* -2.135052732460799e+27 x) x) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* x x) (* (* (* x x) (* x x)) (* (* 5.804674616377797e+28 x) x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (* x -1.2189816694393375e+30)))))) (+ (+ (+ (+ (* (* (* x x) -2.108957150746942e+36) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x (* x 1.0864324715969096e+36))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* x x) (* x (* 9.551054695357447e+34 x)))) (* (* (* (* -3.820421878142979e+35 x) x) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (+ (+ (* -1.0406038572764516e+35 (* x x)) (+ (* (pow x 3) (* 7.284227000935161e+35 x)) 2.3650087665373902e+33)) (+ (* (* 2.6361964384336774e+36 (* x x)) (pow (* x x) 3)) (* (* (* x -1.9424605335827098e+36) x) (* (* x x) (* x x)))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* 1.9808452128389234e+31 (* x x)) (* (* x x) (* x x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* -2.485060357925195e+32 (* x x)) (* (* x x) (* x x))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* -1.7479054344445e+34 (* x x)) (* (* x x) (* x x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* x x) 2.391870594503e+33))))))))
* * * * [misc]progress:  [ 42 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* 2.6361964384336774e+36 (pow x 2))) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* 2.6361964384336774e+36 (pow x 2))) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3))))))))))))))
* * [misc]simplify:  iters left: 6 (114 enodes)
* * [misc]simplify:  iters left: 5 (422 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* x x) (* 17592186044416.0 (* x x)))) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* -8321103999008768.0 x) x) (* (* x x) (* x x)))))) (+ (* 1.7911176357866373e+18 (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x -2.3284529265226285e+20) x)))))) (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* -1.2890606457845087e+24 (* x x)) (* (* x x) (* x x)))) (* (* (* (pow (* (* x x) (* x x)) 3) (* (pow (* x x) 3) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* x 2.04612800918176e+22) x) (* (* x x) (* x x)))))) (+ (+ (+ (* (* (pow (* (* x x) (* x x)) 3) (* (pow (* x x) 3) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* (* 6.026358519042578e+25 x) x) (* (* x x) (* x x))))) (* (* (* (* -2.135052732460799e+27 x) x) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* x x) (* (* (* x x) (* x x)) (* (* 5.804674616377797e+28 x) x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (* x -1.2189816694393375e+30)))))) (+ (+ (+ (+ (* (* (* x x) -2.108957150746942e+36) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x (* x 1.0864324715969096e+36))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* x x) (* x (* 9.551054695357447e+34 x)))) (* (* (* (* -3.820421878142979e+35 x) x) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (+ (+ (* -1.0406038572764516e+35 (* x x)) (+ (* (pow x 3) (* 7.284227000935161e+35 x)) 2.3650087665373902e+33)) (+ (* (* 2.6361964384336774e+36 (* x x)) (pow (* x x) 3)) (* (* (* x -1.9424605335827098e+36) x) (* (* x x) (* x x)))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* 1.9808452128389234e+31 (* x x)) (* (* x x) (* x x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* -2.485060357925195e+32 (* x x)) (* (* x x) (* x x))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* -1.7479054344445e+34 (* x x)) (* (* x x) (* x x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* x x) 2.391870594503e+33))))))))
* * * * [misc]progress:  [ 43 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* 1.0864324715969096e+36 (pow x 2)))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* 1.0864324715969096e+36 (pow x 2)))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3))))))))))))))
* * [misc]simplify:  iters left: 6 (114 enodes)
* * [misc]simplify:  iters left: 5 (422 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* x x) (* (* 17592186044416.0 x) x))) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) -8321103999008768.0) (* (* x x) (* x x)))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (pow (* (* x x) (* x x)) 3) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))))) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) 1.7911176357866373e+18)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x -2.3284529265226285e+20) x))))) (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* -1.2890606457845087e+24 x) x) (* (* x x) (* x x)))) (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* 2.04612800918176e+22 (* x x)) (* (* x x) (* x x)))))))) (+ (+ (+ (* (* (pow (* (* x x) (* x x)) 3) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* x (* 6.026358519042578e+25 x)) (* (* x x) (* x x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* x x) -2.135052732460799e+27) (* (* x x) (* x x))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* x x) (* (* (* x x) (* x x)) (* 5.804674616377797e+28 (* x x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (* x -1.2189816694393375e+30)))))) (+ (+ (+ (* (* (* x (* -2.108957150746942e+36 x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* 1.0864324715969096e+36 (pow (* (* x x) (* x x)) 3))) (+ (+ (+ (* -1.0406038572764516e+35 (* x x)) (+ (* (pow x 3) (* 7.284227000935161e+35 x)) 2.3650087665373902e+33)) (+ (* (* (* x x) 2.6361964384336774e+36) (* (pow x 3) (pow x 3))) (* (* (* x -1.9424605335827098e+36) x) (* (* x x) (* x x))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* x x) (* x (* 9.551054695357447e+34 x)))) (* (* (* -3.820421878142979e+35 (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* 1.9808452128389234e+31 (* x x)) (* (* x x) (* x x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x (* -2.485060357925195e+32 x)) (* (* x x) (* x x))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* (* x -1.7479054344445e+34) x) (* (* x x) (* x x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* 2.391870594503e+33 (* x x)))))))))
* * * * [misc]progress:  [ 44 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* 1.0864324715969096e+36 (pow x 2)))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* 1.0864324715969096e+36 (pow x 2)))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3))))))))))))))
* * [misc]simplify:  iters left: 6 (114 enodes)
* * [misc]simplify:  iters left: 5 (422 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* x x) (* (* 17592186044416.0 x) x))) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) -8321103999008768.0) (* (* x x) (* x x)))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (pow (* (* x x) (* x x)) 3) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))))) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) 1.7911176357866373e+18)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x -2.3284529265226285e+20) x))))) (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* -1.2890606457845087e+24 x) x) (* (* x x) (* x x)))) (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* 2.04612800918176e+22 (* x x)) (* (* x x) (* x x)))))))) (+ (+ (+ (* (* (pow (* (* x x) (* x x)) 3) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* x (* 6.026358519042578e+25 x)) (* (* x x) (* x x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* x x) -2.135052732460799e+27) (* (* x x) (* x x))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* x x) (* (* (* x x) (* x x)) (* 5.804674616377797e+28 (* x x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (* x -1.2189816694393375e+30)))))) (+ (+ (+ (* (* (* x (* -2.108957150746942e+36 x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* 1.0864324715969096e+36 (pow (* (* x x) (* x x)) 3))) (+ (+ (+ (* -1.0406038572764516e+35 (* x x)) (+ (* (pow x 3) (* 7.284227000935161e+35 x)) 2.3650087665373902e+33)) (+ (* (* (* x x) 2.6361964384336774e+36) (* (pow x 3) (pow x 3))) (* (* (* x -1.9424605335827098e+36) x) (* (* x x) (* x x))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* x x) (* x (* 9.551054695357447e+34 x)))) (* (* (* -3.820421878142979e+35 (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* 1.9808452128389234e+31 (* x x)) (* (* x x) (* x x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x (* -2.485060357925195e+32 x)) (* (* x x) (* x x))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* (* x -1.7479054344445e+34) x) (* (* x x) (* x x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* 2.391870594503e+33 (* x x)))))))))
* * * * [misc]progress:  [ 45 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* 1.0864324715969096e+36 (pow x 2)))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* 1.0864324715969096e+36 (pow x 2)))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3))))))))))))))
* * [misc]simplify:  iters left: 6 (114 enodes)
* * [misc]simplify:  iters left: 5 (422 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* x x) (* (* 17592186044416.0 x) x))) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) -8321103999008768.0) (* (* x x) (* x x)))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (pow (* (* x x) (* x x)) 3) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))))) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) 1.7911176357866373e+18)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x -2.3284529265226285e+20) x))))) (+ (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* -1.2890606457845087e+24 x) x) (* (* x x) (* x x)))) (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* 2.04612800918176e+22 (* x x)) (* (* x x) (* x x)))))))) (+ (+ (+ (* (* (pow (* (* x x) (* x x)) 3) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* x (* 6.026358519042578e+25 x)) (* (* x x) (* x x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* x x) -2.135052732460799e+27) (* (* x x) (* x x))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* x x) (* (* (* x x) (* x x)) (* 5.804674616377797e+28 (* x x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (* x -1.2189816694393375e+30)))))) (+ (+ (+ (* (* (* x (* -2.108957150746942e+36 x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* 1.0864324715969096e+36 (pow (* (* x x) (* x x)) 3))) (+ (+ (+ (* -1.0406038572764516e+35 (* x x)) (+ (* (pow x 3) (* 7.284227000935161e+35 x)) 2.3650087665373902e+33)) (+ (* (* (* x x) 2.6361964384336774e+36) (* (pow x 3) (pow x 3))) (* (* (* x -1.9424605335827098e+36) x) (* (* x x) (* x x))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* x x) (* x (* 9.551054695357447e+34 x)))) (* (* (* -3.820421878142979e+35 (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* 1.9808452128389234e+31 (* x x)) (* (* x x) (* x x))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x (* -2.485060357925195e+32 x)) (* (* x x) (* x x))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* (* x -1.7479054344445e+34) x) (* (* x x) (* x x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* 2.391870594503e+33 (* x x)))))))))
* * * * [misc]progress:  [ 46 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -2.108957150746942e+36 (pow x 2))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -2.108957150746942e+36 (pow x 2))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3))))))))))))))
* * [misc]simplify:  iters left: 6 (114 enodes)
* * [misc]simplify:  iters left: 5 (422 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* (* (* (pow (* (* x x) (* x x)) 3) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x)))) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x)))) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x)))) (* (* 17592186044416.0 x) x)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) -8321103999008768.0) (* (* x x) (* x x)))))) (+ (* 1.7911176357866373e+18 (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) -2.3284529265226285e+20)))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* x x) (* x x)) (* (* (* x x) -1.2890606457845087e+24) (* (* x x) (* x x))))) (* (* (* (* x x) 2.04612800918176e+22) (* (* x x) (* x x))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))))))) (+ (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (* x x)))) (* (* x (* 6.026358519042578e+25 x)) (* (* x x) (* x x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* (* -2.135052732460799e+27 x) x) (* (* x x) (* x x)))))) (+ (* (* (pow (* (* x x) (* x x)) 3) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* 5.804674616377797e+28 x) x))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))))) (+ (+ (+ (* (* -2.108957150746942e+36 (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (pow (* (* x x) (* x x)) 3) 1.0864324715969096e+36)) (+ (+ (+ (* (* x x) -1.0406038572764516e+35) (+ (* (pow x 3) (* 7.284227000935161e+35 x)) 2.3650087665373902e+33)) (+ (* (* 2.6361964384336774e+36 (* x x)) (* (pow x 3) (pow x 3))) (* (* -1.9424605335827098e+36 (* x x)) (* (* x x) (* x x))))) (+ (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) 9.551054695357447e+34))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) -3.820421878142979e+35) (* (* x x) (* x x))))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* (* 1.9808452128389234e+31 x) x) (* (* x x) (* x x))))) (* (* (* (* x x) -2.485060357925195e+32) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) -1.7479054344445e+34) (* (* x x) (* x x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* x x) 2.391870594503e+33))))))))
* * * * [misc]progress:  [ 47 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -2.108957150746942e+36 (pow x 2))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -2.108957150746942e+36 (pow x 2))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3))))))))))))))
* * [misc]simplify:  iters left: 6 (114 enodes)
* * [misc]simplify:  iters left: 5 (422 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* (* (* (pow (* (* x x) (* x x)) 3) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x)))) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x)))) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x)))) (* (* 17592186044416.0 x) x)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) -8321103999008768.0) (* (* x x) (* x x)))))) (+ (* 1.7911176357866373e+18 (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) -2.3284529265226285e+20)))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* x x) (* x x)) (* (* (* x x) -1.2890606457845087e+24) (* (* x x) (* x x))))) (* (* (* (* x x) 2.04612800918176e+22) (* (* x x) (* x x))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))))))) (+ (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (* x x)))) (* (* x (* 6.026358519042578e+25 x)) (* (* x x) (* x x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* (* -2.135052732460799e+27 x) x) (* (* x x) (* x x)))))) (+ (* (* (pow (* (* x x) (* x x)) 3) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* 5.804674616377797e+28 x) x))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))))) (+ (+ (+ (* (* -2.108957150746942e+36 (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (pow (* (* x x) (* x x)) 3) 1.0864324715969096e+36)) (+ (+ (+ (* (* x x) -1.0406038572764516e+35) (+ (* (pow x 3) (* 7.284227000935161e+35 x)) 2.3650087665373902e+33)) (+ (* (* 2.6361964384336774e+36 (* x x)) (* (pow x 3) (pow x 3))) (* (* -1.9424605335827098e+36 (* x x)) (* (* x x) (* x x))))) (+ (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) 9.551054695357447e+34))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) -3.820421878142979e+35) (* (* x x) (* x x))))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* (* 1.9808452128389234e+31 x) x) (* (* x x) (* x x))))) (* (* (* (* x x) -2.485060357925195e+32) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) -1.7479054344445e+34) (* (* x x) (* x x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* x x) 2.391870594503e+33))))))))
* * * * [misc]progress:  [ 48 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -2.108957150746942e+36 (pow x 2))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0))) (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* -2.108957150746942e+36 (pow x 2))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3))))))))))))))
* * [misc]simplify:  iters left: 6 (114 enodes)
* * [misc]simplify:  iters left: 5 (422 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* (* (* (pow (* (* x x) (* x x)) 3) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x)))) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x)))) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x)))) (* (* 17592186044416.0 x) x)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) -8321103999008768.0) (* (* x x) (* x x)))))) (+ (* 1.7911176357866373e+18 (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) -2.3284529265226285e+20)))))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (* (* (* x x) (* x x)) (* (* (* x x) -1.2890606457845087e+24) (* (* x x) (* x x))))) (* (* (* (* x x) 2.04612800918176e+22) (* (* x x) (* x x))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))))))) (+ (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) (* x x)) (* x x)))) (* (* x (* 6.026358519042578e+25 x)) (* (* x x) (* x x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (pow (* (* x x) (* x x)) 3)) (* (* (* x x) (* x x)) (* (* (* -2.135052732460799e+27 x) x) (* (* x x) (* x x)))))) (+ (* (* (pow (* (* x x) (* x x)) 3) (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* (* 5.804674616377797e+28 x) x))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))))) (+ (+ (+ (* (* -2.108957150746942e+36 (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (pow (* (* x x) (* x x)) 3) 1.0864324715969096e+36)) (+ (+ (+ (* (* x x) -1.0406038572764516e+35) (+ (* (pow x 3) (* 7.284227000935161e+35 x)) 2.3650087665373902e+33)) (+ (* (* 2.6361964384336774e+36 (* x x)) (* (pow x 3) (pow x 3))) (* (* -1.9424605335827098e+36 (* x x)) (* (* x x) (* x x))))) (+ (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) 9.551054695357447e+34))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) -3.820421878142979e+35) (* (* x x) (* x x))))))) (+ (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* (* 1.9808452128389234e+31 x) x) (* (* x x) (* x x))))) (* (* (* (* x x) -2.485060357925195e+32) (* (* x x) (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (+ (* (pow (* (* x x) (* x x)) 3) (* (* (* x x) -1.7479054344445e+34) (* (* x x) (* x x)))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* (* x x) 2.391870594503e+33))))))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* [enter]simplify:  Simplifying (+ (* (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 17592186044416.0)) (* (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -8321103999008768.0)))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* 17592186044416.0 (* x x))) (* (* -8321103999008768.0 (* x x)) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* (* x x) (* x x)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))))))))
* [exit]simplify:  Simplified to (+ (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* 17592186044416.0 (* x x))) (* (* -8321103999008768.0 (* x x)) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* (* x x) (* x x)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))))))))
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.3284529265226285e+20)) (* (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.7911176357866373e+18))) (+ (+ (* (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22)) (* (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2890606457845087e+24))) (+ (+ (* (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.135052732460799e+27)) (* (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 6.026358519042578e+25))) (+ (+ (* (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 5.804674616377797e+28)) (* (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.2189816694393375e+30))) (+ (+ (* (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -2.485060357925195e+32))) (+ (+ (* (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.391870594503e+33)) (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -1.7479054344445e+34))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 9.551054695357447e+34)) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) -3.820421878142979e+35))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) -2.108957150746942e+36)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 1.0864324715969096e+36))) (+ (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 2.6361964384336774e+36)) (* (* (* x x) (* x x)) (* (* x x) -1.9424605335827098e+36))) (+ (* (* x x) -1.0406038572764516e+35) (+ 2.3650087665373902e+33 (* (* 7.284227000935161e+35 x) (pow x 3)))))))))))))
* * [misc]simplify:  iters left: 6 (102 enodes)
* * [misc]simplify:  iters left: 5 (176 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* x x) -1.2890606457845087e+24) (* (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x))))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* (* (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22))) (+ (+ (+ (+ (+ (* (* -1.7479054344445e+34 (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x)))) (* (* (* x x) 2.391870594503e+33) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* 9.551054695357447e+34 (* x x))) (* (* -3.820421878142979e+35 (* x x)) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (+ (+ (+ (* (* (* x x) -1.9424605335827098e+36) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 3)) (* 2.6361964384336774e+36 (* x x)))) (+ (* -1.0406038572764516e+35 (* x x)) (+ (* (pow x 3) (* x 7.284227000935161e+35)) 2.3650087665373902e+33))) (+ (* (* -2.108957150746942e+36 (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* 1.0864324715969096e+36 (* x x))))))) (+ (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x)))) (* -2.485060357925195e+32 (* x x))))) (+ (* (* 5.804674616377797e+28 (* x x)) (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x))))) (* -1.2189816694393375e+30 (* x x))))) (+ (* (* (* x x) -2.135052732460799e+27) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x))))) (* (* x x) (* x x)))) (* (* 6.026358519042578e+25 (* x x)) (* (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))))))) (+ (* (* (* (* (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* 1.7911176357866373e+18 (* x x))) (* (* (* x x) -2.3284529265226285e+20) (* (* (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x))))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* x x) -1.2890606457845087e+24) (* (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x))))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* (* (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) 2.04612800918176e+22))) (+ (+ (+ (+ (+ (* (* -1.7479054344445e+34 (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x)))) (* (* (* x x) 2.391870594503e+33) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))))) (+ (+ (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* 9.551054695357447e+34 (* x x))) (* (* -3.820421878142979e+35 (* x x)) (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (+ (+ (+ (* (* (* x x) -1.9424605335827098e+36) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 3)) (* 2.6361964384336774e+36 (* x x)))) (+ (* -1.0406038572764516e+35 (* x x)) (+ (* (pow x 3) (* x 7.284227000935161e+35)) 2.3650087665373902e+33))) (+ (* (* -2.108957150746942e+36 (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* 1.0864324715969096e+36 (* x x))))))) (+ (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) 1.9808452128389234e+31)) (* (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x)))) (* -2.485060357925195e+32 (* x x))))) (+ (* (* 5.804674616377797e+28 (* x x)) (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x))))) (* -1.2189816694393375e+30 (* x x))))) (+ (* (* (* x x) -2.135052732460799e+27) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x))))) (* (* x x) (* x x)))) (* (* 6.026358519042578e+25 (* x x)) (* (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))))))) (+ (* (* (* (* (* (* (* (* x x) (* x x)) (* (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* 1.7911176357866373e+18 (* x x))) (* (* (* x x) -2.3284529265226285e+20) (* (* (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* x x) (* x x))))) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* x x) (* x x))))))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
