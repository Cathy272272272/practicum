* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Setting MPFR precision to 832
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Setting MPFR precision to 832
* * * * [misc]points:  Setting MPFR precision to 1088
* * * * [misc]points:  Setting MPFR precision to 1344
* * * * [misc]points:  Setting MPFR precision to 1600
* * * * [misc]points:  Setting MPFR precision to 1856
* * * * [misc]points:  Setting MPFR precision to 2112
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 1856
* * * * [misc]points:  Setting MPFR precision to 2112
* * * * [misc]points:  Setting MPFR precision to 2368
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (* -12.0 x) (* 8.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-event (Î» (x) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 3 ] rewriting at (2)
* * * * [misc]progress:  [ 2 / 3 ] rewriting at (2 2 2)
* * * * [misc]progress:  [ 3 / 3 ] rewriting at (2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 3 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (- 12.0) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 (pow x 3)) (* (- 12.0) x)) into (- (* 8.0 (pow x 3)) (* 12.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (- 12.0) into (- 12.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 12.0) (/ 1 (/ 1 x))) (* 8.0 (pow (/ 1 (/ 1 x)) 3))) into (- (* 8.0 (pow x 3)) (* 12.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (- 8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 12.0 (/ 1 (/ 1 (- x)))) (* (- 8.0) (pow (/ 1 (/ 1 (- x))) 3))) into (- (* 8.0 (pow x 3)) (* 12.0 x))
* * * * [misc]progress:  [ 2 / 3 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 3)) into (pow x 3)
* * * * [misc]progress:  [ 3 / 3 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 8.0 (pow x 3)) into (* 8.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 8.0 (pow (/ 1 (/ 1 x)) 3)) into (* 8.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -8.0 (pow (/ 1 (/ 1 (- x))) 3)) into (* 8.0 (pow x 3))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (exp (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (exp (* -12.0 x)) (exp (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* [exit]simplify:  Simplified to (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))
* * * * [misc]progress:  [ 2 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1))>
* * * * [misc]progress:  [ 3 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (log (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (log (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* * * * [misc]progress:  [ 4 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (exp (* -12.0 x)))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (exp (* -12.0 x)))
* * * * [misc]progress:  [ 5 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [enter]simplify:  Simplifying (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* * * * [misc]progress:  [ 6 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* [exit]simplify:  Simplified to (pow (+ (* -12.0 x) (* (* 8.0 x) (* x x))) 3)
* [exit]simplify:  Simplified to (pow (+ (* -12.0 x) (* (* 8.0 x) (* x x))) 3)
* * * * [misc]progress:  [ 7 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [enter]simplify:  Simplifying (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* * * * [misc]progress:  [ 8 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)) (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))
* [exit]simplify:  Simplified to (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))
* [enter]simplify:  Simplifying (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* * [misc]simplify:  iters left: 3 (472 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x)))
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x)))
* * * * [misc]progress:  [ 9 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))>
* * * * [misc]progress:  [ 10 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))) (- (* -12.0 x) (* 8.0 (* (* x x) x)))))>
* [enter]simplify:  Simplifying (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (279 enodes)
* [exit]simplify:  Simplified to (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))
* [exit]simplify:  Simplified to (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))
* [enter]simplify:  Simplifying (- (* -12.0 x) (* 8.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (96 enodes)
* [exit]simplify:  Simplified to (- (* -12.0 x) (* (* 8.0 x) (* x x)))
* [exit]simplify:  Simplified to (- (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 11 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 8.0 (* (* x x) x)) (* -12.0 x)))>
* * * * [misc]progress:  [ 12 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (pow x 3))))>
* * * * [misc]progress:  [ 13 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (pow x (+ 2 1)))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 14 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (pow (* (* x x) x) 1))))>
* * * * [misc]progress:  [ 15 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (exp (log (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 16 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (log (exp (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 17 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (* (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x))) (cbrt (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 18 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (cbrt (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 19 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (* (sqrt (* (* x x) x)) (sqrt (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 20 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (* 1 (* (* x x) x)))))>
* * * * [misc]progress:  [ 21 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (* x (* x x)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 22 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (* x (* x x)))))>
* * * * [misc]progress:  [ 23 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (pow (* 8.0 (* (* x x) x)) 1)))>
* * * * [misc]progress:  [ 24 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (exp (log (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (* 8.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (* 8.0 x)))
* [exit]simplify:  Simplified to (log (* (* x x) (* 8.0 x)))
* * * * [misc]progress:  [ 25 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (log (exp (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (* 8.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (pow (exp 8.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp 8.0) (pow x 3))
* * * * [misc]progress:  [ 26 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* (* (cbrt (* 8.0 (* (* x x) x))) (cbrt (* 8.0 (* (* x x) x)))) (cbrt (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 8.0 (* (* x x) x))) (cbrt (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* 8.0 x) (* x x))) (cbrt (* (* 8.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* 8.0 x) (* x x))) (cbrt (* (* 8.0 x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* 8.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* 8.0 x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 27 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (cbrt (* (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* 8.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (210 enodes)
* [exit]simplify:  Simplified to (pow (* (* 8.0 x) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* 8.0 x) (* x x)) 3)
* * * * [misc]progress:  [ 28 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* (sqrt (* 8.0 (* (* x x) x))) (sqrt (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* 8.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* 8.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* 8.0 x) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* 8.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* 8.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 29 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 1 (* 8.0 (* (* x x) x)))))>
* * * * [misc]progress:  [ 30 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* (* 8.0 (* x x)) x)))>
* [enter]simplify:  Simplifying (* 8.0 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* 8.0 (* x x))
* [exit]simplify:  Simplified to (* 8.0 (* x x))
* * * * [misc]progress:  [ 31 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* (* (* x x) x) 8.0)))>
* * * * [misc]progress:  [ 32 / 40 ] simplifiying candidate #<alt-event (Î» (x) (- (* 8.0 (pow x 3)) (* 12.0 x)))>
* [enter]simplify:  Simplifying (- (* 8.0 (pow x 3)) (* 12.0 x))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* * [misc]simplify:  iters left: 1 (61 enodes)
* [exit]simplify:  Simplified to (- (* (* 8.0 x) (* x x)) (* 12.0 x))
* * * * [misc]progress:  [ 33 / 40 ] simplifiying candidate #<alt-event (Î» (x) (- (* 8.0 (pow x 3)) (* 12.0 x)))>
* [enter]simplify:  Simplifying (- (* 8.0 (pow x 3)) (* 12.0 x))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* * [misc]simplify:  iters left: 1 (61 enodes)
* [exit]simplify:  Simplified to (- (* (* 8.0 x) (* x x)) (* 12.0 x))
* * * * [misc]progress:  [ 34 / 40 ] simplifiying candidate #<alt-event (Î» (x) (- (* 8.0 (pow x 3)) (* 12.0 x)))>
* [enter]simplify:  Simplifying (- (* 8.0 (pow x 3)) (* 12.0 x))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* * [misc]simplify:  iters left: 1 (61 enodes)
* [exit]simplify:  Simplified to (- (* (* 8.0 x) (* x x)) (* 12.0 x))
* * * * [misc]progress:  [ 35 / 40 ] simplifiying candidate #<alt-event (Î» (x) (+ (* -12.0 x) (* 8.0 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (* -12.0 x) (* 8.0 (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 36 / 40 ] simplifiying candidate #<alt-event (Î» (x) (+ (* -12.0 x) (* 8.0 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (* -12.0 x) (* 8.0 (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 37 / 40 ] simplifiying candidate #<alt-event (Î» (x) (+ (* -12.0 x) (* 8.0 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (* -12.0 x) (* 8.0 (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 38 / 40 ] simplifiying candidate #<alt-event (Î» (x) (+ (* -12.0 x) (* 8.0 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (* -12.0 x) (* 8.0 (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 39 / 40 ] simplifiying candidate #<alt-event (Î» (x) (+ (* -12.0 x) (* 8.0 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (* -12.0 x) (* 8.0 (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 40 / 40 ] simplifiying candidate #<alt-event (Î» (x) (+ (* -12.0 x) (* 8.0 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (* -12.0 x) (* 8.0 (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) into (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 0) (* 0 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) into (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) into (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 0) (+ (* 0 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) 0) (* 0 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))) (+ (* 0 0) (+ (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2))))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))))) into (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2)))) into (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2)))) (pow x 4)) (+ (* (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (pow x 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) into (- (+ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (* 0.09876543209876543 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)))) (+ (* 0.4444444444444444 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 2))) (* 21.333333333333332 (/ (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)) (pow -12.0 2)))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) into (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 0) (+ (* 0 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) 0) (* 0 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))) (+ (* 0 0) (+ (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))))) into (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2)))) into (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow 8.0 2)))) (pow (/ 1 x) 4)) (+ (* (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2))) (pow (/ 1 x) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2))) into (- (+ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* 0.5 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 4)))) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* (pow 8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 2)))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) into (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 0) (+ (* 0 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) 0) (* 0 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (+ (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))))) into (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2)))) into (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2) (pow -8.0 2)))) (pow (/ 1 (- x)) 4)) (+ (* (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2))) (pow (/ 1 (- x)) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2))) into (- (+ (* 0.5 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 4))) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2)) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (* (pow -8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 2)))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3) into (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3)
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 0) (* 0 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 0) (* 0 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) into (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) into (- (* 0.6666666666666666 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (- (* 0.6666666666666666 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) into (- (* 0.6666666666666666 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 0) (+ (* 0 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) 0) (* 0 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 0) (+ (* 0 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) 0) (* 0 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))) (+ (* 0 0) (+ (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2))))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))))) into (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))) (+ (* 0 0) (+ (* (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2)))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))))) into (- (* 0.2222222222222222 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3)) (* 32.0 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.2222222222222222 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3)) (* 32.0 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3) (pow -12.0 2)))) into (- (* 0.2222222222222222 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3)) (* 32.0 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.2222222222222222 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3)) (* 32.0 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3) (pow -12.0 2)))) (pow x 4)) (+ (* (- (* 0.6666666666666666 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (pow x 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) into (- (+ (* 0.2222222222222222 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3) (pow x 4))) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3)) (+ (* 0.6666666666666666 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3) (pow x 2))) (* 32.0 (/ (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3) (pow x 4)) (pow -12.0 2)))))
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3) into (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 0) (* 0 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into (- (* 1.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3)))
* [misc]backup-simplify:  Simplify (- (* 1.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) into (- (* 1.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 0) (+ (* 0 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) 0) (* 0 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 0) (+ (* 0 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) 0) (* 0 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))) (+ (* 0 0) (+ (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))))) into (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))) (+ (* 0 0) (+ (* (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2)))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))))) into (- (* 1.125 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3)) (* 72.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (- (* 1.125 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3)) (* 72.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3) (pow 8.0 2)))) into (- (* 1.125 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3)) (* 72.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 1.125 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3)) (* 72.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (pow 8.0 2)))) (pow (/ 1 x) 4)) (+ (* (- (* 1.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3))) (pow (/ 1 x) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3))) into (- (+ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (* 1.125 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (pow x 4)))) (+ (* 1.5 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (pow x 2))) (* 72.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (* (pow 8.0 2) (pow x 4))))))
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3) into (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 0) (* 0 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 1.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3)))
* [misc]backup-simplify:  Simplify (- (* 1.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) into (- (* 1.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 0) (+ (* 0 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) 0) (* 0 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 0) (+ (* 0 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) 0) (* 0 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (+ (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))))) into (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (+ (* (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))))) into (- (* 1.125 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3)) (* 72.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3) (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (- (* 1.125 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3)) (* 72.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3) (pow -8.0 2)))) into (- (* 1.125 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3)) (* 72.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3) (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 1.125 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 3)) (* 72.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 3) (pow -8.0 2)))) (pow (/ 1 (- x)) 4)) (+ (* (- (* 1.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 3))) (pow (/ 1 (- x)) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 3))) into (- (+ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 3) (* 1.125 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 3) (pow x 4)))) (+ (* 72.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 3) (* (pow -8.0 2) (pow x 4)))) (* 1.5 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 3) (pow x 2)))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (- 12.0) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 (pow x 3)) (* (- 12.0) x)) into (- (* 8.0 (pow x 3)) (* 12.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (- 12.0) into (- 12.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 12.0) (/ 1 (/ 1 x))) (* 8.0 (pow (/ 1 (/ 1 x)) 3))) into (- (* 8.0 (pow x 3)) (* 12.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (- 8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 12.0 (/ 1 (/ 1 (- x)))) (* (- 8.0) (pow (/ 1 (/ 1 (- x))) 3))) into (- (* 8.0 (pow x 3)) (* 12.0 x))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (- 12.0) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 (pow x 3)) (* (- 12.0) x)) into (- (* 8.0 (pow x 3)) (* 12.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (- 12.0) into (- 12.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 12.0) (/ 1 (/ 1 x))) (* 8.0 (pow (/ 1 (/ 1 x)) 3))) into (- (* 8.0 (pow x 3)) (* 12.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (- 8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 12.0 (/ 1 (/ 1 (- x)))) (* (- 8.0) (pow (/ 1 (/ 1 (- x))) 3))) into (- (* 8.0 (pow x 3)) (* 12.0 x))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ 1/3 1/3)) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 2 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ 1 1)) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 3 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (256 enodes)
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* * * * [misc]progress:  [ 4 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 5 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 2) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 6 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ 1 1)) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 7 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 8 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (exp (+ (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 9 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (exp (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 10 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (log (exp (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 11 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (256 enodes)
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* * * * [misc]progress:  [ 12 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 13 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (115 enodes)
* * [misc]simplify:  iters left: 1 (343 enodes)
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* * * * [misc]progress:  [ 14 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (sqrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 15 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (305 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (466 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))))
* * * * [misc]progress:  [ 16 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))))
* * * * [misc]progress:  [ 17 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))
* [enter]simplify:  Simplifying (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))
* * * * [misc]progress:  [ 18 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (285 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))
* [enter]simplify:  Simplifying (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (74 enodes)
* * [misc]simplify:  iters left: 2 (89 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 19 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* 1 (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 20 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 21 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 22 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt 1)) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt 1))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 23 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* * * * [misc]progress:  [ 24 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (sqrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (sqrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 25 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1)
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* [exit]simplify:  Simplified to (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* * * * [misc]progress:  [ 26 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 27 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (sqrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (sqrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 28 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt 1) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 29 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 30 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (sqrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (sqrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 31 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* 1 (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 32 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (319 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))
* * * * [misc]progress:  [ 33 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (292 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (- (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (- (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 34 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (320 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))
* * * * [misc]progress:  [ 35 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (289 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))
* * * * [misc]progress:  [ 36 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 37 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (+ 1/3 1/3) 1/3)))>
* [enter]simplify:  Simplifying (+ (+ 1/3 1/3) 1/3)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* [exit]simplify:  Simplified to (+ (+ 1/3 1/3) 1/3)
* [exit]simplify:  Simplified to (+ (+ 1/3 1/3) 1/3)
* * * * [misc]progress:  [ 38 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ (+ 1 1) 1)))>
* [enter]simplify:  Simplifying (+ (+ 1 1) 1)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* * * * [misc]progress:  [ 39 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ 2 1)))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 40 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ (+ 1 1) 1)))>
* [enter]simplify:  Simplifying (+ (+ 1 1) 1)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* * * * [misc]progress:  [ 41 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3))>
* [enter]simplify:  Simplifying (* (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* [exit]simplify:  Simplified to (pow (+ (* -12.0 x) (* (* 8.0 x) (* x x))) 3)
* [exit]simplify:  Simplified to (pow (+ (* -12.0 x) (* (* 8.0 x) (* x x))) 3)
* * * * [misc]progress:  [ 42 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 43 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 44 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 3))>
* * * * [misc]progress:  [ 45 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ (+ 1 1) 1)))>
* [enter]simplify:  Simplifying (+ (+ 1 1) 1)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* * * * [misc]progress:  [ 46 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ 2 1)))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 47 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ (+ 1 1) 1)))>
* [enter]simplify:  Simplifying (+ (+ 1 1) 1)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* * * * [misc]progress:  [ 48 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1))>
* * * * [misc]progress:  [ 49 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (exp (+ (+ (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (+ (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (+ (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* * * * [misc]progress:  [ 50 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (exp (+ (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (+ (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (+ (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (+ (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* * * * [misc]progress:  [ 51 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (log (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* [exit]simplify:  Simplified to (log (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* [exit]simplify:  Simplified to (log (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* * * * [misc]progress:  [ 52 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (exp (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (47 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* * [misc]simplify:  iters left: 1 (71 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (exp (* -12.0 x)))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (exp (* -12.0 x)))
* * * * [misc]progress:  [ 53 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* [exit]simplify:  Simplified to (pow (+ (* -12.0 x) (* (* 8.0 x) (* x x))) 3)
* [exit]simplify:  Simplified to (pow (+ (* -12.0 x) (* (* 8.0 x) (* x x))) 3)
* * * * [misc]progress:  [ 54 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* * [misc]simplify:  iters left: 3 (446 enodes)
* [exit]simplify:  Simplified to (pow (+ (* -12.0 x) (* (* 8.0 x) (* x x))) 3)
* [exit]simplify:  Simplified to (pow (+ (* -12.0 x) (* (* 8.0 x) (* x x))) 3)
* * * * [misc]progress:  [ 55 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [enter]simplify:  Simplifying (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* * [misc]simplify:  iters left: 1 (55 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* * * * [misc]progress:  [ 56 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (178 enodes)
* [exit]simplify:  Simplified to (pow (+ (* -12.0 x) (* (* 8.0 x) (* x x))) 3)
* [exit]simplify:  Simplified to (pow (+ (* -12.0 x) (* (* 8.0 x) (* x x))) 3)
* * * * [misc]progress:  [ 57 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (sqrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [enter]simplify:  Simplifying (sqrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* * * * [misc]progress:  [ 58 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (313 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))
* [exit]simplify:  Simplified to (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (475 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))
* * * * [misc]progress:  [ 59 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))) (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x)))))) (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))))
* [exit]simplify:  Simplified to (* (* (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))) (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x)))))) (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))))
* * * * [misc]progress:  [ 60 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))))
* * * * [misc]progress:  [ 61 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (* (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (* (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))) (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x))))) (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))))
* [exit]simplify:  Simplified to (* (* (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))) (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x))))) (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))))
* * * * [misc]progress:  [ 62 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (pow (* (* x x) (* x 8.0)) 3) (pow (* -12.0 x) 3)))) (cbrt (+ (pow (* (* x x) (* x 8.0)) 3) (pow (* -12.0 x) 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (pow (* (* x x) (* x 8.0)) 3) (pow (* -12.0 x) 3)))) (cbrt (+ (pow (* (* x x) (* x 8.0)) 3) (pow (* -12.0 x) 3))))
* [enter]simplify:  Simplifying (* (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 63 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))) (* (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (pow (* (* x x) (* x 8.0)) 3) (pow (* -12.0 x) 3)))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))) (* (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (pow (* (* x x) (* x 8.0)) 3) (pow (* -12.0 x) 3)))))
* [enter]simplify:  Simplifying (* (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (* (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (* (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 64 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (pow (* (* x x) (* x 8.0)) 3) (pow (* -12.0 x) 3)))) (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* [exit]simplify:  Simplified to (* (* (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (pow (* (* x x) (* x 8.0)) 3) (pow (* -12.0 x) 3)))) (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* [enter]simplify:  Simplifying (* (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 65 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (287 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))
* [exit]simplify:  Simplified to (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))
* [enter]simplify:  Simplifying (* (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (78 enodes)
* * [misc]simplify:  iters left: 2 (85 enodes)
* [exit]simplify:  Simplified to (- (* -12.0 x) (* (* 8.0 x) (* x x)))
* [exit]simplify:  Simplified to (- (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 66 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (337 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (466 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))))
* * * * [misc]progress:  [ 67 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))))
* * * * [misc]progress:  [ 68 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (- (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (- (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [enter]simplify:  Simplifying (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))
* * * * [misc]progress:  [ 69 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (295 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [enter]simplify:  Simplifying (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (74 enodes)
* * [misc]simplify:  iters left: 2 (89 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 70 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (325 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))) (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))) (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3)))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (466 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))))
* * * * [misc]progress:  [ 71 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (* (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (* (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))))
* * * * [misc]progress:  [ 72 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (* (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (* (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))
* [enter]simplify:  Simplifying (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))
* * * * [misc]progress:  [ 73 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (295 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x)))))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x)))))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))
* [enter]simplify:  Simplifying (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (74 enodes)
* * [misc]simplify:  iters left: 2 (89 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 74 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* * * * [misc]progress:  [ 75 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (47 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 76 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (47 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 77 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt 1)) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt 1))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (* (cbrt 1) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt 1) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 78 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (58 enodes)
* * [misc]simplify:  iters left: 2 (60 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 79 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (47 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 80 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1)
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))
* * * * [misc]progress:  [ 81 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 82 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (329 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* 8.0 x)) 3))) (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* 8.0 x)) 3))) (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 83 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))))) (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))))) (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 84 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (323 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3)))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3)))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))
* * * * [misc]progress:  [ 85 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x)))))
* * * * [misc]progress:  [ 86 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))) (* (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))) (* (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))
* * * * [misc]progress:  [ 87 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (294 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (+ (* (* x x) (* x 8.0)) (* -12.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (+ (* (* x x) (* x 8.0)) (* -12.0 x))))) (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))))
* [exit]simplify:  Simplified to (* (* (cbrt (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (+ (* (* x x) (* x 8.0)) (* -12.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (+ (* (* x x) (* x 8.0)) (* -12.0 x))))) (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))))
* * * * [misc]progress:  [ 88 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (333 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))
* * * * [misc]progress:  [ 89 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (292 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (- (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (- (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 90 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (322 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (* (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (* (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))))
* * * * [misc]progress:  [ 91 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (293 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))) (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x)))) (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))) (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x)))) (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* * * * [misc]progress:  [ 92 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* * * * [misc]progress:  [ 93 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (log (* (exp (* -12.0 x)) (exp (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (* (exp (* -12.0 x)) (exp (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* [exit]simplify:  Simplified to (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))
* * * * [misc]progress:  [ 94 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1))))>
* * * * [misc]progress:  [ 95 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (exp (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (log (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (log (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* * * * [misc]progress:  [ 96 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (log (exp (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (exp (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (exp (* -12.0 x)))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (exp (* -12.0 x)))
* * * * [misc]progress:  [ 97 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [enter]simplify:  Simplifying (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* * * * [misc]progress:  [ 98 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (* (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (* (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* [exit]simplify:  Simplified to (pow (+ (* -12.0 x) (* (* 8.0 x) (* x x))) 3)
* [exit]simplify:  Simplified to (pow (+ (* -12.0 x) (* (* 8.0 x) (* x x))) 3)
* * * * [misc]progress:  [ 99 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [enter]simplify:  Simplifying (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* * * * [misc]progress:  [ 100 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (/ (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)) (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))>
* [enter]simplify:  Simplifying (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))
* [exit]simplify:  Simplified to (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))
* [enter]simplify:  Simplifying (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* * [misc]simplify:  iters left: 3 (472 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x)))
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x)))
* * * * [misc]progress:  [ 101 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* 1 (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* * * * [misc]progress:  [ 102 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (/ (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))) (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (279 enodes)
* [exit]simplify:  Simplified to (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))
* [exit]simplify:  Simplified to (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))
* [enter]simplify:  Simplifying (- (* -12.0 x) (* 8.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (96 enodes)
* [exit]simplify:  Simplified to (- (* -12.0 x) (* (* 8.0 x) (* x x)))
* [exit]simplify:  Simplified to (- (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 103 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* 8.0 (* (* x x) x)) (* -12.0 x)))))>
* * * * [misc]progress:  [ 104 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (log (* (exp (* -12.0 x)) (exp (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (exp (* -12.0 x)) (exp (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* [exit]simplify:  Simplified to (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))
* * * * [misc]progress:  [ 105 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 106 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (exp (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (log (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (log (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* * * * [misc]progress:  [ 107 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (log (exp (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (exp (* -12.0 x)))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (exp (* -12.0 x)))
* * * * [misc]progress:  [ 108 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [enter]simplify:  Simplifying (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* * * * [misc]progress:  [ 109 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (cbrt (* (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* [exit]simplify:  Simplified to (pow (+ (* -12.0 x) (* (* 8.0 x) (* x x))) 3)
* [exit]simplify:  Simplified to (pow (+ (* -12.0 x) (* (* 8.0 x) (* x x))) 3)
* * * * [misc]progress:  [ 110 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (* (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [enter]simplify:  Simplifying (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* * * * [misc]progress:  [ 111 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (/ (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)) (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))
* [exit]simplify:  Simplified to (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))
* [enter]simplify:  Simplifying (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* * [misc]simplify:  iters left: 3 (472 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x)))
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x)))
* * * * [misc]progress:  [ 112 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (* 1 (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 113 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (/ (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))) (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (279 enodes)
* [exit]simplify:  Simplified to (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))
* [exit]simplify:  Simplified to (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))
* [enter]simplify:  Simplifying (- (* -12.0 x) (* 8.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (96 enodes)
* [exit]simplify:  Simplified to (- (* -12.0 x) (* (* 8.0 x) (* x x)))
* [exit]simplify:  Simplified to (- (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 114 / 126 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* 8.0 (* (* x x) x)) (* -12.0 x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 115 / 126 ] simplifiying candidate #<alt-event (Î» (x) (* (- (+ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (* 0.09876543209876543 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)))) (+ (* 0.4444444444444444 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 2))) (* 21.333333333333332 (/ (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)) (pow -12.0 2))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (- (+ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (* 0.09876543209876543 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)))) (+ (* 0.4444444444444444 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 2))) (* 21.333333333333332 (/ (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)) (pow -12.0 2))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (77 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* (* (* (pow x 1/3) (pow (- 12.0) 1/3)) (* (pow x 1/3) (pow (- 12.0) 1/3))) (- (* 0.09876543209876543 (pow x 4)) (* (* 0.4444444444444444 x) x))) (* (* (pow x 1/3) (pow (- 12.0) 1/3)) (* (pow x 1/3) (pow (- 12.0) 1/3)))) (* (- 21.333333333333332) (/ (* (* (pow x 1/3) (pow (- 12.0) 1/3)) (* (pow x 1/3) (pow (- 12.0) 1/3))) (/ (* -12.0 -12.0) (pow x 4))))) (cbrt (+ (* (* 8.0 x) (* x x)) (* x -12.0))))
* * * * [misc]progress:  [ 116 / 126 ] simplifiying candidate #<alt-event (Î» (x) (* (- (+ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* 0.5 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 4)))) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* (pow 8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 2))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (- (+ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* 0.5 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 4)))) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* (pow 8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 2))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (205 enodes)
* [exit]simplify:  Simplified to (* (- (* (/ (exp (* (+ (log 8.0) (* (log x) 3)) (+ 1/3 1/3))) (pow x 4)) (- 0.5 (/ (/ 48.0 8.0) 8.0))) (- (* (/ 1.0 (* x x)) (exp (* (+ (log 8.0) (* (log x) 3)) (+ 1/3 1/3)))) (exp (* (+ (log 8.0) (* (log x) 3)) (+ 1/3 1/3))))) (cbrt (+ (* -12.0 x) (* (* x x) (* x 8.0)))))
* * * * [misc]progress:  [ 117 / 126 ] simplifiying candidate #<alt-event (Î» (x) (* (- (+ (* 0.5 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 4))) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2)) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (* (pow -8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 2))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (- (+ (* 0.5 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 4))) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2)) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (* (pow -8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 2))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (202 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* x x) (* x 8.0)))) (- (+ (exp (* (- (log (- 8.0)) (* (log (/ -1 x)) 3)) (+ 1/3 1/3))) (* (/ 0.5 (pow x 4)) (exp (* (- (log (- 8.0)) (* (log (/ -1 x)) 3)) (+ 1/3 1/3))))) (+ (* (/ 1.0 (* x x)) (exp (* (- (log (- 8.0)) (* (log (/ -1 x)) 3)) (+ 1/3 1/3)))) (* (/ 48.0 (* (* -8.0 -8.0) (pow x 4))) (exp (* (- (log (- 8.0)) (* (log (/ -1 x)) 3)) (+ 1/3 1/3)))))))
* * * * [misc]progress:  [ 118 / 126 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.2222222222222222 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3) (pow x 4))) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3)) (+ (* 0.6666666666666666 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3) (pow x 2))) (* 32.0 (/ (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3) (pow x 4)) (pow -12.0 2))))))>
* [enter]simplify:  Simplifying (- (+ (* 0.2222222222222222 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3) (pow x 4))) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3)) (+ (* 0.6666666666666666 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3) (pow x 2))) (* 32.0 (/ (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3) (pow x 4)) (pow -12.0 2)))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* [exit]simplify:  Simplified to (- (+ (* (pow (* (pow (- 12.0) 1/3) (pow x 1/3)) 3) (- (* (pow x 4) 0.2222222222222222) (* x (* x 0.6666666666666666)))) (pow (* (pow (- 12.0) 1/3) (pow x 1/3)) 3)) (* (/ (* (* (pow (- 12.0) 1/3) (pow x 1/3)) (* (pow (- 12.0) 1/3) (pow x 1/3))) (/ (/ (* -12.0 -12.0) (pow x 4)) (* (pow (- 12.0) 1/3) (pow x 1/3)))) 32.0))
* * * * [misc]progress:  [ 119 / 126 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (* 1.125 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (pow x 4)))) (+ (* 1.5 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (pow x 2))) (* 72.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (* (pow 8.0 2) (pow x 4)))))))>
* [enter]simplify:  Simplifying (- (+ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (* 1.125 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (pow x 4)))) (+ (* 1.5 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (pow x 2))) (* 72.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (* (pow 8.0 2) (pow x 4))))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (68 enodes)
* * [misc]simplify:  iters left: 4 (190 enodes)
* [exit]simplify:  Simplified to (- (* (/ (pow (exp (+ (* 1/3 (log 8.0)) (* (* 1/3 3) (log x)))) 3) (pow x 4)) (- 1.125 (/ (/ 72.0 8.0) 8.0))) (- (* (/ 1.5 (* x x)) (pow (exp (+ (* 1/3 (log 8.0)) (* (* 1/3 3) (log x)))) 3)) (pow (exp (+ (* 1/3 (log 8.0)) (* (* 1/3 3) (log x)))) 3)))
* * * * [misc]progress:  [ 120 / 126 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 3) (* 1.125 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 3) (pow x 4)))) (+ (* 72.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 3) (* (pow -8.0 2) (pow x 4)))) (* 1.5 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 3) (pow x 2))))))>
* [enter]simplify:  Simplifying (- (+ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 3) (* 1.125 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 3) (pow x 4)))) (+ (* 72.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 3) (* (pow -8.0 2) (pow x 4)))) (* 1.5 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 3) (pow x 2)))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (186 enodes)
* [exit]simplify:  Simplified to (- (* (/ (pow (exp (+ (* (log (- 8.0)) 1/3) (* (* 1/3 (- 3)) (log (/ -1 x))))) 3) (pow x 4)) (- 1.125 (/ (/ 72.0 -8.0) -8.0))) (- (* (/ 1.5 (* x x)) (pow (exp (+ (* (log (- 8.0)) 1/3) (* (* 1/3 (- 3)) (log (/ -1 x))))) 3)) (pow (exp (+ (* (log (- 8.0)) 1/3) (* (* 1/3 (- 3)) (log (/ -1 x))))) 3)))
* * * * [misc]progress:  [ 121 / 126 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* 8.0 (pow x 3)) (* 12.0 x)))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* 8.0 (pow x 3)) (* 12.0 x))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x)))) (cbrt (- (* (* x x) (* 8.0 x)) (* 12.0 x))))
* * * * [misc]progress:  [ 122 / 126 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* 8.0 (pow x 3)) (* 12.0 x)))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* 8.0 (pow x 3)) (* 12.0 x))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x)))) (cbrt (- (* (* x x) (* 8.0 x)) (* 12.0 x))))
* * * * [misc]progress:  [ 123 / 126 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* 8.0 (pow x 3)) (* 12.0 x)))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* 8.0 (pow x 3)) (* 12.0 x))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x)))) (cbrt (- (* (* x x) (* 8.0 x)) (* 12.0 x))))
* * * * [misc]progress:  [ 124 / 126 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* 8.0 (pow x 3)) (* 12.0 x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* 8.0 (pow x 3)) (* 12.0 x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (70 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (- (* (* x x) (* 8.0 x)) (* 12.0 x))))
* * * * [misc]progress:  [ 125 / 126 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* 8.0 (pow x 3)) (* 12.0 x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* 8.0 (pow x 3)) (* 12.0 x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (70 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (- (* (* x x) (* 8.0 x)) (* 12.0 x))))
* * * * [misc]progress:  [ 126 / 126 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* 8.0 (pow x 3)) (* 12.0 x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* 8.0 (pow x 3)) (* 12.0 x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (70 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (- (* (* x x) (* 8.0 x)) (* 12.0 x))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1 2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) into (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 0) (* 0 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) into (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) into (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 0) (+ (* 0 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) 0) (* 0 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))) (+ (* 0 0) (+ (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2))))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))))) into (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2)))) into (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2)))) (pow x 4)) (+ (* (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (pow x 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) into (- (+ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (* 0.09876543209876543 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)))) (+ (* 0.4444444444444444 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 2))) (* 21.333333333333332 (/ (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)) (pow -12.0 2)))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) into (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 0) (+ (* 0 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) 0) (* 0 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))) (+ (* 0 0) (+ (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))))) into (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2)))) into (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow 8.0 2)))) (pow (/ 1 x) 4)) (+ (* (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2))) (pow (/ 1 x) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2))) into (- (+ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* 0.5 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 4)))) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* (pow 8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 2)))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) into (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 0) (+ (* 0 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) 0) (* 0 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (+ (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))))) into (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2)))) into (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2) (pow -8.0 2)))) (pow (/ 1 (- x)) 4)) (+ (* (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2))) (pow (/ 1 (- x)) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2))) into (- (+ (* 0.5 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 4))) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2)) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (* (pow -8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 2)))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1 2 1)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) into (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 0) (* 0 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) into (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) into (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 0) (+ (* 0 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) 0) (* 0 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))) (+ (* 0 0) (+ (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2))))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))))) into (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2)))) into (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2)))) (pow x 4)) (+ (* (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (pow x 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) into (- (+ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (* 0.09876543209876543 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)))) (+ (* 0.4444444444444444 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 2))) (* 21.333333333333332 (/ (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)) (pow -12.0 2)))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) into (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 0) (+ (* 0 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) 0) (* 0 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))) (+ (* 0 0) (+ (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))))) into (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2)))) into (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow 8.0 2)))) (pow (/ 1 x) 4)) (+ (* (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2))) (pow (/ 1 x) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2))) into (- (+ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* 0.5 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 4)))) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* (pow 8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 2)))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) into (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 0) (+ (* 0 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) 0) (* 0 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (+ (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))))) into (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2)))) into (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2) (pow -8.0 2)))) (pow (/ 1 (- x)) 4)) (+ (* (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2))) (pow (/ 1 (- x)) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2))) into (- (+ (* 0.5 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 4))) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2)) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (* (pow -8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 2)))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 1 1)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) into (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 0) (* 0 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) into (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) into (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 0) (+ (* 0 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) 0) (* 0 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))) (+ (* 0 0) (+ (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2))))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))))) into (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2)))) into (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2)))) (pow x 4)) (+ (* (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (pow x 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) into (- (+ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (* 0.09876543209876543 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)))) (+ (* 0.4444444444444444 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 2))) (* 21.333333333333332 (/ (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)) (pow -12.0 2)))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) into (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 0) (+ (* 0 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) 0) (* 0 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))) (+ (* 0 0) (+ (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))))) into (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2)))) into (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow 8.0 2)))) (pow (/ 1 x) 4)) (+ (* (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2))) (pow (/ 1 x) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2))) into (- (+ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* 0.5 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 4)))) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* (pow 8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 2)))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) into (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 0) (+ (* 0 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) 0) (* 0 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (+ (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))))) into (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2)))) into (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2) (pow -8.0 2)))) (pow (/ 1 (- x)) 4)) (+ (* (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2))) (pow (/ 1 (- x)) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2))) into (- (+ (* 0.5 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 4))) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2)) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (* (pow -8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 2)))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) into (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* 1/3 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) into (* 1/3 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) into (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) into (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* 1/3 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) into (* 1/3 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) into (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) into (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* 1/3 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) into (* 1/3 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) into (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) into (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* 1/3 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) into (* 1/3 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) into (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3)
* [misc]backup-simplify:  Simplify (* (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3)) into (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3)
* [misc]backup-simplify:  Simplify (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3) into (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3)
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 0) (* 0 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 0) (* 0 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3) 0) (* 0 (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) into (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 2))) (* 1 (/ (* 1 (pow (* 2 (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) 1)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1)))) 2) into -0.4444444444444444
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.4444444444444444) (+ (* 0 0) (* 0 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))))) into (- 0.14814814814814814)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.14814814814814814) 1) 1)))) into (* -0.14814814814814814 (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) into (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 2))) (* 1 (/ (* 1 (pow (* 2 (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) 1)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1)))) 2) into -0.4444444444444444
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.4444444444444444) (+ (* 0 0) (* 0 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))))) into (- 0.14814814814814814)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.14814814814814814) 1) 1)))) into (* -0.14814814814814814 (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3) (* -0.14814814814814814 (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3))) (+ (* 0 0) (* (* -0.14814814814814814 (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3)))) into (- (* 0.2962962962962963 (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3)))
* [misc]backup-simplify:  Simplify (- (* 0.2962962962962963 (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3))) into (- (* 0.2962962962962963 (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 0) (+ (* 0 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) 0) (* 0 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) 1)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.4444444444444444) (+ (* 0 0) (* 0 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.14814814814814814) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 0) (+ (* 0 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) 0) (* 0 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) 1)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.4444444444444444) (+ (* 0 0) (* 0 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.14814814814814814) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3) 0) (+ (* 0 (* -0.14814814814814814 (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3))) (+ (* (* -0.14814814814814814 (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3)) 0) (* 0 (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))) (+ (* 0 0) (+ (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2))))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))))) into (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) 1)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 3))) (* -3 (/ (* 1 (pow (* 2 (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) 2)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))) 1)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1)))) 24) into (/ -21.333333333333332 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -21.333333333333332 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.4444444444444444) (+ (* 0 0) (* 0 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))))))) into (- (* 7.111111111111111 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.14814814814814814) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.14814814814814814) 2) 2)) (* (/ (pow (- (* 7.111111111111111 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3) (- 0.010973936899862825 (* 7.111111111111111 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))) (+ (* 0 0) (+ (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2))))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))))) into (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) 1)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 3))) (* -3 (/ (* 1 (pow (* 2 (- (* 0.4444444444444444 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) 2)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (- (* 0.09876543209876543 (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (* 21.333333333333332 (/ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))) 1)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1)))) 24) into (/ -21.333333333333332 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -21.333333333333332 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.4444444444444444) (+ (* 0 0) (* 0 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))))))) into (- (* 7.111111111111111 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.14814814814814814) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.14814814814814814) 2) 2)) (* (/ (pow (- (* 7.111111111111111 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3) (- 0.010973936899862825 (* 7.111111111111111 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3) (* (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3) (- 0.010973936899862825 (* 7.111111111111111 (/ 1 (pow -12.0 2)))))) (+ (* 0 0) (+ (* (* -0.14814814814814814 (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3)) (* -0.14814814814814814 (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3))) (+ (* 0 0) (* (* (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3) (- 0.010973936899862825 (* 7.111111111111111 (/ 1 (pow -12.0 2))))) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) 1/3)))))) into (- (* 0.0438957475994513 (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3)) (* 14.222222222222221 (* (/ 1 (pow -12.0 2)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3))))
* [misc]backup-simplify:  Simplify (- (* 0.0438957475994513 (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3)) (* 14.222222222222221 (* (/ 1 (pow -12.0 2)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3)))) into (- (* 0.0438957475994513 (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3)) (* 14.222222222222221 (* (/ 1 (pow -12.0 2)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.0438957475994513 (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3)) (* 14.222222222222221 (* (/ 1 (pow -12.0 2)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3)))) (pow x 4)) (+ (* (- (* 0.2962962962962963 (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3))) (pow x 2)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3))) into (- (+ (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3) (* 0.0438957475994513 (* (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3) (pow x 4)))) (+ (* 0.2962962962962963 (* (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3) (pow x 2))) (* 14.222222222222221 (* (/ (pow x 4) (pow -12.0 2)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3)))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) (cbrt (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) (cbrt (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) into (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (* 1/3 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) into (* 1/3 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) into (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) into (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (* 1/3 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) into (* 1/3 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) into (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) (cbrt (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) into (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (* 1/3 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) into (* 1/3 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) into (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) into (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (* 1/3 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) into (* 1/3 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) into (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3)
* [misc]backup-simplify:  Simplify (* (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3)) into (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4) 1/3)
* [misc]backup-simplify:  Simplify (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4) 1/3) into (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4) 1/3)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3) 0) (* 0 (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 (pow (* 2 (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) 1)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1)))) 2) into -1.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.0) (+ (* 0 0) (* 0 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))))) into (- 0.3333333333333333)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.3333333333333333) 1) 1)))) into (* -0.3333333333333333 (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3))
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 (pow (* 2 (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) 1)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1)))) 2) into -1.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.0) (+ (* 0 0) (* 0 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))))) into (- 0.3333333333333333)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.3333333333333333) 1) 1)))) into (* -0.3333333333333333 (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3) (* -0.3333333333333333 (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3))) (+ (* 0 0) (* (* -0.3333333333333333 (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3)))) into (- (* 0.6666666666666666 (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4) 1/3)))
* [misc]backup-simplify:  Simplify (- (* 0.6666666666666666 (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4) 1/3))) into (- (* 0.6666666666666666 (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4) 1/3)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 0) (+ (* 0 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) 0) (* 0 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) 1)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.0) (+ (* 0 0) (* 0 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.3333333333333333) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 0) (+ (* 0 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) 0) (* 0 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) 1)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.0) (+ (* 0 0) (* 0 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.3333333333333333) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3) 0) (+ (* 0 (* -0.3333333333333333 (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3))) (+ (* (* -0.3333333333333333 (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3)) 0) (* 0 (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))) (+ (* 0 0) (+ (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))))) into (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) 1)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 3))) (* -3 (/ (* 1 (pow (* 2 (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) 2)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))) 1)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1)))) 24) into (/ -48.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -48.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.0) (+ (* 0 0) (* 0 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))))))) into (- (* 16.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.3333333333333333) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.3333333333333333) 2) 2)) (* (/ (pow (- (* 16.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3) (- 0.05555555555555555 (* 16.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))) (+ (* 0 0) (+ (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))))) into (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) 1)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 3))) (* -3 (/ (* 1 (pow (* 2 (- (* 1.0 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) 2)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (- (* 0.5 (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))) 1)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1)))) 24) into (/ -48.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -48.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.0) (+ (* 0 0) (* 0 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))))))) into (- (* 16.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.3333333333333333) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.3333333333333333) 2) 2)) (* (/ (pow (- (* 16.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3) (- 0.05555555555555555 (* 16.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3) (* (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3) (- 0.05555555555555555 (* 16.0 (/ 1 (pow 8.0 2)))))) (+ (* 0 0) (+ (* (* -0.3333333333333333 (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3)) (* -0.3333333333333333 (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3))) (+ (* 0 0) (* (* (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3) (- 0.05555555555555555 (* 16.0 (/ 1 (pow 8.0 2))))) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2) 1/3)))))) into (- (* 0.2222222222222222 (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4) 1/3)) (* 32.0 (* (/ 1 (pow 8.0 2)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4) 1/3))))
* [misc]backup-simplify:  Simplify (- (* 0.2222222222222222 (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4) 1/3)) (* 32.0 (* (/ 1 (pow 8.0 2)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4) 1/3)))) into (- (* 0.2222222222222222 (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4) 1/3)) (* 32.0 (* (/ 1 (pow 8.0 2)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4) 1/3))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.2222222222222222 (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 4) 1/3)) (* 32.0 (* (/ 1 (pow 8.0 2)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 4) 1/3)))) (pow (/ 1 x) 4)) (+ (* (- (* 0.6666666666666666 (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 4) 1/3))) (pow (/ 1 x) 2)) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 4) 1/3))) into (- (+ (* 0.2222222222222222 (* (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 4) 1/3) (/ 1 (pow x 4)))) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 4) 1/3)) (+ (* 32.0 (* (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 4) 1/3) (/ 1 (* (pow 8.0 2) (pow x 4))))) (* 0.6666666666666666 (* (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 4) 1/3) (/ 1 (pow x 2))))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) (cbrt (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) (cbrt (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) into (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (* 1/3 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) into (* 1/3 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) into (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) into (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (* 1/3 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) into (* 1/3 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) into (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) (cbrt (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) into (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (* 1/3 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) into (* 1/3 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) into (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) into (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (* 1/3 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) into (* 1/3 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) into (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3)
* [misc]backup-simplify:  Simplify (* (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3)) into (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4) 1/3)
* [misc]backup-simplify:  Simplify (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4) 1/3) into (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4) 1/3)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3) 0) (* 0 (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 (pow (* 2 (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) 1)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1)))) 2) into -1.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.0) (+ (* 0 0) (* 0 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))))) into (- 0.3333333333333333)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.3333333333333333) 1) 1)))) into (* -0.3333333333333333 (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3))
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 (pow (* 2 (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) 1)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1)))) 2) into -1.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.0) (+ (* 0 0) (* 0 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))))) into (- 0.3333333333333333)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.3333333333333333) 1) 1)))) into (* -0.3333333333333333 (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3) (* -0.3333333333333333 (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3))) (+ (* 0 0) (* (* -0.3333333333333333 (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3)))) into (- (* 0.6666666666666666 (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4) 1/3)))
* [misc]backup-simplify:  Simplify (- (* 0.6666666666666666 (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4) 1/3))) into (- (* 0.6666666666666666 (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4) 1/3)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 0) (+ (* 0 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) 0) (* 0 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) 1)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.0) (+ (* 0 0) (* 0 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.3333333333333333) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 0) (+ (* 0 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) 0) (* 0 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) 1)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.0) (+ (* 0 0) (* 0 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.3333333333333333) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3) 0) (+ (* 0 (* -0.3333333333333333 (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3))) (+ (* (* -0.3333333333333333 (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3)) 0) (* 0 (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (+ (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))))) into (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) 1)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 3))) (* -3 (/ (* 1 (pow (* 2 (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) 2)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))) 1)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1)))) 24) into (/ -48.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -48.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.0) (+ (* 0 0) (* 0 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))))))) into (- (* 16.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.3333333333333333) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.3333333333333333) 2) 2)) (* (/ (pow (- (* 16.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.05555555555555555 (* 16.0 (/ 1 (pow -8.0 2)))) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (+ (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))))) into (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) 1)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 3))) (* -3 (/ (* 1 (pow (* 2 (- (* 1.0 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) 2)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (- (* 0.5 (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))) 1)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1)))) 24) into (/ -48.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -48.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.0) (+ (* 0 0) (* 0 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))))))) into (- (* 16.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.3333333333333333) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.3333333333333333) 2) 2)) (* (/ (pow (- (* 16.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.05555555555555555 (* 16.0 (/ 1 (pow -8.0 2)))) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3) (* (- 0.05555555555555555 (* 16.0 (/ 1 (pow -8.0 2)))) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3))) (+ (* 0 0) (+ (* (* -0.3333333333333333 (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3)) (* -0.3333333333333333 (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3))) (+ (* 0 0) (* (* (- 0.05555555555555555 (* 16.0 (/ 1 (pow -8.0 2)))) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) 1/3)))))) into (- (* 0.2222222222222222 (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4) 1/3)) (* 32.0 (* (/ 1 (pow -8.0 2)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4) 1/3))))
* [misc]backup-simplify:  Simplify (- (* 0.2222222222222222 (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4) 1/3)) (* 32.0 (* (/ 1 (pow -8.0 2)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4) 1/3)))) into (- (* 0.2222222222222222 (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4) 1/3)) (* 32.0 (* (/ 1 (pow -8.0 2)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4) 1/3))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.2222222222222222 (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 4) 1/3)) (* 32.0 (* (/ 1 (pow -8.0 2)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 4) 1/3)))) (pow (/ 1 (- x)) 4)) (+ (* (- (* 0.6666666666666666 (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 4) 1/3))) (pow (/ 1 (- x)) 2)) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 4) 1/3))) into (- (+ (* 0.2222222222222222 (* (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 4) 1/3) (/ 1 (pow x 4)))) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 4) 1/3)) (+ (* 0.6666666666666666 (* (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 4) 1/3) (/ 1 (pow x 2)))) (* 32.0 (* (/ 1 (* (pow -8.0 2) (pow x 4))) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 4) 1/3)))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ 1/3 1/3)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 2 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ 1 1)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 3 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (pow (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (256 enodes)
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* * * * [misc]progress:  [ 4 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (pow (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 5 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 2))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 6 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ 1 1)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 7 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (pow (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 8 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (exp (+ (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 9 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (exp (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 10 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (log (exp (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 11 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (256 enodes)
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* * * * [misc]progress:  [ 12 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 13 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (115 enodes)
* * [misc]simplify:  iters left: 1 (343 enodes)
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* * * * [misc]progress:  [ 14 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (sqrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (sqrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 15 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (/ (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (305 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (466 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))))
* * * * [misc]progress:  [ 16 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (/ (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))))
* * * * [misc]progress:  [ 17 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (/ (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))
* [enter]simplify:  Simplifying (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))
* * * * [misc]progress:  [ 18 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (/ (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (285 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))
* [enter]simplify:  Simplifying (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (74 enodes)
* * [misc]simplify:  iters left: 2 (89 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 19 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* 1 (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 20 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 21 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 22 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt 1)) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt 1))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 23 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* * * * [misc]progress:  [ 24 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (sqrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (sqrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 25 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1)
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* [exit]simplify:  Simplified to (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* * * * [misc]progress:  [ 26 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 27 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (sqrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (sqrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 28 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt 1) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 29 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 30 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (sqrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (sqrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 31 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* 1 (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 32 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (/ (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (319 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))
* * * * [misc]progress:  [ 33 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (/ (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (292 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (- (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (- (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 34 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (/ (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (320 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))
* * * * [misc]progress:  [ 35 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (/ (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (289 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))
* * * * [misc]progress:  [ 36 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 37 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ 1/3 1/3)))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 38 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ 1 1)))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 39 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (pow (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (256 enodes)
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* * * * [misc]progress:  [ 40 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (pow (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 41 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 2))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 42 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ 1 1)))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 43 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (pow (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 44 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (exp (+ (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 45 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (exp (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 46 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (log (exp (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 47 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (256 enodes)
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* * * * [misc]progress:  [ 48 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 49 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (115 enodes)
* * [misc]simplify:  iters left: 1 (343 enodes)
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* * * * [misc]progress:  [ 50 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (sqrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (sqrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 51 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (/ (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (305 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (466 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))))
* * * * [misc]progress:  [ 52 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (/ (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))))
* * * * [misc]progress:  [ 53 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (/ (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))
* [enter]simplify:  Simplifying (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))
* * * * [misc]progress:  [ 54 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (/ (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (285 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))
* [enter]simplify:  Simplifying (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (74 enodes)
* * [misc]simplify:  iters left: 2 (89 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 55 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* 1 (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 56 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 57 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 58 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt 1)) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt 1))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 59 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* * * * [misc]progress:  [ 60 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (sqrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (sqrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 61 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1)
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* [exit]simplify:  Simplified to (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* * * * [misc]progress:  [ 62 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 63 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (sqrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (sqrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 64 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt 1) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 65 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 66 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (sqrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (sqrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 67 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* 1 (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 68 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (/ (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (319 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))
* * * * [misc]progress:  [ 69 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (/ (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (292 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (- (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (- (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 70 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (/ (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (320 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))
* * * * [misc]progress:  [ 71 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (/ (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (289 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))
* * * * [misc]progress:  [ 72 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 73 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ 1/3 1/3))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 74 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ 1 1))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 75 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (pow (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (256 enodes)
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* * * * [misc]progress:  [ 76 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (pow (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1)) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 77 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 2)) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 78 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ 1 1))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 79 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (pow (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1)) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 80 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (exp (+ (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 81 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (exp (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (log (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 82 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (log (exp (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 83 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (cbrt (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (256 enodes)
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* * * * [misc]progress:  [ 84 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 85 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (cbrt (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (115 enodes)
* * [misc]simplify:  iters left: 1 (343 enodes)
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* * * * [misc]progress:  [ 86 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (sqrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (sqrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 87 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (/ (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (305 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (466 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))))
* * * * [misc]progress:  [ 88 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (/ (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x 8.0) (* x x)) (- (* (* x 8.0) (* x x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))))
* * * * [misc]progress:  [ 89 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (/ (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))
* [enter]simplify:  Simplifying (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))
* * * * [misc]progress:  [ 90 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (/ (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (285 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))
* [enter]simplify:  Simplifying (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (74 enodes)
* * [misc]simplify:  iters left: 2 (89 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 91 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* 1 (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 92 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 93 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 94 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt 1)) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt 1))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 95 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* * * * [misc]progress:  [ 96 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (sqrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (sqrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 97 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1)
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* [exit]simplify:  Simplified to (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))
* * * * [misc]progress:  [ 98 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 99 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (sqrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (sqrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 100 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt 1) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 101 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 102 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (sqrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (sqrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 103 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* 1 (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 104 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (/ (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (319 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))
* * * * [misc]progress:  [ 105 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (/ (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (292 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (- (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (- (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 106 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (/ (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (320 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))
* * * * [misc]progress:  [ 107 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (/ (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (289 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))
* * * * [misc]progress:  [ 108 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 109 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (pow (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (+ 1/3 1/3)) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 110 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (pow (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (+ 1 1)) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 111 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (pow (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) 1/3) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (47 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (110 enodes)
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))
* * * * [misc]progress:  [ 112 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (pow (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) 1) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* * * * [misc]progress:  [ 113 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (pow (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) 2) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 114 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (pow (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (+ 1 1)) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 115 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (pow (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) 1) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 116 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (exp (+ (log (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (log (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (log (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))) (log (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))) (log (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* * * * [misc]progress:  [ 117 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (exp (log (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))) (log (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))) (log (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* * * * [misc]progress:  [ 118 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (log (exp (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (exp (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* * * * [misc]progress:  [ 119 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (47 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (110 enodes)
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))
* [exit]simplify:  Simplified to (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))
* * * * [misc]progress:  [ 120 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (* (cbrt (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))) (cbrt (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))) (cbrt (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* * * * [misc]progress:  [ 121 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (60 enodes)
* * [misc]simplify:  iters left: 2 (73 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 122 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (sqrt (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (sqrt (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (fabs (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (fabs (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* * * * [misc]progress:  [ 123 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (308 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (469 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x)))) (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x)))))) (cbrt (* (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x)))) (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x)))) (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x)))))) (cbrt (* (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x)))) (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x)))))))
* * * * [misc]progress:  [ 124 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))))) (cbrt (+ (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))))))) (cbrt (* (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))) (cbrt (+ (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))))) (cbrt (+ (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))))))) (cbrt (* (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))) (cbrt (+ (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))))))))
* * * * [misc]progress:  [ 125 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))))) (cbrt (+ (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))))))) (cbrt (* (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))) (cbrt (+ (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))))) (cbrt (+ (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))))))) (cbrt (* (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))) (cbrt (+ (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))))))))
* * * * [misc]progress:  [ 126 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x)))))) (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x)))))) (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))))
* * * * [misc]progress:  [ 127 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (330 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (475 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))))) (cbrt (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))))) (cbrt (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x))))))
* * * * [misc]progress:  [ 128 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (499 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))) (cbrt (+ (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))) (cbrt (+ (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* * * * [misc]progress:  [ 129 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (330 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (475 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))))) (cbrt (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))))) (cbrt (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x))))))
* * * * [misc]progress:  [ 130 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (499 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))) (cbrt (+ (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))) (cbrt (+ (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* * * * [misc]progress:  [ 131 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))))) (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))))) (cbrt (* (cbrt (+ (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))))) (cbrt (+ (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))))) (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))))) (cbrt (* (cbrt (+ (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))))) (cbrt (+ (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))))))))
* * * * [misc]progress:  [ 132 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* * [misc]simplify:  iters left: 3 (499 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (cbrt (* (cbrt (+ (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (cbrt (* (cbrt (+ (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))))
* * * * [misc]progress:  [ 133 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (cbrt (* (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (cbrt (* (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))))
* * * * [misc]progress:  [ 134 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))))) (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))))) (cbrt (* (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))) (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))))) (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))))) (cbrt (* (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))) (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x)))))))
* * * * [misc]progress:  [ 135 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x))))))
* * * * [misc]progress:  [ 136 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* * * * [misc]progress:  [ 137 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x))))))
* * * * [misc]progress:  [ 138 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* * * * [misc]progress:  [ 139 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))))))
* * * * [misc]progress:  [ 140 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))) (cbrt (+ (pow (* (* x x) (* x 8.0)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))) (cbrt (+ (pow (* (* x x) (* x 8.0)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))) (cbrt (+ (pow (* (* x x) (* x 8.0)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))) (cbrt (+ (pow (* (* x x) (* x 8.0)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* x x) (* 8.0 x)) (- (* (* x x) (* 8.0 x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (* (* (* x x) (* 8.0 x)) (- (* (* x x) (* 8.0 x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* x x) (* 8.0 x)) (- (* (* x x) (* 8.0 x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (* (* (* x x) (* 8.0 x)) (- (* (* x x) (* 8.0 x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* * * * [misc]progress:  [ 141 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (pow (* (* x x) (* x 8.0)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (pow (* (* x x) (* x 8.0)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (pow (* (* x x) (* x 8.0)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (pow (* (* x x) (* x 8.0)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* x x) (* 8.0 x)) (- (* (* x x) (* 8.0 x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (* (* (* x x) (* 8.0 x)) (- (* (* x x) (* 8.0 x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* x x) (* 8.0 x)) (- (* (* x x) (* 8.0 x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (* (* (* x x) (* 8.0 x)) (- (* (* x x) (* 8.0 x)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* * * * [misc]progress:  [ 142 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* * * * [misc]progress:  [ 143 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x))))))
* * * * [misc]progress:  [ 144 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))) (cbrt (* (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))) (cbrt (* (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 145 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x))))))
* * * * [misc]progress:  [ 146 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))) (cbrt (* (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))) (cbrt (* (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))) (cbrt (+ (pow (* (* x 8.0) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* (* x x) (* 8.0 x)) (* -12.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 147 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* x 8.0)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* x 8.0)) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* x 8.0)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* x 8.0)) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (+ (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* 8.0 x)))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (+ (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* 8.0 x)))))))))
* * * * [misc]progress:  [ 148 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x 8.0) (* x x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x 8.0) (* x x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* * * * [misc]progress:  [ 149 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x 8.0) (* x x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x 8.0) (* x x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* * * * [misc]progress:  [ 150 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (285 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))) (cbrt (* (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))) (cbrt (* (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (77 enodes)
* * [misc]simplify:  iters left: 2 (82 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* * * * [misc]progress:  [ 151 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* x 8.0)) 3))))) (cbrt (* (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* x 8.0)) 3))))) (cbrt (* (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (499 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* * * * [misc]progress:  [ 152 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (79 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* * * * [misc]progress:  [ 153 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* x 8.0)) 3))) (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))))) (cbrt (* (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* x 8.0)) 3))) (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))))) (cbrt (* (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (499 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* * * * [misc]progress:  [ 154 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (79 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* * * * [misc]progress:  [ 155 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (335 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (475 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))))) (cbrt (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))))) (cbrt (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x))))))
* * * * [misc]progress:  [ 156 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))) (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))) (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x))))))
* * * * [misc]progress:  [ 157 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))) (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))) (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x))))))
* * * * [misc]progress:  [ 158 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (499 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (cbrt (cbrt (+ (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (cbrt (cbrt (+ (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0)))))))
* * * * [misc]progress:  [ 159 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (328 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (134 enodes)
* * [misc]simplify:  iters left: 3 (472 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x))))) (cbrt (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x))))) (cbrt (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x))))))
* * * * [misc]progress:  [ 160 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* * [misc]simplify:  iters left: 3 (499 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* * * * [misc]progress:  [ 161 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (334 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (134 enodes)
* * [misc]simplify:  iters left: 3 (472 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x))))) (cbrt (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x))))) (cbrt (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x))))))
* * * * [misc]progress:  [ 162 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* * [misc]simplify:  iters left: 3 (499 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* * * * [misc]progress:  [ 163 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* 8.0 x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* 8.0 x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* 8.0 x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* 8.0 x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 164 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* 8.0 x) (* x x)) 3))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* 8.0 x) (* x x)) 3))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 165 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* 8.0 x) (* x x)) 3))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* 8.0 x) (* x x)) 3))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 166 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (cbrt (* (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (cbrt (* (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (79 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 167 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* 8.0 x) (* x x)) 3))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* 8.0 x) (* x x)) 3))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (- (* (* x x) (* 8.0 x)) (* -12.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (- (* (* x x) (* 8.0 x)) (* -12.0 x)))))))
* * * * [misc]progress:  [ 168 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (293 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (- (* -12.0 x) (* (* x x) (* 8.0 x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (- (* -12.0 x) (* (* x x) (* 8.0 x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (- (* -12.0 x) (* (* x x) (* 8.0 x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (- (* -12.0 x) (* (* x x) (* 8.0 x))))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 169 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* 8.0 x) (* x x)) 3))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* 8.0 x) (* x x)) 3))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (- (* (* x x) (* 8.0 x)) (* -12.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (- (* (* x x) (* 8.0 x)) (* -12.0 x)))))))
* * * * [misc]progress:  [ 170 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (294 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 171 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (330 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (475 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))))) (cbrt (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))))) (cbrt (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x))))))
* * * * [misc]progress:  [ 172 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))) (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))) (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x))))))
* * * * [misc]progress:  [ 173 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))) (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))) (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x)))))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (- (* (* x x) (* x 8.0)) (* -12.0 x))) (* (* -12.0 x) (* -12.0 x))))))
* * * * [misc]progress:  [ 174 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (499 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (cbrt (cbrt (+ (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (cbrt (cbrt (+ (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0)))))))
* * * * [misc]progress:  [ 175 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (318 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (134 enodes)
* * [misc]simplify:  iters left: 3 (472 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x))))) (cbrt (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x))))) (cbrt (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x))))))
* * * * [misc]progress:  [ 176 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* * [misc]simplify:  iters left: 3 (499 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* * * * [misc]progress:  [ 177 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (325 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (134 enodes)
* * [misc]simplify:  iters left: 3 (472 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x))))) (cbrt (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x))))) (cbrt (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x))))))
* * * * [misc]progress:  [ 178 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* * [misc]simplify:  iters left: 3 (499 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* * * * [misc]progress:  [ 179 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* x 8.0)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* x 8.0)) 3))))) (cbrt (* (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))) (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* x 8.0)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* x 8.0)) 3))))) (cbrt (* (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))) (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))) (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 180 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x 8.0) (* x x)) 3))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))) (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x 8.0) (* x x)) 3))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))) (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 181 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x 8.0) (* x x)) 3))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))) (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x 8.0) (* x x)) 3))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))) (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 182 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))) (cbrt (* (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))) (cbrt (* (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (79 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 183 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x 8.0) (* x x)) 3))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x 8.0) (* x x)) 3))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (- (* (* x x) (* 8.0 x)) (* -12.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (- (* (* x x) (* 8.0 x)) (* -12.0 x)))))))
* * * * [misc]progress:  [ 184 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (293 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))) (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))) (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 185 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x 8.0) (* x x)) 3))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x 8.0) (* x x)) 3))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (+ (* (* x 8.0) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* x 8.0) (* x x))))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (- (* (* x x) (* 8.0 x)) (* -12.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (- (* (* x x) (* 8.0 x)) (* -12.0 x)))))))
* * * * [misc]progress:  [ 186 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (294 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))))) (cbrt (* (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))))) (cbrt (* (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 187 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* 1 (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 188 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* * * * [misc]progress:  [ 189 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (47 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))) (cbrt (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))) (cbrt (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* * * * [misc]progress:  [ 190 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (sqrt (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (sqrt (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (sqrt (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* * * * [misc]progress:  [ 191 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) 1) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) 1)
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 192 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 193 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (* (cbrt (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (* (cbrt (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* * * * [misc]progress:  [ 194 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (sqrt (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (sqrt (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* * * * [misc]progress:  [ 195 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* 1 (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* * * * [misc]progress:  [ 196 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (309 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* * * * [misc]progress:  [ 197 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* * * * [misc]progress:  [ 198 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* 8.0 x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* 8.0 x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* * * * [misc]progress:  [ 199 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (292 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x))))))))
* * * * [misc]progress:  [ 200 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (328 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* * * * [misc]progress:  [ 201 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (292 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* * * * [misc]progress:  [ 202 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (328 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* * * * [misc]progress:  [ 203 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (292 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* * * * [misc]progress:  [ 204 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (318 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))))
* * * * [misc]progress:  [ 205 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) (- (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* * * * [misc]progress:  [ 206 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))) (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))))) (cbrt (* (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (pow (* (* x x) (* x 8.0)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))) (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))))) (cbrt (* (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (pow (* (* x x) (* x 8.0)) 3) (pow (* -12.0 x) 3))))))
* * * * [misc]progress:  [ 207 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (293 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))))) (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))))))
* * * * [misc]progress:  [ 208 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (335 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* * * * [misc]progress:  [ 209 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* * * * [misc]progress:  [ 210 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (330 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))) (cbrt (* (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))))
* * * * [misc]progress:  [ 211 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (/ (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))) (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (* (- (* -12.0 x) (* (* x 8.0) (* x x))) (+ (* (* x 8.0) (* x x)) (* -12.0 x)))))) (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))))))
* * * * [misc]progress:  [ 212 / 224 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 213 / 224 ] simplifiying candidate #<alt-event (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (- (+ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (* 0.09876543209876543 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)))) (+ (* 0.4444444444444444 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 2))) (* 21.333333333333332 (/ (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)) (pow -12.0 2))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (- (+ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (* 0.09876543209876543 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)))) (+ (* 0.4444444444444444 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 2))) (* 21.333333333333332 (/ (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)) (pow -12.0 2))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (87 enodes)
* * [misc]simplify:  iters left: 4 (201 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* (* (pow (- 12.0) 1/3) (pow x 1/3)) (* (pow (- 12.0) 1/3) (pow x 1/3))) (* (* (* (pow (- 12.0) 1/3) (pow x 1/3)) (* (pow (- 12.0) 1/3) (pow x 1/3))) (- (* 0.09876543209876543 (pow x 4)) (* 0.4444444444444444 (* x x))))) (/ (- 21.333333333333332) (/ (/ (* -12.0 -12.0) (pow x 4)) (* (* (pow (- 12.0) 1/3) (pow x 1/3)) (* (pow (- 12.0) 1/3) (pow x 1/3))))))) (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))))
* * * * [misc]progress:  [ 214 / 224 ] simplifiying candidate #<alt-event (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (- (+ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* 0.5 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 4)))) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* (pow 8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 2))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (- (+ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* 0.5 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 4)))) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* (pow 8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 2))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (91 enodes)
* * [misc]simplify:  iters left: 4 (217 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (/ (exp (* (+ (log 8.0) (* (log x) 3)) (+ 1/3 1/3))) (pow x 4)) (- 0.5 (/ 48.0 (* 8.0 8.0)))) (- (* (/ 1.0 (* x x)) (exp (* (+ (log 8.0) (* (log x) 3)) (+ 1/3 1/3)))) (exp (* (+ (log 8.0) (* (log x) 3)) (+ 1/3 1/3)))))) (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* * * * [misc]progress:  [ 215 / 224 ] simplifiying candidate #<alt-event (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (- (+ (* 0.5 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 4))) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2)) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (* (pow -8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 2))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (- (+ (* 0.5 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 4))) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2)) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (* (pow -8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 2))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (214 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (- (exp (* (- (log (- 8.0)) (* 3 (log (/ -1 x)))) (+ 1/3 1/3))) (* (/ 48.0 (* (* -8.0 -8.0) (pow x 4))) (exp (* (- (log (- 8.0)) (* 3 (log (/ -1 x)))) (+ 1/3 1/3))))) (- (* (/ 1.0 (* x x)) (exp (* (- (log (- 8.0)) (* 3 (log (/ -1 x)))) (+ 1/3 1/3)))) (* (/ 0.5 (pow x 4)) (exp (* (- (log (- 8.0)) (* 3 (log (/ -1 x)))) (+ 1/3 1/3))))))) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))))
* * * * [misc]progress:  [ 216 / 224 ] simplifiying candidate #<alt-event (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (+ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (* 0.09876543209876543 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)))) (+ (* 0.4444444444444444 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 2))) (* 21.333333333333332 (/ (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)) (pow -12.0 2))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (+ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (* 0.09876543209876543 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)))) (+ (* 0.4444444444444444 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 2))) (* 21.333333333333332 (/ (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)) (pow -12.0 2))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (86 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* * [misc]simplify:  iters left: 3 (499 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- (* (pow (* x (- 12.0)) (+ 1/3 1/3)) (- (* 0.09876543209876543 (pow x 4)) (* x (* 0.4444444444444444 x)))) (- (* (* (/ 21.333333333333332 (* -12.0 -12.0)) (pow x 4)) (pow (* x (- 12.0)) (+ 1/3 1/3))) (pow (* x (- 12.0)) (+ 1/3 1/3))))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))))
* * * * [misc]progress:  [ 217 / 224 ] simplifiying candidate #<alt-event (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (+ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* 0.5 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 4)))) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* (pow 8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 2))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (+ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* 0.5 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 4)))) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* (pow 8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 2))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (214 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (/ (exp (* (+ (* (log x) 3) (log 8.0)) (+ 1/3 1/3))) (pow x 4)) (- 0.5 (/ (/ 48.0 8.0) 8.0))) (- (* (/ 1.0 (* x x)) (exp (* (+ (* (log x) 3) (log 8.0)) (+ 1/3 1/3)))) (exp (* (+ (* (log x) 3) (log 8.0)) (+ 1/3 1/3)))))) (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 218 / 224 ] simplifiying candidate #<alt-event (Î» (x) (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (+ (* 0.5 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 4))) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2)) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (* (pow -8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 2))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (+ (* 0.5 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 4))) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2)) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (* (pow -8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 2))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (89 enodes)
* * [misc]simplify:  iters left: 4 (211 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (* (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (- (- (exp (* (- (log (- 8.0)) (* 3 (log (/ -1 x)))) (+ 1/3 1/3))) (* (/ 48.0 (* (* -8.0 -8.0) (pow x 4))) (exp (* (- (log (- 8.0)) (* 3 (log (/ -1 x)))) (+ 1/3 1/3))))) (- (* (/ 1.0 (* x x)) (exp (* (- (log (- 8.0)) (* 3 (log (/ -1 x)))) (+ 1/3 1/3)))) (* (/ 0.5 (pow x 4)) (exp (* (- (log (- 8.0)) (* 3 (log (/ -1 x)))) (+ 1/3 1/3))))))))
* * * * [misc]progress:  [ 219 / 224 ] simplifiying candidate #<alt-event (Î» (x) (* (* (* (cbrt (- (+ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (* 0.09876543209876543 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)))) (+ (* 0.4444444444444444 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 2))) (* 21.333333333333332 (/ (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)) (pow -12.0 2)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (- (+ (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (* 0.09876543209876543 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)))) (+ (* 0.4444444444444444 (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 2))) (* 21.333333333333332 (/ (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)) (pow -12.0 2)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* x -12.0) (* (* x x) (* 8.0 x)))) (* (cbrt (* (cbrt (+ (* x -12.0) (* (* x x) (* 8.0 x)))) (cbrt (+ (* x -12.0) (* (* x x) (* 8.0 x)))))) (cbrt (* (cbrt (+ (* x -12.0) (* (* x x) (* 8.0 x)))) (cbrt (+ (* x -12.0) (* (* x x) (* 8.0 x)))))))) (cbrt (+ (- (* (* (* (pow (- 12.0) 1/3) (pow x 1/3)) (* (pow (- 12.0) 1/3) (pow x 1/3))) (- (* 0.09876543209876543 (pow x 4)) (* x (* x 0.4444444444444444)))) (* (/ 21.333333333333332 (* -12.0 -12.0)) (* (* (pow (- 12.0) 1/3) (pow x 1/3)) (* (pow (- 12.0) 1/3) (* (pow x 1/3) (pow x 4)))))) (* (* (pow (- 12.0) 1/3) (pow x 1/3)) (* (pow (- 12.0) 1/3) (pow x 1/3))))))
* * * * [misc]progress:  [ 220 / 224 ] simplifiying candidate #<alt-event (Î» (x) (* (* (* (cbrt (- (+ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* 0.5 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 4)))) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* (pow 8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 2)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (- (+ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* 0.5 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 4)))) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* (pow 8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 2)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (92 enodes)
* * [misc]simplify:  iters left: 4 (221 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (cbrt (+ (* (* x x) (* x 8.0)) (* x -12.0))) (cbrt (+ (* (* x x) (* x 8.0)) (* x -12.0))))) (* (cbrt (+ (* (* x x) (* x 8.0)) (* x -12.0))) (cbrt (* (cbrt (+ (* (* x x) (* x 8.0)) (* x -12.0))) (cbrt (+ (* (* x x) (* x 8.0)) (* x -12.0))))))) (cbrt (- (* (/ (exp (* (+ (* (log x) 3) (log 8.0)) (+ 1/3 1/3))) (pow x 4)) (- 0.5 (/ (/ 48.0 8.0) 8.0))) (- (* (/ 1.0 (* x x)) (exp (* (+ (* (log x) 3) (log 8.0)) (+ 1/3 1/3)))) (exp (* (+ (* (log x) 3) (log 8.0)) (+ 1/3 1/3)))))))
* * * * [misc]progress:  [ 221 / 224 ] simplifiying candidate #<alt-event (Î» (x) (* (* (* (cbrt (- (+ (* 0.5 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 4))) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2)) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (* (pow -8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 2)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (- (+ (* 0.5 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 4))) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2)) (+ (* 48.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (* (pow -8.0 2) (pow x 4)))) (* 1.0 (/ (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 2)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (91 enodes)
* * [misc]simplify:  iters left: 4 (218 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))) (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))))) (* (cbrt (* (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))) (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))))) (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x))))) (cbrt (- (+ (exp (* (- (log (- 8.0)) (* (log (/ -1 x)) 3)) (+ 1/3 1/3))) (* (/ 0.5 (pow x 4)) (exp (* (- (log (- 8.0)) (* (log (/ -1 x)) 3)) (+ 1/3 1/3))))) (+ (* (/ 1.0 (* x x)) (exp (* (- (log (- 8.0)) (* (log (/ -1 x)) 3)) (+ 1/3 1/3)))) (* (/ 48.0 (* (* -8.0 -8.0) (pow x 4))) (exp (* (- (log (- 8.0)) (* (log (/ -1 x)) 3)) (+ 1/3 1/3))))))))
* * * * [misc]progress:  [ 222 / 224 ] simplifiying candidate #<alt-event (Î» (x) (* (* (- (+ (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3) (* 0.0438957475994513 (* (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3) (pow x 4)))) (+ (* 0.2962962962962963 (* (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3) (pow x 2))) (* 14.222222222222221 (* (/ (pow x 4) (pow -12.0 2)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (- (+ (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3) (* 0.0438957475994513 (* (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3) (pow x 4)))) (+ (* 0.2962962962962963 (* (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3) (pow x 2))) (* 14.222222222222221 (* (/ (pow x 4) (pow -12.0 2)) (pow (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4) 1/3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (85 enodes)
* * [misc]simplify:  iters left: 4 (184 enodes)
* * [misc]simplify:  iters left: 3 (489 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* -12.0 x) (* (* x x) (* x 8.0)))) (cbrt (* (cbrt (+ (* -12.0 x) (* (* x x) (* x 8.0)))) (cbrt (+ (* -12.0 x) (* (* x x) (* x 8.0))))))) (+ (cbrt (pow (cbrt (* (- 12.0) x)) 4)) (* (cbrt (pow (cbrt (* (- 12.0) x)) 4)) (- (- (* (pow x 4) 0.0438957475994513) (* 0.2962962962962963 (* x x))) (* (/ (pow x 4) (* -12.0 -12.0)) 14.222222222222221)))))
* * * * [misc]progress:  [ 223 / 224 ] simplifiying candidate #<alt-event (Î» (x) (* (* (- (+ (* 0.2222222222222222 (* (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 4) 1/3) (/ 1 (pow x 4)))) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 4) 1/3)) (+ (* 32.0 (* (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 4) 1/3) (/ 1 (* (pow 8.0 2) (pow x 4))))) (* 0.6666666666666666 (* (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 4) 1/3) (/ 1 (pow x 2)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (- (+ (* 0.2222222222222222 (* (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 4) 1/3) (/ 1 (pow x 4)))) (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 4) 1/3)) (+ (* 32.0 (* (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 4) 1/3) (/ 1 (* (pow 8.0 2) (pow x 4))))) (* 0.6666666666666666 (* (pow (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 4) 1/3) (/ 1 (pow x 2)))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (98 enodes)
* * [misc]simplify:  iters left: 4 (225 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))) (- (* (cbrt (pow (exp (+ (* (log x) (* 3 1/3)) (* (log 8.0) 1/3))) 4)) (+ 1 (/ (* 1 0.2222222222222222) (pow x 4)))) (* (cbrt (pow (exp (+ (* (log x) (* 3 1/3)) (* (log 8.0) 1/3))) 4)) (+ (/ (* 1 0.6666666666666666) (* x x)) (/ (* 1 32.0) (* (* 8.0 8.0) (pow x 4)))))))
* * * * [misc]progress:  [ 224 / 224 ] simplifiying candidate #<alt-event (Î» (x) (* (* (- (+ (* 0.2222222222222222 (* (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 4) 1/3) (/ 1 (pow x 4)))) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 4) 1/3)) (+ (* 0.6666666666666666 (* (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 4) 1/3) (/ 1 (pow x 2)))) (* 32.0 (* (/ 1 (* (pow -8.0 2) (pow x 4))) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 4) 1/3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (- (+ (* 0.2222222222222222 (* (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 4) 1/3) (/ 1 (pow x 4)))) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 4) 1/3)) (+ (* 0.6666666666666666 (* (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 4) 1/3) (/ 1 (pow x 2)))) (* 32.0 (* (/ 1 (* (pow -8.0 2) (pow x 4))) (pow (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 4) 1/3))))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (49 enodes)
* * [misc]simplify:  iters left: 5 (101 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (* (- (* (cbrt (pow (exp (+ (* (log (/ -1 x)) (* (- 3) 1/3)) (* 1/3 (log (- 8.0))))) 4)) (+ (/ (* 0.2222222222222222 1) (pow x 4)) 1)) (* (cbrt (pow (exp (+ (* (log (/ -1 x)) (* (- 3) 1/3)) (* 1/3 (log (- 8.0))))) 4)) (+ (/ (* 0.6666666666666666 1) (* x x)) (/ (/ 32.0 (* -8.0 -8.0)) (pow x 4))))) (* (cbrt (+ (* (* x 8.0) (* x x)) (* x -12.0))) (cbrt (* (cbrt (+ (* (* x 8.0) (* x x)) (* x -12.0))) (cbrt (+ (* (* x 8.0) (* x x)) (* x -12.0)))))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (+ (log (- 12.0)) (log x)))) into (* 1/9 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (+ (log (- 12.0)) (log x)))) into (exp (* 1/9 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (+ (log (- 12.0)) (log x)))) into (* 1/9 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (+ (log (- 12.0)) (log x)))) into (exp (* 1/9 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (+ (log (- 12.0)) (log x)))) into (* 1/9 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (+ (log (- 12.0)) (log x)))) into (exp (* 1/9 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (+ (log (- 12.0)) (log x)))) into (* 1/9 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (+ (log (- 12.0)) (log x)))) into (exp (* 1/9 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (exp (* 1/9 (+ (log (- 12.0)) (log x))))) into (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) into (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 0) (* 0 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 2) into -0.2222222222222222
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x)))))) into (- 0.07407407407407407)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.07407407407407407) 1) 1)))) into (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 2) into -0.2222222222222222
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x)))))) into (- 0.07407407407407407)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.07407407407407407) 1) 1)))) into (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x))))) (exp (* 1/9 (+ (log (- 12.0)) (log x))))))) into (- (* 0.14814814814814814 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- (* 0.14814814814814814 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2))) into (- (* 0.14814814814814814 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.07407407407407407) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.07407407407407407) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 0) (+ (* 0 (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) (+ (* (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x))))) 0) (* 0 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 24) into (/ -10.666666666666666 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -10.666666666666666 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x)))))))) into (- (* 3.5555555555555554 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.07407407407407407) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.07407407407407407) 2) 2)) (* (/ (pow (- (* 3.5555555555555554 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (- 0.0027434842249657062 (* 3.5555555555555554 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 24) into (/ -10.666666666666666 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -10.666666666666666 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x)))))))) into (- (* 3.5555555555555554 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.07407407407407407) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.07407407407407407) 2) 2)) (* (/ (pow (- (* 3.5555555555555554 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (- 0.0027434842249657062 (* 3.5555555555555554 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (- 0.0027434842249657062 (* 3.5555555555555554 (/ 1 (pow -12.0 2)))))) (+ (* 0 0) (+ (* (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x))))) (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (- 0.0027434842249657062 (* 3.5555555555555554 (/ 1 (pow -12.0 2))))) (exp (* 1/9 (+ (log (- 12.0)) (log x))))))))) into (- (* 0.010973936899862825 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)) (* 7.111111111111111 (/ (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.010973936899862825 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)) (* 7.111111111111111 (/ (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2)))) into (- (* 0.010973936899862825 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)) (* 7.111111111111111 (/ (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.010973936899862825 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)) (* 7.111111111111111 (/ (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2)))) (pow x 4)) (+ (* (- (* 0.14814814814814814 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2))) (pow x 2)) (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2))) into (- (+ (* 0.010973936899862825 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (pow x 4))) (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)) (+ (* 7.111111111111111 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)) (pow -12.0 2))) (* 0.14814814814814814 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (pow x 2)))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log 8.0) (* 3 (log x))))) into (* 1/9 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log 8.0) (* 3 (log x))))) into (* 1/9 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log 8.0) (* 3 (log x))))) into (* 1/9 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log 8.0) (* 3 (log x))))) into (* 1/9 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))) into (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) into (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 0) (* 0 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 2) into -0.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x))))))) into (- 0.16666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.16666666666666666) 1) 1)))) into (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 2) into -0.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x))))))) into (- 0.16666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.16666666666666666) 1) 1)))) into (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))) (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))))) into (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2))) into (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 0) (+ (* 0 (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) (+ (* (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))) 0) (* 0 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 24) into (/ -24.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -24.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x))))))))) into (- (* 8.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.16666666666666666) 2) 2)) (* (/ (pow (- (* 8.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 24) into (/ -24.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -24.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x))))))))) into (- (* 8.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.16666666666666666) 2) 2)) (* (/ (pow (- (* 8.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow 8.0 2)))))) (+ (* 0 0) (+ (* (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))) (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow 8.0 2))))) (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))))))) into (- (* 0.05555555555555555 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)) (* 16.0 (/ (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.05555555555555555 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)) (* 16.0 (/ (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2)))) into (- (* 0.05555555555555555 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)) (* 16.0 (/ (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.05555555555555555 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2)) (* 16.0 (/ (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow 8.0 2)))) (pow (/ 1 x) 4)) (+ (* (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2))) (pow (/ 1 x) 2)) (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2))) into (- (+ (* 0.05555555555555555 (/ (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 4))) (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2)) (+ (* 16.0 (/ (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (* (pow 8.0 2) (pow x 4)))) (* 0.3333333333333333 (/ (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (pow x 2)))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (* 1/9 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (* 1/9 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (* 1/9 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (* 1/9 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))) into (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2) into (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 0) (* 0 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 2) into -0.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) into (- 0.16666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.16666666666666666) 1) 1)))) into (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 2) into -0.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) into (- 0.16666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.16666666666666666) 1) 1)))) into (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))) (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))) into (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 0) (+ (* 0 (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))) 0) (* 0 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 24) into (/ -24.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -24.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))))) into (- (* 8.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.16666666666666666) 2) 2)) (* (/ (pow (- (* 8.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow -8.0 2)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 24) into (/ -24.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -24.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))))) into (- (* 8.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.16666666666666666) 2) 2)) (* (/ (pow (- (* 8.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow -8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow -8.0 2)))))) (+ (* 0 0) (+ (* (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))) (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow -8.0 2))))) (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))))))) into (- (* 0.05555555555555555 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 16.0 (/ (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.05555555555555555 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 16.0 (/ (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2)))) into (- (* 0.05555555555555555 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 16.0 (/ (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.05555555555555555 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2)) (* 16.0 (/ (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2) (pow -8.0 2)))) (pow (/ 1 (- x)) 4)) (+ (* (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2))) (pow (/ 1 (- x)) 2)) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2))) into (- (+ (* 0.05555555555555555 (/ (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 4))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2)) (+ (* 0.3333333333333333 (/ (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (pow x 2))) (* 16.0 (/ (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (* (pow x 4) (pow -8.0 2))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (+ (log (- 12.0)) (log x)))) into (* 1/9 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (+ (log (- 12.0)) (log x)))) into (exp (* 1/9 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (+ (log (- 12.0)) (log x)))) into (* 1/9 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (+ (log (- 12.0)) (log x)))) into (exp (* 1/9 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (+ (log (- 12.0)) (log x)))) into (* 1/9 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (+ (log (- 12.0)) (log x)))) into (exp (* 1/9 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (+ (log (- 12.0)) (log x)))) into (* 1/9 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (+ (log (- 12.0)) (log x)))) into (exp (* 1/9 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (+ (log (- 12.0)) (log x)))) into (* 1/9 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (+ (log (- 12.0)) (log x)))) into (exp (* 1/9 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (+ (log (- 12.0)) (log x)))) into (* 1/9 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (+ (log (- 12.0)) (log x)))) into (exp (* 1/9 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (exp (* 1/9 (+ (log (- 12.0)) (log x))))) into (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)) into (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (* (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (exp (* 1/9 (+ (log (- 12.0)) (log x))))) into (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (* (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) into (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 0) (* 0 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 0) (* 0 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) 0) (* 0 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) 0) (* 0 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 2) into -0.2222222222222222
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x)))))) into (- 0.07407407407407407)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.07407407407407407) 1) 1)))) into (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 2) into -0.2222222222222222
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x)))))) into (- 0.07407407407407407)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.07407407407407407) 1) 1)))) into (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 2) into -0.2222222222222222
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x)))))) into (- 0.07407407407407407)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.07407407407407407) 1) 1)))) into (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x))))) (exp (* 1/9 (+ (log (- 12.0)) (log x))))))) into (- (* 0.14814814814814814 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- (* 0.14814814814814814 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)))) (+ (* 0 0) (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)))) into (- (* 0.37037037037037035 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))))
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (- (* 0.37037037037037035 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) (exp (* 1/9 (+ (log (- 12.0)) (log x))))))) into (- (* 0.4444444444444444 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))))
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (- (* 0.4444444444444444 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) into (- (* 0.6666666666666666 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))))
* [misc]backup-simplify:  Simplify (- (* 0.6666666666666666 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) into (- (* 0.6666666666666666 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.07407407407407407) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.07407407407407407) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.07407407407407407) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 0) (+ (* 0 (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) (+ (* (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x))))) 0) (* 0 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 0) (+ (* 0 (- (* 0.14814814814814814 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)))) (+ (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) 0) (* 0 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) 0) (+ (* 0 (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) (+ (* (- (* 0.37037037037037035 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) 0) (* 0 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) 0) (+ (* 0 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* (- (* 0.4444444444444444 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) 0) (* 0 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 24) into (/ -10.666666666666666 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -10.666666666666666 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x)))))))) into (- (* 3.5555555555555554 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.07407407407407407) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.07407407407407407) 2) 2)) (* (/ (pow (- (* 3.5555555555555554 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (- 0.0027434842249657062 (* 3.5555555555555554 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 24) into (/ -10.666666666666666 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -10.666666666666666 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x)))))))) into (- (* 3.5555555555555554 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.07407407407407407) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.07407407407407407) 2) 2)) (* (/ (pow (- (* 3.5555555555555554 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (- 0.0027434842249657062 (* 3.5555555555555554 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 24) into (/ -10.666666666666666 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -10.666666666666666 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x)))))))) into (- (* 3.5555555555555554 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.07407407407407407) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.07407407407407407) 2) 2)) (* (/ (pow (- (* 3.5555555555555554 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (- 0.0027434842249657062 (* 3.5555555555555554 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (- 0.0027434842249657062 (* 3.5555555555555554 (/ 1 (pow -12.0 2)))))) (+ (* 0 0) (+ (* (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x))))) (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (- 0.0027434842249657062 (* 3.5555555555555554 (/ 1 (pow -12.0 2))))) (exp (* 1/9 (+ (log (- 12.0)) (log x))))))))) into (- (* 0.010973936899862825 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)) (* 7.111111111111111 (/ (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- (* 0.010973936899862825 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)) (* 7.111111111111111 (/ (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))) (+ (* 0 0) (+ (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (- (* 0.14814814814814814 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)))) (+ (* 0 0) (* (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2))))) (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)))))) into (- (* 0.06858710562414265 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (* 17.77777777777778 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (- 0.0027434842249657062 (* 3.5555555555555554 (/ 1 (pow -12.0 2)))))) (+ (* 0 0) (+ (* (- (* 0.37037037037037035 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (- (* 0.06858710562414265 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (* 17.77777777777778 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (pow -12.0 2)))) (exp (* 1/9 (+ (log (- 12.0)) (log x))))))))) into (- (* 0.09876543209876541 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (* 21.333333333333336 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))) (+ (* 0 0) (+ (* (- (* 0.4444444444444444 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (- (* 0.09876543209876541 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (* 21.333333333333336 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (pow -12.0 2)))) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))))) into (- (* 0.2222222222222222 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 32.0 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.2222222222222222 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 32.0 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (pow -12.0 2)))) into (- (* 0.2222222222222222 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 32.0 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.2222222222222222 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 32.0 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)) (pow -12.0 2)))) (pow x 4)) (+ (* (- (* 0.6666666666666666 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) (pow x 2)) (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2)))) into (- (+ (* 0.2222222222222222 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4)))) (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (+ (* 32.0 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 4))) (pow -12.0 2))) (* 0.6666666666666666 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (* (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2) (pow x 2))))))
* [misc]approximate:  Taking taylor expansion of (* (* (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log 8.0) (* 3 (log x))))) into (* 1/9 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log 8.0) (* 3 (log x))))) into (* 1/9 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log 8.0) (* 3 (log x))))) into (* 1/9 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log 8.0) (* 3 (log x))))) into (* 1/9 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log 8.0) (* 3 (log x))))) into (* 1/9 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log 8.0) (* 3 (log x))))) into (* 1/9 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))) into (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)) into (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))) into (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) into (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 0) (* 0 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 0) (* 0 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) 0) (* 0 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) 0) (* 0 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 2) into -0.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x))))))) into (- 0.16666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.16666666666666666) 1) 1)))) into (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 2) into -0.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x))))))) into (- 0.16666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.16666666666666666) 1) 1)))) into (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 2) into -0.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x))))))) into (- 0.16666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.16666666666666666) 1) 1)))) into (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))) (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))))) into (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)))) (+ (* 0 0) (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)))) into (- (* 0.8333333333333333 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))))
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (- (* 0.8333333333333333 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))) (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))))) into (- (* 0.9999999999999999 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))))
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (- (* 0.9999999999999999 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into (- (* 1.5 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))))
* [misc]backup-simplify:  Simplify (- (* 1.5 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)))) into (- (* 1.5 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 0) (+ (* 0 (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) (+ (* (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))) 0) (* 0 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 0) (+ (* 0 (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)))) (+ (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) 0) (* 0 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) 0) (+ (* 0 (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) (+ (* (- (* 0.8333333333333333 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))) 0) (* 0 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) 0) (+ (* 0 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* (- (* 0.9999999999999999 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))) 0) (* 0 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 24) into (/ -24.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -24.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x))))))))) into (- (* 8.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.16666666666666666) 2) 2)) (* (/ (pow (- (* 8.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 24) into (/ -24.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -24.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x))))))))) into (- (* 8.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.16666666666666666) 2) 2)) (* (/ (pow (- (* 8.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 24) into (/ -24.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -24.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x))))))))) into (- (* 8.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.16666666666666666) 2) 2)) (* (/ (pow (- (* 8.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow 8.0 2)))))) (+ (* 0 0) (+ (* (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))) (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow 8.0 2))))) (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))))))) into (- (* 0.05555555555555555 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)) (* 16.0 (/ (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- (* 0.05555555555555555 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)) (* 16.0 (/ (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))) (+ (* 0 0) (+ (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)))) (+ (* 0 0) (* (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2))))) (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)))))) into (- (* 0.3472222222222222 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (* 40.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow 8.0 2)))))) (+ (* 0 0) (+ (* (- (* 0.8333333333333333 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))) (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (- (* 0.3472222222222222 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (* 40.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (pow 8.0 2)))) (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))))))) into (- (* 0.49999999999999994 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (* 48.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))) (+ (* 0 0) (+ (* (- (* 0.9999999999999999 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))) (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (- (* 0.49999999999999994 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (* 48.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (pow 8.0 2)))) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))))) into (- (* 1.125 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 72.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (- (* 1.125 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 72.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (pow 8.0 2)))) into (- (* 1.125 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 72.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2)) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 1.125 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2))) (* 72.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2)) (pow 8.0 2)))) (pow (/ 1 x) 4)) (+ (* (- (* 1.5 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2)))) (pow (/ 1 x) 2)) (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2)))) into (- (+ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2)) (* 1.125 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2)) (pow x 4)))) (+ (* 72.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2)) (* (pow 8.0 2) (pow x 4)))) (* 1.5 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2)) (pow x 2)))))
* [misc]approximate:  Taking taylor expansion of (* (* (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (* 1/9 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (* 1/9 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (* 1/9 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (* 1/9 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (* 1/9 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (* 1/9 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))) into (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) into (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (* (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))) into (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3))
* [misc]backup-simplify:  Simplify (* (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3)) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3))
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3)) into (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 0) (* 0 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 0) (* 0 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) 0) (* 0 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3)) 0) (* 0 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 2) into -0.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) into (- 0.16666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.16666666666666666) 1) 1)))) into (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 2) into -0.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) into (- 0.16666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.16666666666666666) 1) 1)))) into (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 2) into -0.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) into (- 0.16666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.16666666666666666) 1) 1)))) into (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))) (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (+ (* 0 0) (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))) into (- (* 0.8333333333333333 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (- (* 0.8333333333333333 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 0.9999999999999999 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3)) (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (- (* 0.9999999999999999 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 1.5 (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3))))
* [misc]backup-simplify:  Simplify (- (* 1.5 (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3)))) into (- (* 1.5 (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 0) (+ (* 0 (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))) 0) (* 0 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 0) (+ (* 0 (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (+ (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) 0) (* 0 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) 0) (+ (* 0 (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* (- (* 0.8333333333333333 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))) 0) (* 0 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3)) 0) (+ (* 0 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* (- (* 0.9999999999999999 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3)))) 0) (* 0 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 24) into (/ -24.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -24.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))))) into (- (* 8.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.16666666666666666) 2) 2)) (* (/ (pow (- (* 8.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow -8.0 2)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 24) into (/ -24.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -24.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))))) into (- (* 8.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.16666666666666666) 2) 2)) (* (/ (pow (- (* 8.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow -8.0 2)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 24) into (/ -24.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -24.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))))) into (- (* 8.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.16666666666666666) 2) 2)) (* (/ (pow (- (* 8.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow -8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow -8.0 2)))))) (+ (* 0 0) (+ (* (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))) (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow -8.0 2))))) (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))))))) into (- (* 0.05555555555555555 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 16.0 (/ (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (- (* 0.05555555555555555 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 16.0 (/ (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))) (+ (* 0 0) (+ (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (+ (* 0 0) (* (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))))) into (- (* 0.3472222222222222 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))) (+ (* 16.0 (/ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (pow -8.0 2))) (* 24.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (pow -8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow -8.0 2)))))) (+ (* 0 0) (+ (* (- (* 0.8333333333333333 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (- (* 0.3472222222222222 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))) (+ (* 16.0 (/ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (pow -8.0 2))) (* 24.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (pow -8.0 2))))) (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))))))) into (- (* 0.49999999999999994 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3))) (+ (* 24.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (pow -8.0 2))) (* 24.0 (/ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3)) (pow -8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3)) (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (+ (* (- (* 0.9999999999999999 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3)))) (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (- (* 0.49999999999999994 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3))) (+ (* 24.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (pow -8.0 2))) (* 24.0 (/ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3)) (pow -8.0 2))))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))))) into (- (* 1.125 (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3))) (+ (* 48.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (pow -8.0 2))) (* 24.0 (/ (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3)) (pow -8.0 2)))))
* [misc]backup-simplify:  Simplify (- (* 1.125 (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3))) (+ (* 48.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (pow -8.0 2))) (* 24.0 (/ (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3)) (pow -8.0 2))))) into (- (* 1.125 (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3))) (+ (* 48.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2)) (pow -8.0 2))) (* 24.0 (/ (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3)) (pow -8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 1.125 (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 3))) (+ (* 48.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 3) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2)) (pow -8.0 2))) (* 24.0 (/ (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 3)) (pow -8.0 2))))) (pow (/ 1 (- x)) 4)) (+ (* (- (* 1.5 (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 3)))) (pow (/ 1 (- x)) 2)) (* (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 3)))) into (- (+ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 3) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2)) (* 1.125 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 3) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2)) (pow x 4)))) (+ (* 72.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 3) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2)) (* (pow x 4) (pow -8.0 2)))) (* 1.5 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 3) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2)) (pow x 2)))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (+ (log (- 12.0)) (log x)))) into (* 1/9 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (+ (log (- 12.0)) (log x)))) into (exp (* 1/9 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (+ (log (- 12.0)) (log x)))) into (* 1/9 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (+ (log (- 12.0)) (log x)))) into (exp (* 1/9 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (+ (log (- 12.0)) (log x)))) into (* 1/9 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (+ (log (- 12.0)) (log x)))) into (exp (* 1/9 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (+ (log (- 12.0)) (log x)))) into (* 1/9 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (+ (log (- 12.0)) (log x)))) into (exp (* 1/9 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (exp (* 1/9 (+ (log (- 12.0)) (log x))))) into (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)) into (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 0) (* 0 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 0) (* 0 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 2) into -0.2222222222222222
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x)))))) into (- 0.07407407407407407)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.07407407407407407) 1) 1)))) into (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 2) into -0.2222222222222222
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x)))))) into (- 0.07407407407407407)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.07407407407407407) 1) 1)))) into (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x))))) (exp (* 1/9 (+ (log (- 12.0)) (log x))))))) into (- (* 0.14814814814814814 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- (* 0.14814814814814814 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)))) (+ (* 0 0) (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)))) into (- (* 0.37037037037037035 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))))
* [misc]backup-simplify:  Simplify (- (* 0.37037037037037035 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) into (- (* 0.37037037037037035 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.07407407407407407) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.07407407407407407) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 0) (+ (* 0 (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) (+ (* (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x))))) 0) (* 0 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 0) (+ (* 0 (- (* 0.14814814814814814 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)))) (+ (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) 0) (* 0 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 24) into (/ -10.666666666666666 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -10.666666666666666 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x)))))))) into (- (* 3.5555555555555554 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.07407407407407407) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.07407407407407407) 2) 2)) (* (/ (pow (- (* 3.5555555555555554 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (- 0.0027434842249657062 (* 3.5555555555555554 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 24) into (/ -10.666666666666666 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -10.666666666666666 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x)))))))) into (- (* 3.5555555555555554 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.07407407407407407) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.07407407407407407) 2) 2)) (* (/ (pow (- (* 3.5555555555555554 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (- 0.0027434842249657062 (* 3.5555555555555554 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (- 0.0027434842249657062 (* 3.5555555555555554 (/ 1 (pow -12.0 2)))))) (+ (* 0 0) (+ (* (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x))))) (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (- 0.0027434842249657062 (* 3.5555555555555554 (/ 1 (pow -12.0 2))))) (exp (* 1/9 (+ (log (- 12.0)) (log x))))))))) into (- (* 0.010973936899862825 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)) (* 7.111111111111111 (/ (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- (* 0.010973936899862825 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)) (* 7.111111111111111 (/ (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))) (+ (* 0 0) (+ (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (- (* 0.14814814814814814 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)))) (+ (* 0 0) (* (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2))))) (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)))))) into (- (* 0.06858710562414265 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (* 17.77777777777778 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.06858710562414265 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (* 17.77777777777778 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (pow -12.0 2)))) into (- (* 0.06858710562414265 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (* 17.77777777777778 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.06858710562414265 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (* 17.77777777777778 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (pow -12.0 2)))) (pow x 4)) (+ (* (- (* 0.37037037037037035 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) (pow x 2)) (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) into (- (+ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (* 0.06858710562414265 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (pow x 4))))) (+ (* 17.77777777777778 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (pow x 4))) (pow -12.0 2))) (* 0.37037037037037035 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (pow x 2))))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log 8.0) (* 3 (log x))))) into (* 1/9 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log 8.0) (* 3 (log x))))) into (* 1/9 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log 8.0) (* 3 (log x))))) into (* 1/9 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log 8.0) (* 3 (log x))))) into (* 1/9 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))) into (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)) into (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 0) (* 0 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 0) (* 0 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 2) into -0.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x))))))) into (- 0.16666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.16666666666666666) 1) 1)))) into (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 2) into -0.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x))))))) into (- 0.16666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.16666666666666666) 1) 1)))) into (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))) (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))))) into (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)))) (+ (* 0 0) (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)))) into (- (* 0.8333333333333333 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))))
* [misc]backup-simplify:  Simplify (- (* 0.8333333333333333 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into (- (* 0.8333333333333333 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 0) (+ (* 0 (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) (+ (* (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))) 0) (* 0 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 0) (+ (* 0 (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)))) (+ (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) 0) (* 0 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 24) into (/ -24.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -24.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x))))))))) into (- (* 8.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.16666666666666666) 2) 2)) (* (/ (pow (- (* 8.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 24) into (/ -24.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -24.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x))))))))) into (- (* 8.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.16666666666666666) 2) 2)) (* (/ (pow (- (* 8.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow 8.0 2)))))) (+ (* 0 0) (+ (* (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))) (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow 8.0 2))))) (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))))))) into (- (* 0.05555555555555555 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)) (* 16.0 (/ (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- (* 0.05555555555555555 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)) (* 16.0 (/ (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))) (+ (* 0 0) (+ (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)))) (+ (* 0 0) (* (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2))))) (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)))))) into (- (* 0.3472222222222222 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (* 40.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.3472222222222222 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (* 40.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (pow 8.0 2)))) into (- (* 0.3472222222222222 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (* 40.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.3472222222222222 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))))) (* 40.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x))))))) (pow 8.0 2)))) (pow (/ 1 x) 4)) (+ (* (- (* 0.8333333333333333 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x))))))))) (pow (/ 1 x) 2)) (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x))))))))) into (- (+ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x))))))) (* 0.3472222222222222 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x))))))) (pow x 4)))) (+ (* 40.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x))))))) (* (pow 8.0 2) (pow x 4)))) (* 0.8333333333333333 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x))))))) (pow x 2)))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (* 1/9 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (* 1/9 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (* 1/9 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (* 1/9 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))) into (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) into (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) into (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 0) (* 0 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 0) (* 0 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 2) into -0.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) into (- 0.16666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.16666666666666666) 1) 1)))) into (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 2) into -0.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) into (- 0.16666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.16666666666666666) 1) 1)))) into (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))) (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (+ (* 0 0) (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))) into (- (* 0.8333333333333333 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))))
* [misc]backup-simplify:  Simplify (- (* 0.8333333333333333 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))) into (- (* 0.8333333333333333 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 0) (+ (* 0 (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))) 0) (* 0 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 0) (+ (* 0 (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (+ (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) 0) (* 0 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 24) into (/ -24.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -24.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))))) into (- (* 8.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.16666666666666666) 2) 2)) (* (/ (pow (- (* 8.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow -8.0 2)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 24) into (/ -24.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -24.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))))) into (- (* 8.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.16666666666666666) 2) 2)) (* (/ (pow (- (* 8.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow -8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow -8.0 2)))))) (+ (* 0 0) (+ (* (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))) (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow -8.0 2))))) (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))))))) into (- (* 0.05555555555555555 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 16.0 (/ (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (- (* 0.05555555555555555 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 16.0 (/ (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))) (+ (* 0 0) (+ (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (+ (* 0 0) (* (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))))) into (- (* 0.3472222222222222 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))) (+ (* 16.0 (/ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (pow -8.0 2))) (* 24.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (pow -8.0 2)))))
* [misc]backup-simplify:  Simplify (- (* 0.3472222222222222 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))) (+ (* 16.0 (/ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (pow -8.0 2))) (* 24.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (pow -8.0 2))))) into (- (* 0.3472222222222222 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))) (+ (* 16.0 (/ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (pow -8.0 2))) (* 24.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (pow -8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.3472222222222222 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2))) (+ (* 16.0 (/ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2)) (pow -8.0 2))) (* 24.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x)))))))) (pow -8.0 2))))) (pow (/ 1 (- x)) 4)) (+ (* (- (* 0.8333333333333333 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2)))) (pow (/ 1 (- x)) 2)) (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 2)))) into (- (+ (* 0.3472222222222222 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x))))))) (pow x 4))) (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))))) (+ (* 0.8333333333333333 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x))))))) (pow x 2))) (* 40.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 2) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x))))))) (* (pow x 4) (pow -8.0 2))))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (+ (log (- 12.0)) (log x)))) into (* 1/9 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (+ (log (- 12.0)) (log x)))) into (exp (* 1/9 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (+ (log (- 12.0)) (log x)))) into (* 1/9 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (+ (log (- 12.0)) (log x)))) into (exp (* 1/9 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (+ (log (- 12.0)) (log x)))) into (* 1/9 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (+ (log (- 12.0)) (log x)))) into (exp (* 1/9 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (+ (log (- 12.0)) (log x)))) into (* 1/9 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (+ (log (- 12.0)) (log x)))) into (exp (* 1/9 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (+ (log (- 12.0)) (log x)))) into (* 1/9 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (+ (log (- 12.0)) (log x)))) into (exp (* 1/9 (+ (log (- 12.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (log (- 12.0)) into (log (- 12.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 12.0)) (log x))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 12.0)) (log x)))) into (exp (* 1/3 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* 1/3 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (+ (log (- 12.0)) (log x)))) into (* 1/9 (+ (log (- 12.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (+ (log (- 12.0)) (log x)))) into (exp (* 1/9 (+ (log (- 12.0)) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (exp (* 1/9 (+ (log (- 12.0)) (log x))))) into (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)) into (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (* (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (exp (* 1/9 (+ (log (- 12.0)) (log x))))) into (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) into (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 0) (* 0 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 12.0)) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 0) (* 0 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) 0) (* 0 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 2) into -0.2222222222222222
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x)))))) into (- 0.07407407407407407)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.07407407407407407) 1) 1)))) into (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 2) into -0.2222222222222222
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x)))))) into (- 0.07407407407407407)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.07407407407407407) 1) 1)))) into (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 2) into -0.2222222222222222
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x)))))) into (- 0.07407407407407407)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.07407407407407407) 1) 1)))) into (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x))))) (exp (* 1/9 (+ (log (- 12.0)) (log x))))))) into (- (* 0.14814814814814814 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 12.0) 2))) (* 1 (/ (* 1 (pow (* 2 8.0) 1)) (pow (- 12.0) 1)))) 2) into -0.6666666666666666
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))) into (- 0.2222222222222222)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.2222222222222222) 1) 1)))) into (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- (* 0.14814814814814814 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)))) (+ (* 0 0) (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)))) into (- (* 0.37037037037037035 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))))
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (- (* 0.37037037037037035 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) (exp (* 1/9 (+ (log (- 12.0)) (log x))))))) into (- (* 0.4444444444444444 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))))
* [misc]backup-simplify:  Simplify (- (* 0.4444444444444444 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) into (- (* 0.4444444444444444 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.07407407407407407) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.07407407407407407) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.07407407407407407) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 0) (+ (* 0 (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) (+ (* (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x))))) 0) (* 0 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 8.0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 0) (+ (* 0 (- (* 0.14814814814814814 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)))) (+ (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) 0) (* 0 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) 0) (+ (* 0 (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) (+ (* (- (* 0.37037037037037035 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) 0) (* 0 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 24) into (/ -10.666666666666666 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -10.666666666666666 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x)))))))) into (- (* 3.5555555555555554 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.07407407407407407) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.07407407407407407) 2) 2)) (* (/ (pow (- (* 3.5555555555555554 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (- 0.0027434842249657062 (* 3.5555555555555554 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 24) into (/ -10.666666666666666 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -10.666666666666666 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x)))))))) into (- (* 3.5555555555555554 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.07407407407407407) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.07407407407407407) 2) 2)) (* (/ (pow (- (* 3.5555555555555554 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (- 0.0027434842249657062 (* 3.5555555555555554 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) 2)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))) 1)) (pow (exp (* 1/3 (+ (log (- 12.0)) (log x)))) 1)))) 24) into (/ -10.666666666666666 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -10.666666666666666 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.2222222222222222) (+ (* 0 0) (* 0 (* 1/3 (+ (log (- 12.0)) (log x)))))))) into (- (* 3.5555555555555554 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.07407407407407407) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.07407407407407407) 2) 2)) (* (/ (pow (- (* 3.5555555555555554 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (- 0.0027434842249657062 (* 3.5555555555555554 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (- 0.0027434842249657062 (* 3.5555555555555554 (/ 1 (pow -12.0 2)))))) (+ (* 0 0) (+ (* (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x))))) (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (- 0.0027434842249657062 (* 3.5555555555555554 (/ 1 (pow -12.0 2))))) (exp (* 1/9 (+ (log (- 12.0)) (log x))))))))) into (- (* 0.010973936899862825 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)) (* 7.111111111111111 (/ (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 8.0) 1)) (pow (- 12.0) 3))) (* -3 (/ (* 1 (pow (* 2 8.0) 2)) (pow (- 12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 12.0) 1)))) 24) into (/ -32.0 (pow -12.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 12.0))) into (+ (log (- 12.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -32.0 (pow -12.0 2))) (+ (* 0 0) (+ (* 0 -0.6666666666666666) (+ (* 0 0) (* 0 (+ (log (- 12.0)) (log x))))))) into (- (* 10.666666666666666 (/ 1 (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.2222222222222222) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.2222222222222222) 2) 2)) (* (/ (pow (- (* 10.666666666666666 (/ 1 (pow -12.0 2)))) 1) 1)))) into (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- (* 0.010973936899862825 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)) (* 7.111111111111111 (/ (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (pow -12.0 2))))) (+ (* 0 0) (+ (* (* -0.2222222222222222 (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (- (* 0.14814814814814814 (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)))) (+ (* 0 0) (* (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (- 0.024691358024691357 (* 10.666666666666666 (/ 1 (pow -12.0 2))))) (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2)))))) into (- (* 0.06858710562414265 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (* 17.77777777777778 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (* (exp (* 1/9 (+ (log (- 12.0)) (log x)))) (- 0.0027434842249657062 (* 3.5555555555555554 (/ 1 (pow -12.0 2)))))) (+ (* 0 0) (+ (* (- (* 0.37037037037037035 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) (* -0.07407407407407407 (exp (* 1/9 (+ (log (- 12.0)) (log x)))))) (+ (* 0 0) (* (- (* 0.06858710562414265 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (* 17.77777777777778 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 2) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (pow -12.0 2)))) (exp (* 1/9 (+ (log (- 12.0)) (log x))))))))) into (- (* 0.09876543209876541 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (* 21.333333333333336 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.09876543209876541 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (* 21.333333333333336 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (pow -12.0 2)))) into (- (* 0.09876543209876541 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (* 21.333333333333336 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (pow -12.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.09876543209876541 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x)))))) (* 21.333333333333336 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (pow -12.0 2)))) (pow x 4)) (+ (* (- (* 0.4444444444444444 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) (pow x 2)) (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x))))))) into (- (+ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (exp (* 1/3 (+ (log (- 12.0)) (log x))))) (* 0.09876543209876541 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (pow x 4))))) (+ (* 0.4444444444444444 (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (pow x 2)))) (* 21.333333333333336 (/ (* (pow (exp (* 1/9 (+ (log (- 12.0)) (log x)))) 3) (* (exp (* 1/3 (+ (log (- 12.0)) (log x)))) (pow x 4))) (pow -12.0 2)))))
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log 8.0) (* 3 (log x))))) into (* 1/9 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log 8.0) (* 3 (log x))))) into (* 1/9 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log 8.0) (* 3 (log x))))) into (* 1/9 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log 8.0) (* 3 (log x))))) into (* 1/9 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log 8.0) (* 3 (log x))))) into (* 1/9 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 8.0) (* 3 (log x)))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* 1/3 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log 8.0) (* 3 (log x))))) into (* 1/9 (- (log 8.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) into (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))) into (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)) into (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))) into (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) into (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 0) (* 0 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 8.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 8.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 0) (* 0 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) 0) (* 0 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 2) into -0.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x))))))) into (- 0.16666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.16666666666666666) 1) 1)))) into (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 2) into -0.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x))))))) into (- 0.16666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.16666666666666666) 1) 1)))) into (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 2) into -0.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x))))))) into (- 0.16666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.16666666666666666) 1) 1)))) into (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))) (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))))) into (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 8.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 12.0)) 1)) (pow 8.0 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)))) (+ (* 0 0) (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)))) into (- (* 0.8333333333333333 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))))
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (- (* 0.8333333333333333 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))) (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))))) into (- (* 0.9999999999999999 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))))
* [misc]backup-simplify:  Simplify (- (* 0.9999999999999999 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into (- (* 0.9999999999999999 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 0) (+ (* 0 (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) (+ (* (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))) 0) (* 0 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 8.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 12.0)) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 8.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 0) (+ (* 0 (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)))) (+ (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) 0) (* 0 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) 0) (+ (* 0 (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) (+ (* (- (* 0.8333333333333333 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))) 0) (* 0 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 24) into (/ -24.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -24.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x))))))))) into (- (* 8.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.16666666666666666) 2) 2)) (* (/ (pow (- (* 8.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 24) into (/ -24.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -24.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x))))))))) into (- (* 8.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.16666666666666666) 2) 2)) (* (/ (pow (- (* 8.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) 2)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))) 1)) (pow (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) 1)))) 24) into (/ -24.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -24.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log 8.0) (* 3 (log x))))))))) into (- (* 8.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.16666666666666666) 2) 2)) (* (/ (pow (- (* 8.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow 8.0 2)))))) (+ (* 0 0) (+ (* (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))) (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow 8.0 2))))) (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))))))) into (- (* 0.05555555555555555 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)) (* 16.0 (/ (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 8.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 12.0)) 1)) (pow 8.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 12.0)) 2)) (pow 8.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 8.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 8.0 1)))) 24) into (/ -72.0 (pow 8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 8.0)) into (- (log 8.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow 8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log 8.0) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow 8.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- (* 0.05555555555555555 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)) (* 16.0 (/ (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (pow 8.0 2))))) (+ (* 0 0) (+ (* (* -0.5 (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)))) (+ (* 0 0) (* (* (exp (* 1/3 (- (log 8.0) (* 3 (log x))))) (- 0.125 (* 24.0 (/ 1 (pow 8.0 2))))) (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2)))))) into (- (* 0.3472222222222222 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (* 40.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (* (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow 8.0 2)))))) (+ (* 0 0) (+ (* (- (* 0.8333333333333333 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))))) (* -0.16666666666666666 (exp (* 1/9 (- (log 8.0) (* 3 (log x))))))) (+ (* 0 0) (* (- (* 0.3472222222222222 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (* 40.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (pow 8.0 2)))) (exp (* 1/9 (- (log 8.0) (* 3 (log x)))))))))) into (- (* 0.49999999999999994 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (* 48.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.49999999999999994 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (* 48.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (pow 8.0 2)))) into (- (* 0.49999999999999994 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x))))))) (* 48.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log x))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log x)))))) (pow 8.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.49999999999999994 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))))) (* 48.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x))))))) (pow 8.0 2)))) (pow (/ 1 x) 4)) (+ (* (- (* 0.9999999999999999 (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x))))))))) (pow (/ 1 x) 2)) (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x))))))))) into (- (+ (* 0.49999999999999994 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x))))))) (pow x 4))) (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x)))))))) (+ (* 48.0 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x))))))) (* (pow 8.0 2) (pow x 4)))) (* 0.9999999999999999 (/ (* (pow (exp (* 1/9 (- (log 8.0) (* 3 (log (/ 1 x)))))) 3) (exp (* 1/3 (- (log 8.0) (* 3 (log (/ 1 x))))))) (pow x 2)))))
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (* 1/9 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (* 1/9 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (* 1/9 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (* 1/9 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (* 1/9 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Rewrote expression to (pow (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 8.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into (* 1/3 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (* 1/3 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) into (* 1/9 (- (log (- 8.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) into (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))) into (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) into (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (* (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))) into (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3)) into (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 0) (* 0 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 0) (* 0 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) 0) (* 0 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 2) into -0.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) into (- 0.16666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.16666666666666666) 1) 1)))) into (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 2) into -0.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) into (- 0.16666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.16666666666666666) 1) 1)))) into (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 2) into -0.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) into (- 0.16666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.16666666666666666) 1) 1)))) into (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))) (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 12.0) 1)) (pow (- 8.0) 1)))) 2) into -1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.5) 1) 1)))) into (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (+ (* 0 0) (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))) into (- (* 0.8333333333333333 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (- (* 0.8333333333333333 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 0.9999999999999999 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3))))
* [misc]backup-simplify:  Simplify (- (* 0.9999999999999999 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3)))) into (- (* 0.9999999999999999 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 0) (+ (* 0 (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))) 0) (* 0 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 12.0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 0) (+ (* 0 (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (+ (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) 0) (* 0 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) 0) (+ (* 0 (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* (- (* 0.8333333333333333 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))) 0) (* 0 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 24) into (/ -24.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -24.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))))) into (- (* 8.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.16666666666666666) 2) 2)) (* (/ (pow (- (* 8.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow -8.0 2)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 24) into (/ -24.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -24.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))))) into (- (* 8.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.16666666666666666) 2) 2)) (* (/ (pow (- (* 8.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow -8.0 2)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 2)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))) 1)) (pow (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) 1)))) 24) into (/ -24.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -24.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -0.5) (+ (* 0 0) (* 0 (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))))) into (- (* 8.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.16666666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.16666666666666666) 2) 2)) (* (/ (pow (- (* 8.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow -8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow -8.0 2)))))) (+ (* 0 0) (+ (* (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))) (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow -8.0 2))))) (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))))))) into (- (* 0.05555555555555555 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 16.0 (/ (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 12.0) 1)) (pow (- 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 12.0) 2)) (pow (- 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 8.0) 1)))) 24) into (/ -72.0 (pow -8.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 8.0))) into (- (log (- 8.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -72.0 (pow -8.0 2))) (+ (* 0 0) (+ (* 0 -1.5) (+ (* 0 0) (* 0 (- (log (- 8.0)) (* 3 (log x)))))))) into (- (* 24.0 (/ 1 (pow -8.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.5) 2) 2)) (* (/ (pow (- (* 24.0 (/ 1 (pow -8.0 2)))) 1) 1)))) into (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (- (* 0.05555555555555555 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* 16.0 (/ (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2) (pow -8.0 2))))) (+ (* 0 0) (+ (* (* -0.5 (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (- (* 0.3333333333333333 (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (+ (* 0 0) (* (* (- 0.125 (* 24.0 (/ 1 (pow -8.0 2)))) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))))) into (- (* 0.3472222222222222 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))) (+ (* 16.0 (/ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (pow -8.0 2))) (* 24.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (pow -8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (* (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) (- 0.013888888888888888 (* 8.0 (/ 1 (pow -8.0 2)))))) (+ (* 0 0) (+ (* (- (* 0.8333333333333333 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)))) (* -0.16666666666666666 (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))))) (+ (* 0 0) (* (- (* 0.3472222222222222 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2))) (+ (* 16.0 (/ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2)) (pow -8.0 2))) (* 24.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 2) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (pow -8.0 2))))) (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x)))))))))) into (- (* 0.49999999999999994 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3))) (+ (* 24.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (pow -8.0 2))) (* 24.0 (/ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3)) (pow -8.0 2)))))
* [misc]backup-simplify:  Simplify (- (* 0.49999999999999994 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3))) (+ (* 24.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (pow -8.0 2))) (* 24.0 (/ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3)) (pow -8.0 2))))) into (- (* 0.49999999999999994 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3))) (+ (* 24.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x)))))) (pow -8.0 2))) (* 24.0 (/ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log x))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log x))))) 3)) (pow -8.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.49999999999999994 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 3))) (+ (* 24.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 3) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x)))))))) (pow -8.0 2))) (* 24.0 (/ (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 3)) (pow -8.0 2))))) (pow (/ 1 (- x)) 4)) (+ (* (- (* 0.9999999999999999 (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 3)))) (pow (/ 1 (- x)) 2)) (* (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ 1 (- x))))))) 3)))) into (- (+ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 3) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x))))))) (* 0.49999999999999994 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 3) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x))))))) (pow x 4)))) (+ (* 48.0 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 3) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x))))))) (* (pow x 4) (pow -8.0 2)))) (* 0.9999999999999999 (/ (* (pow (exp (* 1/9 (- (log (- 8.0)) (* 3 (log (/ -1 x)))))) 3) (exp (* 1/3 (- (log (- 8.0)) (* 3 (log (/ -1 x))))))) (pow x 2)))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ 1/3 1/3))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 2 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (pow (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (+ 1 1))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 3 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (pow (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1/3)) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 4 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (pow (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) 1)) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 5 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (pow (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 2)) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 6 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (pow (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (+ 1 1))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 7 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (pow (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) 1)) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 8 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (exp (+ (log (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (log (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (log (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (log (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (log (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* * * * [misc]progress:  [ 9 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (exp (log (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (log (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (log (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* * * * [misc]progress:  [ 10 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (log (exp (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (exp (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* * * * [misc]progress:  [ 11 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 12 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (* (cbrt (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))) (cbrt (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))) (cbrt (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* * * * [misc]progress:  [ 13 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (* (* (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (59 enodes)
* * [misc]simplify:  iters left: 2 (68 enodes)
* * [misc]simplify:  iters left: 1 (73 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 14 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (sqrt (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (sqrt (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (fabs (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (fabs (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 15 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (/ (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (304 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3)))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3)))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3)))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (134 enodes)
* * [misc]simplify:  iters left: 3 (472 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x))))) (cbrt (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x))))) (cbrt (cbrt (- (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* -12.0 x))))))
* * * * [misc]progress:  [ 16 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (/ (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (+ (* (* x x) (* 8.0 x)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (+ (* (* x x) (* 8.0 x)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3)))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* * [misc]simplify:  iters left: 3 (499 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x))))) (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))))
* * * * [misc]progress:  [ 17 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (/ (* (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (cbrt (cbrt (+ (pow (* (* x x) (* x 8.0)) 3) (pow (* -12.0 x) 3)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (cbrt (cbrt (+ (pow (* (* x x) (* x 8.0)) 3) (pow (* -12.0 x) 3)))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (- (* (* x x) (* 8.0 x)) (* -12.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (- (* (* x x) (* 8.0 x)) (* -12.0 x)))))))
* * * * [misc]progress:  [ 18 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (/ (* (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (284 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (cbrt (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (cbrt (cbrt (* (+ (* (* x x) (* x 8.0)) (* -12.0 x)) (- (* -12.0 x) (* (* x x) (* x 8.0)))))))
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (- (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 19 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* 1 (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 20 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))))
* * * * [misc]progress:  [ 21 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (sqrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (sqrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* * * * [misc]progress:  [ 22 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt 1))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt 1)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt 1)))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt 1)))
* * * * [misc]progress:  [ 23 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 24 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 25 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt 1)) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt 1))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 26 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (cbrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 27 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (sqrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (sqrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (sqrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 28 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1)
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* * * * [misc]progress:  [ 29 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 30 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (sqrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (sqrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))
* * * * [misc]progress:  [ 31 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt 1)) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 32 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 33 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (sqrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (sqrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))
* * * * [misc]progress:  [ 34 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt 1) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 35 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (* (cbrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 36 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (sqrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (sqrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 37 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* 1 (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 38 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (/ (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (329 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* 8.0 x)) 3)))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* (* x x) (* 8.0 x)) 3)))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 39 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (/ (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (293 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x)))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x)))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 40 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (/ (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (325 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3)))))
* * * * [misc]progress:  [ 41 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (/ (* (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (294 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x)))) (cbrt (cbrt (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (+ (* (* x x) (* x 8.0)) (* -12.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (* x x) (* x 8.0)) (* -12.0 x)))) (cbrt (cbrt (* (- (* -12.0 x) (* (* x x) (* x 8.0))) (+ (* (* x x) (* x 8.0)) (* -12.0 x))))))
* * * * [misc]progress:  [ 42 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* * * * [misc]progress:  [ 43 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ (+ (+ 1 (+ 1/3 1/3)) 1/3) 1)))>
* [enter]simplify:  Simplifying (+ (+ (+ 1 (+ 1/3 1/3)) 1/3) 1)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (53 enodes)
* [exit]simplify:  Simplified to (+ 1/3 (+ (+ 1/3 1) (+ 1/3 1)))
* [exit]simplify:  Simplified to (+ 1/3 (+ (+ 1/3 1) (+ 1/3 1)))
* * * * [misc]progress:  [ 44 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (* (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) 1/3))>
* [enter]simplify:  Simplifying (* (* (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (* (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 45 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (156 enodes)
* * [misc]simplify:  iters left: 1 (188 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 46 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (156 enodes)
* * [misc]simplify:  iters left: 1 (188 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 47 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (156 enodes)
* * [misc]simplify:  iters left: 1 (188 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 48 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (156 enodes)
* * [misc]simplify:  iters left: 1 (188 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 49 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ (+ (+ 1 (+ 1/3 1/3)) 1/3) 1)))>
* [enter]simplify:  Simplifying (+ (+ (+ 1 (+ 1/3 1/3)) 1/3) 1)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (53 enodes)
* [exit]simplify:  Simplified to (+ 1/3 (+ (+ 1/3 1) (+ 1/3 1)))
* [exit]simplify:  Simplified to (+ 1/3 (+ (+ 1/3 1) (+ 1/3 1)))
* * * * [misc]progress:  [ 50 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) 1))>
* * * * [misc]progress:  [ 51 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (exp (+ (+ (+ (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (+ (log (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (log (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (log (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (+ (log (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (log (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (log (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (89 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (log (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (+ (log (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (+ (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (log (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (+ (log (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (+ (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))))
* * * * [misc]progress:  [ 52 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (exp (+ (+ (+ (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (log (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (log (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (log (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (log (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (85 enodes)
* [exit]simplify:  Simplified to (+ (log (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (+ (log (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (+ (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))))
* [exit]simplify:  Simplified to (+ (log (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (+ (log (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (+ (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))))
* * * * [misc]progress:  [ 53 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (exp (+ (+ (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (log (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (log (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (92 enodes)
* * [misc]simplify:  iters left: 1 (96 enodes)
* [exit]simplify:  Simplified to (+ (log (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (+ (+ (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (log (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))))
* [exit]simplify:  Simplified to (+ (log (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))) (+ (+ (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (log (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))))
* * * * [misc]progress:  [ 54 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (exp (+ (log (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (+ (log (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (log (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (94 enodes)
* * [misc]simplify:  iters left: 2 (165 enodes)
* * [misc]simplify:  iters left: 1 (202 enodes)
* [exit]simplify:  Simplified to (* 3 (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* 3 (log (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 55 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (log (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (259 enodes)
* * [misc]simplify:  iters left: 1 (433 enodes)
* [exit]simplify:  Simplified to (log (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (log (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* * * * [misc]progress:  [ 56 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (exp (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (103 enodes)
* * [misc]simplify:  iters left: 2 (174 enodes)
* * [misc]simplify:  iters left: 1 (255 enodes)
* [exit]simplify:  Simplified to (exp (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (exp (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* * * * [misc]progress:  [ 57 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* [exit]simplify:  Simplified to (* (* (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))))
* * * * [misc]progress:  [ 58 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (* (* (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (* (* (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* [exit]simplify:  Simplified to (* (* (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))))
* * * * [misc]progress:  [ 59 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (162 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (* (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (* (* (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (* (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))))
* [exit]simplify:  Simplified to (* (* (+ (* -12.0 x) (* (* 8.0 x) (* x x))) (* (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (* (* (* (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x))))) (* (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))) (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))))))
* * * * [misc]progress:  [ 60 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (* (* (* (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (* (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))) (* (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (* (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))))
* [exit]simplify:  Simplified to (* (* (* (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (* (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))) (* (* (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (* (* (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))) (* (+ (* -12.0 x) (* (* x x) (* 8.0 x))) (cbrt (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x)))))))))
* * * * [misc]progress:  [ 61 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (160 enodes)
* * [misc]simplify:  iters left: 1 (210 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [enter]simplify:  Simplifying (cbrt (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (87 enodes)
* * [misc]simplify:  iters left: 2 (155 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* * * * [misc]progress:  [ 62 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (331 enodes)
* [exit]simplify:  Simplified to (pow (+ (* -12.0 x) (* (* 8.0 x) (* x x))) 3)
* [exit]simplify:  Simplified to (pow (+ (* -12.0 x) (* (* 8.0 x) (* x x))) 3)
* * * * [misc]progress:  [ 63 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (sqrt (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (87 enodes)
* * [misc]simplify:  iters left: 2 (155 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [enter]simplify:  Simplifying (sqrt (* (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (* (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (87 enodes)
* * [misc]simplify:  iters left: 2 (155 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* * * * [misc]progress:  [ 64 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (358 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3)))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3)))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x))))) (cbrt (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))))) (* (* (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x))))) (cbrt (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x))))) (cbrt (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))))) (* (* (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))) (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x))))) (cbrt (cbrt (+ (* (- (* (* x 8.0) (* x x)) (* -12.0 x)) (* (* x 8.0) (* x x))) (* (* -12.0 x) (* -12.0 x)))))))
* * * * [misc]progress:  [ 65 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* [exit]simplify:  Simplified to (* (* (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3)))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (* (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3)))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (* (* (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* 8.0 x) (* x x)) (* (* 8.0 x) (* x x))))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3)))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (* (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3)))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (186 enodes)
* [exit]simplify:  Simplified to (* (* (* (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))) (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x))))) (cbrt (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x)))))) (* (cbrt (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x))))) (cbrt (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x)))))))
* [exit]simplify:  Simplified to (* (* (* (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))) (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x))))) (cbrt (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x)))))) (* (cbrt (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x))))) (cbrt (cbrt (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x)))))))
* * * * [misc]progress:  [ 66 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (182 enodes)
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3)))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (* (cbrt (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3)))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (* (cbrt (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x)))))) (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x)))))) (* (* (cbrt (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x))))) (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x)))))) (cbrt (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x)))))) (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x)))))) (* (* (cbrt (cbrt (- (* -12.0 x) (* (* x 8.0) (* x x))))) (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x)))))) (cbrt (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x 8.0) (* x x)))) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))))))
* * * * [misc]progress:  [ 67 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (184 enodes)
* [exit]simplify:  Simplified to (* (* (* (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3)))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (* (cbrt (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (* (* (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))) (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3)))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (* (cbrt (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0)))))) (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0)))))) (* (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0)))))) (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0)))))) (* (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (cbrt (+ (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))) (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))))))))
* * * * [misc]progress:  [ 68 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3)))) (cbrt (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))) (* (cbrt (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))) (cbrt (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3)))) (cbrt (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))) (* (cbrt (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))) (cbrt (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (190 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0))))))) (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0))))))) (* (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0))))))) (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))))))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0))))))) (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0))))))) (* (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0))))))) (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))))))))
* * * * [misc]progress:  [ 69 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (187 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (* (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (* (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))))))) (* (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0))))))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))))))))
* [exit]simplify:  Simplified to (* (* (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0)))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))))))) (* (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0))))))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))))))))
* * * * [misc]progress:  [ 70 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3)))) (cbrt (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))) (* (cbrt (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))) (cbrt (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* (* x x) (* 8.0 x)) (* -12.0 x)))))))
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3)))) (cbrt (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))) (* (cbrt (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))) (cbrt (cbrt (* (- (* -12.0 x) (* (* x x) (* 8.0 x))) (+ (* (* x x) (* 8.0 x)) (* -12.0 x)))))))
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (192 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0))))))) (* (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0))))))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))))))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0))))))) (* (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0))))))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))))))))
* * * * [misc]progress:  [ 71 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (* (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))))) (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (187 enodes)
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (* (cbrt (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))))))
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))) (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (cbrt (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))))) (* (cbrt (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x))))) (cbrt (cbrt (* (- (* -12.0 x) (* (* 8.0 x) (* x x))) (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))))))
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))))) (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (* (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0))))))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))))))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (* (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0))))))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))))))))
* * * * [misc]progress:  [ 72 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (* (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))) (* (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (* (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x)))))) (cbrt (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))) (* (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3)))) (cbrt (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x x) (* 8.0 x)) (* (* x x) (* 8.0 x)))))) (cbrt (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))) (* (* (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))) (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3)))) (cbrt (cbrt (+ (pow (* (* x x) (* 8.0 x)) 3) (pow (* -12.0 x) 3))))))
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (192 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))))))) (* (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0))))))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))))))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))))) (* (cbrt (cbrt (- (* -12.0 x) (* (* x x) (* x 8.0))))) (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))))))) (* (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0))))))) (cbrt (cbrt (+ (* (* (* x x) (* x 8.0)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (- (* -12.0 x) (* (* x x) (* x 8.0)))))))))
* * * * [misc]progress:  [ 73 / 484 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (* (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (* (* (* (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))) (* (cbrt (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x))))))))) (cbrt (cbrt (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))) (cbrt (- (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))) (* (cbrt (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)))))) (cbrt (cbrt (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))))) (cbrt (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (187 enodes)
